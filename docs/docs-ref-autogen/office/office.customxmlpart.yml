### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlPart
    summary: '<span data-ttu-id="b3b4c-101">[customxmlparts](xref:office.Office.CustomXmlParts)コレクション内の1つの CustomXMLPart を表します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>'
    remarks: '<span data-ttu-id="b3b4c-102">**ホスト**: Word</span><span class="sxs-lookup"><span data-stu-id="b3b4c-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlPart.addHandlerAsync
      - office.Office.CustomXmlPart.addHandlerAsync_1
      - office.Office.CustomXmlPart.deleteAsync
      - office.Office.CustomXmlPart.deleteAsync_1
      - office.Office.CustomXmlPart.getNodesAsync
      - office.Office.CustomXmlPart.getNodesAsync_1
      - office.Office.CustomXmlPart.getXmlAsync
      - office.Office.CustomXmlPart.getXmlAsync_1
      - office.Office.CustomXmlPart.removeHandlerAsync
      - office.Office.CustomXmlPart.removeHandlerAsync_1
      - office.Office.CustomXmlPart.builtIn
      - office.Office.CustomXmlPart.id
      - office.Office.CustomXmlPart.namespaceManager
  - uid: office.Office.CustomXmlPart.addHandlerAsync
    summary: <span data-ttu-id="b3b4c-103">指定したイベントの種類を使用して、オブジェクトにイベントハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="b3b4c-104">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="b3b4c-105">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="b3b4c-106">追加するイベントの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-106">Specifies the type of event to add.</span></span> <span data-ttu-id="b3b4c-107">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="b3b4c-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-108"></span></span><!-- --><span data-ttu-id="b3b4c-109">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="b3b4c-110">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-110"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="b3b4c-111">追加するイベントハンドラー関数。これは、唯一のパラメーターが NodeDeletedEventArgs 型であることを示し[ます。](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="b3b4c-112">、 [NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-112">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="b3b4c-113">、または[NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-113">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="b3b4c-114">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b3b4c-115">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-115">Optional.</span></span> <span data-ttu-id="b3b4c-116">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-117">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-117"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.addHandlerAsync_1
    summary: <span data-ttu-id="b3b4c-118">指定したイベントの種類を使用して、オブジェクトにイベントハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="b3b4c-119">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="b3b4c-120">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="b3b4c-121">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="b3b4c-122">追加するイベントの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-122">Specifies the type of event to add.</span></span> <span data-ttu-id="b3b4c-123">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="b3b4c-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-124"></span></span><!-- --><span data-ttu-id="b3b4c-125">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="b3b4c-126">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-126"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="b3b4c-127">追加するイベントハンドラー関数。これは、唯一のパラメーターが NodeDeletedEventArgs 型であることを示し[ます。](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="b3b4c-128">、 [NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-128">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="b3b4c-129">、または[NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-129">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="b3b4c-130">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-130">Optional.</span></span> <span data-ttu-id="b3b4c-131">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-132">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-132"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync
    summary: <span data-ttu-id="b3b4c-133">カスタム XML パーツを削除します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-133">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="b3b4c-134">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-134">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b3b4c-135">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b3b4c-136">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-136">Optional.</span></span> <span data-ttu-id="b3b4c-137">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-138">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-138"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync_1
    summary: <span data-ttu-id="b3b4c-139">カスタム XML パーツを削除します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-139">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="b3b4c-140">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-140">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="b3b4c-141">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-141">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="b3b4c-142">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-142">Optional.</span></span> <span data-ttu-id="b3b4c-143">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-143">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-144">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-144"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync
    summary: <span data-ttu-id="b3b4c-145">指定された XPath に一致するこのカスタム XML パーツ内の CustomXmlNodes を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-145">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: '<span data-ttu-id="b3b4c-146">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-146">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="b3b4c-147">取得するノードを指定する XPath 式。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-147">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="b3b4c-148">必須です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-148">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="b3b4c-149">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-149">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b3b4c-150">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-150">Optional.</span></span> <span data-ttu-id="b3b4c-151">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-151">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-152">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-152"></span></span> <span data-ttu-id="b3b4c-153">result `value`のプロパティは、xpath パラメーターに渡される xpath 式によって指定されたノードを表す customxmlnode オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-153">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync_1
    summary: <span data-ttu-id="b3b4c-154">指定された XPath に一致するこのカスタム XML パーツ内の CustomXmlNodes を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-154">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: |-
      <span data-ttu-id="b3b4c-155">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-155">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="b3b4c-156">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-156">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="b3b4c-157">取得するノードを指定する XPath 式。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-157">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="b3b4c-158">必須です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-158">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="b3b4c-159">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-159">Optional.</span></span> <span data-ttu-id="b3b4c-160">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-161">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-161"></span></span> <span data-ttu-id="b3b4c-162">result `value`のプロパティは、xpath パラメーターに渡される xpath 式によって指定されたノードを表す customxmlnode オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-162">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync
    summary: <span data-ttu-id="b3b4c-163">このカスタム XML パーツ内の XML を非同期的に取得します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-163">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="b3b4c-164">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-164">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="b3b4c-165">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-165">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="b3b4c-166">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-166">Optional.</span></span> <span data-ttu-id="b3b4c-167">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-167">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-168">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-168"></span></span> <span data-ttu-id="b3b4c-169">result `value`のプロパティは、参照されている CustomXmlPart オブジェクトの XML を含む文字列です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-169">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync_1
    summary: <span data-ttu-id="b3b4c-170">このカスタム XML パーツ内の XML を非同期的に取得します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-170">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="b3b4c-171">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-171">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="b3b4c-172">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-172">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="b3b4c-173">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-173">Optional.</span></span> <span data-ttu-id="b3b4c-174">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-175">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-175"></span></span> <span data-ttu-id="b3b4c-176">result `value`のプロパティは、参照されている CustomXmlPart オブジェクトの XML を含む文字列です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-176">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync
    summary: <span data-ttu-id="b3b4c-177">指定したイベントの種類のイベントハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-177">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="b3b4c-178">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-178">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="b3b4c-179">削除するイベントの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-179">Specifies the type of event to remove.</span></span> <span data-ttu-id="b3b4c-180">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-180">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="b3b4c-181">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-181"></span></span><!-- --><span data-ttu-id="b3b4c-182">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-182">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="b3b4c-183">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-183"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="b3b4c-184">削除するハンドラーの名前。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-184">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: <span data-ttu-id="b3b4c-185">削除するイベントハンドラーを決めるためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-185">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="b3b4c-186">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-186">Optional.</span></span> <span data-ttu-id="b3b4c-187">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-187">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-188">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-188"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync_1
    summary: <span data-ttu-id="b3b4c-189">指定したイベントの種類のイベントハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-189">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="b3b4c-190">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-190">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="b3b4c-191">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-191">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="b3b4c-192">削除するイベントの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-192">Specifies the type of event to remove.</span></span> <span data-ttu-id="b3b4c-193">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-193">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="b3b4c-194">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-194"></span></span><!-- --><span data-ttu-id="b3b4c-195">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="b3b4c-195">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="b3b4c-196">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-196"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="b3b4c-197">削除するハンドラーの名前。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-197">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="b3b4c-198">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-198">Optional.</span></span> <span data-ttu-id="b3b4c-199">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-199">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="b3b4c-200">.</span><span class="sxs-lookup"><span data-stu-id="b3b4c-200"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.builtIn
    summary: '<span data-ttu-id="b3b4c-201">カスタム XML パーツが組み込まれている場合は True。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-201">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b3b4c-202">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-202">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.id
    summary: <span data-ttu-id="b3b4c-203">CustomXMLPart の GUID を取得します。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-203">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b3b4c-204">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-204">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.namespaceManager
    summary: '<span data-ttu-id="b3b4c-205">名前空間プレフィックスマッピングのセットを取得し[ます (CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span><span class="sxs-lookup"><span data-stu-id="b3b4c-205">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span></span><!-- --><span data-ttu-id="b3b4c-206">) 現在の CustomXmlPart に対して使用されます。</span><span class="sxs-lookup"><span data-stu-id="b3b4c-206">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - office.Office.CustomXmlPrefixMappings
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b3b4c-207">例</span><span class="sxs-lookup"><span data-stu-id="b3b4c-207">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```