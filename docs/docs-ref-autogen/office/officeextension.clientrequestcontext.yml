### YamlMime:UniversalReference
ms.openlocfilehash: d164a366b460ce05b8e60dc2eaf8c184e757ad74
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 11/09/2018
ms.locfileid: "26232840"
items:
- uid: office.OfficeExtension.ClientRequestContext
  summary: Office アプリケーションのホストへの要求を容易にするために抽象 RequestContext オブジェクト。 `Excel.run`と`Word.run`メソッドは、要求のコンテキストを提供します。
  name: OfficeExtension.ClientRequestContext
  fullName: OfficeExtension.ClientRequestContext
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.ClientRequestContext.constructor
  - office.OfficeExtension.ClientRequestContext.debugInfo
  - office.OfficeExtension.ClientRequestContext.load
  - office.OfficeExtension.ClientRequestContext.loadRecursive
  - office.OfficeExtension.ClientRequestContext.requestHeaders
  - office.OfficeExtension.ClientRequestContext.sync
  - office.OfficeExtension.ClientRequestContext.trace
  - office.OfficeExtension.ClientRequestContext.trackedObjects
- uid: office.OfficeExtension.ClientRequestContext.constructor
  summary: '[ClientRequestContext](xref:office.OfficeExtension.ClientRequestContext)クラスの新しいインスタンスを構築します。'
  name: constructor(url)
  fullName: constructor
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(url?: string);'
    parameters:
    - id: url
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.debugInfo
  summary: デバッグ情報
  name: debugInfo
  fullName: debugInfo
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly debugInfo: RequestContextDebugInfo;'
    return:
      type:
      - office.OfficeExtension.RequestContextDebugInfo
- uid: office.OfficeExtension.ClientRequestContext.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 呼び出す必要があります`context.sync()`プロパティを読み取る前にします。
  name: load(object, option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: オブジェクトのプロパティが読み込まれます。
      type:
      - office.OfficeExtension.ClientObject
    - id: option
      description: コンマで区切られた文字列、または文字列の配列では、読み込むには、プロパティまたは[OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption)オブジェクトを指定します。
      type:
      - string | string[] | LoadOption
- uid: office.OfficeExtension.ClientRequestContext.loadRecursive
  summary: >-
    コマンドを再帰的にコマンドをキューでは、指定したオブジェクトのプロパティとナビゲーション プロパティを読み込みます。


    呼び出す必要があります`context.sync()`プロパティを読み取る前にします。
  name: loadRecursive(object, options, maxDepth)
  fullName: loadRecursive
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: object
      description: ロードするオブジェクトです。
      type:
      - office.OfficeExtension.ClientObject
    - id: options
      description: 'キーと値のペア、型の読み込みオプションのように`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
      type:
      - '{ [typeName: string]: string | string[] | LoadOption }'
    - id: maxDepth
      description: 最大の再帰の深さ。
      type:
      - number
- uid: office.OfficeExtension.ClientRequestContext.requestHeaders
  summary: 要求ヘッダー
  name: requestHeaders
  fullName: requestHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requestHeaders:'
    return:
      type:
      - '{ [name: string]: string }'
- uid: office.OfficeExtension.ClientRequestContext.sync
  summary: JavaScript プロキシ オブジェクトと、Office ドキュメント、手順を実行することによってキューに置かれた要求のコンテキストの状態を同期し、コード内で使用するためのロードされた Office オブジェクトのプロパティを取得します。 このメソッドは、同期が完了したら、解決の前提を返します。
  name: sync(passThroughValue)
  fullName: sync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sync<T>(passThroughValue?: T): Promise<T>;'
    return:
      type:
      - Promise<T>
      description: ''
    parameters:
    - id: passThroughValue
      description: ''
      type:
      - T
- uid: office.OfficeExtension.ClientRequestContext.trace
  summary: トレース メッセージをキューに追加します。 約束が返された場合は`context.sync()`が拒否された".traceMessages"配列に実行されたすべてのトレース メッセージを含む OfficeExtension.Error オブジェクトは、エラーのため追加します。 これらのメッセージは、プログラムの実行シーケンスを監視し、エラーの原因を検出するのに役立ちます。
  name: trace(message)
  fullName: trace
  langs:
  - typeScript
  type: method
  syntax:
    content: 'trace(message: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: ''
      type:
      - string
- uid: office.OfficeExtension.ClientRequestContext.trackedObjects
  summary: 周囲の文書内の変更に基づいて自動的に調整の追跡されているオブジェクトのコレクションです。
  name: trackedObjects
  fullName: trackedObjects
  langs:
  - typeScript
  type: property
  syntax:
    content: 'trackedObjects: TrackedObjects;'
    return:
      type:
      - office.OfficeExtension.TrackedObjects
