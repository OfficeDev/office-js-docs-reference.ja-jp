### YamlMime:UniversalReference
items:
  - uid: office.OfficeExtension.ClientRequestContext
    summary: <span data-ttu-id="b28d9-101">ホスト Office アプリケーションへの要求を容易にする抽象 RequestContext オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b28d9-101">An abstract RequestContext object that facilitates requests to the host Office application.</span></span> <span data-ttu-id="b28d9-102">メソッド`Excel.run`と`Word.run`メソッドは、要求コンテキストを提供します。</span><span class="sxs-lookup"><span data-stu-id="b28d9-102">The `Excel.run` and `Word.run` methods provide a request context.</span></span>
    name: OfficeExtension.ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.OfficeExtension.ClientRequestContext.(constructor)
      - office.OfficeExtension.ClientRequestContext.debugInfo
      - office.OfficeExtension.ClientRequestContext.load
      - office.OfficeExtension.ClientRequestContext.loadRecursive
      - office.OfficeExtension.ClientRequestContext.requestHeaders
      - office.OfficeExtension.ClientRequestContext.sync
      - office.OfficeExtension.ClientRequestContext.trace
      - office.OfficeExtension.ClientRequestContext.trackedObjects
  - uid: office.OfficeExtension.ClientRequestContext.(constructor)
    summary: <span data-ttu-id="b28d9-103">クラスの新しいインスタンスを構築`ClientRequestContext`します。</span><span class="sxs-lookup"><span data-stu-id="b28d9-103">Constructs a new instance of the `ClientRequestContext` class</span></span>
    name: (constructor)(url)
    fullName: (constructor)(url)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.debugInfo
    summary: <span data-ttu-id="b28d9-104">デバッグ情報</span><span class="sxs-lookup"><span data-stu-id="b28d9-104">Debug information</span></span>
    name: debugInfo
    fullName: debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - office.OfficeExtension.RequestContextDebugInfo
  - uid: office.OfficeExtension.ClientRequestContext.load
    summary: <span data-ttu-id="b28d9-105">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="b28d9-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b28d9-106">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b28d9-106">You must call `context.sync()` before reading the properties.</span></span>
    name: 'load(object, option)'
    fullName: 'load(object, option)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: <span data-ttu-id="b28d9-107">プロパティが読み込まれるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b28d9-107">The object whose properties are loaded.</span></span>
          type:
            - office.OfficeExtension.ClientObject
        - id: option
          description: '<span data-ttu-id="b28d9-108">読み込むプロパティを指定する、コンマで区切られた文字列、または文字列の配列。または、 [LoadOption](xref:office.OfficeExtension.LoadOption)オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b28d9-108">A comma-delimited string, or array of strings, that specifies the properties to load, or an [OfficeExtension.LoadOption](xref:office.OfficeExtension.LoadOption) object.</span></span>'
          type:
            - 'string | string[] | LoadOption'
  - uid: office.OfficeExtension.ClientRequestContext.loadRecursive
    summary: |-
      <span data-ttu-id="b28d9-109">オブジェクトの指定されたプロパティとそのナビゲーションプロパティを再帰的に読み込むコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="b28d9-109">Queues up a command to recursively load the specified properties of the object and its navigation properties.</span></span>

      <span data-ttu-id="b28d9-110">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b28d9-110">You must call `context.sync()` before reading the properties.</span></span>
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: 'loadRecursive(object, options, maxDepth)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: <span data-ttu-id="b28d9-111">読み込むオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b28d9-111">The object to be loaded.</span></span>
          type:
            - office.OfficeExtension.ClientObject
        - id: options
          description: '<span data-ttu-id="b28d9-112">型の読み込みオプションのキーと値の組み合わせ`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span><span class="sxs-lookup"><span data-stu-id="b28d9-112">The key-value pairing of load options for the types, such as `{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`</span></span>'
          type:
            - '{ [typeName: string]: string | string[] | LoadOption }'
        - id: maxDepth
          description: <span data-ttu-id="b28d9-113">再帰深さの最大値を示します。</span><span class="sxs-lookup"><span data-stu-id="b28d9-113">The maximum recursive depth.</span></span>
          type:
            - number
  - uid: office.OfficeExtension.ClientRequestContext.requestHeaders
    summary: <span data-ttu-id="b28d9-114">要求ヘッダー</span><span class="sxs-lookup"><span data-stu-id="b28d9-114">Request headers</span></span>
    name: requestHeaders
    fullName: requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders: { [name: string]: string };'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: office.OfficeExtension.ClientRequestContext.sync
    summary: '<span data-ttu-id="b28d9-115">要求コンテキストでキューに入れられた命令を実行し、コードで使用するために読み込まれた Office オブジェクトのプロパティを取得することによって、JavaScript プロキシオブジェクトと Office ドキュメント間の状態を同期します。</span><span class="sxs-lookup"><span data-stu-id="b28d9-115">Synchronizes the state between JavaScript proxy objects and the Office document, by executing instructions queued on the request context and retrieving properties of loaded Office objects for use in your code.</span></span> <span data-ttu-id="b28d9-116">このメソッドは、同期が完了したときに解決される promise を返します。</span><span class="sxs-lookup"><span data-stu-id="b28d9-116">This method returns a promise, which is resolved when the synchronization is complete.</span></span>'
    name: sync(passThroughValue)
    fullName: sync(passThroughValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
  - uid: office.OfficeExtension.ClientRequestContext.trace
    summary: '<span data-ttu-id="b28d9-117">キューにトレースメッセージを追加します。</span><span class="sxs-lookup"><span data-stu-id="b28d9-117">Adds a trace message to the queue.</span></span> <span data-ttu-id="b28d9-118">エラーによって`context.sync()`返された promise が拒否された場合は、実行されたすべてのトレースメッセージを含む "tracemessages" 配列が officeextension.error オブジェクトに追加されます。</span><span class="sxs-lookup"><span data-stu-id="b28d9-118">If the promise returned by `context.sync()` is rejected due to an error, this adds a ".traceMessages" array to the OfficeExtension.Error object, containing all trace messages that were executed.</span></span> <span data-ttu-id="b28d9-119">これらのメッセージは、プログラムの実行シーケンスを監視して、エラーの原因を検出するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b28d9-119">These messages can help you monitor the program execution sequence and detect the cause of the error.</span></span>'
    name: trace(message)
    fullName: trace(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.trackedObjects
    summary: <span data-ttu-id="b28d9-120">ドキュメント内の前後の変更に基づいて自動調整のために追跡されるオブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="b28d9-120">Collection of objects that are tracked for automatic adjustments based on surrounding changes in the document.</span></span>
    name: trackedObjects
    fullName: trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - office.OfficeExtension.TrackedObjects