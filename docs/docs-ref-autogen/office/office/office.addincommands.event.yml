### YamlMime:UniversalReference
items:
  - uid: 'office!Office.AddinCommands.Event:interface'
    summary: '`Event` オブジェクトは、UI を使用しないコマンド ボタンによって呼び出されるアドイン関数のパラメーターとして渡されます。オブジェクトにより、アドインはどのボタンがクリックされたかを識別し、その処理を行ったホストにシグナルを送ることができます。'
    remarks: |-
      詳細なサポート情報については、「[アドインコマンドの要件セット](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets)」を参照してください。

      **[最低限のアクセス許可レベル (Outlook)](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**: 制限付き

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.AddinCommands.Event#completed:member(1)'
      - 'office!Office.AddinCommands.Event#source:member'
  - uid: 'office!Office.AddinCommands.Event#completed:member(1)'
    summary: |-
      アドインが処理を完了し、自動的にクローズされることを示します。

      このメソッドは、次のように呼び出された関数の末尾で呼び出す必要があります。

      - UI を使用しないボタン (つまり、 `Action` `xsi:type`属性が設定されている要素で定義されたアドインコマンド)`ExecuteFunction`<!-- -->)

      - [Events 拡張ポイント](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)で定義された[イベント](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event)<!-- -->( `ItemSend`イベントなど)

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/javascript-api-for-office)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`Restricted`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り

      **注**: パラメーター `options`は Mailbox 1.8 で導入されました。

      #### <a name="examples"></a>例

      ```javascript
      // For the following example, the processItem function is
      // defined in the FunctionFile referenced from the add-in manifest,
      // and maps to the FunctionName of the action in the associated button control.
      function processItem(event) {
          // Do some processing

          event.completed();
      }
      ```
      ```javascript
      // For the following example, the checkMessage function was
      // registered as an event handler for ItemSend.
      function checkMessage(event) {
          // Get the item being sent.
          var outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK".
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in `result.value`.
              // If search term "BLOCK" is found, don't send message.
              const notFound = -1;
              var allowEvent = (result.value.indexOf('BLOCK') === notFound);
              event.completed({allowEvent: allowEvent});
          });
      }
      ```
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 省略可能です。 イベントが完了したときの動作オプションを指定するオブジェクト。
          type:
            - 'office!Office.AddinCommands.EventCompletedOptions:interface'
  - uid: 'office!Office.AddinCommands.Event#source:member'
    summary: この関数の呼び出しをトリガーしたコントロールに関する情報。
    remarks: |-
      このプロパティは、Outlook でサポートされるのは、メールボックス1.3 以降の[要件セット](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)のみです。

      #### <a name="examples"></a>例

      ```javascript
      // In this example, consider a button defined in an add-in manifest as follows:
      //<Control xsi:type="Button" id="eventTestButton">
      //    <Label resid="eventButtonLabel" />
      //    <Tooltip resid="eventButtonTooltip" />
      //    <Supertip>
      //        <Title resid="eventSuperTipTitle" />
      //        <Description resid="eventSuperTipDescription" />
      //    </Supertip>
      //    <Icon>
      //        <bt:Image size="16" resid="blue-icon-16" />
      //        <bt:Image size="32" resid="blue-icon-32" />
      //        <bt:Image size="80" resid="blue-icon-80" />
      //    </Icon>
      //    <Action xsi:type="ExecuteFunction">
      //        <FunctionName>testEventObject</FunctionName>
      //    </Action>
      //</Control>

      // The button has an id attribute set to eventTestButton, and will invoke
      // the testEventObject function defined in the add-in.
      // That function looks like this:
      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          var buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }
      ```
      ```javascript
      // Function is used by two buttons:
      // button1 and button2
      function multiButton (event) {
          // Check which button was clicked.
          var buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }
      ```
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - 'office!Office.AddinCommands.Source:interface'
references:
  - uid: 'office!Office.AddinCommands.EventCompletedOptions:interface'
    name: EventCompletedOptions
  - uid: 'office!Office.AddinCommands.Source:interface'
    name: Source