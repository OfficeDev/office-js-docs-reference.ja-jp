### YamlMime:TSType
name: Office.AddinCommands.Event
uid: office!Office.AddinCommands.Event:interface
package: office!
fullName: Office.AddinCommands.Event
summary: '`Event` オブジェクトは、UI を使用しないコマンド ボタンによって呼び出されるアドイン関数のパラメーターとして渡されます。オブジェクトにより、アドインはどのボタンがクリックされたかを識別し、その処理を行ったホストにシグナルを送ることができます。'
remarks: >-
  詳細 [については、「アドイン コマンド要件セット](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) 」を参照してください。


  **[最小アクセス許可レベル (Outlook)](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**: 制限付き


  **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り
isPreview: false
isDeprecated: false
type: interface
properties:
- name: source
  uid: office!Office.AddinCommands.Event#source:member
  package: office!
  fullName: source
  summary: この関数の呼び出しをトリガーしたコントロールに関する情報。
  remarks: >-
    このプロパティは、要件セットメールボックス 1.3 以降 [でのみ](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) Outlook でサポートされます。


    #### <a name="examples"></a>例


    ```javascript

    // In this example, consider a button defined in an add-in manifest as follows:

    //<Control xsi:type="Button" id="eventTestButton">

    //    <Label resid="eventButtonLabel" />

    //    <Tooltip resid="eventButtonTooltip" />

    //    <Supertip>

    //        <Title resid="eventSuperTipTitle" />

    //        <Description resid="eventSuperTipDescription" />

    //    </Supertip>

    //    <Icon>

    //        <bt:Image size="16" resid="blue-icon-16" />

    //        <bt:Image size="32" resid="blue-icon-32" />

    //        <bt:Image size="80" resid="blue-icon-80" />

    //    </Icon>

    //    <Action xsi:type="ExecuteFunction">

    //        <FunctionName>testEventObject</FunctionName>

    //    </Action>

    //</Control>


    // The button has an id attribute set to eventTestButton, and will invoke

    // the testEventObject function defined in the add-in.

    // That function looks like this:

    function testEventObject(event) {
        // The event object implements the Event interface.

        // This value will be "eventTestButton".
        var buttonId = event.source.id;

        // Signal to the host app that processing is complete.
        event.completed();
    }

    ```

    ```javascript

    // Function is used by two buttons:

    // button1 and button2

    function multiButton (event) {
        // Check which button was clicked.
        var buttonId = event.source.id;

        if (buttonId === 'button1') {
            doButton1Action();
        } else {
            doButton2Action();
        }

        event.completed();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: source:Source;
    return:
      type: <xref uid="office!Office.AddinCommands.Source:interface" />
methods:
- name: completed(options)
  uid: office!Office.AddinCommands.Event#completed:member(1)
  package: office!
  fullName: completed(options)
  summary: >-
    アドインが処理を完了し、自動的に閉じられます。


    このメソッドは、次の関数によって呼び出された関数の最後に呼び出す必要があります。


    - UI レス ボタン (つまり、属性がに設定されている要素で定義されたアドイン `Action` `xsi:type` コマンド) `ExecuteFunction`<!-- -->)


    - イベント [拡張](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event) ポイントで [定義されたイベント](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)<!-- -->イベントなど `ItemSend`


    \[[API セット: メールボックス 1.3](/office/dev/add-ins/reference/javascript-api-for-office)\]
  remarks: >-
    **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り


    **注**: この `options` パラメーターはメールボックス 1.8 で導入されました。


    #### <a name="examples"></a>例


    ```javascript

    // For the following example, the processItem function is

    // defined in the FunctionFile referenced from the add-in manifest,

    // and maps to the FunctionName of the action in the associated button control.

    function processItem(event) {
        // Do some processing

        event.completed();
    }

    ```

    ```javascript

    // For the following example, the checkMessage function was

    // registered as an event handler for ItemSend.

    function checkMessage(event) {
        // Get the item being sent.
        var outgoingMsg = Office.context.mailbox.item;

        // Check if subject contains "BLOCK".
        outgoingMsg.subject.getAsync(function (result) {
            // Subject is in `result.value`.
            // If search term "BLOCK" is found, don't send message.
            const notFound = -1;
            var allowEvent = (result.value.indexOf('BLOCK') === notFound);
            event.completed({allowEvent: allowEvent});
        });
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'completed(options?: EventCompletedOptions): void;'
    parameters:
    - id: options
      description: 省略可能。 イベントの完了時の動作オプションを指定するオブジェクト。
      type: <xref uid="office!Office.AddinCommands.EventCompletedOptions:interface" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 6e248a2bdb5a8d9a37a5338da0e7237391c98139
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51278220"
