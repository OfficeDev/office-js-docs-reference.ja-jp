### YamlMime:TSType
name: Office.Context
uid: office!Office.Context:interface
package: office!
fullName: Office.Context
summary: アドインのランタイム環境を表し、API の主要なオブジェクトへのアクセスを提供します。 現在のコンテキストは、Office のプロパティとして存在します。 このファイルにアクセスするには、 `Office.context`<!-- -->.
remarks: '**ホスト**: Excel、Outlook、PowerPoint、Project、Word'
isPreview: false
isDeprecated: false
type: interface
properties:
- name: auth
  uid: office!Office.Context#auth:member
  package: office!
  fullName: auth
  summary: サインインしているユーザーに情報を提供して、アクセスを許可します。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'auth: Auth;'
    return:
      type: <xref uid="office!Office.Auth:interface" />
- name: commerceAllowed
  uid: office!Office.Context#commerceAllowed:member
  package: office!
  fullName: commerceAllowed
  summary: 現在のプラットフォームでアドインが販売またはアップグレード用の UI を表示できる場合は True、それ以外の場合は True。それ以外の場合は、False を返します。
  remarks: >-
    **ホスト**: Excel、Word


    `commerceAllowed` は、Office on iPad でのみサポートされています。


    iOS アプリ ストアでは、追加の支払いシステムへのリンクを提供するアドインを含むアプリをサポートしません。 ただし、office アドインを Windows デスクトップまたはブラウザーで実行している場合は、そのようなリンクが許可されます。 アドインの UI で iOS 以外のプラットフォーム上の外部支払いシステムへのリンクを提供する場合は、commerceAllowed プロパティを使用して、そのリンクが表示されるタイミングを制御できます。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'commerceAllowed: boolean;'
    return:
      type: boolean
- name: contentLanguage
  uid: office!Office.Context#contentLanguage:member
  package: office!
  fullName: contentLanguage
  summary: ドキュメントまたはアイテムを編集するためにユーザーによって指定されるロケール (言語) を取得します。
  remarks: "この `contentLanguage` 値は、Office ホストアプリケーションの [**ファイル &gt; オプション &gt; 言語]** で指定されている **編集言語** 設定を反映しています。\n\n**サポートの詳細**\n\n次の表で、大文字 Y は、このプロパティは、対応する Office ホスト アプリケーションでサポートされていることを示します。 空のセルは、Office ホスト アプリケーションがこの列挙をサポートしないことを示します。\n\nOffice ホストアプリケーションとサーバーの要件の詳細については、「 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)」を参照してください。<!-- -->.\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows での Office </th><th> Web ブラウザーでの Office </th><th> Office on iPad </th><th> モバイルデバイスの Outlook </th><th> Office on Mac </th></tr> <tr><td><strong> シート </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong> 出席 </strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong> しまう </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong> プロジェクト </strong></td><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong> 段落 </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> </table>\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction sayHelloWithContentLanguage() {\n    var myContentLanguage = Office.context.contentLanguage;\n    switch (myContentLanguage) {\n        case 'en-US':\n            write('Hello!');\n            break;\n        case 'en-NZ':\n            write('G\\'day mate!');\n            break;\n    }\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'contentLanguage: string;'
    return:
      type: string
- name: diagnostics
  uid: office!Office.Context#diagnostics:member
  package: office!
  fullName: diagnostics
  summary: アドインが実行されている環境に関する情報を取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'diagnostics: ContextInformation;'
    return:
      type: <xref uid="office!Office.ContextInformation:interface" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nvar contextInfo = Office.context.diagnostics;\nconsole.log(\"Office application: \" + contextInfo.host);\nconsole.log(\"Office version: \" + contextInfo.version);\nconsole.log(\"Platform: \" + contextInfo.platform);\n```"
- name: displayLanguage
  uid: office!Office.Context#displayLanguage:member
  package: office!
  fullName: displayLanguage
  summary: Office ホスト アプリケーションの UI 用にユーザーが指定したロケール (言語) を取得します。
  remarks: "戻り値は、RFC 1766 言語タグ形式の文字列 (en-us など) です。\n\nこの `displayLanguage` 値は、Office ホストアプリケーションの [**ファイル &gt; オプション &gt; 言語]** で指定されている現在の **表示言語** 設定を反映しています。\n\nOutlook でを使用する場合は、該当するモードが作成または開封されます。\n\n**サポートの詳細**\n\n次の表で、大文字 Y は、このプロパティは、対応する Office ホスト アプリケーションでサポートされていることを示します。 空のセルは、Office ホスト アプリケーションがこの列挙をサポートしないことを示します。\n\nOffice ホストアプリケーションとサーバーの要件の詳細については、「 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)」を参照してください。<!-- -->.\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows での Office </th><th> Web ブラウザーでの Office </th><th> Office on iPad </th><th> モバイルデバイスの Outlook </th><th> Office on Mac </th></tr> <tr><td><strong> シート </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> <tr><td><strong> 出席 </strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong> しまう </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> <tr><td><strong> プロジェクト </strong></td><td> Y </td><td> </td><td> </td><td> </td><td> Y </td></tr> <tr><td><strong> 段落 </strong></td><td> Y </td><td> </td><td> Y </td><td> </td><td> Y </td></tr> </table>\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction sayHelloWithDisplayLanguage() {\n    var myDisplayLanguage = Office.context.displayLanguage;\n    switch (myDisplayLanguage) {\n        case 'en-US':\n            write('Hello!');\n            break;\n        case 'en-NZ':\n            write('G\\'day mate!');\n            break;\n    }\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'displayLanguage: string;'
    return:
      type: string
- name: document
  uid: office!Office.Context#document:member
  package: office!
  fullName: document
  summary: コンテンツ アドインまたは作業ウィンドウ アドインによって操作するドキュメントを表すオブジェクトを取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'document: Office.Document;'
    return:
      type: <xref uid="office!Office.Document:interface" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Extension initialization code.\nvar _document;\n\n// The initialize function is required for all add-ins.\nOffice.initialize = function () {\n    // Checks for the DOM to load using the jQuery ready function.\n    $(document).ready(function () {\n    // After the DOM is loaded, code specific to the add-in can run.\n    // Initialize instance variables to access API objects.\n    _document = Office.context.document;\n    });\n}\n```"
- name: host
  uid: office!Office.Context#host:member
  package: office!
  fullName: host
  summary: アドインが実行されている Office アプリケーションホストが保存されています。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'host: HostType;'
    return:
      type: <xref uid="office!Office.HostType:enum" />
- name: license
  uid: office!Office.Context#license:member
  package: office!
  fullName: license
  summary: ユーザーの Office インストールのライセンス情報を取得します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'license: string;'
    return:
      type: string
- name: mailbox
  uid: office!Office.Context#mailbox:member
  package: office!
  fullName: mailbox
  summary: Microsoft Outlook アドインオブジェクトモデルへのアクセスを提供します。
  remarks: >-
    **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 新規作成または読み取り


    **主要なプロパティ**:


    - `diagnostics`<!-- -->: Outlook アドインに診断情報を提供します。


    - `item`<!-- -->: Outlook アドインのメッセージや予定にアクセスするためのメソッドとプロパティを提供します。


    - `userProfile`<!-- -->: Outlook アドインのユーザーに関する情報を提供します。


    #### <a name="examples"></a>例


    ```javascript

    // The following line of code access the item object of the JavaScript API for Office.

    var item = Office.context.mailbox.item;

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'mailbox: Office.Mailbox;'
    return:
      type: <xref uid="outlook!Office.Mailbox:interface" />
- name: officeTheme
  uid: office!Office.Context#officeTheme:member
  package: office!
  fullName: officeTheme
  summary: Office テーマの色のプロパティにアクセスできるようにします。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'officeTheme: OfficeTheme;'
    return:
      type: <xref uid="office!Office.OfficeTheme:interface" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction applyOfficeTheme(){\n    // Get office theme colors.\n    var bodyBackgroundColor = Office.context.officeTheme.bodyBackgroundColor;\n    var bodyForegroundColor = Office.context.officeTheme.bodyForegroundColor;\n    var controlBackgroundColor = Office.context.officeTheme.controlBackgroundColor;\n    var controlForegroundColor = Office.context.officeTheme.controlForegroundColor;\n\n    // Apply body background color to a CSS class.\n    $('.body').css('background-color', bodyBackgroundColor);\n}\n```"
- name: platform
  uid: office!Office.Context#platform:member
  package: office!
  fullName: platform
  summary: アドインが実行されているプラットフォームを提供します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'platform: PlatformType;'
    return:
      type: <xref uid="office!Office.PlatformType:enum" />
- name: requirements
  uid: office!Office.Context#requirements:member
  package: office!
  fullName: requirements
  summary: 現在のホストとプラットフォームでサポートされている要件セットを判断するためのメソッドを提供します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'requirements: RequirementSetSupport;'
    return:
      type: <xref uid="office!Office.RequirementSetSupport:interface" />
- name: roamingSettings
  uid: office!Office.Context#roamingSettings:member
  package: office!
  fullName: roamingSettings
  summary: >-
    ユーザーのメールボックスに保存されている、メール アドインのカスタム設定や状態を表すオブジェクトを取得します。


    このオブジェクトを使用する `RoamingSettings` と、ユーザーのメールボックスに格納されているメールアドインのデータを格納してアクセスできます。そのため、そのメールボックスへのアクセスに使用するホストクライアントアプリケーションから実行している場合は、そのアドインで利用できます。
  remarks: >-
    **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 新規作成または読み取り


    #### <a name="examples"></a>例


    ```javascript

    // Get the current value of the 'myKey' setting.

    var value = Office.context.roamingSettings.get('myKey');

    // Update the value of the 'myKey' setting.

    Office.context.roamingSettings.set('myKey', 'Hello World!');

    // Persist the change.

    Office.context.roamingSettings.saveAsync();

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'roamingSettings: Office.RoamingSettings;'
    return:
      type: <xref uid="outlook!Office.RoamingSettings:interface" />
- name: touchEnabled
  uid: office!Office.Context#touchEnabled:member
  package: office!
  fullName: touchEnabled
  summary: プラットフォームとデバイスがタッチ操作を許可するかどうかを指定します。 アドインが iPad などのタッチデバイスで実行されている場合は True。それ以外の場合は false。
  remarks: >-
    **ホスト**: Excel、PowerPoint、Word


    `touchEnabled` は、Office on iPad でのみサポートされています。


    Context.touchenabled プロパティを使用して、アドインがタッチデバイスで実行されているかどうかを確認し、必要に応じてコントロールの種類を調整し、アドインの UI で要素のサイズと間隔を調整して、タッチの相互作用に対応します。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'touchEnabled: boolean;'
    return:
      type: boolean
- name: ui
  uid: office!Office.Context#ui:member
  package: office!
  fullName: ui
  summary: ダイアログ ボックスなどの UI コンポーネントの作成や操作に使用できるオブジェクトとメソッドを提供します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'ui: UI;'
    return:
      type: <xref uid="office!Office.UI:interface" />
metadata:
  ms.openlocfilehash: 4a366d9ffedfa94f945405fcadd5152703b32ec1
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49329594"
