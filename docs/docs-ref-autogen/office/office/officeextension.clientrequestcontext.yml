### YamlMime:UniversalReference
items:
  - uid: 'office!OfficeExtension.ClientRequestContext:class'
    summary: ホスト Office アプリケーションへの要求を容易にする抽象 RequestContext オブジェクト。 メソッド`Excel.run`と`Word.run`メソッドは、要求コンテキストを提供します。
    name: OfficeExtension.ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office!
    children:
      - 'office!OfficeExtension.ClientRequestContext:constructor(1)'
      - 'office!OfficeExtension.ClientRequestContext#debugInfo:member'
      - 'office!OfficeExtension.ClientRequestContext#load:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#loadRecursive:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#requestHeaders:member'
      - 'office!OfficeExtension.ClientRequestContext#sync:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#trace:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#trackedObjects:member'
  - uid: 'office!OfficeExtension.ClientRequestContext:constructor(1)'
    summary: クラスの新しいインスタンスを構築`ClientRequestContext`します。
    name: (constructor)(url)
    fullName: (constructor)(url)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: 'office!OfficeExtension.ClientRequestContext#debugInfo:member'
    summary: デバッグ情報
    name: debugInfo
    fullName: debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - 'office!OfficeExtension.RequestContextDebugInfo:interface'
  - uid: 'office!OfficeExtension.ClientRequestContext#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: 'load(object, option)'
    fullName: 'load(object, option)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: プロパティが読み込まれるオブジェクト。
          type:
            - 'office!OfficeExtension.ClientObject:class'
        - id: option
          description: '読み込むプロパティを指定する、コンマで区切られた文字列、または文字列の配列。または、 [LoadOption](xref:office!OfficeExtension.LoadOption:interface)オブジェクト。'
          type:
            - 'office!OfficeExtension.ClientRequestContext#load~0:complex'
  - uid: 'office!OfficeExtension.ClientRequestContext#loadRecursive:member(1)'
    summary: |-
      オブジェクトの指定されたプロパティとそのナビゲーションプロパティを再帰的に読み込むコマンドをキューに入れます。

      プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: 'loadRecursive(object, options, maxDepth)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: 読み込むオブジェクトを指定します。
          type:
            - 'office!OfficeExtension.ClientObject:class'
        - id: options
          description: '型の読み込みオプションのキーと値の組み合わせ`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
          type:
            - 'office!OfficeExtension.ClientRequestContext#loadRecursive~0:complex'
        - id: maxDepth
          description: 再帰深さの最大値を示します。
          type:
            - number
  - uid: 'office!OfficeExtension.ClientRequestContext#requestHeaders:member'
    summary: 要求ヘッダー
    name: requestHeaders
    fullName: requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders: { [name: string]: string };'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: 'office!OfficeExtension.ClientRequestContext#sync:member(1)'
    summary: 要求コンテキストでキューに入れられた命令を実行し、コードで使用するために読み込まれた Office オブジェクトのプロパティを取得することによって、JavaScript プロキシオブジェクトと Office ドキュメント間の状態を同期します。 このメソッドは、同期が完了したときに解決される promise を返します。
    name: sync(passThroughValue)
    fullName: sync(passThroughValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - 'office!OfficeExtension.ClientRequestContext#sync~0:complex'
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
      typeParameters:
        - id: T
  - uid: 'office!OfficeExtension.ClientRequestContext#trace:member(1)'
    summary: キューにトレースメッセージを追加します。 エラーによって`context.sync()`返された promise が拒否された場合は、実行されたすべてのトレースメッセージを含む "traceMessages" 配列が officeextension.error オブジェクトに追加されます。 これらのメッセージは、プログラムの実行シーケンスを監視して、エラーの原因を検出するのに役立ちます。
    name: trace(message)
    fullName: trace(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: 'office!OfficeExtension.ClientRequestContext#trackedObjects:member'
    summary: ドキュメント内の前後の変更に基づいて自動調整のために追跡されるオブジェクトのコレクションです。
    name: trackedObjects
    fullName: trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - 'office!OfficeExtension.TrackedObjects:class'
references:
  - uid: 'office!OfficeExtension.RequestContextDebugInfo:interface'
    name: RequestContextDebugInfo
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: ClientObject
  - uid: 'office!OfficeExtension.ClientRequestContext#load~0:complex'
    name: 'string | string[] | LoadOption'
    fullName: 'string | string[] | OfficeExtension.LoadOption'
    spec.typeScript:
      - name: 'string | string[] | '
        fullName: 'string | string[] | '
      - uid: 'office!OfficeExtension.LoadOption:interface'
        name: LoadOption
        fullName: OfficeExtension.LoadOption
  - uid: 'office!OfficeExtension.ClientRequestContext#loadRecursive~0:complex'
    name: '{ [typeName: string]: string | string[] | LoadOption }'
    fullName: '{ [typeName: string]: string | string[] | OfficeExtension.LoadOption }'
    spec.typeScript:
      - name: '{ [typeName: string]: string | string[] | '
        fullName: '{ [typeName: string]: string | string[] | '
      - uid: 'office!OfficeExtension.LoadOption:interface'
        name: LoadOption
        fullName: OfficeExtension.LoadOption
      - name: ' }'
        fullName: ' }'
  - uid: 'office!OfficeExtension.ClientRequestContext#sync~0:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'office!OfficeExtension.TrackedObjects:class'
    name: TrackedObjects