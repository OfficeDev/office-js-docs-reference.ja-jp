### YamlMime:TSType
name: OfficeExtension.ClientRequestContext
uid: office!OfficeExtension.ClientRequestContext:class
package: office!
fullName: OfficeExtension.ClientRequestContext
summary: ホスト Office アプリケーションへの要求を容易にする抽象 RequestContext オブジェクト。 `Excel.run`メソッドと `Word.run` メソッドは、要求コンテキストを提供します。
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
- name: (constructor)(url)
  uid: office!OfficeExtension.ClientRequestContext:constructor(1)
  package: office!
  fullName: (constructor)(url)
  summary: クラスの新しいインスタンスを構築します。 `ClientRequestContext`
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'constructor(url?: string);'
    parameters:
    - id: url
      description: ''
      type: string
properties:
- name: debugInfo
  uid: office!OfficeExtension.ClientRequestContext#debugInfo:member
  package: office!
  fullName: debugInfo
  summary: デバッグ情報
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly debugInfo: RequestContextDebugInfo;'
    return:
      type: <xref uid="office!OfficeExtension.RequestContextDebugInfo:interface" />
- name: requestHeaders
  uid: office!OfficeExtension.ClientRequestContext#requestHeaders:member
  package: office!
  fullName: requestHeaders
  summary: 要求ヘッダー
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'requestHeaders: { [name: string]: string };'
    return:
      type: '{ [name: string]: string }'
- name: trackedObjects
  uid: office!OfficeExtension.ClientRequestContext#trackedObjects:member
  package: office!
  fullName: trackedObjects
  summary: ドキュメント内の前後の変更に基づいて自動調整のために追跡されるオブジェクトのコレクションです。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'trackedObjects: TrackedObjects;'
    return:
      type: <xref uid="office!OfficeExtension.TrackedObjects:class" />
methods:
- name: load(object, option)
  uid: office!OfficeExtension.ClientRequestContext#load:member(1)
  package: office!
  fullName: load(object, option)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
    parameters:
    - id: object
      description: プロパティが読み込まれるオブジェクト。
      type: <xref uid="office!OfficeExtension.ClientObject:class" />
    - id: option
      description: 読み込むプロパティを指定する、コンマで区切られた文字列、または文字列の配列。または、 [LoadOption](xref:office!OfficeExtension.LoadOption:interface) オブジェクト。
      type: string | string[] | <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: void
      description: ''
- name: loadRecursive(object, options, maxDepth)
  uid: office!OfficeExtension.ClientRequestContext#loadRecursive:member(1)
  package: office!
  fullName: loadRecursive(object, options, maxDepth)
  summary: >-
    オブジェクトの指定されたプロパティとそのナビゲーションプロパティを再帰的に読み込むコマンドをキューに入れます。


    プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
    parameters:
    - id: object
      description: 読み込むオブジェクトを指定します。
      type: <xref uid="office!OfficeExtension.ClientObject:class" />
    - id: options
      description: '型の読み込みオプションのキーと値の組み合わせ `{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
      type: '{ [typeName: string]: string | string[] | <xref uid="office!OfficeExtension.LoadOption:interface" /> }'
    - id: maxDepth
      description: 再帰深さの最大値を示します。
      type: number
    return:
      type: void
      description: ''
- name: sync(passThroughValue)
  uid: office!OfficeExtension.ClientRequestContext#sync:member(1)
  package: office!
  fullName: sync(passThroughValue)
  summary: 要求コンテキストでキューに入れられた命令を実行し、コードで使用するために読み込まれた Office オブジェクトのプロパティを取得することによって、JavaScript プロキシオブジェクトと Office ドキュメント間の状態を同期します。 このメソッドは、同期が完了したときに解決される promise を返します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sync<T>(passThroughValue?: T): Promise<T>;'
    parameters:
    - id: passThroughValue
      description: ''
      type: T
    return:
      type: Promise&lt;T&gt;
      description: ''
- name: trace(message)
  uid: office!OfficeExtension.ClientRequestContext#trace:member(1)
  package: office!
  fullName: trace(message)
  summary: キューにトレースメッセージを追加します。 エラーによって返された promise `context.sync()` が拒否された場合は、実行されたすべてのトレースメッセージを含む "traceMessages" 配列が officeextension.error オブジェクトに追加されます。 これらのメッセージは、プログラムの実行シーケンスを監視して、エラーの原因を検出するのに役立ちます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'trace(message: string): void;'
    parameters:
    - id: message
      description: ''
      type: string
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: c9ee931f600a549e40d435863941c3cde3f4bca9
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49183168"
