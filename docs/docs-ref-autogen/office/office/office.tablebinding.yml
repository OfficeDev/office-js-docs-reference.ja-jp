### YamlMime:UniversalReference
items:
  - uid: office.Office.TableBinding
    summary: '<span data-ttu-id="0be5a-101">バインドを行と列の 2 次元で、必要に応じてヘッダーと共に表します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-101">Represents a binding in two dimensions of rows and columns, optionally with headers.</span></span>'
    remarks: |-
      <span data-ttu-id="0be5a-102">`id` Tablebinding オブジェクトは、プロパティ、 `type`プロパティ、 `getDataAsync`メソッド、および`setDataAsync`メソッドを Office の[Binding](xref:office.Office.Binding)オブジェクトから継承します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-102">The TableBinding object inherits the `id` property, `type` property, `getDataAsync` method, and `setDataAsync` method from the [Office.Binding](xref:office.Office.Binding) object.</span></span>

      <span data-ttu-id="0be5a-103">Excel の場合は、テーブルバインドを確立した後、ユーザーがテーブルに追加する新しい各行ごとに、自動的にバインドに追加され、行数が増加することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0be5a-103">For Excel, note that after you establish a table binding, each new row a user adds to the table is automatically included in the binding and rowCount increases.</span></span>
    name: Office.TableBinding
    fullName: Office.TableBinding
    langs:
      - typeScript
    type: interface
    extends:
      - office.Office.Binding
    package: office
    children:
      - office.Office.TableBinding.addColumnsAsync
      - office.Office.TableBinding.addColumnsAsync_1
      - office.Office.TableBinding.addRowsAsync
      - office.Office.TableBinding.addRowsAsync_1
      - office.Office.TableBinding.clearFormatsAsync
      - office.Office.TableBinding.clearFormatsAsync_1
      - office.Office.TableBinding.deleteAllDataValuesAsync
      - office.Office.TableBinding.deleteAllDataValuesAsync_1
      - office.Office.TableBinding.getFormatsAsync
      - office.Office.TableBinding.getFormatsAsync_1
      - office.Office.TableBinding.setFormatsAsync
      - office.Office.TableBinding.setFormatsAsync_1
      - office.Office.TableBinding.setTableOptionsAsync
      - office.Office.TableBinding.setTableOptionsAsync_1
      - office.Office.TableBinding.columnCount
      - office.Office.TableBinding.hasHeaders
      - office.Office.TableBinding.rowCount
  - uid: office.Office.TableBinding.addColumnsAsync
    summary: <span data-ttu-id="0be5a-104">指定されたデータを、追加の列としてテーブルに追加します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-104">Adds the specified data to the table as additional columns.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-105">データおよびヘッダーの値を指定する1つ以上の列を追加するには、TableData オブジェクトを data パラメーターとして渡します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-105">To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter.</span></span> <span data-ttu-id="0be5a-106">データのみを指定する 1 つ以上の列を追加するには、配列の配列 ("matrix") を data パラメーターとして渡します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-106">To add one or more columns specifying only the data, pass an array of arrays ("matrix") as the data parameter.</span></span>

      <span data-ttu-id="0be5a-107">Addcolumns Async 操作の成功または失敗はアトミックです。</span><span class="sxs-lookup"><span data-stu-id="0be5a-107">The success or failure of an addColumnsAsync operation is atomic.</span></span> <span data-ttu-id="0be5a-108">つまり、列を追加する操作はその全体が成功する必要があり、1 つでもエラーが発生すると、操作全体がロールバックされます (コールバックに返される AsyncResult.status プロパティもエラーを報告します)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-108">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="0be5a-109">Data 引数として渡す配列の各行には、更新するテーブルと同じ行数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-109">Each row in the array you pass as the data argument must have the same number of rows as the table being updated.</span></span> <span data-ttu-id="0be5a-110">そうでないと、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-110">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-p104">配列内の各行とセルは、その行またはセルをテーブル内の新しく追加される列に正常に追加する必要があります。何らかの理由によって、行またはセルを設定できなかった場合は、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-p104">Each row and cell in the array must successfully add that row or cell to the table in the newly added column(s). If any row or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-113">TableData オブジェクトを data 引数として渡す場合は、ヘッダー行の数が更新するテーブルの行数と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-113">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="0be5a-114">Web 上の Excel に関するその他のコメント: data パラメーターに渡される TableData オブジェクト内のセルの合計数は、このメソッドへの1回の呼び出しでは2万を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0be5a-114">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      #### <a name="examples"></a><span data-ttu-id="0be5a-115">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-115">Examples</span></span>

      ```javascript
      // The following example adds a single column with three rows to a bound table with the id "myTable"
      // by passing a TableData object as the data argument of the addColumnsAsync method. To succeed,
      // the table being updated must have three rows.

      // Add a column to a binding of type table by passing a TableData object.
      function addColumns() {
          var myTable = new Office.TableData();
          myTable.headers = [["Cities"]];
          myTable.rows = [["Berlin"], ["Roma"], ["Tokyo"]];

          Office.context.document.bindings.getByIdAsync("myTable", function (result) {
              result.value.addColumnsAsync(myTable);
          });
      }

      // The following example adds a single column with three rows to a bound table with the id myTable
      // by passing an array of arrays ("matrix") as the data argument of the addColumnsAsync method.
      // To succeed, the table being updated must have three rows.

      // Add a column to a binding of type table by passing an array of arrays.
      function addColumns() {
          var myTable = [["Berlin"], ["Roma"], ["Tokyo"]];

          Office.context.document.bindings.getByIdAsync("myTable", function (result) {
              result.value.addColumnsAsync(myTable);
          });
      }
      ```
    name: 'addColumnsAsync(tableData, options, callback)'
    fullName: 'addColumnsAsync(tableData, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addColumnsAsync(tableData: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableData
          description: <span data-ttu-id="0be5a-116">テーブルに追加する1つ以上のデータ列を含む配列 ("matrix") または TableData オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0be5a-116">An array of arrays ("matrix") or a TableData object that contains one or more columns of data to add to the table.</span></span> <span data-ttu-id="0be5a-117">必須です。</span><span class="sxs-lookup"><span data-stu-id="0be5a-117">Required.</span></span>
          type:
            - 'TableData | any[][]'
        - id: options
          description: '<span data-ttu-id="0be5a-118">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-118">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="0be5a-119">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-119">Optional.</span></span> <span data-ttu-id="0be5a-120">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-120">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-121">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-121"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.addColumnsAsync_1
    summary: <span data-ttu-id="0be5a-122">指定されたデータを、追加の列としてテーブルに追加します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-122">Adds the specified data to the table as additional columns.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-123">データおよびヘッダーの値を指定する1つ以上の列を追加するには、TableData オブジェクトを data パラメーターとして渡します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-123">To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter.</span></span> <span data-ttu-id="0be5a-124">データのみを指定する 1 つ以上の列を追加するには、配列の配列 ("matrix") を data パラメーターとして渡します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-124">To add one or more columns specifying only the data, pass an array of arrays ("matrix") as the data parameter.</span></span>

      <span data-ttu-id="0be5a-125">Addcolumns Async 操作の成功または失敗はアトミックです。</span><span class="sxs-lookup"><span data-stu-id="0be5a-125">The success or failure of an addColumnsAsync operation is atomic.</span></span> <span data-ttu-id="0be5a-126">つまり、列を追加する操作はその全体が成功する必要があり、1 つでもエラーが発生すると、操作全体がロールバックされます (コールバックに返される AsyncResult.status プロパティもエラーを報告します)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-126">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="0be5a-127">Data 引数として渡す配列の各行には、更新するテーブルと同じ行数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-127">Each row in the array you pass as the data argument must have the same number of rows as the table being updated.</span></span> <span data-ttu-id="0be5a-128">そうでないと、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-128">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-p110">配列内の各行とセルは、その行またはセルをテーブル内の新しく追加される列に正常に追加する必要があります。何らかの理由によって、行またはセルを設定できなかった場合は、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-p110">Each row and cell in the array must successfully add that row or cell to the table in the newly added column(s). If any row or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-131">TableData オブジェクトを data 引数として渡す場合は、ヘッダー行の数が更新するテーブルの行数と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-131">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="0be5a-132">Web 上の Excel に関するその他のコメント: data パラメーターに渡される TableData オブジェクト内のセルの合計数は、このメソッドへの1回の呼び出しでは2万を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0be5a-132">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>
    name: 'addColumnsAsync(tableData, callback)'
    fullName: 'addColumnsAsync(tableData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addColumnsAsync(tableData: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableData
          description: <span data-ttu-id="0be5a-133">テーブルに追加する1つ以上のデータ列を含む配列 ("matrix") または TableData オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0be5a-133">An array of arrays ("matrix") or a TableData object that contains one or more columns of data to add to the table.</span></span> <span data-ttu-id="0be5a-134">必須です。</span><span class="sxs-lookup"><span data-stu-id="0be5a-134">Required.</span></span>
          type:
            - 'TableData | any[][]'
        - id: callback
          description: '<span data-ttu-id="0be5a-135">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-135">Optional.</span></span> <span data-ttu-id="0be5a-136">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-136">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-137">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-137"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.addRowsAsync
    summary: <span data-ttu-id="0be5a-138">指定されたデータを、追加の行としてテーブルに追加します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-138">Adds the specified data to the table as additional rows.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-139">Tablebinding.addrowsasync 操作の成功または失敗はアトミックです。</span><span class="sxs-lookup"><span data-stu-id="0be5a-139">The success or failure of an addRowsAsync operation is atomic.</span></span> <span data-ttu-id="0be5a-140">つまり、列を追加する操作はその全体が成功する必要があり、1 つでもエラーが発生すると、操作全体がロールバックされます (コールバックに返される AsyncResult.status プロパティもエラーを報告します)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-140">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="0be5a-141">Data 引数として渡す配列の各行には、更新するテーブルと同じ列数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-141">Each row in the array you pass as the data argument must have the same number of columns as the table being updated.</span></span> <span data-ttu-id="0be5a-142">そうでないと、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-142">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-143">配列内の各列とセルは、新しく追加された行のテーブルに、その列またはセルを正常に追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-143">Each column and cell in the array must successfully add that column or cell to the table in the newly added rows(s).</span></span> <span data-ttu-id="0be5a-144">何らかの理由で任意の列またはセルが設定されていない場合、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-144">If any column or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-145">TableData オブジェクトを data 引数として渡す場合は、ヘッダー行の数が更新するテーブルの行数と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-145">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="0be5a-146">Web 上の Excel に関するその他のコメント: data パラメーターに渡される TableData オブジェクト内のセルの合計数は、このメソッドへの1回の呼び出しでは2万を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0be5a-146">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      #### <a name="examples"></a><span data-ttu-id="0be5a-147">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-147">Examples</span></span>

      ```javascript
      function addRowsToTable() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              var binding = asyncResult.value;
              binding.addRowsAsync([["6", "k"], ["7", "j"]]);
          });
      }
      ```
    name: 'addRowsAsync(rows, options, callback)'
    fullName: 'addRowsAsync(rows, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addRowsAsync(rows: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rows
          description: <span data-ttu-id="0be5a-148">配列の配列 ("matrix")、またはテーブルに追加する1つまたは複数の行を含む TableData オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0be5a-148">An array of arrays ("matrix") or a TableData object that contains one or more rows of data to add to the table.</span></span> <span data-ttu-id="0be5a-149">必須です。</span><span class="sxs-lookup"><span data-stu-id="0be5a-149">Required.</span></span>
          type:
            - 'TableData | any[][]'
        - id: options
          description: '<span data-ttu-id="0be5a-150">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-150">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="0be5a-151">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-151">Optional.</span></span> <span data-ttu-id="0be5a-152">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-152">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-153">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-153"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.addRowsAsync_1
    summary: <span data-ttu-id="0be5a-154">指定されたデータを、追加の行としてテーブルに追加します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-154">Adds the specified data to the table as additional rows.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-155">Tablebinding.addrowsasync 操作の成功または失敗はアトミックです。</span><span class="sxs-lookup"><span data-stu-id="0be5a-155">The success or failure of an addRowsAsync operation is atomic.</span></span> <span data-ttu-id="0be5a-156">つまり、列を追加する操作はその全体が成功する必要があり、1 つでもエラーが発生すると、操作全体がロールバックされます (コールバックに返される AsyncResult.status プロパティもエラーを報告します)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-156">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="0be5a-157">Data 引数として渡す配列の各行には、更新するテーブルと同じ列数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-157">Each row in the array you pass as the data argument must have the same number of columns as the table being updated.</span></span> <span data-ttu-id="0be5a-158">そうでないと、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-158">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-159">配列内の各列とセルは、新しく追加された行のテーブルに、その列またはセルを正常に追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-159">Each column and cell in the array must successfully add that column or cell to the table in the newly added rows(s).</span></span> <span data-ttu-id="0be5a-160">何らかの理由で任意の列またはセルが設定されていない場合、操作全体が失敗します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-160">If any column or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="0be5a-161">TableData オブジェクトを data 引数として渡す場合は、ヘッダー行の数が更新するテーブルの行数と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-161">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="0be5a-162">Web 上の Excel に関するその他のコメント: data パラメーターに渡される TableData オブジェクト内のセルの合計数は、このメソッドへの1回の呼び出しでは2万を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0be5a-162">Additional remark for Excel on the web: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>
    name: 'addRowsAsync(rows, callback)'
    fullName: 'addRowsAsync(rows, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addRowsAsync(rows: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rows
          description: <span data-ttu-id="0be5a-163">配列の配列 ("matrix")、またはテーブルに追加する1つまたは複数の行を含む TableData オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0be5a-163">An array of arrays ("matrix") or a TableData object that contains one or more rows of data to add to the table.</span></span> <span data-ttu-id="0be5a-164">必須です。</span><span class="sxs-lookup"><span data-stu-id="0be5a-164">Required.</span></span>
          type:
            - 'TableData | any[][]'
        - id: callback
          description: '<span data-ttu-id="0be5a-165">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-165">Optional.</span></span> <span data-ttu-id="0be5a-166">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-166">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-167">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-167"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.clearFormatsAsync
    summary: <span data-ttu-id="0be5a-168">バインド テーブルの書式設定をクリアします。</span><span class="sxs-lookup"><span data-stu-id="0be5a-168">Clears formatting on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-169">詳細については、「 [Excel 用アドインのテーブルの書式設定](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0be5a-169">See [Format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) for more information.</span></span>

      #### <a name="examples"></a><span data-ttu-id="0be5a-170">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-170">Examples</span></span>

      ```javascript
      // The following example shows how to clear the formatting of the bound table with an ID of "myBinding":
      Office.select("bindings#myBinding").clearFormatsAsync();
      ```
    name: 'clearFormatsAsync(options, callback)'
    fullName: 'clearFormatsAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFormatsAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="0be5a-171">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-171">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="0be5a-172">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-172">Optional.</span></span> <span data-ttu-id="0be5a-173">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-173">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-174">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-174"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.clearFormatsAsync_1
    summary: <span data-ttu-id="0be5a-175">バインド テーブルの書式設定をクリアします。</span><span class="sxs-lookup"><span data-stu-id="0be5a-175">Clears formatting on the bound table.</span></span>
    remarks: '<span data-ttu-id="0be5a-176">詳細については、「 [Excel 用アドインのテーブルの書式設定](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0be5a-176">See [Format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) for more information.</span></span>'
    name: clearFormatsAsync(callback)
    fullName: clearFormatsAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFormatsAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="0be5a-177">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-177">Optional.</span></span> <span data-ttu-id="0be5a-178">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-178">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-179">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-179"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.deleteAllDataValuesAsync
    summary: '<span data-ttu-id="0be5a-180">テーブル内のヘッダー行以外の行と値をすべて削除し、ホスト アプリケーションに応じて適切にシフトします。</span><span class="sxs-lookup"><span data-stu-id="0be5a-180">Deletes all non-header rows and their values in the table, shifting appropriately for the host application.</span></span>'
    remarks: |-
      <span data-ttu-id="0be5a-181">Excel では、テーブルにヘッダー行が含まれていない場合、このメソッドはテーブルそのものを削除します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-181">In Excel, if the table has no header row, this method will delete the table itself.</span></span>

      #### <a name="examples"></a><span data-ttu-id="0be5a-182">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-182">Examples</span></span>

      ```javascript
      function deleteAllRowsFromTable() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              var binding = asyncResult.value;
              binding.deleteAllDataValuesAsync();
          });
      }
      ```
    name: 'deleteAllDataValuesAsync(options, callback)'
    fullName: 'deleteAllDataValuesAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAllDataValuesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="0be5a-183">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-183">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="0be5a-184">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-184">Optional.</span></span> <span data-ttu-id="0be5a-185">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-185">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-186">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-186"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.deleteAllDataValuesAsync_1
    summary: '<span data-ttu-id="0be5a-187">テーブル内のヘッダー行以外の行と値をすべて削除し、ホスト アプリケーションに応じて適切にシフトします。</span><span class="sxs-lookup"><span data-stu-id="0be5a-187">Deletes all non-header rows and their values in the table, shifting appropriately for the host application.</span></span>'
    remarks: '<span data-ttu-id="0be5a-188">Excel では、テーブルにヘッダー行が含まれていない場合、このメソッドはテーブルそのものを削除します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-188">In Excel, if the table has no header row, this method will delete the table itself.</span></span>'
    name: deleteAllDataValuesAsync(callback)
    fullName: deleteAllDataValuesAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAllDataValuesAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="0be5a-189">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-189">Optional.</span></span> <span data-ttu-id="0be5a-190">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-190">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-191">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-191"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.getFormatsAsync
    summary: <span data-ttu-id="0be5a-192">表内の指定された項目の書式設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-192">Gets the formatting on specified items in the table.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-193">**返される形式構造**</span><span class="sxs-lookup"><span data-stu-id="0be5a-193">**Returned format structure**</span></span>

      <span data-ttu-id="0be5a-194">戻り値の配列内の各 JavaScript オブジェクトの形式は次のとおりです。`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="0be5a-194">Each JavaScript object in the return value array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="0be5a-195">この`cells:`プロパティは、次のいずれかの値を使用して書式設定する範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-195">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="0be5a-196">**cells プロパティでサポートされている範囲**</span><span class="sxs-lookup"><span data-stu-id="0be5a-196">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="0be5a-197">cells の範囲の設定</span><span class="sxs-lookup"><span data-stu-id="0be5a-197">cells range settings</span></span></th> <th><span data-ttu-id="0be5a-198">説明</span><span class="sxs-lookup"><span data-stu-id="0be5a-198">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="0be5a-199">テーブル内のデータの0から始まる n 番目の行の範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-199">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="0be5a-200">テーブル内のデータの0から始まる n 番目の列である範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-200">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="0be5a-201">I 行とテーブルの j 番目列である単一のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-201">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="0be5a-202">列見出し、データ、集計 (もしあれば) を含むテーブル全体を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-202">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="0be5a-203">テーブル内のデータのみ (見出しと集計を含まない) を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-203">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="0be5a-204">見出し行のみを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-204">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="0be5a-205">この`format:`プロパティは、Excel の [セルの書式設定] ダイアログボックスで使用可能な設定のサブセットに対応する&gt;値を指定し&gt;ます&gt; ([セルの書式設定] または [ホームの書式設定セル] を右クリックします)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-205">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>
    name: 'getFormatsAsync(cellReference, formats, options, callback)'
    fullName: 'getFormatsAsync(cellReference, formats, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormatsAsync(cellReference?: any, formats?: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellReference
          description: <span data-ttu-id="0be5a-206">書式設定を取得するセルの範囲を指定する名前と値のペアを含むオブジェクトリテラル。</span><span class="sxs-lookup"><span data-stu-id="0be5a-206">An object literal containing name-value pairs that specify the range of cells to get formatting from.</span></span>
          type:
            - any
        - id: formats
          description: <span data-ttu-id="0be5a-207">取得する書式プロパティを指定する配列。</span><span class="sxs-lookup"><span data-stu-id="0be5a-207">An array specifying the format properties to get.</span></span>
          type:
            - 'any[]'
        - id: options
          description: '<span data-ttu-id="0be5a-208">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-208">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="0be5a-209">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-209">Optional.</span></span> <span data-ttu-id="0be5a-210">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-210">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-211">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-211"></span></span> <span data-ttu-id="0be5a-212">Result `value`のプロパティは、対応するセルの書式設定を指定する1つまたは複数の JavaScript オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="0be5a-212">The `value` property of the result is an array containing one or more JavaScript objects specifying the formatting of their corresponding cells.</span></span>'
          type:
            - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
  - uid: office.Office.TableBinding.getFormatsAsync_1
    summary: <span data-ttu-id="0be5a-213">表内の指定された項目の書式設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-213">Gets the formatting on specified items in the table.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-214">**返される形式構造**</span><span class="sxs-lookup"><span data-stu-id="0be5a-214">**Returned format structure**</span></span>

      <span data-ttu-id="0be5a-215">戻り値の配列内の各 JavaScript オブジェクトの形式は次のとおりです。`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="0be5a-215">Each JavaScript object in the return value array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="0be5a-216">この`cells:`プロパティは、次のいずれかの値を使用して書式設定する範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-216">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="0be5a-217">**cells プロパティでサポートされている範囲**</span><span class="sxs-lookup"><span data-stu-id="0be5a-217">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="0be5a-218">cells の範囲の設定</span><span class="sxs-lookup"><span data-stu-id="0be5a-218">cells range settings</span></span></th> <th><span data-ttu-id="0be5a-219">説明</span><span class="sxs-lookup"><span data-stu-id="0be5a-219">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="0be5a-220">テーブル内のデータの0から始まる n 番目の行の範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-220">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="0be5a-221">テーブル内のデータの0から始まる n 番目の列である範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-221">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="0be5a-222">I 行とテーブルの j 番目列である単一のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-222">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="0be5a-223">列見出し、データ、集計 (もしあれば) を含むテーブル全体を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-223">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="0be5a-224">テーブル内のデータのみ (見出しと集計を含まない) を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-224">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="0be5a-225">見出し行のみを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-225">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="0be5a-226">この`format:`プロパティは、Excel の [セルの書式設定] ダイアログボックスで使用可能な設定のサブセットに対応する&gt;値を指定し&gt;ます&gt; ([セルの書式設定] または [ホームの書式設定セル] を右クリックします)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-226">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>
    name: 'getFormatsAsync(cellReference, formats, callback)'
    fullName: 'getFormatsAsync(cellReference, formats, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormatsAsync(cellReference?: any, formats?: any[], callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellReference
          description: <span data-ttu-id="0be5a-227">書式設定を取得するセルの範囲を指定する名前と値のペアを含むオブジェクトリテラル。</span><span class="sxs-lookup"><span data-stu-id="0be5a-227">An object literal containing name-value pairs that specify the range of cells to get formatting from.</span></span>
          type:
            - any
        - id: formats
          description: <span data-ttu-id="0be5a-228">取得する書式プロパティを指定する配列。</span><span class="sxs-lookup"><span data-stu-id="0be5a-228">An array specifying the format properties to get.</span></span>
          type:
            - 'any[]'
        - id: callback
          description: '<span data-ttu-id="0be5a-229">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-229">Optional.</span></span> <span data-ttu-id="0be5a-230">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-230">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-231">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-231"></span></span> <span data-ttu-id="0be5a-232">Result `value`のプロパティは、対応するセルの書式設定を指定する1つまたは複数の JavaScript オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="0be5a-232">The `value` property of the result is an array containing one or more JavaScript objects specifying the formatting of their corresponding cells.</span></span>'
          type:
            - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
  - uid: office.Office.TableBinding.setFormatsAsync
    summary: <span data-ttu-id="0be5a-233">表内の指定されたアイテムおよびデータに書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-233">Sets formatting on specified items and data in the table.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-234">**cellFormat パラメーターを指定する**</span><span class="sxs-lookup"><span data-stu-id="0be5a-234">**Specifying the cellFormat parameter**</span></span>

      <span data-ttu-id="0be5a-235">セルの書式設定値 (幅、高さ、フォント、背景、配置など) を設定または変更するには、cellFormat パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-235">Use the cellFormat parameter to set or change cell formatting values, such as width, height, font, background, alignment, and so on.</span></span> <span data-ttu-id="0be5a-236">CellFormat パラメーターとして渡す値は、対象となるセルを指定する1つまたは複数の JavaScript オブジェクトのリストを含む配列です (`cells:`</span><span class="sxs-lookup"><span data-stu-id="0be5a-236">The value you pass as the cellFormat parameter is an array that contains a list of one or more JavaScript objects that specify which cells to target (`cells:`</span></span><!-- --><span data-ttu-id="0be5a-237">) と形式 (`format:`</span><span class="sxs-lookup"><span data-stu-id="0be5a-237">) and the formats (`format:`</span></span><!-- --><span data-ttu-id="0be5a-238">) を設定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-238">) to apply to them.</span></span>

      <span data-ttu-id="0be5a-239">CellFormat 配列内の各 JavaScript オブジェクトには、次の形式があります。`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="0be5a-239">Each JavaScript object in the cellFormat array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="0be5a-240">この`cells:`プロパティは、次のいずれかの値を使用して書式設定する範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-240">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="0be5a-241">**cells プロパティでサポートされている範囲**</span><span class="sxs-lookup"><span data-stu-id="0be5a-241">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="0be5a-242">cells の範囲の設定</span><span class="sxs-lookup"><span data-stu-id="0be5a-242">cells range settings</span></span></th> <th><span data-ttu-id="0be5a-243">説明</span><span class="sxs-lookup"><span data-stu-id="0be5a-243">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="0be5a-244">テーブル内のデータの0から始まる n 番目の行の範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-244">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="0be5a-245">テーブル内のデータの0から始まる n 番目の列である範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-245">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="0be5a-246">I 行とテーブルの j 番目列である単一のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-246">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="0be5a-247">列見出し、データ、集計 (もしあれば) を含むテーブル全体を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-247">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="0be5a-248">テーブル内のデータのみ (見出しと集計を含まない) を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-248">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="0be5a-249">見出し行のみを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-249">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="0be5a-250">この`format:`プロパティは、Excel の [セルの書式設定] ダイアログボックスで使用可能な設定のサブセットに対応する&gt;値を指定し&gt;ます&gt; ([セルの書式設定] または [ホームの書式設定セル] を右クリックします)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-250">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>

      <span data-ttu-id="0be5a-251">`format:`プロパティの値は、JavaScript オブジェクトリテラルの1つ以上のプロパティの名前と値のペアのリストとして指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-251">You specify the value of the `format:` property as a list of one or more property name - value pairs in a JavaScript object literal.</span></span> <span data-ttu-id="0be5a-252">The property name specifies the name of the formatting property to set, and value specifies the property value.</span><span class="sxs-lookup"><span data-stu-id="0be5a-252">The property name specifies the name of the formatting property to set, and value specifies the property value.</span></span> <span data-ttu-id="0be5a-253">You can specify multiple values for a given format, such as both a font's color and size.</span><span class="sxs-lookup"><span data-stu-id="0be5a-253">You can specify multiple values for a given format, such as both a font's color and size.</span></span>

      <span data-ttu-id="0be5a-254">Here's three `format:` property value examples:</span><span class="sxs-lookup"><span data-stu-id="0be5a-254">Here's three `format:` property value examples:</span></span>

      `//Set cells: font color to green and size to 15 points.`

      `format: {fontColor : "green", fontSize : 15}`

      `//Set cells: border to dotted blue.`

      `format: {borderStyle: "dotted", borderColor: "blue"}`

      `//Set cells: background to red and alignment to centered.`

      `format: {backgroundColor: "red", alignHorizontal: "center"}`

      <span data-ttu-id="0be5a-255">数値の書式を指定するには、 `numberFormat:`プロパティで "code" 文字列の表示形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-255">You can specify number formats by specifying the number formatting "code" string in the `numberFormat:` property.</span></span> <span data-ttu-id="0be5a-256">この文字列に指定できる数値の形式は、Excel の [ セルの書式設定] ダイアログ ボックスの [ 表示形式] タブの [ ユーザー定義] 分類項目で設定できる形式に対応しています。</span><span class="sxs-lookup"><span data-stu-id="0be5a-256">The number format strings you can specify correspond to those you can set in Excel using the Custom category on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="0be5a-257">次の例は、数値を小数点以下 2 桁を含むパーセントとして表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0be5a-257">This example shows how to format a number as a percentage with two decimal places:</span></span>

      `format: {numberFormat:"0.00%"}`

      <span data-ttu-id="0be5a-258">詳細については、「[ユーザー設定の番号書式を作成](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)する方法」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0be5a-258">For more detail, see how to [Create a custom number format](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span></span><!-- --><span data-ttu-id="0be5a-259">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-259"></span></span>

      <span data-ttu-id="0be5a-260">データを書き込むときにテーブルの書式設定を行うに`Document.setSelectedDataAsync`は、引数 Tableoptions および cellformat を`TableBinding.setDataAsync`使用します。またはメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-260">To set formatting on tables when writing data, use the tableOptions and cellFormat optional parameters of the `Document.setSelectedDataAsync` or `TableBinding.setDataAsync` methods.</span></span>

      <span data-ttu-id="0be5a-261">`Document.setSelectedDataAsync`およびメソッドのオプションのパラメーターを使用し`TableBinding.setDataAsync`て書式設定を行うと、初めてデータを書き込むときにのみ書式設定が行われます。</span><span class="sxs-lookup"><span data-stu-id="0be5a-261">Setting formatting with the optional parameters of the `Document.setSelectedDataAsync` and `TableBinding.setDataAsync` methods only works to set formatting when writing data the first time.</span></span> <span data-ttu-id="0be5a-262">データの書き込み後に書式設定を変更するには、次のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-262">To make formatting changes after writing data, use the following methods:</span></span>

      - <span data-ttu-id="0be5a-263">フォントの色やスタイルなどのセルの書式を更新するに`TableBinding.setFormatsAsync`は、メソッド (このメソッド) を使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-263">To update cell formatting, such as font color and style, use the `TableBinding.setFormatsAsync` method (this method).</span></span>

      - <span data-ttu-id="0be5a-264">縞模様 (行) やフィルターボタンなどのテーブルオプションを更新する`TableBinding.setTableOptions`には、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-264">To update table options, such as banded rows and filter buttons, use the `TableBinding.setTableOptions` method.</span></span>

      - <span data-ttu-id="0be5a-265">書式設定をクリアするに`TableBinding.clearFormats`は、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-265">To clear formatting, use the `TableBinding.clearFormats` method.</span></span>

      <span data-ttu-id="0be5a-266">詳細および例については、「 [Excel 用アドインでテーブルの書式を設定する方法](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0be5a-266">For more details and examples, see [How to format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span></span><!-- --><span data-ttu-id="0be5a-267">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-267"></span></span>

      #### <a name="examples"></a><span data-ttu-id="0be5a-268">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-268">Examples</span></span>

      ```javascript
      // Specifying a single target
      // The following example shows a cellFormat value that sets the font color of the header row to red.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: Office.Table.Headers, format: {fontColor: "red"}}], 
          function (asyncResult){});

      // Specifying multiple targets
      // The setFormatsAsync method can support formatting multiple targets within the bound table in a 
      // single function call. To do that, you pass a list of objects in the cellFormat array 
      // for each target that you want to format.
      // For example, the following line of code will set the font color of the first row yellow, 
      // and the fourth cell in the third row to have a white border and bold text.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: {row: 1}, format: {fontColor: "yellow"}}, 
              {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}], 
          function (asyncResult){});

      // Additional remarks for Excel Online
      // The number of formatting groups passed to the cellFormat parameter can't exceed 100. 
      // A single formatting group consists of a set of formatting applied to a specified range of cells. 
      // For example, the following call passes two formatting groups to cellFormat.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: {row: 1}, format: {fontColor: "yellow"}}, 
              {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}], 
          function (asyncResult){});
      ```
    name: 'setFormatsAsync(cellFormat, options, callback)'
    fullName: 'setFormatsAsync(cellFormat, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormatsAsync(cellFormat: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellFormat
          description: <span data-ttu-id="0be5a-269">ターゲットとなるセルと、対象セルに適用する書式設定を指定した 1 つ以上の JavaScript オブジェクトが含まれる配列。</span><span class="sxs-lookup"><span data-stu-id="0be5a-269">An array that contains one or more JavaScript objects that specify which cells to target and the formatting to apply to them.</span></span>
          type:
            - 'any[]'
        - id: options
          description: '<span data-ttu-id="0be5a-270">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-270">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="0be5a-271">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-271">Optional.</span></span> <span data-ttu-id="0be5a-272">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-272">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-273">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-273"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.setFormatsAsync_1
    summary: <span data-ttu-id="0be5a-274">表内の指定されたアイテムおよびデータに書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-274">Sets formatting on specified items and data in the table.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-275">**cellFormat パラメーターを指定する**</span><span class="sxs-lookup"><span data-stu-id="0be5a-275">**Specifying the cellFormat parameter**</span></span>

      <span data-ttu-id="0be5a-276">セルの書式設定値 (幅、高さ、フォント、背景、配置など) を設定または変更するには、cellFormat パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-276">Use the cellFormat parameter to set or change cell formatting values, such as width, height, font, background, alignment, and so on.</span></span> <span data-ttu-id="0be5a-277">CellFormat パラメーターとして渡す値は、対象となるセルを指定する1つまたは複数の JavaScript オブジェクトのリストを含む配列です (`cells:`</span><span class="sxs-lookup"><span data-stu-id="0be5a-277">The value you pass as the cellFormat parameter is an array that contains a list of one or more JavaScript objects that specify which cells to target (`cells:`</span></span><!-- --><span data-ttu-id="0be5a-278">) と形式 (`format:`</span><span class="sxs-lookup"><span data-stu-id="0be5a-278">) and the formats (`format:`</span></span><!-- --><span data-ttu-id="0be5a-279">) を設定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-279">) to apply to them.</span></span>

      <span data-ttu-id="0be5a-280">CellFormat 配列内の各 JavaScript オブジェクトには、次の形式があります。`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="0be5a-280">Each JavaScript object in the cellFormat array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="0be5a-281">この`cells:`プロパティは、次のいずれかの値を使用して書式設定する範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-281">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="0be5a-282">**cells プロパティでサポートされている範囲**</span><span class="sxs-lookup"><span data-stu-id="0be5a-282">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="0be5a-283">cells の範囲の設定</span><span class="sxs-lookup"><span data-stu-id="0be5a-283">cells range settings</span></span></th> <th><span data-ttu-id="0be5a-284">説明</span><span class="sxs-lookup"><span data-stu-id="0be5a-284">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="0be5a-285">テーブル内のデータの0から始まる n 番目の行の範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-285">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="0be5a-286">テーブル内のデータの0から始まる n 番目の列である範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-286">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="0be5a-287">I 行とテーブルの j 番目列である単一のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-287">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="0be5a-288">列見出し、データ、集計 (もしあれば) を含むテーブル全体を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-288">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="0be5a-289">テーブル内のデータのみ (見出しと集計を含まない) を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-289">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="0be5a-290">見出し行のみを指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-290">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="0be5a-291">この`format:`プロパティは、Excel の [セルの書式設定] ダイアログボックスで使用可能な設定のサブセットに対応する&gt;値を指定し&gt;ます&gt; ([セルの書式設定] または [ホームの書式設定セル] を右クリックします)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-291">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>

      <span data-ttu-id="0be5a-292">`format:`プロパティの値は、JavaScript オブジェクトリテラルの1つ以上のプロパティの名前と値のペアのリストとして指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-292">You specify the value of the `format:` property as a list of one or more property name - value pairs in a JavaScript object literal.</span></span> <span data-ttu-id="0be5a-293">The property name specifies the name of the formatting property to set, and value specifies the property value.</span><span class="sxs-lookup"><span data-stu-id="0be5a-293">The property name specifies the name of the formatting property to set, and value specifies the property value.</span></span> <span data-ttu-id="0be5a-294">You can specify multiple values for a given format, such as both a font's color and size.</span><span class="sxs-lookup"><span data-stu-id="0be5a-294">You can specify multiple values for a given format, such as both a font's color and size.</span></span>

      <span data-ttu-id="0be5a-295">Here's three `format:` property value examples:</span><span class="sxs-lookup"><span data-stu-id="0be5a-295">Here's three `format:` property value examples:</span></span>

      `//Set cells: font color to green and size to 15 points.`

      `format: {fontColor : "green", fontSize : 15}`

      `//Set cells: border to dotted blue.`

      `format: {borderStyle: "dotted", borderColor: "blue"}`

      `//Set cells: background to red and alignment to centered.`

      `format: {backgroundColor: "red", alignHorizontal: "center"}`

      <span data-ttu-id="0be5a-296">数値の書式を指定するには、 `numberFormat:`プロパティで "code" 文字列の表示形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-296">You can specify number formats by specifying the number formatting "code" string in the `numberFormat:` property.</span></span> <span data-ttu-id="0be5a-297">この文字列に指定できる数値の形式は、Excel の [ セルの書式設定] ダイアログ ボックスの [ 表示形式] タブの [ ユーザー定義] 分類項目で設定できる形式に対応しています。</span><span class="sxs-lookup"><span data-stu-id="0be5a-297">The number format strings you can specify correspond to those you can set in Excel using the Custom category on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="0be5a-298">次の例は、数値を小数点以下 2 桁を含むパーセントとして表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0be5a-298">This example shows how to format a number as a percentage with two decimal places:</span></span>

      `format: {numberFormat:"0.00%"}`

      <span data-ttu-id="0be5a-299">詳細については、「[ユーザー設定の番号書式を作成](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)する方法」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0be5a-299">For more detail, see how to [Create a custom number format](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span></span><!-- --><span data-ttu-id="0be5a-300">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-300"></span></span>

      <span data-ttu-id="0be5a-301">データを書き込むときにテーブルの書式設定を行うに`Document.setSelectedDataAsync`は、引数 Tableoptions および cellformat を`TableBinding.setDataAsync`使用します。またはメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-301">To set formatting on tables when writing data, use the tableOptions and cellFormat optional parameters of the `Document.setSelectedDataAsync` or `TableBinding.setDataAsync` methods.</span></span>

      <span data-ttu-id="0be5a-302">`Document.setSelectedDataAsync`およびメソッドのオプションのパラメーターを使用し`TableBinding.setDataAsync`て書式設定を行うと、初めてデータを書き込むときにのみ書式設定が行われます。</span><span class="sxs-lookup"><span data-stu-id="0be5a-302">Setting formatting with the optional parameters of the `Document.setSelectedDataAsync` and `TableBinding.setDataAsync` methods only works to set formatting when writing data the first time.</span></span> <span data-ttu-id="0be5a-303">データの書き込み後に書式設定を変更するには、次のメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-303">To make formatting changes after writing data, use the following methods:</span></span>

      - <span data-ttu-id="0be5a-304">フォントの色やスタイルなどのセルの書式を更新するに`TableBinding.setFormatsAsync`は、メソッド (このメソッド) を使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-304">To update cell formatting, such as font color and style, use the `TableBinding.setFormatsAsync` method (this method).</span></span>

      - <span data-ttu-id="0be5a-305">縞模様 (行) やフィルターボタンなどのテーブルオプションを更新する`TableBinding.setTableOptions`には、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-305">To update table options, such as banded rows and filter buttons, use the `TableBinding.setTableOptions` method.</span></span>

      - <span data-ttu-id="0be5a-306">書式設定をクリアするに`TableBinding.clearFormats`は、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-306">To clear formatting, use the `TableBinding.clearFormats` method.</span></span>

      <span data-ttu-id="0be5a-307">詳細および例については、「 [Excel 用アドインでテーブルの書式を設定する方法](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0be5a-307">For more details and examples, see [How to format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span></span><!-- --><span data-ttu-id="0be5a-308">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-308"></span></span>
    name: 'setFormatsAsync(cellFormat, callback)'
    fullName: 'setFormatsAsync(cellFormat, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormatsAsync(cellFormat: any[], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellFormat
          description: <span data-ttu-id="0be5a-309">ターゲットとなるセルと、対象セルに適用する書式設定を指定した 1 つ以上の JavaScript オブジェクトが含まれる配列。</span><span class="sxs-lookup"><span data-stu-id="0be5a-309">An array that contains one or more JavaScript objects that specify which cells to target and the formatting to apply to them.</span></span>
          type:
            - 'any[]'
        - id: callback
          description: '<span data-ttu-id="0be5a-310">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-310">Optional.</span></span> <span data-ttu-id="0be5a-311">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-311">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-312">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-312"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.setTableOptionsAsync
    summary: <span data-ttu-id="0be5a-313">バインド テーブルにおけるテーブル書式設定オプションを更新します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-313">Updates table formatting options on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-314">**要件セット**:[セットに含まれない](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="0be5a-314">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="0be5a-315">goToByIdAsync メソッドに渡されるコールバック関数で、AsyncResult オブジェクトのプロパティを使用して、次の情報を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="0be5a-315">In the callback function passed to the goToByIdAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="0be5a-316">プロパティ</span><span class="sxs-lookup"><span data-stu-id="0be5a-316">Property</span></span></th> <th><span data-ttu-id="0be5a-317">使用目的</span><span class="sxs-lookup"><span data-stu-id="0be5a-317">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="0be5a-318">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="0be5a-318">AsyncResult.value</span></span></td> <td><span data-ttu-id="0be5a-319">書式を設定するときに取得するデータまたはオブジェクトがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-319">Always returns undefined because there is no data or object to retrieve when setting formats.</span></span></td> </tr> <tr> <td><span data-ttu-id="0be5a-320">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="0be5a-320">AsyncResult.status</span></span></td> <td><span data-ttu-id="0be5a-321">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-321">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="0be5a-322">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="0be5a-322">AsyncResult.error</span></span></td> <td><span data-ttu-id="0be5a-323">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="0be5a-323">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="0be5a-324">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="0be5a-324">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="0be5a-325">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="0be5a-325">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="0be5a-326">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-326">Examples</span></span>

      ```javascript
      // The following example shows how to:
      // 1. Create an object literal that specifies the table formatting options to update on the bound table.
      // 2. Call setTableOptions on a previously bound table (with an id of myBinding) passing the object
      //    with formatting setting as the tableOptions parameter.
      function updateTableFormatting(){
          var tableOptions = {bandedRows: true, filterButton: false, style: "TableStyleMedium3"}; 

          Office.select("bindings#myBinding").setTableOptionsAsync(tableOptions, function(asyncResult){});
      }
      ```
    name: 'setTableOptionsAsync(tableOptions, options, callback)'
    fullName: 'setTableOptionsAsync(tableOptions, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTableOptionsAsync(tableOptions: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableOptions
          description: <span data-ttu-id="0be5a-327">オブジェクト リテラルは、適用するテーブル オプションを定義するプロパティ名と値のペアのリストです。</span><span class="sxs-lookup"><span data-stu-id="0be5a-327">An object literal containing a list of property name-value pairs that define the table options to apply.</span></span>
          type:
            - any
        - id: options
          description: '<span data-ttu-id="0be5a-328">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-328">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="0be5a-329">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-329">Optional.</span></span> <span data-ttu-id="0be5a-330">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-330">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-331">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-331"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.setTableOptionsAsync_1
    summary: <span data-ttu-id="0be5a-332">バインド テーブルにおけるテーブル書式設定オプションを更新します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-332">Updates table formatting options on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="0be5a-333">**要件セット**:[セットに含まれない](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="0be5a-333">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="0be5a-334">goToByIdAsync メソッドに渡されるコールバック関数で、AsyncResult オブジェクトのプロパティを使用して、次の情報を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="0be5a-334">In the callback function passed to the goToByIdAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="0be5a-335">プロパティ</span><span class="sxs-lookup"><span data-stu-id="0be5a-335">Property</span></span></th> <th><span data-ttu-id="0be5a-336">使用目的</span><span class="sxs-lookup"><span data-stu-id="0be5a-336">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="0be5a-337">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="0be5a-337">AsyncResult.value</span></span></td> <td><span data-ttu-id="0be5a-338">書式を設定するときに取得するデータまたはオブジェクトがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-338">Always returns undefined because there is no data or object to retrieve when setting formats.</span></span></td> </tr> <tr> <td><span data-ttu-id="0be5a-339">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="0be5a-339">AsyncResult.status</span></span></td> <td><span data-ttu-id="0be5a-340">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-340">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="0be5a-341">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="0be5a-341">AsyncResult.error</span></span></td> <td><span data-ttu-id="0be5a-342">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="0be5a-342">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="0be5a-343">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="0be5a-343">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="0be5a-344">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="0be5a-344">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'setTableOptionsAsync(tableOptions, callback)'
    fullName: 'setTableOptionsAsync(tableOptions, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTableOptionsAsync(tableOptions: any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableOptions
          description: <span data-ttu-id="0be5a-345">オブジェクト リテラルは、適用するテーブル オプションを定義するプロパティ名と値のペアのリストです。</span><span class="sxs-lookup"><span data-stu-id="0be5a-345">An object literal containing a list of property name-value pairs that define the table options to apply.</span></span>
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="0be5a-346">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0be5a-346">Optional.</span></span> <span data-ttu-id="0be5a-347">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office.Office.AsyncResult)である。</span><span class="sxs-lookup"><span data-stu-id="0be5a-347">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="0be5a-348">.</span><span class="sxs-lookup"><span data-stu-id="0be5a-348"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.columnCount
    summary: '<span data-ttu-id="0be5a-349">TableBinding 内の列数を表す整数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-349">Gets the number of columns in the TableBinding, as an integer value.</span></span>'
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnCount: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0be5a-350">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-350">Examples</span></span>

          ```javascript
          function showBindingColumnCount() {
              Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
                  write("Column: " + asyncResult.value.columnCount);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.TableBinding.hasHeaders
    summary: '<span data-ttu-id="0be5a-351">テーブルにヘッダーがある場合は True。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="0be5a-351">True, if the table has headers; otherwise false.</span></span>'
    name: hasHeaders
    fullName: hasHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasHeaders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0be5a-352">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-352">Examples</span></span>

          ```javascript
          function showBindingHasHeaders() {
              Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
                  write("Binding has headers: " + asyncResult.value.hasHeaders);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.TableBinding.rowCount
    summary: '<span data-ttu-id="0be5a-353">TableBinding 内の行の数を表す整数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-353">Gets the number of rows in the TableBinding, as an integer value.</span></span>'
    remarks: |-
      <span data-ttu-id="0be5a-354">Excel 2013 と Excel on the web で1行を選択することによって空のテーブルを挿入すると ([挿入] タブの表を使用して)、両方の Office ホストアプリケーションは、ヘッダーの1行を作成し、その後に1行の空白行を作成します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-354">When you insert an empty table by selecting a single row in Excel 2013 and Excel on the web (using Table on the Insert tab), both Office host applications create a single row of headers followed by a single blank row.</span></span> <span data-ttu-id="0be5a-355">ただし、アドインのスクリプトによって、新しく挿入されたテーブルのバインドが作成される場合 (たとえば、 [Office.](xref:office.Office.Bindings)</span><span class="sxs-lookup"><span data-stu-id="0be5a-355">However, if your add-in's script creates a binding for this newly inserted table (for example, by using the [Office.Bindings](xref:office.Office.Bindings)</span></span><!-- --><span data-ttu-id="0be5a-356">. addFromSelectionAsync メソッド) を選択し、rowCount プロパティの値をチェックします。返される値は、スプレッドシートが Excel 2013 または Excel on the web で開いているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="0be5a-356">.addFromSelectionAsync method), and then checks the value of the rowCount property, the value returned will differ depending whether the spreadsheet is open in Excel 2013 or Excel on the web.</span></span>

      - <span data-ttu-id="0be5a-357">デスクトップ上の Excel では、rowCount は0を返します (ヘッダーに続く空の行は計算されません)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-357">In Excel on the desktop, rowCount will return 0 (the blank row following the headers is not counted).</span></span>

      - <span data-ttu-id="0be5a-358">Web 上の Excel では、rowCount は1を返します (ヘッダーに続く空の行はカウントされます)。</span><span class="sxs-lookup"><span data-stu-id="0be5a-358">In Excel on the web, rowCount will return 1 (the blank row following the headers is counted).</span></span>

      <span data-ttu-id="0be5a-359">スクリプトでこの違いを回避するには、rowCount == 1 かどうかを確認し、これが真の場合、行に含まれている文字列がすべて空であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0be5a-359">You can work around this difference in your script by checking if rowCount == 1, and if so, then checking if the row contains all empty strings.</span></span>

      #### <a name="examples"></a><span data-ttu-id="0be5a-360">例</span><span class="sxs-lookup"><span data-stu-id="0be5a-360">Examples</span></span>

      ```javascript
      function showBindingRowCount() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write("Rows: " + asyncResult.value.rowCount);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rowCount: number;'
      return:
        type:
          - number