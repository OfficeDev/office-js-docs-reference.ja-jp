### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Binding:interface'
    summary: |-
      <span data-ttu-id="0a601-101">文書のセクションへのバインドを表します。</span><span class="sxs-lookup"><span data-stu-id="0a601-101">Represents a binding to a section of the document.</span></span>

      <span data-ttu-id="0a601-102">Binding オブジェクトは、種類に関係なくすべてのバインドが持つ機能を公開します。</span><span class="sxs-lookup"><span data-stu-id="0a601-102">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>

      <span data-ttu-id="0a601-103">Binding オブジェクトは直接呼び出されることはありません。</span><span class="sxs-lookup"><span data-stu-id="0a601-103">The Binding object is never called directly.</span></span> <span data-ttu-id="0a601-104">各種類のバインドを表すオブジェクトの抽象親クラスです: [MatrixBinding](xref:office!Office.MatrixBinding:interface)</span><span class="sxs-lookup"><span data-stu-id="0a601-104">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office!Office.MatrixBinding:interface)</span></span><!-- --><span data-ttu-id="0a601-105">、 [Office TableBinding](xref:office!Office.TableBinding:interface)</span><span class="sxs-lookup"><span data-stu-id="0a601-105">, [Office.TableBinding](xref:office!Office.TableBinding:interface)</span></span><!-- --><span data-ttu-id="0a601-106">、または[Office TextBinding](xref:office!Office.TextBinding:interface)</span><span class="sxs-lookup"><span data-stu-id="0a601-106">, or [Office.TextBinding](xref:office!Office.TextBinding:interface)</span></span><!-- --><span data-ttu-id="0a601-107">.</span><span class="sxs-lookup"><span data-stu-id="0a601-107"></span></span> <span data-ttu-id="0a601-108">これらの3つのオブジェクトはすべて、バインドオブジェクトから getDataAsync メソッドと setDataAsync メソッドを継承し、バインド内のデータを操作できるようにします。</span><span class="sxs-lookup"><span data-stu-id="0a601-108">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="0a601-109">また、id および type プロパティを継承して、これらのプロパティ値をクエリすることもできます。</span><span class="sxs-lookup"><span data-stu-id="0a601-109">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="0a601-110">さらに、MatrixBinding および TableBinding オブジェクトは、行数と列数をカウントする機能など、マトリックスおよびテーブル固有の機能も公開します。</span><span class="sxs-lookup"><span data-stu-id="0a601-110">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>
    remarks: |-
      <span data-ttu-id="0a601-111">**ホスト**: Excel、Word</span><span class="sxs-lookup"><span data-stu-id="0a601-111">**Hosts**: Excel, Word</span></span>

      <span data-ttu-id="0a601-112">**要件セット**:</span><span class="sxs-lookup"><span data-stu-id="0a601-112">**Requirement sets**:</span></span>

      - [<span data-ttu-id="0a601-113">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-113">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [<span data-ttu-id="0a601-114">TableBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-114">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [<span data-ttu-id="0a601-115">TextBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-115">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)
    name: Office.Binding
    fullName: Office.Binding
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Binding#addHandlerAsync:member(1)'
      - 'office!Office.Binding#addHandlerAsync:member(2)'
      - 'office!Office.Binding#document:member'
      - 'office!Office.Binding#getDataAsync:member(1)'
      - 'office!Office.Binding#getDataAsync:member(2)'
      - 'office!Office.Binding#id:member'
      - 'office!Office.Binding#removeHandlerAsync:member(1)'
      - 'office!Office.Binding#removeHandlerAsync:member(2)'
      - 'office!Office.Binding#setDataAsync:member(1)'
      - 'office!Office.Binding#setDataAsync:member(2)'
      - 'office!Office.Binding#type:member'
  - uid: 'office!Office.Binding#addHandlerAsync:member(1)'
    summary: '<span data-ttu-id="0a601-116">指定した事務所のオブジェクトにイベントハンドラーを追加し[ます。](xref:office!Office.EventType:enum)</span><span class="sxs-lookup"><span data-stu-id="0a601-116">Adds an event handler to the object for the specified [Office.EventType](xref:office!Office.EventType:enum)</span></span><!-- --><span data-ttu-id="0a601-117">.</span><span class="sxs-lookup"><span data-stu-id="0a601-117"></span></span> <span data-ttu-id="0a601-118">サポートされて`Office.EventType.BindingDataChanged`いる eventtypes および`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="0a601-118">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="0a601-119">.</span><span class="sxs-lookup"><span data-stu-id="0a601-119"></span></span>'
    remarks: |-
      <span data-ttu-id="0a601-120">**要件セット**: [bindingevents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="0a601-120">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="0a601-121">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="0a601-121">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="0a601-122">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="0a601-122">The event type.</span></span> <span data-ttu-id="0a601-123">バインドでは、または`Office.EventType.BindingDataChanged`の場合があります。`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="0a601-123">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="0a601-124">.</span><span class="sxs-lookup"><span data-stu-id="0a601-124"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="0a601-125">追加するイベントハンドラー関数。これには、 [BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface)または BindingSelectionChangedEventArgs のいずれかのパラメーターのみが含まれ[ます。](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="0a601-125">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface) or [Office.BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span></span><!-- --><span data-ttu-id="0a601-126">.</span><span class="sxs-lookup"><span data-stu-id="0a601-126"></span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="0a601-127">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0a601-127">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="0a601-128">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-128">Optional.</span></span> <span data-ttu-id="0a601-129">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-129">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-130">.</span><span class="sxs-lookup"><span data-stu-id="0a601-130"></span></span>'
          type:
            - 'office!Office.Binding#addHandlerAsync~0:complex'
  - uid: 'office!Office.Binding#addHandlerAsync:member(2)'
    summary: '<span data-ttu-id="0a601-131">指定した事務所のオブジェクトにイベントハンドラーを追加し[ます。](xref:office!Office.EventType:enum)</span><span class="sxs-lookup"><span data-stu-id="0a601-131">Adds an event handler to the object for the specified [Office.EventType](xref:office!Office.EventType:enum)</span></span><!-- --><span data-ttu-id="0a601-132">.</span><span class="sxs-lookup"><span data-stu-id="0a601-132"></span></span> <span data-ttu-id="0a601-133">サポートされて`Office.EventType.BindingDataChanged`いる eventtypes および`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="0a601-133">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="0a601-134">.</span><span class="sxs-lookup"><span data-stu-id="0a601-134"></span></span>'
    remarks: |-
      <span data-ttu-id="0a601-135">**要件セット**: [bindingevents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="0a601-135">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="0a601-136">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="0a601-136">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="0a601-137">例</span><span class="sxs-lookup"><span data-stu-id="0a601-137">Examples</span></span>

      ```javascript
      // The following code sample calls the select method of the Office object to access the binding
      // with ID "MyBinding", and then calls the addHandlerAsync method to add a handler function 
      // for the bindingDataChanged event of that binding.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingDataChanged, onBindingDataChanged);
      }

      function onBindingDataChanged(eventArgs) {
          write("Data has changed in binding: " + eventArgs.binding.id);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
      ```javascript
      // To add an event handler for the BindingSelectionChanged event of a binding, 
      // use the addHandlerAsync method of the Binding object.
      // The event handler receives an argument of type BindingSelectionChangedEventArgs.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);
      }

      function onBindingSelectionChanged(eventArgs) {
          write(eventArgs.binding.id + " has been selected.");
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="0a601-138">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="0a601-138">The event type.</span></span> <span data-ttu-id="0a601-139">バインドでは、または`Office.EventType.BindingDataChanged`の場合があります。`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="0a601-139">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="0a601-140">.</span><span class="sxs-lookup"><span data-stu-id="0a601-140"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="0a601-141">追加するイベントハンドラー関数。これには、 [BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface)または BindingSelectionChangedEventArgs のいずれかのパラメーターのみが含まれ[ます。](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="0a601-141">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface) or [Office.BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span></span><!-- --><span data-ttu-id="0a601-142">.</span><span class="sxs-lookup"><span data-stu-id="0a601-142"></span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="0a601-143">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-143">Optional.</span></span> <span data-ttu-id="0a601-144">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-144">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-145">.</span><span class="sxs-lookup"><span data-stu-id="0a601-145"></span></span>'
          type:
            - 'office!Office.Binding#addHandlerAsync~1:complex'
  - uid: 'office!Office.Binding#document:member'
    summary: <span data-ttu-id="0a601-146">バインドに関連付けられた Document オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="0a601-146">Get the Document object associated with the binding.</span></span>
    name: document
    fullName: document
    langs:
      - typeScript
    type: property
    syntax:
      content: 'document: Office.Document;'
      return:
        type:
          - 'office!Office.Document:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a601-147">例</span><span class="sxs-lookup"><span data-stu-id="0a601-147">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.document.url);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.Binding#getDataAsync:member(1)'
    summary: <span data-ttu-id="0a601-148">バインド内に含まれるデータを返します。</span><span class="sxs-lookup"><span data-stu-id="0a601-148">Returns the data contained within the binding.</span></span>
    remarks: |-
      <span data-ttu-id="0a601-149">**要件セット**:</span><span class="sxs-lookup"><span data-stu-id="0a601-149">**Requirement sets**:</span></span>

      - <span data-ttu-id="0a601-150">[Htmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)(を使用する場合`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="0a601-150">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="0a601-151">)</span><span class="sxs-lookup"><span data-stu-id="0a601-151"></span></span>

      - [<span data-ttu-id="0a601-152">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-152">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="0a601-153">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)(を使用する場合`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="0a601-153">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="0a601-154">)</span><span class="sxs-lookup"><span data-stu-id="0a601-154"></span></span>

      - <span data-ttu-id="0a601-155">[Ooxmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)(を使用する場合`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="0a601-155">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="0a601-156">)</span><span class="sxs-lookup"><span data-stu-id="0a601-156"></span></span>

      - [<span data-ttu-id="0a601-157">TableBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-157">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="0a601-158">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)(を使用する場合`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="0a601-158">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="0a601-159">)</span><span class="sxs-lookup"><span data-stu-id="0a601-159"></span></span>

      - [<span data-ttu-id="0a601-160">TextBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-160">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="0a601-161">[Textcoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)(を使用する場合`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="0a601-161">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="0a601-162">)</span><span class="sxs-lookup"><span data-stu-id="0a601-162"></span></span>

      <span data-ttu-id="0a601-163">MatrixBinding または TableBinding から呼び出された場合、getDataAsync メソッドは、省略可能な startRow、startColumn、rowCount、および columnCount パラメーターが指定されている場合に、バインドされた値のサブセットを返します (連続した有効な範囲を指定する場合)。</span><span class="sxs-lookup"><span data-stu-id="0a601-163">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
    name: 'getDataAsync(options, callback)'
    fullName: 'getDataAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="0a601-164">バインドでデータを取得する方法のオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0a601-164">Provides options for how to get the data in a binding.</span></span>
          type:
            - 'office!Office.GetBindingDataOptions:interface'
        - id: callback
          description: '<span data-ttu-id="0a601-165">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-165">Optional.</span></span> <span data-ttu-id="0a601-166">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-166">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-167">.</span><span class="sxs-lookup"><span data-stu-id="0a601-167"></span></span> <span data-ttu-id="0a601-168">Result `value`のプロパティは、指定されたバインド内の値です。</span><span class="sxs-lookup"><span data-stu-id="0a601-168">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="0a601-169">`coercionType`パラメーターが指定されている場合 (呼び出しが成功した場合)、データは CoercionType 列挙のトピックで説明する形式で返されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-169">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - 'office!Office.Binding#getDataAsync~0:complex'
      typeParameters:
        - id: T
  - uid: 'office!Office.Binding#getDataAsync:member(2)'
    summary: <span data-ttu-id="0a601-170">バインド内に含まれるデータを返します。</span><span class="sxs-lookup"><span data-stu-id="0a601-170">Returns the data contained within the binding.</span></span>
    remarks: |-
      <span data-ttu-id="0a601-171">**要件セット**:</span><span class="sxs-lookup"><span data-stu-id="0a601-171">**Requirement sets**:</span></span>

      - <span data-ttu-id="0a601-172">[Htmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)(を使用する場合`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="0a601-172">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="0a601-173">)</span><span class="sxs-lookup"><span data-stu-id="0a601-173"></span></span>

      - [<span data-ttu-id="0a601-174">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-174">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="0a601-175">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)(を使用する場合`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="0a601-175">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="0a601-176">)</span><span class="sxs-lookup"><span data-stu-id="0a601-176"></span></span>

      - <span data-ttu-id="0a601-177">[Ooxmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)(を使用する場合`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="0a601-177">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="0a601-178">)</span><span class="sxs-lookup"><span data-stu-id="0a601-178"></span></span>

      - [<span data-ttu-id="0a601-179">TableBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-179">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="0a601-180">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)(を使用する場合`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="0a601-180">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="0a601-181">)</span><span class="sxs-lookup"><span data-stu-id="0a601-181"></span></span>

      - [<span data-ttu-id="0a601-182">TextBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-182">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="0a601-183">[Textcoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)(を使用する場合`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="0a601-183">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="0a601-184">)</span><span class="sxs-lookup"><span data-stu-id="0a601-184"></span></span>

      <span data-ttu-id="0a601-185">MatrixBinding または TableBinding から呼び出された場合、getDataAsync メソッドは、省略可能な startRow、startColumn、rowCount、および columnCount パラメーターが指定されている場合に、バインドされた値のサブセットを返します (連続した有効な範囲を指定する場合)。</span><span class="sxs-lookup"><span data-stu-id="0a601-185">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>

      #### <a name="examples"></a><span data-ttu-id="0a601-186">例</span><span class="sxs-lookup"><span data-stu-id="0a601-186">Examples</span></span>

      ```javascript
      function showBindingData() {
          Office.select("bindings#MyBinding").getDataAsync(function (asyncResult) {
              write(asyncResult.value)
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // There is an important difference in behavior between using the "table" and "matrix" coercionType with the
      // Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following
      // two examples. These code examples show event handler functions for the Binding.SelectionChanged event.

      // If you specify the "table" coercionType, the TableData.rows property ( result.value.rows in the following
      // code example) returns an array that contains only the body rows of the table. So, its 0th row will be the
      // first non-header row in the table.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'table', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value.rows[0][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }

      // However, if you specify the "matrix" coercionType, result.value in the following code example returns an array
      // that contains the table header in the 0th row. If the table header contains multiple rows, then these are all
      // included in the result.value matrix as separate rows before the table body rows are included.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'matrix', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value[1][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getDataAsync(callback)
    fullName: getDataAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="0a601-187">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-187">Optional.</span></span> <span data-ttu-id="0a601-188">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-188">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-189">.</span><span class="sxs-lookup"><span data-stu-id="0a601-189"></span></span> <span data-ttu-id="0a601-190">Result `value`のプロパティは、指定されたバインド内の値です。</span><span class="sxs-lookup"><span data-stu-id="0a601-190">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="0a601-191">`coercionType`パラメーターが指定されている場合 (呼び出しが成功した場合)、データは CoercionType 列挙のトピックで説明する形式で返されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-191">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - 'office!Office.Binding#getDataAsync~1:complex'
      typeParameters:
        - id: T
  - uid: 'office!Office.Binding#id:member'
    summary: '<span data-ttu-id="0a601-192">同じ[Office. Document](xref:office!Office.Document:interface)オブジェクト内にあるバインドの中から、このバインドを一意に識別する文字列。</span><span class="sxs-lookup"><span data-stu-id="0a601-192">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office!Office.Document:interface) object.</span></span>'
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a601-193">例</span><span class="sxs-lookup"><span data-stu-id="0a601-193">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.id);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.Binding#removeHandlerAsync:member(1)'
    summary: <span data-ttu-id="0a601-194">指定されたイベントの種類のバインドから、指定されたハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="0a601-194">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: '<span data-ttu-id="0a601-195">**要件セット**: [bindingevents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="0a601-195">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>'
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="0a601-196">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="0a601-196">The event type.</span></span> <span data-ttu-id="0a601-197">バインドでは、または`Office.EventType.BindingDataChanged`の場合があります。`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="0a601-197">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="0a601-198">.</span><span class="sxs-lookup"><span data-stu-id="0a601-198"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: options
          description: <span data-ttu-id="0a601-199">削除するイベントハンドラーを決めるためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0a601-199">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - 'office!Office.RemoveHandlerOptions:interface'
        - id: callback
          description: '<span data-ttu-id="0a601-200">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-200">Optional.</span></span> <span data-ttu-id="0a601-201">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-201">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-202">.</span><span class="sxs-lookup"><span data-stu-id="0a601-202"></span></span>'
          type:
            - 'office!Office.Binding#removeHandlerAsync~0:complex'
  - uid: 'office!Office.Binding#removeHandlerAsync:member(2)'
    summary: <span data-ttu-id="0a601-203">指定されたイベントの種類のバインドから、指定されたハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="0a601-203">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="0a601-204">**要件セット**: [bindingevents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="0a601-204">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      #### <a name="examples"></a><span data-ttu-id="0a601-205">例</span><span class="sxs-lookup"><span data-stu-id="0a601-205">Examples</span></span>

      ```javascript
      function removeEventHandlerFromBinding() {
          Office.select("bindings#MyBinding").removeHandlerAsync(
              Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
      }
      ```
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="0a601-206">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="0a601-206">The event type.</span></span> <span data-ttu-id="0a601-207">バインドでは、または`Office.EventType.BindingDataChanged`の場合があります。`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="0a601-207">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="0a601-208">.</span><span class="sxs-lookup"><span data-stu-id="0a601-208"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: callback
          description: '<span data-ttu-id="0a601-209">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-209">Optional.</span></span> <span data-ttu-id="0a601-210">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-210">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-211">.</span><span class="sxs-lookup"><span data-stu-id="0a601-211"></span></span>'
          type:
            - 'office!Office.Binding#removeHandlerAsync~1:complex'
  - uid: 'office!Office.Binding#setDataAsync:member(1)'
    summary: <span data-ttu-id="0a601-212">指定されたバインド オブジェクトで表されるドキュメントのバインド セクションにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0a601-212">Writes data to the bound section of the document represented by the specified binding object.</span></span>
    remarks: |-
      <span data-ttu-id="0a601-213">**要件セット**:</span><span class="sxs-lookup"><span data-stu-id="0a601-213">**Requirement sets**:</span></span>

      - <span data-ttu-id="0a601-214">[Htmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)(を使用する場合`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="0a601-214">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="0a601-215">)</span><span class="sxs-lookup"><span data-stu-id="0a601-215"></span></span>

      - [<span data-ttu-id="0a601-216">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-216">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="0a601-217">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)(を使用する場合`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="0a601-217">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="0a601-218">)</span><span class="sxs-lookup"><span data-stu-id="0a601-218"></span></span>

      - <span data-ttu-id="0a601-219">[Ooxmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)(を使用する場合`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="0a601-219">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="0a601-220">)</span><span class="sxs-lookup"><span data-stu-id="0a601-220"></span></span>

      - [<span data-ttu-id="0a601-221">TableBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-221">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="0a601-222">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)(を使用する場合`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="0a601-222">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="0a601-223">)</span><span class="sxs-lookup"><span data-stu-id="0a601-223"></span></span>

      - [<span data-ttu-id="0a601-224">TextBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-224">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="0a601-225">[Textcoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)(を使用する場合`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="0a601-225">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="0a601-226">)</span><span class="sxs-lookup"><span data-stu-id="0a601-226"></span></span>

      <span data-ttu-id="0a601-227">データに渡される値には、バインドに書き込まれるデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="0a601-227">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="0a601-228">次の表に示されるように、渡された値の種類により、書き込まれる内容が決まります。</span><span class="sxs-lookup"><span data-stu-id="0a601-228">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-229">`data`金額</span><span class="sxs-lookup"><span data-stu-id="0a601-229">`data` value</span></span></th> <th><span data-ttu-id="0a601-230">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="0a601-230">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-231">文字列</span><span class="sxs-lookup"><span data-stu-id="0a601-231">A string</span></span></td> <td><span data-ttu-id="0a601-232">文字列に強制的に変換できるプレーンテキストまたは任意のものが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-232">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-233">配列の配列 ("matrix")</span><span class="sxs-lookup"><span data-stu-id="0a601-233">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="0a601-234">.</span><span class="sxs-lookup"><span data-stu-id="0a601-234"></span></span> <span data-ttu-id="0a601-235">3つの行からなる1つの列を記述するには、次のような配列を渡します。`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="0a601-235">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="0a601-236">.</span><span class="sxs-lookup"><span data-stu-id="0a601-236"></span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-237">`TableData`オブジェクト</span><span class="sxs-lookup"><span data-stu-id="0a601-237">A `TableData` object</span></span></td> <td><span data-ttu-id="0a601-238">ヘッダー付きのテーブルが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-238">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="0a601-239">また、バインドにデータを書き込むときに、次のアプリケーション固有の処理が適用されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-239">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="0a601-240">Word の場合、指定されたデータは、次のようにバインドに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-240">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-241">`data`金額</span><span class="sxs-lookup"><span data-stu-id="0a601-241">`data` value</span></span></th> <th><span data-ttu-id="0a601-242">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="0a601-242">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-243">文字列</span><span class="sxs-lookup"><span data-stu-id="0a601-243">A string</span></span></td> <td><span data-ttu-id="0a601-244">指定されたテキストが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-244">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-245">配列の配列 ("matrix") または`TableData`オブジェクト</span><span class="sxs-lookup"><span data-stu-id="0a601-245">An array of arrays ("matrix") or a `TableData` object</span></span></td> <td><span data-ttu-id="0a601-246">HTML</span><span class="sxs-lookup"><span data-stu-id="0a601-246">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-247">HTML</span><span class="sxs-lookup"><span data-stu-id="0a601-247">HTML</span></span></td> <td><span data-ttu-id="0a601-248">指定された HTML が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-248">The specified HTML is written.</span></span> <span data-ttu-id="0a601-249">書き込む HTML に無効な HTML が含まれている場合も、エラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="0a601-249">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="0a601-250">HTML はできる限り書き込まれ、無効なデータは省略されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-250">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-251">Office Open XML ("Open XML")</span><span class="sxs-lookup"><span data-stu-id="0a601-251">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="0a601-252">指定された XML が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-252">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="0a601-253">Excel では、指定された data は、次の規則に従ってバインドに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-253">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-254">`data`金額</span><span class="sxs-lookup"><span data-stu-id="0a601-254">`data` value</span></span></th> <th><span data-ttu-id="0a601-255">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="0a601-255">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-256">文字列</span><span class="sxs-lookup"><span data-stu-id="0a601-256">A string</span></span></td> <td><span data-ttu-id="0a601-257">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span><span class="sxs-lookup"><span data-stu-id="0a601-257">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="0a601-258">たとえば、データをに設定`"=SUM(A1:A5)"`すると、指定した範囲内の値が集計されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-258">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="0a601-259">ただし、バインドされたセルで数式を設定する場合、その後、バインドされたセルからは追加された数式 (または既存の数式) を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="0a601-259">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="0a601-260">バインドされたセルで Binding.getDataAsync メソッドを呼び出してそのデータを読み取ると、このメソッドは、(数式の結果である) セルに表示されたデータのみを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="0a601-260">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-261">配列の配列 (「matrix」)、形状が指定されたバインドの形状と完全に一致する場合</span><span class="sxs-lookup"><span data-stu-id="0a601-261">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="0a601-262">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span><span class="sxs-lookup"><span data-stu-id="0a601-262">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="0a601-263">たとえば、データをに設定`[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]`すると、2つのセルを含むバインドにこれら2つの数式が追加されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-263">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="0a601-264">1つの連結セルに数式を設定する場合と同様に、追加された数式 (または、既存の数式) を`Binding.getDataAsync`メソッドを使用してバインドから読み取ることはできません。バインドされたセルに表示されるデータのみを返します。</span><span class="sxs-lookup"><span data-stu-id="0a601-264">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-265">`TableData`オブジェクト。テーブルの形状は、バインドされたテーブルと一致します。</span><span class="sxs-lookup"><span data-stu-id="0a601-265">A `TableData` object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="0a601-266">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span><span class="sxs-lookup"><span data-stu-id="0a601-266">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="0a601-267">**注**: *data*パラメーターに渡す TableData オブジェクトに数式を指定した場合、Excel の "集計列" 機能によって、列内の数式が自動的に重複するため、期待した結果が得られないことがあります。</span><span class="sxs-lookup"><span data-stu-id="0a601-267">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="0a601-268">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span><span class="sxs-lookup"><span data-stu-id="0a601-268">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="0a601-269">Web 上の Excel の場合:</span><span class="sxs-lookup"><span data-stu-id="0a601-269">For Excel on the web:</span></span>

      - <span data-ttu-id="0a601-270">このメソッドに対する単一の呼び出しで、data パラメーターに渡される値に含まれるセルの合計数が2万を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0a601-270">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="0a601-271">CellFormat パラメーターに渡される書式設定グループの数が100を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0a601-271">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="0a601-272">1 つの書式設定グループは、指定のセル範囲に適用される書式設定のセットから構成されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-272">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="0a601-273">上記以外の場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-273">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="0a601-274">SetDataAsync メソッドは、オプションの startRow パラメーターと startColumn パラメーターが指定されている場合は、テーブルまたはマトリックスバインドのサブセットにデータを書き込み、有効な範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0a601-274">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="0a601-275">setDataAsync メソッドに渡されたコールバック関数で、AsyncResult オブジェクトのプロパティを使用して次の情報を戻せます。</span><span class="sxs-lookup"><span data-stu-id="0a601-275">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-276">プロパティ</span><span class="sxs-lookup"><span data-stu-id="0a601-276">Property</span></span></th> <th><span data-ttu-id="0a601-277">使用目的</span><span class="sxs-lookup"><span data-stu-id="0a601-277">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-278">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="0a601-278">AsyncResult.value</span></span></td> <td><span data-ttu-id="0a601-279">取得するオブジェクトまたはデータがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="0a601-279">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-280">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="0a601-280">AsyncResult.status</span></span></td> <td><span data-ttu-id="0a601-281">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="0a601-281">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-282">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="0a601-282">AsyncResult.error</span></span></td> <td><span data-ttu-id="0a601-283">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="0a601-283">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-284">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="0a601-284">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="0a601-285">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="0a601-285">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'setDataAsync(data, options, callback)'
    fullName: 'setDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="0a601-286">現在の選択範囲に設定するデータ。</span><span class="sxs-lookup"><span data-stu-id="0a601-286">The data to be set in the current selection.</span></span> <span data-ttu-id="0a601-287">ホスト別の使用可能なデータ型:</span><span class="sxs-lookup"><span data-stu-id="0a601-287">Possible data types by host:</span></span>

            <span data-ttu-id="0a601-288">文字列: Excel on the web、Windows、および Word on the web および Windows のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-288">string: Excel on the web and Windows, and Word on the web and Windows only</span></span>

            <span data-ttu-id="0a601-289">配列の配列: Excel と Word のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-289">array of arrays: Excel and Word only</span></span>

            [<span data-ttu-id="0a601-290">TableData</span><span class="sxs-lookup"><span data-stu-id="0a601-290">Office.TableData</span></span>](xref:office!Office.TableData:class)<!-- --><span data-ttu-id="0a601-291">: Excel および Word のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-291">: Excel and Word only</span></span>

            <span data-ttu-id="0a601-292">HTML: Word on the web および Windows のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-292">HTML: Word on the web and Windows only</span></span>

            <span data-ttu-id="0a601-293">Office Open XML: Word のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-293">Office Open XML: Word only</span></span>
          type:
            - 'office!Office.Binding#setDataAsync~0:complex'
        - id: options
          description: <span data-ttu-id="0a601-294">バインドのデータを設定する方法についてのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0a601-294">Provides options for how to set the data in a binding.</span></span>
          type:
            - 'office!Office.SetBindingDataOptions:interface'
        - id: callback
          description: '<span data-ttu-id="0a601-295">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-295">Optional.</span></span> <span data-ttu-id="0a601-296">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-296">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-297">.</span><span class="sxs-lookup"><span data-stu-id="0a601-297"></span></span>'
          type:
            - 'office!Office.Binding#setDataAsync~1:complex'
  - uid: 'office!Office.Binding#setDataAsync:member(2)'
    summary: <span data-ttu-id="0a601-298">指定されたバインド オブジェクトで表されるドキュメントのバインド セクションにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0a601-298">Writes data to the bound section of the document represented by the specified binding object.</span></span>
    remarks: |-
      <span data-ttu-id="0a601-299">**要件セット**:</span><span class="sxs-lookup"><span data-stu-id="0a601-299">**Requirement sets**:</span></span>

      - <span data-ttu-id="0a601-300">[Htmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)(を使用する場合`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="0a601-300">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="0a601-301">)</span><span class="sxs-lookup"><span data-stu-id="0a601-301"></span></span>

      - [<span data-ttu-id="0a601-302">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-302">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="0a601-303">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)(を使用する場合`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="0a601-303">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="0a601-304">)</span><span class="sxs-lookup"><span data-stu-id="0a601-304"></span></span>

      - <span data-ttu-id="0a601-305">[Ooxmlcoercion 型変換](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)(を使用する場合`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="0a601-305">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="0a601-306">)</span><span class="sxs-lookup"><span data-stu-id="0a601-306"></span></span>

      - [<span data-ttu-id="0a601-307">TableBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-307">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="0a601-308">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)(を使用する場合`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="0a601-308">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="0a601-309">)</span><span class="sxs-lookup"><span data-stu-id="0a601-309"></span></span>

      - [<span data-ttu-id="0a601-310">TextBindings</span><span class="sxs-lookup"><span data-stu-id="0a601-310">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="0a601-311">[Textcoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)(を使用する場合`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="0a601-311">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="0a601-312">)</span><span class="sxs-lookup"><span data-stu-id="0a601-312"></span></span>

      <span data-ttu-id="0a601-313">データに渡される値には、バインドに書き込まれるデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="0a601-313">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="0a601-314">次の表に示されるように、渡された値の種類により、書き込まれる内容が決まります。</span><span class="sxs-lookup"><span data-stu-id="0a601-314">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-315">`data`金額</span><span class="sxs-lookup"><span data-stu-id="0a601-315">`data` value</span></span></th> <th><span data-ttu-id="0a601-316">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="0a601-316">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-317">文字列</span><span class="sxs-lookup"><span data-stu-id="0a601-317">A string</span></span></td> <td><span data-ttu-id="0a601-318">文字列に強制的に変換できるプレーンテキストまたは任意のものが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-318">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-319">配列の配列 ("matrix")</span><span class="sxs-lookup"><span data-stu-id="0a601-319">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="0a601-320">.</span><span class="sxs-lookup"><span data-stu-id="0a601-320"></span></span> <span data-ttu-id="0a601-321">3つの行からなる1つの列を記述するには、次のような配列を渡します。`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="0a601-321">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="0a601-322">.</span><span class="sxs-lookup"><span data-stu-id="0a601-322"></span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-323">`TableData`オブジェクト</span><span class="sxs-lookup"><span data-stu-id="0a601-323">A `TableData` object</span></span></td> <td><span data-ttu-id="0a601-324">ヘッダー付きのテーブルが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-324">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="0a601-325">また、バインドにデータを書き込むときに、次のアプリケーション固有の処理が適用されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-325">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="0a601-326">Word の場合、指定されたデータは、次のようにバインドに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-326">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-327">`data`金額</span><span class="sxs-lookup"><span data-stu-id="0a601-327">`data` value</span></span></th> <th><span data-ttu-id="0a601-328">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="0a601-328">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-329">文字列</span><span class="sxs-lookup"><span data-stu-id="0a601-329">A string</span></span></td> <td><span data-ttu-id="0a601-330">指定されたテキストが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-330">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-331">配列の配列 ("matrix") または`TableData`オブジェクト</span><span class="sxs-lookup"><span data-stu-id="0a601-331">An array of arrays ("matrix") or a `TableData` object</span></span></td> <td><span data-ttu-id="0a601-332">HTML</span><span class="sxs-lookup"><span data-stu-id="0a601-332">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-333">HTML</span><span class="sxs-lookup"><span data-stu-id="0a601-333">HTML</span></span></td> <td><span data-ttu-id="0a601-334">指定された HTML が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-334">The specified HTML is written.</span></span> <span data-ttu-id="0a601-335">書き込む HTML に無効な HTML が含まれている場合も、エラーは発生しません。</span><span class="sxs-lookup"><span data-stu-id="0a601-335">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="0a601-336">HTML はできる限り書き込まれ、無効なデータは省略されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-336">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-337">Office Open XML ("Open XML")</span><span class="sxs-lookup"><span data-stu-id="0a601-337">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="0a601-338">指定された XML が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-338">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="0a601-339">Excel では、指定された data は、次の規則に従ってバインドに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="0a601-339">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-340">`data`金額</span><span class="sxs-lookup"><span data-stu-id="0a601-340">`data` value</span></span></th> <th><span data-ttu-id="0a601-341">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="0a601-341">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-342">文字列</span><span class="sxs-lookup"><span data-stu-id="0a601-342">A string</span></span></td> <td><span data-ttu-id="0a601-343">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span><span class="sxs-lookup"><span data-stu-id="0a601-343">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="0a601-344">たとえば、データをに設定`"=SUM(A1:A5)"`すると、指定した範囲内の値が集計されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-344">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="0a601-345">ただし、バインドされたセルで数式を設定する場合、その後、バインドされたセルからは追加された数式 (または既存の数式) を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="0a601-345">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="0a601-346">バインドされたセルで Binding.getDataAsync メソッドを呼び出してそのデータを読み取ると、このメソッドは、(数式の結果である) セルに表示されたデータのみを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="0a601-346">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-347">配列の配列 (「matrix」)、形状が指定されたバインドの形状と完全に一致する場合</span><span class="sxs-lookup"><span data-stu-id="0a601-347">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="0a601-348">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span><span class="sxs-lookup"><span data-stu-id="0a601-348">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="0a601-349">たとえば、データをに設定`[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]`すると、2つのセルを含むバインドにこれら2つの数式が追加されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-349">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="0a601-350">1つの連結セルに数式を設定する場合と同様に、追加された数式 (または、既存の数式) を`Binding.getDataAsync`メソッドを使用してバインドから読み取ることはできません。バインドされたセルに表示されるデータのみを返します。</span><span class="sxs-lookup"><span data-stu-id="0a601-350">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-351">`TableData`オブジェクト。テーブルの形状は、バインドされたテーブルと一致します。</span><span class="sxs-lookup"><span data-stu-id="0a601-351">A `TableData` object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="0a601-352">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span><span class="sxs-lookup"><span data-stu-id="0a601-352">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="0a601-353">**注**: *data*パラメーターに渡す TableData オブジェクトに数式を指定した場合、Excel の "集計列" 機能によって、列内の数式が自動的に重複するため、期待した結果が得られないことがあります。</span><span class="sxs-lookup"><span data-stu-id="0a601-353">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="0a601-354">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span><span class="sxs-lookup"><span data-stu-id="0a601-354">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="0a601-355">Web 上の Excel の場合:</span><span class="sxs-lookup"><span data-stu-id="0a601-355">For Excel on the web:</span></span>

      - <span data-ttu-id="0a601-356">このメソッドに対する単一の呼び出しで、data パラメーターに渡される値に含まれるセルの合計数が2万を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0a601-356">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="0a601-357">CellFormat パラメーターに渡される書式設定グループの数が100を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="0a601-357">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="0a601-358">1 つの書式設定グループは、指定のセル範囲に適用される書式設定のセットから構成されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-358">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="0a601-359">上記以外の場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="0a601-359">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="0a601-360">SetDataAsync メソッドは、オプションの startRow パラメーターと startColumn パラメーターが指定されている場合は、テーブルまたはマトリックスバインドのサブセットにデータを書き込み、有効な範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="0a601-360">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="0a601-361">setDataAsync メソッドに渡されたコールバック関数で、AsyncResult オブジェクトのプロパティを使用して次の情報を戻せます。</span><span class="sxs-lookup"><span data-stu-id="0a601-361">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="0a601-362">プロパティ</span><span class="sxs-lookup"><span data-stu-id="0a601-362">Property</span></span></th> <th><span data-ttu-id="0a601-363">使用目的</span><span class="sxs-lookup"><span data-stu-id="0a601-363">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="0a601-364">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="0a601-364">AsyncResult.value</span></span></td> <td><span data-ttu-id="0a601-365">取得するオブジェクトまたはデータがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="0a601-365">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-366">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="0a601-366">AsyncResult.status</span></span></td> <td><span data-ttu-id="0a601-367">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="0a601-367">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-368">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="0a601-368">AsyncResult.error</span></span></td> <td><span data-ttu-id="0a601-369">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="0a601-369">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="0a601-370">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="0a601-370">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="0a601-371">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="0a601-371">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="0a601-372">例</span><span class="sxs-lookup"><span data-stu-id="0a601-372">Examples</span></span>

      ```javascript
      function setBindingData() {
          Office.select("bindings#MyBinding").setDataAsync('Hello World!', function (asyncResult) { });
      }

      // Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.
      // For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter 
      // as "html" as shown in the following example, which uses HTML <b> tags to make "Hello" bold.
      function writeHtmlData() {
          Office.select("bindings#myBinding").setDataAsync(
              "<b>Hello</b> World!", {coercionType: "html"}, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              }
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In this example, the call to setDataAsync passes the data parameter as an array of arrays
      // (to create a single column of three rows), and specifies the data structure with the 
      // coercionType parameter as a "matrix".
      function writeBoundDataMatrix() {
          Office.select("bindings#myBinding").setDataAsync(
              [['Berlin'],['Munich'],['Duisburg']],{ coercionType: "matrix" }, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter 
      // as a TableData object (to write three columns and three rows), and specifies the data structure
      // with the coercionType parameter as a "table".

      // In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,
      // but as a single column with a new header and three rows, to update the values in the last column 
      // of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter 
      // is specified as 2 to replace the values in the third column of the table.
      function writeBoundDataTable() {
          // Create a TableData object.
          var myTable = new Office.TableData();
          myTable.headers = ['First Name', 'Last Name', 'Grade'];
          myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];

          // Set myTable in the binding.
          Office.select("bindings#myBinding").setDataAsync(myTable, { coercionType: "table" }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }

      // Replace last column with different data.
      function updateTableData() {
          var newTable = new Office.TableData();
          newTable.headers = ["Gender"];
          newTable.rows = [["M"],["M"],["F"]];
          Office.select("bindings#myBinding").setDataAsync(newTable, { coercionType: "table", startColumn:2 }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }     
          });   
      }

      // In this example, the following call passes two formatting groups to cellFormat.
      Office.select("bindings#myBinding").setDataAsync([['Berlin'],['Munich'],['Duisburg']],
        {cellFormat:[{cells: {row: 1}, format: {fontColor: "yellow"}}, 
            {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}]}, 
        function (asyncResult){});
      ```
    name: 'setDataAsync(data, callback)'
    fullName: 'setDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="0a601-373">現在の選択範囲に設定するデータ。</span><span class="sxs-lookup"><span data-stu-id="0a601-373">The data to be set in the current selection.</span></span> <span data-ttu-id="0a601-374">ホスト別の使用可能なデータ型:</span><span class="sxs-lookup"><span data-stu-id="0a601-374">Possible data types by host:</span></span>

            <span data-ttu-id="0a601-375">文字列: Excel on the web、Windows、および Word on the web および Windows のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-375">string: Excel on the web and Windows, and Word on the web and Windows only</span></span>

            <span data-ttu-id="0a601-376">配列の配列: Excel と Word のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-376">array of arrays: Excel and Word only</span></span>

            `TableData`<!-- --><span data-ttu-id="0a601-377">: Excel および Word のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-377">: Excel and Word only</span></span>

            <span data-ttu-id="0a601-378">HTML: Word on the web および Windows のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-378">HTML: Word on the web and Windows only</span></span>

            <span data-ttu-id="0a601-379">Office Open XML: Word のみ</span><span class="sxs-lookup"><span data-stu-id="0a601-379">Office Open XML: Word only</span></span>
          type:
            - 'office!Office.Binding#setDataAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="0a601-380">省略可能。</span><span class="sxs-lookup"><span data-stu-id="0a601-380">Optional.</span></span> <span data-ttu-id="0a601-381">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="0a601-381">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="0a601-382">.</span><span class="sxs-lookup"><span data-stu-id="0a601-382"></span></span>'
          type:
            - 'office!Office.Binding#setDataAsync~3:complex'
  - uid: 'office!Office.Binding#type:member'
    summary: <span data-ttu-id="0a601-383">バインドの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a601-383">Gets the type of the binding.</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: Office.BindingType;'
      return:
        type:
          - 'office!Office.BindingType:enum'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0a601-384">例</span><span class="sxs-lookup"><span data-stu-id="0a601-384">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("MyBinding", function (asyncResult) { 
              write(asyncResult.value.type); 
          }) 

          // Function that writes to a div with id='message' on the page. 
          function write(message){ 
              document.getElementById('message').innerText += message;  
          }
          ```
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.Binding#addHandlerAsync~0:complex'
    name: '(result: Office.AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#addHandlerAsync~1:complex'
    name: '(result: Office.AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Document:interface'
    name: Office.Document
  - uid: 'office!Office.GetBindingDataOptions:interface'
    name: GetBindingDataOptions
  - uid: 'office!Office.Binding#getDataAsync~0:complex'
    name: '(result: AsyncResult<T>) => void'
    fullName: '(result: Office.AsyncResult<T>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <T>) => void
        fullName: <T>) => void
  - uid: 'office!Office.Binding#getDataAsync~1:complex'
    name: '(result: AsyncResult<T>) => void'
    fullName: '(result: Office.AsyncResult<T>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <T>) => void
        fullName: <T>) => void
  - uid: 'office!Office.RemoveHandlerOptions:interface'
    name: RemoveHandlerOptions
  - uid: 'office!Office.Binding#removeHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#removeHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#setDataAsync~0:complex'
    name: TableData | any
    fullName: Office.TableData | any
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any'
        fullName: ' | any'
  - uid: 'office!Office.SetBindingDataOptions:interface'
    name: SetBindingDataOptions
  - uid: 'office!Office.Binding#setDataAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#setDataAsync~2:complex'
    name: TableData | any
    fullName: Office.TableData | any
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any'
        fullName: ' | any'
  - uid: 'office!Office.Binding#setDataAsync~3:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.BindingType:enum'
    name: Office.BindingType