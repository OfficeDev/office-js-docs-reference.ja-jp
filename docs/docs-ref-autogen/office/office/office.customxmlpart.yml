### YamlMime:UniversalReference
items:
  - uid: 'office!Office.CustomXmlPart:interface'
    summary: '<span data-ttu-id="84ad7-101">[CustomXmlParts](xref:office!Office.CustomXmlParts:interface)コレクション内の1つの CustomXMLPart を表します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office!Office.CustomXmlParts:interface) collection.</span></span>'
    remarks: '<span data-ttu-id="84ad7-102">**ホスト**: Word</span><span class="sxs-lookup"><span data-stu-id="84ad7-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
      - 'office!Office.CustomXmlPart#builtIn:member'
      - 'office!Office.CustomXmlPart#deleteAsync:member(1)'
      - 'office!Office.CustomXmlPart#deleteAsync:member(2)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
      - 'office!Office.CustomXmlPart#id:member'
      - 'office!Office.CustomXmlPart#namespaceManager:member'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
    summary: <span data-ttu-id="84ad7-103">指定したイベントの種類を使用して、オブジェクトにイベントハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="84ad7-104">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="84ad7-105">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="84ad7-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="84ad7-106">追加するイベントの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-106">Specifies the type of event to add.</span></span> <span data-ttu-id="84ad7-107">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="84ad7-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-108"></span></span><!-- --><span data-ttu-id="84ad7-109">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="84ad7-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="84ad7-110">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-110"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="84ad7-111">追加するイベントハンドラー関数。これは、唯一のパラメーターが NodeDeletedEventArgs 型であることを示し[ます。](xref:office!Office.NodeDeletedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="84ad7-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span></span><!-- --><span data-ttu-id="84ad7-112">、 [NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="84ad7-112">, [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span></span><!-- --><span data-ttu-id="84ad7-113">、または[NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="84ad7-113">, or [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="84ad7-114">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="84ad7-115">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-115">Optional.</span></span> <span data-ttu-id="84ad7-116">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-117">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-117"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#addHandlerAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
    summary: <span data-ttu-id="84ad7-118">指定したイベントの種類を使用して、オブジェクトにイベントハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="84ad7-119">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="84ad7-120">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="84ad7-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="84ad7-121">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="84ad7-122">追加するイベントの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-122">Specifies the type of event to add.</span></span> <span data-ttu-id="84ad7-123">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="84ad7-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-124"></span></span><!-- --><span data-ttu-id="84ad7-125">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="84ad7-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="84ad7-126">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-126"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="84ad7-127">追加するイベントハンドラー関数。これは、唯一のパラメーターが NodeDeletedEventArgs 型であることを示し[ます。](xref:office!Office.NodeDeletedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="84ad7-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span></span><!-- --><span data-ttu-id="84ad7-128">、 [NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="84ad7-128">, [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span></span><!-- --><span data-ttu-id="84ad7-129">、または[NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="84ad7-129">, or [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="84ad7-130">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-130">Optional.</span></span> <span data-ttu-id="84ad7-131">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-132">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-132"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#addHandlerAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#builtIn:member'
    summary: '<span data-ttu-id="84ad7-133">カスタム XML パーツが組み込まれている場合は True。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="84ad7-133">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84ad7-134">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-134">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(1)'
    summary: <span data-ttu-id="84ad7-135">カスタム XML パーツを削除します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-135">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="84ad7-136">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-136">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="84ad7-137">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-137">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="84ad7-138">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-138">Optional.</span></span> <span data-ttu-id="84ad7-139">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-139">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-140">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-140"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#deleteAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(2)'
    summary: <span data-ttu-id="84ad7-141">カスタム XML パーツを削除します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-141">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="84ad7-142">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-142">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="84ad7-143">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-143">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="84ad7-144">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-144">Optional.</span></span> <span data-ttu-id="84ad7-145">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-145">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-146">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-146"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#deleteAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
    summary: <span data-ttu-id="84ad7-147">指定された XPath に一致するこのカスタム XML パーツ内の CustomXmlNodes を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-147">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: '<span data-ttu-id="84ad7-148">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-148">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="84ad7-149">取得するノードを指定する XPath 式。</span><span class="sxs-lookup"><span data-stu-id="84ad7-149">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="84ad7-150">必須です。</span><span class="sxs-lookup"><span data-stu-id="84ad7-150">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="84ad7-151">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-151">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="84ad7-152">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-152">Optional.</span></span> <span data-ttu-id="84ad7-153">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-154">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-154"></span></span> <span data-ttu-id="84ad7-155">Result `value`のプロパティは、xpath パラメーターに渡される xpath 式によって指定されたノードを表す customxmlnode オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="84ad7-155">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getNodesAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
    summary: <span data-ttu-id="84ad7-156">指定された XPath に一致するこのカスタム XML パーツ内の CustomXmlNodes を非同期に取得します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-156">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: |-
      <span data-ttu-id="84ad7-157">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-157">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="84ad7-158">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-158">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="84ad7-159">取得するノードを指定する XPath 式。</span><span class="sxs-lookup"><span data-stu-id="84ad7-159">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="84ad7-160">必須です。</span><span class="sxs-lookup"><span data-stu-id="84ad7-160">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="84ad7-161">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-161">Optional.</span></span> <span data-ttu-id="84ad7-162">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-162">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-163">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-163"></span></span> <span data-ttu-id="84ad7-164">Result `value`のプロパティは、xpath パラメーターに渡される xpath 式によって指定されたノードを表す customxmlnode オブジェクトの配列です。</span><span class="sxs-lookup"><span data-stu-id="84ad7-164">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getNodesAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
    summary: <span data-ttu-id="84ad7-165">このカスタム XML パーツ内の XML を非同期的に取得します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-165">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="84ad7-166">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-166">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="84ad7-167">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="84ad7-168">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-168">Optional.</span></span> <span data-ttu-id="84ad7-169">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-169">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-170">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-170"></span></span> <span data-ttu-id="84ad7-171">Result `value`のプロパティは、参照されている CustomXmlPart オブジェクトの XML を含む文字列です。</span><span class="sxs-lookup"><span data-stu-id="84ad7-171">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getXmlAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
    summary: <span data-ttu-id="84ad7-172">このカスタム XML パーツ内の XML を非同期的に取得します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-172">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="84ad7-173">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-173">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="84ad7-174">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-174">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="84ad7-175">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-175">Optional.</span></span> <span data-ttu-id="84ad7-176">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-176">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-177">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-177"></span></span> <span data-ttu-id="84ad7-178">Result `value`のプロパティは、参照されている CustomXmlPart オブジェクトの XML を含む文字列です。</span><span class="sxs-lookup"><span data-stu-id="84ad7-178">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getXmlAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#id:member'
    summary: <span data-ttu-id="84ad7-179">CustomXMLPart の GUID を取得します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-179">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84ad7-180">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-180">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlPart#namespaceManager:member'
    summary: '<span data-ttu-id="84ad7-181">名前空間プレフィックスマッピングのセットを取得し[ます (CustomXmlPrefixMappings](xref:office!Office.CustomXmlPrefixMappings:interface)</span><span class="sxs-lookup"><span data-stu-id="84ad7-181">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office!Office.CustomXmlPrefixMappings:interface)</span></span><!-- --><span data-ttu-id="84ad7-182">) 現在の CustomXmlPart に対して使用されます。</span><span class="sxs-lookup"><span data-stu-id="84ad7-182">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - 'office!Office.CustomXmlPrefixMappings:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84ad7-183">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-183">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
    summary: <span data-ttu-id="84ad7-184">指定したイベントの種類のイベントハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-184">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="84ad7-185">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-185">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="84ad7-186">削除するイベントの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-186">Specifies the type of event to remove.</span></span> <span data-ttu-id="84ad7-187">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-187">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="84ad7-188">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-188"></span></span><!-- --><span data-ttu-id="84ad7-189">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="84ad7-189">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="84ad7-190">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-190"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: <span data-ttu-id="84ad7-191">削除するハンドラーの名前。</span><span class="sxs-lookup"><span data-stu-id="84ad7-191">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: <span data-ttu-id="84ad7-192">削除するイベントハンドラーを決めるためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-192">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - 'office!Office.RemoveHandlerOptions:interface'
        - id: callback
          description: '<span data-ttu-id="84ad7-193">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-193">Optional.</span></span> <span data-ttu-id="84ad7-194">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-194">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-195">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-195"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#removeHandlerAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
    summary: <span data-ttu-id="84ad7-196">指定したイベントの種類のイベントハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-196">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="84ad7-197">**要件セット**: [customxmlparts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="84ad7-197">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="84ad7-198">例</span><span class="sxs-lookup"><span data-stu-id="84ad7-198">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="84ad7-199">削除するイベントの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="84ad7-199">Specifies the type of event to remove.</span></span> <span data-ttu-id="84ad7-200">CustomXmlPart オブジェクトの場合、eventType パラメーターには、`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-200">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="84ad7-201">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="84ad7-201"></span></span><!-- --><span data-ttu-id="84ad7-202">そして`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="84ad7-202">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="84ad7-203">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-203"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: <span data-ttu-id="84ad7-204">削除するハンドラーの名前。</span><span class="sxs-lookup"><span data-stu-id="84ad7-204">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="84ad7-205">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84ad7-205">Optional.</span></span> <span data-ttu-id="84ad7-206">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="84ad7-206">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="84ad7-207">.</span><span class="sxs-lookup"><span data-stu-id="84ad7-207"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#removeHandlerAsync~1:complex'
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#deleteAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#deleteAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#getNodesAsync~0:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync~1:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlPart#getXmlAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlPrefixMappings:interface'
    name: CustomXmlPrefixMappings
  - uid: 'office!Office.RemoveHandlerOptions:interface'
    name: RemoveHandlerOptions
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void