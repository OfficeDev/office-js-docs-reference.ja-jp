### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Settings:interface'
    summary: <span data-ttu-id="6e7a4-101">ホスト ドキュメントに名前/値のペアとして格納される、作業ウィンドウ アドインまたはコンテンツ アドインのカスタム設定を表します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-101">Represents custom settings for a task pane or content add-in that are stored in the host document as name/value pairs.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-102">**ホスト**: Excel、PowerPoint、Word</span><span class="sxs-lookup"><span data-stu-id="6e7a4-102">**Hosts**: Excel, PowerPoint, Word</span></span>

      <span data-ttu-id="6e7a4-103">Settings オブジェクトのメソッドを使用して作成された設定は、アドインとドキュメントごとに保存されます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-103">The settings created by using the methods of the Settings object are saved per add-in and per document.</span></span> <span data-ttu-id="6e7a4-104">つまり、これらの設定は、それを作成したアドインでのみ、かつ設定が保存されているドキュメントからのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-104">That is, they are available only to the add-in that created them, and only from the document in which they are saved.</span></span>

      <span data-ttu-id="6e7a4-105">設定の名前は string ですが、値には string、number、boolean、null、object、または array を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-105">The name of a setting is a string, while the value can be a string, number, boolean, null, object, or array.</span></span>

      <span data-ttu-id="6e7a4-106">Settings オブジェクトは Document オブジェクトの一部として自動的に読み込まれ、アドインがアクティブ化されたときに、そのオブジェクトの settings プロパティを呼び出すことで使用できます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-106">The Settings object is automatically loaded as part of the Document object, and is available by calling the settings property of that object when the add-in is activated.</span></span>

      <span data-ttu-id="6e7a4-107">開発者は、設定を追加または削除した後に、saveAsync メソッドを呼び出して、設定をドキュメントに保存する責任があります。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-107">The developer is responsible for calling the saveAsync method after adding or deleting settings to save the settings in the document.</span></span>
    name: Office.Settings
    fullName: Office.Settings
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Settings#addHandlerAsync:member(1)'
      - 'office!Office.Settings#addHandlerAsync:member(2)'
      - 'office!Office.Settings#get:member(1)'
      - 'office!Office.Settings#refreshAsync:member(1)'
      - 'office!Office.Settings#remove:member(1)'
      - 'office!Office.Settings#removeHandlerAsync:member(1)'
      - 'office!Office.Settings#removeHandlerAsync:member(2)'
      - 'office!Office.Settings#saveAsync:member(1)'
      - 'office!Office.Settings#saveAsync:member(2)'
      - 'office!Office.Settings#set:member(1)'
  - uid: 'office!Office.Settings#addHandlerAsync:member(1)'
    summary: |-
      <span data-ttu-id="6e7a4-108">SettingsChanged イベントのイベントハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-108">Adds an event handler for the settingsChanged event.</span></span>

      <span data-ttu-id="6e7a4-109">**重要**: アドインが excel クライアントで実行されている場合、アドインのコードによって、settingschanged イベントのハンドラーを登録することはできますが、そのイベントが発生するのは、web 上の excel で開かれたスプレッドシートを使用してアドインが読み込まれ、複数のユーザーがスプレッドシートを編集しています (共同編集)。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-109">**Important**: Your add-in's code can register a handler for the settingsChanged event when the add-in is running with any Excel client, but the event will fire only when the add-in is loaded with a spreadsheet that is opened in Excel on the web, and more than one user is editing the spreadsheet (coauthoring).</span></span> <span data-ttu-id="6e7a4-110">そのため、効率的に settingsChanged イベントがサポートされるのは、共同編集シナリオの web 上の Excel に対してのみです。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-110">Therefore, effectively the settingsChanged event is supported only in Excel on the web in coauthoring scenarios.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-111">**要件セット**:[セットに含まれない](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-111">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="6e7a4-112">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-112">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="6e7a4-113">追加するイベントの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-113">Specifies the type of event to add.</span></span> <span data-ttu-id="6e7a4-114">必須です。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-114">Required.</span></span>
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="6e7a4-115">追加するイベントハンドラー関数。これは、唯一のパラメーターが SettingsChangedEventArgs 型であることを示し[ます。](xref:office!Office.SettingsChangedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-115">The event handler function to add, whose only parameter is of type [Office.SettingsChangedEventArgs](xref:office!Office.SettingsChangedEventArgs:interface)</span></span><!-- --><span data-ttu-id="6e7a4-116">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-116"></span></span> <span data-ttu-id="6e7a4-117">必須です。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-117">Required.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="6e7a4-118">コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-118">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: |-
            <span data-ttu-id="6e7a4-119">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-119">Optional.</span></span> <span data-ttu-id="6e7a4-120">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-120">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="6e7a4-121">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-121"></span></span>

            <table> <tr> <th><span data-ttu-id="6e7a4-122">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6e7a4-122">Property</span></span></th> <th><span data-ttu-id="6e7a4-123">使用目的</span><span class="sxs-lookup"><span data-stu-id="6e7a4-123">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="6e7a4-124">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="6e7a4-124">AsyncResult.value</span></span></td> <td><span data-ttu-id="6e7a4-125">イベント ハンドラーを追加するとき、取得するデータまたはオブジェクトがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-125">Always returns undefined because there is no data or object to retrieve when adding an event handler.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-126">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="6e7a4-126">AsyncResult.status</span></span></td> <td><span data-ttu-id="6e7a4-127">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-127">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-128">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="6e7a4-128">AsyncResult.error</span></span></td> <td><span data-ttu-id="6e7a4-129">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-129">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-130">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="6e7a4-130">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="6e7a4-131">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-131">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
          type:
            - 'office!Office.Settings#addHandlerAsync~0:complex'
  - uid: 'office!Office.Settings#addHandlerAsync:member(2)'
    summary: |-
      <span data-ttu-id="6e7a4-132">SettingsChanged イベントのイベントハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-132">Adds an event handler for the settingsChanged event.</span></span>

      <span data-ttu-id="6e7a4-133">**重要**: アドインが excel クライアントで実行されている場合、アドインのコードによって、settingschanged イベントのハンドラーを登録することはできますが、そのイベントが発生するのは、web 上の excel で開かれたスプレッドシートを使用してアドインが読み込まれ、複数のユーザーがスプレッドシートを編集しています (共同編集)。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-133">**Important**: Your add-in's code can register a handler for the settingsChanged event when the add-in is running with any Excel client, but the event will fire only when the add-in is loaded with a spreadsheet that is opened in Excel on the web, and more than one user is editing the spreadsheet (coauthoring).</span></span> <span data-ttu-id="6e7a4-134">そのため、効率的に settingsChanged イベントがサポートされるのは、共同編集シナリオの web 上の Excel に対してのみです。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-134">Therefore, effectively the settingsChanged event is supported only in Excel on the web in coauthoring scenarios.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-135">**要件セット**:[セットに含まれない](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-135">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="6e7a4-136">各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-136">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="6e7a4-137">例</span><span class="sxs-lookup"><span data-stu-id="6e7a4-137">Examples</span></span>

      ```javascript
      function addSelectionChangedEventHandler() {
          Office.context.document.settings.addHandlerAsync(Office.EventType.SettingsChanged, MyHandler);
      }

      function MyHandler(eventArgs) {
          write('Event raised: ' + eventArgs.type);
          doSomethingWithSettings(eventArgs.settings);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="6e7a4-138">追加するイベントの種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-138">Specifies the type of event to add.</span></span> <span data-ttu-id="6e7a4-139">必須です。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-139">Required.</span></span>
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="6e7a4-140">追加するイベントハンドラー関数。これは、唯一のパラメーターが SettingsChangedEventArgs 型であることを示し[ます。](xref:office!Office.SettingsChangedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-140">The event handler function to add, whose only parameter is of type [Office.SettingsChangedEventArgs](xref:office!Office.SettingsChangedEventArgs:interface)</span></span><!-- --><span data-ttu-id="6e7a4-141">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-141"></span></span> <span data-ttu-id="6e7a4-142">必須です。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-142">Required.</span></span>'
          type:
            - any
        - id: callback
          description: |-
            <span data-ttu-id="6e7a4-143">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-143">Optional.</span></span> <span data-ttu-id="6e7a4-144">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-144">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="6e7a4-145">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-145"></span></span>

            <table> <tr> <th><span data-ttu-id="6e7a4-146">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6e7a4-146">Property</span></span></th> <th><span data-ttu-id="6e7a4-147">使用目的</span><span class="sxs-lookup"><span data-stu-id="6e7a4-147">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="6e7a4-148">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="6e7a4-148">AsyncResult.value</span></span></td> <td><span data-ttu-id="6e7a4-149">イベント ハンドラーを追加するとき、取得するデータまたはオブジェクトがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-149">Always returns undefined because there is no data or object to retrieve when adding an event handler.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-150">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="6e7a4-150">AsyncResult.status</span></span></td> <td><span data-ttu-id="6e7a4-151">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-151">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-152">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="6e7a4-152">AsyncResult.error</span></span></td> <td><span data-ttu-id="6e7a4-153">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-153">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-154">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="6e7a4-154">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="6e7a4-155">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-155">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
          type:
            - 'office!Office.Settings#addHandlerAsync~1:complex'
  - uid: 'office!Office.Settings#get:member(1)'
    summary: <span data-ttu-id="6e7a4-156">指定された設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-156">Retrieves the specified setting.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-157">**要件セット**:[設定](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-157">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      #### <a name="examples"></a><span data-ttu-id="6e7a4-158">例</span><span class="sxs-lookup"><span data-stu-id="6e7a4-158">Examples</span></span>

      ```javascript
      function displayMySetting() {
          write('Current value for mySetting: ' + Office.context.document.settings.get('mySetting'));
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: get(name)
    fullName: get(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'get(name: string): any;'
      return:
        type:
          - any
        description: <span data-ttu-id="6e7a4-159">プロパティ名が JSON シリアル化値にマップされたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-159">An object that has property names mapped to JSON serialized values.</span></span>
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: 'office!Office.Settings#refreshAsync:member(1)'
    summary: <span data-ttu-id="6e7a4-160">ドキュメントに保持されている設定をすべて読み取って、メモリ内に保持されているこれらの設定のコンテンツまたは作業ウィンドウ アドインのコピーを更新します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-160">Reads all settings persisted in the document and refreshes the content or task pane add-in's copy of those settings held in memory.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-161">**要件セット**:[セットに含まれない](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-161">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="6e7a4-162">このメソッドは、同じアドインの複数のインスタンスが同じドキュメントに対して機能している場合に、Excel、Word、および PowerPoint の共同編集シナリオで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-162">This method is useful in Excel, Word, and PowerPoint coauthoring scenarios when multiple instances of the same add-in are working against the same document.</span></span> <span data-ttu-id="6e7a4-163">各アドインは、ユーザーがそれを開いたときにドキュメントから読み込まれた設定のメモリ内コピーに対して機能しているため、各ユーザーが使用する設定値が同期されないようにすることができます。これは、アドインのインスタンスが saveAsync メソッドを呼び出して、そのユーザーのすべての設定をドキュメントに永続化するたびに発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-163">Because each add-in is working against an in-memory copy of the settings loaded from the document at the time the user opened it, the settings values used by each user can get out of sync. This can happen whenever an instance of the add-in calls the Settings.saveAsync method to persist all of that user's settings to the document.</span></span> <span data-ttu-id="6e7a4-164">アドインの settingsChanged イベントのイベントハンドラーから refreshAsync メソッドを呼び出すと、すべてのユーザーの設定値が更新されます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-164">Calling the refreshAsync method from the event handler for the settingsChanged event of the add-in will refresh the settings values for all users.</span></span>

      <span data-ttu-id="6e7a4-165">refreshAsync メソッドに渡されるコールバック関数では、AsyncResult オブジェクトのプロパティを使用して次の情報を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-165">In the callback function passed to the refreshAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="6e7a4-166">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6e7a4-166">Property</span></span></th> <th><span data-ttu-id="6e7a4-167">使用目的</span><span class="sxs-lookup"><span data-stu-id="6e7a4-167">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="6e7a4-168">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="6e7a4-168">AsyncResult.value</span></span></td> <td><span data-ttu-id="6e7a4-169">更新された値を持つ Settings オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-169">Access a Settings object with the refreshed values.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-170">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="6e7a4-170">AsyncResult.status</span></span></td> <td><span data-ttu-id="6e7a4-171">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-171">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-172">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="6e7a4-172">AsyncResult.error</span></span></td> <td><span data-ttu-id="6e7a4-173">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-173">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-174">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="6e7a4-174">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="6e7a4-175">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-175">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="6e7a4-176">例</span><span class="sxs-lookup"><span data-stu-id="6e7a4-176">Examples</span></span>

      ```javascript
      function refreshSettings() {
          Office.context.document.settings.refreshAsync(function (asyncResult) {
              write('Settings refreshed with status: ' + asyncResult.status);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: refreshAsync(callback)
    fullName: refreshAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAsync(callback?: (result: AsyncResult<Office.Settings>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="6e7a4-177">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-177">Optional.</span></span> <span data-ttu-id="6e7a4-178">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-178">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="6e7a4-179">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-179"></span></span> <span data-ttu-id="6e7a4-180">結果`value`のプロパティは、更新された値を持つ、 [Office の Settings](xref:office!Office.Settings:interface)オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-180">The `value` property of the result is an [Office.Settings](xref:office!Office.Settings:interface) object with the refreshed values.</span></span>'
          type:
            - 'office!Office.Settings#refreshAsync~0:complex'
  - uid: 'office!Office.Settings#remove:member(1)'
    summary: |-
      <span data-ttu-id="6e7a4-181">指定された設定を削除します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-181">Removes the specified setting.</span></span>

      <span data-ttu-id="6e7a4-182">**重要**: settings. remove メソッドは、設定プロパティバッグのメモリ内コピーにのみ影響することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-182">**Important**: Be aware that the Settings.remove method affects only the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="6e7a4-183">To persist the removal of the specified setting in the document, at some point after calling the Settings.remove method and before the add-in is closed, you must call the Settings.saveAsync method.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-183">To persist the removal of the specified setting in the document, at some point after calling the Settings.remove method and before the add-in is closed, you must call the Settings.saveAsync method.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-184">**要件セット**:[設定](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-184">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="6e7a4-185">null は設定として有効な値です。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-185">null is a valid value for a setting.</span></span> <span data-ttu-id="6e7a4-186">したがって、 null を設定に割り当ててもその設定が設定プロパティ バッグから削除されるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-186">Therefore, assigning null to the setting will not remove it from the settings property bag.</span></span>

      #### <a name="examples"></a><span data-ttu-id="6e7a4-187">例</span><span class="sxs-lookup"><span data-stu-id="6e7a4-187">Examples</span></span>

      ```javascript
      function removeMySetting() {
          Office.context.document.settings.remove('mySetting');
      }
      ```
    name: remove(name)
    fullName: remove(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
  - uid: 'office!Office.Settings#removeHandlerAsync:member(1)'
    summary: <span data-ttu-id="6e7a4-188">SettingsChanged イベントのイベントハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-188">Removes an event handler for the settingsChanged event.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-189">**要件セット**:[セットに含まれない](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-189">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="6e7a4-190">Removehandler Async メソッドを呼び出すときにオプションの handler パラメーターを省略すると、指定された eventType のすべてのイベントハンドラーが削除されます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-190">If the optional handler parameter is omitted when calling the removeHandlerAsync method, all event handlers for the specified eventType will be removed.</span></span>

      <span data-ttu-id="6e7a4-191">Callback パラメーターに渡した関数が実行されると、AsyncResult オブジェクトを受け取ります。このオブジェクトには、コールバック関数の唯一のパラメーターからアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-191">When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter.</span></span>

      <span data-ttu-id="6e7a4-192">Removeハンドラ Async メソッドに渡されたコールバック関数で、AsyncResult オブジェクトのプロパティを使用して次の情報を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-192">In the callback function passed to the removeHandlerAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="6e7a4-193">削除するイベントの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-193">Specifies the type of event to remove.</span></span> <span data-ttu-id="6e7a4-194">必須です。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-194">Required.</span></span>
          type:
            - 'office!Office.EventType:enum'
        - id: options
          description: <span data-ttu-id="6e7a4-195">削除するイベントハンドラーを決めるためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-195">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - 'office!Office.RemoveHandlerOptions:interface'
        - id: callback
          description: '<span data-ttu-id="6e7a4-196">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-196">Optional.</span></span> <span data-ttu-id="6e7a4-197">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-197">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="6e7a4-198">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-198"></span></span>'
          type:
            - 'office!Office.Settings#removeHandlerAsync~0:complex'
  - uid: 'office!Office.Settings#removeHandlerAsync:member(2)'
    summary: <span data-ttu-id="6e7a4-199">SettingsChanged イベントのイベントハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-199">Removes an event handler for the settingsChanged event.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-200">**要件セット**:[セットに含まれない](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-200">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="6e7a4-201">Removehandler Async メソッドを呼び出すときにオプションの handler パラメーターを省略すると、指定された eventType のすべてのイベントハンドラーが削除されます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-201">If the optional handler parameter is omitted when calling the removeHandlerAsync method, all event handlers for the specified eventType will be removed.</span></span>

      <span data-ttu-id="6e7a4-202">Callback パラメーターに渡した関数が実行されると、AsyncResult オブジェクトを受け取ります。このオブジェクトには、コールバック関数の唯一のパラメーターからアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-202">When the function you passed to the callback parameter executes, it receives an AsyncResult object that you can access from the callback function's only parameter.</span></span>

      <span data-ttu-id="6e7a4-203">Removeハンドラ Async メソッドに渡されたコールバック関数で、AsyncResult オブジェクトのプロパティを使用して次の情報を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-203">In the callback function passed to the removeHandlerAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      #### <a name="examples"></a><span data-ttu-id="6e7a4-204">例</span><span class="sxs-lookup"><span data-stu-id="6e7a4-204">Examples</span></span>

      ```javascript
      function removeSettingsChangedEventHandler() {
          Office.context.document.settings.removeHandlerAsync(Office.EventType.SettingsChanged, MyHandler);
      }

      function MyHandler(eventArgs) {
          write('Event raised: ' + eventArgs.type);
          doSomethingWithSettings(eventArgs.settings);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="6e7a4-205">削除するイベントの型を指定します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-205">Specifies the type of event to remove.</span></span> <span data-ttu-id="6e7a4-206">必須です。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-206">Required.</span></span>
          type:
            - 'office!Office.EventType:enum'
        - id: callback
          description: '<span data-ttu-id="6e7a4-207">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-207">Optional.</span></span> <span data-ttu-id="6e7a4-208">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-208">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="6e7a4-209">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-209"></span></span>'
          type:
            - 'office!Office.Settings#removeHandlerAsync~1:complex'
  - uid: 'office!Office.Settings#saveAsync:member(1)'
    summary: <span data-ttu-id="6e7a4-210">設定プロパティ バッグのメモリ内コピーをドキュメントに保持します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-210">Persists the in-memory copy of the settings property bag in the document.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-211">**要件セット**:[設定](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-211">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="6e7a4-212">アドインによって以前に保存された設定は、初期化時に読み込まれるため、セッションの有効期間中は、設定プロパティバッグのメモリ内コピーを操作するために set メソッドと get メソッドを使用するだけでかまいません。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-212">Any settings previously saved by an add-in are loaded when it is initialized, so during the lifetime of the session you can just use the set and get methods to work with the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="6e7a4-213">設定を保持して、次回アドインを使用するときに使用できるようにするには、saveAsync メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-213">When you want to persist the settings so that they are available the next time the add-in is used, use the saveAsync method.</span></span>

      <span data-ttu-id="6e7a4-214">**注**: saveAsync メソッドは、メモリ内設定プロパティバッグをドキュメントファイルに保持します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-214">**Note**: The saveAsync method persists the in-memory settings property bag into the document file.</span></span> <span data-ttu-id="6e7a4-215">ただし、ドキュメントファイル自体に加えられた変更は、ユーザー (または自動バックアップの設定) でファイルシステムにドキュメントが保存されるときにのみ保存されます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-215">However, the changes to the document file itself are saved only when the user (or AutoRecover setting) saves the document to the file system.</span></span> <span data-ttu-id="6e7a4-216">RefreshAsync メソッドは、同じアドインの他のインスタンスが設定を変更し、それらの変更をすべてのインスタンスで使用できるようにする必要がある場合にのみ、共同編集シナリオで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-216">The refreshAsync method is only useful in coauthoring scenarios when other instances of the same add-in might change the settings and those changes should be made available to all instances.</span></span>

      <table> <tr> <th><span data-ttu-id="6e7a4-217">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6e7a4-217">Property</span></span></th> <th><span data-ttu-id="6e7a4-218">使用目的</span><span class="sxs-lookup"><span data-stu-id="6e7a4-218">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="6e7a4-219">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="6e7a4-219">AsyncResult.value</span></span></td> <td><span data-ttu-id="6e7a4-220">取得するオブジェクトまたはデータがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-220">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-221">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="6e7a4-221">AsyncResult.status</span></span></td> <td><span data-ttu-id="6e7a4-222">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-222">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-223">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="6e7a4-223">AsyncResult.error</span></span></td> <td><span data-ttu-id="6e7a4-224">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-224">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-225">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="6e7a4-225">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="6e7a4-226">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-226">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options?: SaveSettingsOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="6e7a4-227">設定を保存するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-227">Provides options for saving settings.</span></span>
          type:
            - 'office!Office.SaveSettingsOptions:interface'
        - id: callback
          description: '<span data-ttu-id="6e7a4-228">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-228">Optional.</span></span> <span data-ttu-id="6e7a4-229">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-229">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="6e7a4-230">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-230"></span></span>'
          type:
            - 'office!Office.Settings#saveAsync~0:complex'
  - uid: 'office!Office.Settings#saveAsync:member(2)'
    summary: <span data-ttu-id="6e7a4-231">設定プロパティ バッグのメモリ内コピーをドキュメントに保持します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-231">Persists the in-memory copy of the settings property bag in the document.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-232">**要件セット**:[設定](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-232">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="6e7a4-233">アドインによって以前に保存された設定は、初期化時に読み込まれるため、セッションの有効期間中は、設定プロパティバッグのメモリ内コピーを操作するために set メソッドと get メソッドを使用するだけでかまいません。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-233">Any settings previously saved by an add-in are loaded when it is initialized, so during the lifetime of the session you can just use the set and get methods to work with the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="6e7a4-234">設定を保持して、次回アドインを使用するときに使用できるようにするには、saveAsync メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-234">When you want to persist the settings so that they are available the next time the add-in is used, use the saveAsync method.</span></span>

      <span data-ttu-id="6e7a4-235">**注**: saveAsync メソッドは、メモリ内設定プロパティバッグをドキュメントファイルに保持します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-235">**Note**: The saveAsync method persists the in-memory settings property bag into the document file.</span></span> <span data-ttu-id="6e7a4-236">ただし、ドキュメントファイル自体に加えられた変更は、ユーザー (または自動バックアップの設定) でファイルシステムにドキュメントが保存されるときにのみ保存されます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-236">However, the changes to the document file itself are saved only when the user (or AutoRecover setting) saves the document to the file system.</span></span> <span data-ttu-id="6e7a4-237">RefreshAsync メソッドは、同じアドインの他のインスタンスが設定を変更し、それらの変更をすべてのインスタンスで使用できるようにする必要がある場合にのみ、共同編集シナリオで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-237">The refreshAsync method is only useful in coauthoring scenarios when other instances of the same add-in might change the settings and those changes should be made available to all instances.</span></span>

      <table> <tr> <th><span data-ttu-id="6e7a4-238">プロパティ</span><span class="sxs-lookup"><span data-stu-id="6e7a4-238">Property</span></span></th> <th><span data-ttu-id="6e7a4-239">使用目的</span><span class="sxs-lookup"><span data-stu-id="6e7a4-239">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="6e7a4-240">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="6e7a4-240">AsyncResult.value</span></span></td> <td><span data-ttu-id="6e7a4-241">取得するオブジェクトまたはデータがないため、常に undefined を返します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-241">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-242">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="6e7a4-242">AsyncResult.status</span></span></td> <td><span data-ttu-id="6e7a4-243">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-243">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-244">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="6e7a4-244">AsyncResult.error</span></span></td> <td><span data-ttu-id="6e7a4-245">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-245">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="6e7a4-246">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="6e7a4-246">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="6e7a4-247">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-247">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="6e7a4-248">例</span><span class="sxs-lookup"><span data-stu-id="6e7a4-248">Examples</span></span>

      ```javascript
      function persistSettings() {
          Office.context.document.settings.saveAsync(function (asyncResult) {
              write('Settings saved with status: ' + asyncResult.status);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="6e7a4-249">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-249">Optional.</span></span> <span data-ttu-id="6e7a4-250">コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-250">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="6e7a4-251">.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-251"></span></span>'
          type:
            - 'office!Office.Settings#saveAsync~1:complex'
  - uid: 'office!Office.Settings#set:member(1)'
    summary: |-
      <span data-ttu-id="6e7a4-252">指定された設定を行うかまたは作成します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-252">Sets or creates the specified setting.</span></span>

      <span data-ttu-id="6e7a4-253">**重要**: settings メソッドは、設定プロパティバッグのメモリ内コピーにのみ影響することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-253">**Important**: Be aware that the Settings.set method affects only the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="6e7a4-254">To make sure that additions or changes to settings will be available to your add-in the next time the document is opened, at some point after calling the Settings.set method and before the add-in is closed, you must call the Settings.saveAsync method to persist settings in the document.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-254">To make sure that additions or changes to settings will be available to your add-in the next time the document is opened, at some point after calling the Settings.set method and before the add-in is closed, you must call the Settings.saveAsync method to persist settings in the document.</span></span>
    remarks: |-
      <span data-ttu-id="6e7a4-255">**要件セット**:[設定](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span><span class="sxs-lookup"><span data-stu-id="6e7a4-255">**Requirement set**: [Settings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#settings)</span></span>

      <span data-ttu-id="6e7a4-256">Set メソッドは、指定された名前が存在しない場合は新しい設定を作成し、設定プロパティバッグのメモリ内コピーに指定した名前の既存の設定を設定します。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-256">The set method creates a new setting of the specified name if it does not already exist, or sets an existing setting of the specified name in the in-memory copy of the settings property bag.</span></span> <span data-ttu-id="6e7a4-257">Settings.saveAsync メソッドを呼び出した後で、その値はそのデータ型のシリアル化された JSON 表現としてドキュメントに格納されます。</span><span class="sxs-lookup"><span data-stu-id="6e7a4-257">After you call the Settings.saveAsync method, the value is stored in the document as the serialized JSON representation of its data type.</span></span> <span data-ttu-id="6e7a4-258">A maximum of 2MB is available for the settings of each add-in.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-258">A maximum of 2MB is available for the settings of each add-in.</span></span>

      #### <a name="examples"></a><span data-ttu-id="6e7a4-259">例</span><span class="sxs-lookup"><span data-stu-id="6e7a4-259">Examples</span></span>

      ```javascript
      function setMySetting() {
          Office.context.document.settings.set('mySetting', 'mySetting value');
      }
      ```
    name: 'set(name, value)'
    fullName: 'set(name, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(name: string, value: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
        - id: value
          description: <span data-ttu-id="6e7a4-260">Specifies the value to be stored.</span><span class="sxs-lookup"><span data-stu-id="6e7a4-260">Specifies the value to be stored.</span></span>
          type:
            - any
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.Settings#addHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Settings#addHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Settings#refreshAsync~0:complex'
    name: '(result: AsyncResult<Office.Settings>) => void'
    fullName: '(result: Office.AsyncResult<Office.Settings>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Settings:interface'
        name: Office.Settings
        fullName: Office.Settings
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.RemoveHandlerOptions:interface'
    name: RemoveHandlerOptions
  - uid: 'office!Office.Settings#removeHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Settings#removeHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.SaveSettingsOptions:interface'
    name: SaveSettingsOptions
  - uid: 'office!Office.Settings#saveAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Settings#saveAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void