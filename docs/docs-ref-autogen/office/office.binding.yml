### YamlMime:UniversalReference
ms.openlocfilehash: c188f127b540706dc459a9ea8dfdec041be486e5
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977399"
items:
- uid: office.Office.Binding
  summary: <span data-ttu-id="46e66-101">文書のセクションへのバインドを表します。</span><span class="sxs-lookup"><span data-stu-id="46e66-101">Represents a binding to a section of the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="46e66-102">要件の設定</span><span class="sxs-lookup"><span data-stu-id="46e66-102">Requirement Sets</span></span></td><td><span data-ttu-id="46e66-103">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="46e66-103">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="46e66-104">バインディング オブジェクトでは、種類に関係なくすべてのバインドが持つ機能を公開します。</span><span class="sxs-lookup"><span data-stu-id="46e66-104">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>


    <span data-ttu-id="46e66-105">バインディング オブジェクトを直接呼び出すことはありませんが。</span><span class="sxs-lookup"><span data-stu-id="46e66-105">The Binding object is never called directly.</span></span> <span data-ttu-id="46e66-106">それぞれの種類のバインディングを表すオブジェクトの抽象親クラスである: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->、 [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->、または[Office.TextBinding](xref:office.Office.TextBinding)<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-106">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office.Office.MatrixBinding)<!-- -->, [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->, or [Office.TextBinding](xref:office.Office.TextBinding)<!-- -->.</span></span> <span data-ttu-id="46e66-107">バインド内のデータとの対話を可能にするバインディング オブジェクトの setDataAsync メソッドと、これらのオブジェクトのすべての 3 つが、getDataAsync を継承します。</span><span class="sxs-lookup"><span data-stu-id="46e66-107">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="46e66-108">それらのプロパティ値を照会するための id と型のプロパティを継承します。</span><span class="sxs-lookup"><span data-stu-id="46e66-108">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="46e66-109">さらに、MatrixBinding と結合テーブル結合オブジェクトは、行と列の数を数えるなどのマトリックスとテーブルに固有の機能の追加のメソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="46e66-109">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>


    <span data-ttu-id="46e66-110">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="46e66-110">**Support details**</span></span>


    <span data-ttu-id="46e66-111">大文字 Y の次のマトリックスでは、対応する Office ホスト アプリケーションでこのインターフェイスがサポートされていることを示します。</span><span class="sxs-lookup"><span data-stu-id="46e66-111">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="46e66-112">空のセルでは、Office ホスト アプリケーションでこのインターフェイスをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="46e66-112">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="46e66-113">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-113">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="46e66-114">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="46e66-114">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="46e66-115">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="46e66-115">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="46e66-116">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="46e66-116">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="46e66-117">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="46e66-117">Office for iPad</span></span> </th><th> <span data-ttu-id="46e66-118">Office for Mac?</span><span class="sxs-lookup"><span data-stu-id="46e66-118">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="46e66-119"><strong>アクセス</strong></span><span class="sxs-lookup"><span data-stu-id="46e66-119"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="46e66-120">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-120">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="46e66-121"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="46e66-121"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="46e66-122">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-122">Y</span></span> </td><td> <span data-ttu-id="46e66-123">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-123">Y</span></span> </td><td> <span data-ttu-id="46e66-124">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-124">Y</span></span> </td><td> <span data-ttu-id="46e66-125">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-125">Y</span></span> </td></tr> <tr><td><span data-ttu-id="46e66-126"><strong>単語</strong></span><span class="sxs-lookup"><span data-stu-id="46e66-126"><strong> Word </strong></span></span></td><td> <span data-ttu-id="46e66-127">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-127">Y</span></span> </td><td> <span data-ttu-id="46e66-128">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-128">Y</span></span> </td><td> <span data-ttu-id="46e66-129">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-129">Y</span></span> </td><td> <span data-ttu-id="46e66-130">Y</span><span class="sxs-lookup"><span data-stu-id="46e66-130">Y</span></span> </td></tr> </table>
  name: Office.Binding
  fullName: Office.Binding
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Binding.addHandlerAsync
  - office.Office.Binding.addHandlerAsync_1
  - office.Office.Binding.getDataAsync
  - office.Office.Binding.getDataAsync_1
  - office.Office.Binding.removeHandlerAsync
  - office.Office.Binding.removeHandlerAsync_1
  - office.Office.Binding.setDataAsync
  - office.Office.Binding.setDataAsync_1
  - office.Office.Binding.document
  - office.Office.Binding.id
  - office.Office.Binding.type
- uid: office.Office.Binding.addHandlerAsync
  summary: <span data-ttu-id="46e66-131">指定された[Office.EventType](xref:office.Office.EventType)のオブジェクトにイベント ハンドラーを追加<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-131">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="46e66-132">EventTypes がサポートされているは`Office.EventType.BindingDataChanged`と`Office.EventType.BindingSelectionChanged` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-132">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: <span data-ttu-id="46e66-133">各イベント ハンドラー関数の名前が重複しない限り、指定されたイベントの種類の複数のイベント ハンドラーを追加できます。</span><span class="sxs-lookup"><span data-stu-id="46e66-133">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="46e66-134">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="46e66-134">The event type.</span></span> <span data-ttu-id="46e66-135">バインド」のことができます`Office.EventType.BindingDataChanged`または`Office.EventType.BindingSelectionChanged` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-135">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="46e66-136">[Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs)または[Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)の型が唯一のパラメーターは、イベント ハンドラー関数を追加するに<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-136">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="46e66-137">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="46e66-137">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="46e66-138">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-138">Optional.</span></span> <span data-ttu-id="46e66-139">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-139">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.addHandlerAsync_1
  summary: <span data-ttu-id="46e66-140">指定された[Office.EventType](xref:office.Office.EventType)のオブジェクトにイベント ハンドラーを追加<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-140">Adds an event handler to the object for the specified [Office.EventType](xref:office.Office.EventType)<!-- -->.</span></span> <span data-ttu-id="46e66-141">EventTypes がサポートされているは`Office.EventType.BindingDataChanged`と`Office.EventType.BindingSelectionChanged` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-141">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
  remarks: "<span data-ttu-id=\"46e66-142\">各イベント ハンドラー関数の名前が重複しない限り、指定されたイベントの種類の複数のイベント ハンドラーを追加できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-142\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"46e66-143\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-143\">Examples</span></span>\n\n```javascript\n// The following code sample calls the select method of the Office object to access the binding\n// with ID \"MyBinding\", and then calls the addHandlerAsync method to add a handler function \n// for the bindingDataChanged event of that binding.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingDataChanged, onBindingDataChanged);\n}\n\nfunction onBindingDataChanged(eventArgs) {\n    write(\"Data has changed in binding: \" + eventArgs.binding.id);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To add an event handler for the BindingSelectionChanged event of a binding, \n// use the addHandlerAsync method of the Binding object.\n// The event handler receives an argument of type BindingSelectionChangedEventArgs.\nfunction addEventHandlerToBinding() {\n    Office.select(\"bindings#MyBinding\").addHandlerAsync(\n        Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);\n}\n\nfunction onBindingSelectionChanged(eventArgs) {\n    write(eventArgs.binding.id + \" has been selected.\");\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="46e66-144">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="46e66-144">The event type.</span></span> <span data-ttu-id="46e66-145">バインド」のことができます`Office.EventType.BindingDataChanged`または`Office.EventType.BindingSelectionChanged` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-145">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="46e66-146">[Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs)または[Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)の型が唯一のパラメーターは、イベント ハンドラー関数を追加するに<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-146">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office.Office.BindingDataChangedEventArgs) or [Office.BindingSelectionChangedEventArgs](xref:office.Office.BindingSelectionChangedEventArgs)<!-- -->.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="46e66-147">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-147">Optional.</span></span> <span data-ttu-id="46e66-148">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: office.Office.Binding.getDataAsync
  summary: <span data-ttu-id="46e66-149">バインド内に含まれるデータを返します。</span><span class="sxs-lookup"><span data-stu-id="46e66-149">Returns the data contained within the binding.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="46e66-150">要件の設定</span><span class="sxs-lookup"><span data-stu-id="46e66-150">Requirement Sets</span></span></td><td><span data-ttu-id="46e66-151">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="46e66-151">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="46e66-152">MatrixBinding または結合テーブル結合から呼び出されると、startRow、startColumn、行数、および列数の省略可能なパラメーターが指定されている (連続した、有効な範囲を指定する) 場合、getDataAsync メソッドは、バインドされた値のサブセットを返します。</span><span class="sxs-lookup"><span data-stu-id="46e66-152">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
  name: getDataAsync(options, callback)
  fullName: getDataAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="46e66-153">バインディングでデータを取得する方法に関するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="46e66-153">Provides options for how to get the data in a binding.</span></span>
      type:
      - office.Office.GetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="46e66-154">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-154">Optional.</span></span> <span data-ttu-id="46e66-155">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-155">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="46e66-156">`value` 、結果のプロパティは、指定したバインディングの値です。</span><span class="sxs-lookup"><span data-stu-id="46e66-156">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="46e66-157">場合、`coercionType`パラメーターが指定されている (と、呼び出しが成功した)、CoercionType 列挙体のトピックで説明した形式でデータが返されます。</span><span class="sxs-lookup"><span data-stu-id="46e66-157">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.getDataAsync_1
  summary: <span data-ttu-id="46e66-158">バインド内に含まれるデータを返します。</span><span class="sxs-lookup"><span data-stu-id="46e66-158">Returns the data contained within the binding.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"46e66-159\">要件の設定</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-159\">Requirement Sets</span></span></td><td><span data-ttu-id=\"46e66-160\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-160\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"46e66-161\">MatrixBinding または結合テーブル結合から呼び出されると、startRow、startColumn、行数、および列数の省略可能なパラメーターが指定されている (連続した、有効な範囲を指定する) 場合、getDataAsync メソッドは、バインドされた値のサブセットを返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-161\">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"46e66-162\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-162\">Examples</span></span>\n\n```javascript\nfunction showBindingData() {\n    Office.select(\"bindings#MyBinding\").getDataAsync(function (asyncResult) {\n        write(asyncResult.value)\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// There is an important difference in behavior between using the \"table\" and \"matrix\" coercionType with the\n// Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following\n// two examples. These code examples show event handler functions for the Binding.SelectionChanged event.\n\n// If you specify the \"table\" coercionType, the TableData.rows property ( result.value.rows in the following\n// code example) returns an array that contains only the body rows of the table. So, its 0th row will be the\n// first non-header row in the table.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'table', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value.rows[0][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n\n// However, if you specify the \"matrix\" coercionType, result.value in the following code example returns an array\n// that contains the table header in the 0th row. If the table header contains multiple rows, then these are all\n// included in the result.value matrix as separate rows before the table body rows are included.\nfunction selectionChanged(evtArgs) { \n    Office.select(\"bindings#TableTranslate\").getDataAsync(\n        { coercionType: 'matrix', \n          startRow: evtArgs.startRow, \n          startCol: 0, \n          rowCount: 1, \n          columnCount: 1 },  \n        function (result) { \n            if (result.status == 'succeeded') { \n                write(\"Image to find: \" + result.value[1][0]); \n            } \n            else \n                write(result.error.message); \n    }); \n}     \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message; \n}\n```"
  name: getDataAsync(callback)
  fullName: getDataAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="46e66-163">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-163">Optional.</span></span> <span data-ttu-id="46e66-164">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-164">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="46e66-165">`value` 、結果のプロパティは、指定したバインディングの値です。</span><span class="sxs-lookup"><span data-stu-id="46e66-165">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="46e66-166">場合、`coercionType`パラメーターが指定されている (と、呼び出しが成功した)、CoercionType 列挙体のトピックで説明した形式でデータが返されます。</span><span class="sxs-lookup"><span data-stu-id="46e66-166">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Binding.removeHandlerAsync
  summary: <span data-ttu-id="46e66-167">指定されたイベントの種類のバインドから、指定されたハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="46e66-167">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: <table><tr><td><span data-ttu-id="46e66-168">要件の設定</span><span class="sxs-lookup"><span data-stu-id="46e66-168">Requirement Sets</span></span></td><td><span data-ttu-id="46e66-169">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="46e66-169">BindingEvents</span></span></td></tr></table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="46e66-170">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="46e66-170">The event type.</span></span> <span data-ttu-id="46e66-171">バインド」のことができます`Office.EventType.BindingDataChanged`または`Office.EventType.BindingSelectionChanged` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-171">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="46e66-172">どのイベント ハンドラーまたはハンドラーを削除するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="46e66-172">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="46e66-173">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-173">Optional.</span></span> <span data-ttu-id="46e66-174">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.removeHandlerAsync_1
  summary: <span data-ttu-id="46e66-175">指定されたイベントの種類のバインドから、指定されたハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="46e66-175">Removes the specified handler from the binding for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="46e66-176">要件の設定</span><span class="sxs-lookup"><span data-stu-id="46e66-176">Requirement Sets</span></span></td><td><span data-ttu-id="46e66-177">BindingEvents</span><span class="sxs-lookup"><span data-stu-id="46e66-177">BindingEvents</span></span></td></tr></table>

    #### <span data-ttu-id="46e66-178">例</span><span class="sxs-lookup"><span data-stu-id="46e66-178">Examples</span></span>


    ```javascript

    function removeEventHandlerFromBinding() {
        Office.select("bindings#MyBinding").removeHandlerAsync(
            Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
    }

    ```
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="46e66-179">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="46e66-179">The event type.</span></span> <span data-ttu-id="46e66-180">バインド」のことができます`Office.EventType.BindingDataChanged`または`Office.EventType.BindingSelectionChanged` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-180">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`<!-- -->.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="46e66-181">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-181">Optional.</span></span> <span data-ttu-id="46e66-182">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-182">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync
  summary: <span data-ttu-id="46e66-183">指定されたバインド オブジェクトで表されるドキュメントのバインド セクションにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="46e66-183">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="46e66-184">要件の設定</span><span class="sxs-lookup"><span data-stu-id="46e66-184">Requirement Sets</span></span></td><td><span data-ttu-id="46e66-185">MatrixBindings, TableBindings, TextBindings</span><span class="sxs-lookup"><span data-stu-id="46e66-185">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>


    <span data-ttu-id="46e66-186">データに渡された値には、バインドに書き込まれるデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="46e66-186">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="46e66-187">渡される値の種類は、次の表に示すような書き込まれますを決定します。</span><span class="sxs-lookup"><span data-stu-id="46e66-187">The kind of value passed determines what will be written as described in the following table.</span></span>


    <table> <tr> <th><span data-ttu-id="46e66-188">`data`値</span><span class="sxs-lookup"><span data-stu-id="46e66-188">`data` value</span></span></th> <th><span data-ttu-id="46e66-189">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="46e66-189">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="46e66-190">文字列</span><span class="sxs-lookup"><span data-stu-id="46e66-190">A string</span></span></td> <td><span data-ttu-id="46e66-191">プレーン テキストまたは文字列に変換できるものが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-191">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-192">配列の配列 ("matrix")</span><span class="sxs-lookup"><span data-stu-id="46e66-192">An array of arrays ("matrix")</span></span></td> <td><span data-ttu-id="46e66-193">ヘッダーなしの表形式データが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-193">Tabular data without headers will be written.</span></span> <span data-ttu-id="46e66-194">などの 2 つの列の 3 つの行にデータの書き込みを渡すことができますこのような配列: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-194">For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- -->.</span></span> <span data-ttu-id="46e66-195">記述するには次の 3 つの行の 1 つの列には、次のように配列を渡す: `[["R1C1"], ["R2C1"], ["R3C1"]]` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-195">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-196">[Office.TableData](xref:office.Office.TableData)オブジェクト</span><span class="sxs-lookup"><span data-stu-id="46e66-196">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="46e66-197">ヘッダー付きのテーブルが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-197">A table with headers will be written.</span></span></td> </tr> </table>


    <span data-ttu-id="46e66-198">また、バインドにデータを書き込むときに、次のアプリケーション固有の処理が適用されます。</span><span class="sxs-lookup"><span data-stu-id="46e66-198">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="46e66-199">Word の次のようにバインディングを指定したデータが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-199">For Word, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="46e66-200">`data`値</span><span class="sxs-lookup"><span data-stu-id="46e66-200">`data` value</span></span></th> <th><span data-ttu-id="46e66-201">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="46e66-201">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="46e66-202">文字列</span><span class="sxs-lookup"><span data-stu-id="46e66-202">A string</span></span></td> <td><span data-ttu-id="46e66-203">指定されたテキストが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-203">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-204">配列の配列 (「マトリックス」) または[Office.TableData](xref:office.Office.TableData)オブジェクト</span><span class="sxs-lookup"><span data-stu-id="46e66-204">An array of arrays ("matrix") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id="46e66-205">HTML</span><span class="sxs-lookup"><span data-stu-id="46e66-205">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-206">HTML</span><span class="sxs-lookup"><span data-stu-id="46e66-206">HTML</span></span></td> <td><span data-ttu-id="46e66-207">指定された HTML が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-207">The specified HTML is written.</span></span> <span data-ttu-id="46e66-208">場合は有効ではありませんを記述する HTML のいずれか、Word ではエラーが発生しません。</span><span class="sxs-lookup"><span data-stu-id="46e66-208">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="46e66-209">でき、無効なデータを省略するだけの HTML の単語を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="46e66-209">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-210">指定された XML が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-210">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="46e66-211">指定された XML が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-211">The specified the XML is written.</span></span></td> </tr> </table>


    <span data-ttu-id="46e66-212">Excel の場合、次のようにバインディングを指定したデータが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-212">For Excel, the specified data is written to the binding as follows:</span></span>


    <table> <tr> <th><span data-ttu-id="46e66-213">`data`値</span><span class="sxs-lookup"><span data-stu-id="46e66-213">`data` value</span></span></th> <th><span data-ttu-id="46e66-214">書き込まれるデータ</span><span class="sxs-lookup"><span data-stu-id="46e66-214">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="46e66-215">文字列</span><span class="sxs-lookup"><span data-stu-id="46e66-215">A string</span></span></td> <td><span data-ttu-id="46e66-216">最初のバインドされたセルの値として指定したテキストが挿入されます。バインドされているセルに数式を追加するのには有効な数式を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="46e66-216">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="46e66-217">たとえば、data を `"=SUM(A1:A5)"` と設定すると、指定の範囲内の値が集計されます。</span><span class="sxs-lookup"><span data-stu-id="46e66-217">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="46e66-218">ただし、バインドされたセルで数式を設定する場合、その後、バインドされたセルからは追加された数式 (または既存の数式) を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="46e66-218">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="46e66-219">バインドされたセルのデータを読み取ることで、Binding.getDataAsync メソッドを呼び出すと、このメソッドは (計算結果) のセルに表示されるデータのみを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="46e66-219">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-220">配列の配列 (「matrix」)、形状が指定されたバインドの形状と完全に一致する場合</span><span class="sxs-lookup"><span data-stu-id="46e66-220">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="46e66-221">行と列のセットが書き込まれます。バインドされているセルに追加するのには有効な数式を含む配列の配列を指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="46e66-221">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="46e66-222">データを設定するたとえば、`[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]`は 2 つのセルが含まれているバインディングにこれら 2 つの数式を追加します。</span><span class="sxs-lookup"><span data-stu-id="46e66-222">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="46e66-223">バインドされた単一のセルに数式を設定するときに読むことができません追加の数式などの既存の数式とのバインドからのと同様、`Binding.getDataAsync`メソッドにバインドされているセルに表示されるデータのみ返します。</span><span class="sxs-lookup"><span data-stu-id="46e66-223">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-224">[Office.TableData](xref:office.Office.TableData)オブジェクト、およびテーブルの形状は、バインドされているテーブルを検索します。</span><span class="sxs-lookup"><span data-stu-id="46e66-224">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="46e66-225">周囲のセルに含まれるデータが上書きされる場合を除いて、指定された行やヘッダーのセットが書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="46e66-225">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="46e66-226">**注**: TableData オブジェクトを*data*パラメーターを渡すには、数式を指定する場合は、「計算列」列内の数式が自動的にコピーするには、Excel の機能が期待どおりの結果は得られないでしょう。</span><span class="sxs-lookup"><span data-stu-id="46e66-226">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="46e66-227">バインドされているテーブルに数式が含まれている*データ*を記述するときにこの問題を回避するには、としてではなく、TableData オブジェクト) の配列のデータを指定してくださいし、Microsoft.Office.Matrix、または「マトリックス」として*coercionType*を指定します。</span><span class="sxs-lookup"><span data-stu-id="46e66-227">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>


    <span data-ttu-id="46e66-228">Excel のオンライン。</span><span class="sxs-lookup"><span data-stu-id="46e66-228">For Excel Online:</span></span>


    - <span data-ttu-id="46e66-229">データ パラメーターに渡された値のセルの合計数は、このメソッドを 1 回の呼び出しで 20,000 を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="46e66-229">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>


    - <span data-ttu-id="46e66-230">cellFormat パラメーターに渡される書式設定グループの数が 100 を超えることはできません。</span><span class="sxs-lookup"><span data-stu-id="46e66-230">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="46e66-231">1 つの書式設定グループは、指定のセル範囲に適用される書式設定のセットで構成されます。</span><span class="sxs-lookup"><span data-stu-id="46e66-231">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>


    <span data-ttu-id="46e66-232">上記以外の場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="46e66-232">In all other cases, an error is returned.</span></span>


    <span data-ttu-id="46e66-233">SetDataAsync メソッドは、テーブルまたはマトリックス バインドの startRow および startColumn の省略可能なパラメーターを指定すると、有効な範囲を指定する場合のサブセットのデータを記述します。</span><span class="sxs-lookup"><span data-stu-id="46e66-233">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>


    <span data-ttu-id="46e66-234">SetDataAsync メソッドに渡されるコールバック関数では、次の情報を返す AsyncResult オブジェクトのプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="46e66-234">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>


    <table> <tr> <th><span data-ttu-id="46e66-235">プロパティ</span><span class="sxs-lookup"><span data-stu-id="46e66-235">Property</span></span></th> <th><span data-ttu-id="46e66-236">使用目的</span><span class="sxs-lookup"><span data-stu-id="46e66-236">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="46e66-237">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="46e66-237">AsyncResult.value</span></span></td> <td><span data-ttu-id="46e66-238">オブジェクトまたは取得するデータがないためには、undefined を返します常にします。</span><span class="sxs-lookup"><span data-stu-id="46e66-238">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-239">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="46e66-239">AsyncResult.status</span></span></td> <td><span data-ttu-id="46e66-240">操作の成功または失敗を判断します。</span><span class="sxs-lookup"><span data-stu-id="46e66-240">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-241">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="46e66-241">AsyncResult.error</span></span></td> <td><span data-ttu-id="46e66-242">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="46e66-242">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="46e66-243">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="46e66-243">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="46e66-244">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class="sxs-lookup"><span data-stu-id="46e66-244">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
  name: setDataAsync(data, options, callback)
  fullName: setDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="46e66-245">現在の選択範囲に設定するデータ。</span><span class="sxs-lookup"><span data-stu-id="46e66-245">The data to be set in the current selection.</span></span> <span data-ttu-id="46e66-246">ホストで使用可能なデータの種類:</span><span class="sxs-lookup"><span data-stu-id="46e66-246">Possible data types by host:</span></span>


        <span data-ttu-id="46e66-247">文字列: Excel、Excel のオンライン、単語、および単語オンラインのみ</span><span class="sxs-lookup"><span data-stu-id="46e66-247">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="46e66-248">配列の配列: Excel および Word でのみ</span><span class="sxs-lookup"><span data-stu-id="46e66-248">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="46e66-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access、Excel、および単語のみ</span><span class="sxs-lookup"><span data-stu-id="46e66-249">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="46e66-250">HTML: の Word し、Word のオンラインのみ</span><span class="sxs-lookup"><span data-stu-id="46e66-250">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="46e66-251">Office オープン XML: 単語のみ</span><span class="sxs-lookup"><span data-stu-id="46e66-251">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: options
      description: <span data-ttu-id="46e66-252">バインディングでデータを設定する方法についてのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="46e66-252">Provides options for how to set the data in a binding.</span></span>
      type:
      - office.Office.SetBindingDataOptions
    - id: callback
      description: <span data-ttu-id="46e66-253">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-253">Optional.</span></span> <span data-ttu-id="46e66-254">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-254">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.setDataAsync_1
  summary: <span data-ttu-id="46e66-255">指定されたバインド オブジェクトで表されるドキュメントのバインド セクションにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="46e66-255">Writes data to the bound section of the document represented by the specified binding object.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"46e66-256\">要件の設定</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-256\">Requirement Sets</span></span></td><td><span data-ttu-id=\"46e66-257\">MatrixBindings, TableBindings, TextBindings</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-257\">MatrixBindings, TableBindings, TextBindings</span></span></td></tr></table>\n\n<span data-ttu-id=\"46e66-258\">データに渡された値には、バインドに書き込まれるデータが含まれています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-258\">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id=\"46e66-259\">渡される値の種類は、次の表に示すような書き込まれますを決定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-259\">The kind of value passed determines what will be written as described in the following table.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"46e66-260\">`data`値</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-260\">`data` value</span></span></th> <th><span data-ttu-id=\"46e66-261\">書き込まれるデータ</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-261\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"46e66-262\">文字列</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-262\">A string</span></span></td> <td><span data-ttu-id=\"46e66-263\">プレーン テキストまたは文字列に変換できるものが書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-263\">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-264\">配列の配列 (\"matrix\")</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-264\">An array of arrays (\"matrix\")</span></span></td> <td><span data-ttu-id=\"46e66-265\">ヘッダーなしの表形式データが書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-265\">Tabular data without headers will be written.</span></span> <span data-ttu-id=\"46e66-266\">などの 2 つの列の 3 つの行にデータの書き込みを渡すことができますこのような配列: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]` <!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-266\">For example, to write data to three rows in two columns, you can pass an array like this: `[[\"R1C1\", \"R1C2\"], [\"R2C1\", \"R2C2\"], [\"R3C1\", \"R3C2\"]]`<!-- -->.</span></span> <span data-ttu-id=\"46e66-267\">記述するには次の 3 つの行の 1 つの列には、次のように配列を渡す: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]` <!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-267\">To write a single column of three rows, pass an array like this: `[[\"R1C1\"], [\"R2C1\"], [\"R3C1\"]]`<!-- -->.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-268\">[Office.TableData](xref:office.Office.TableData)オブジェクト</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-268\">An [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"46e66-269\">ヘッダー付きのテーブルが書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-269\">A table with headers will be written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"46e66-270\">また、バインドにデータを書き込むときに、次のアプリケーション固有の処理が適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-270\">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id=\"46e66-271\">Word の次のようにバインディングを指定したデータが書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-271\">For Word, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"46e66-272\">`data`値</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-272\">`data` value</span></span></th> <th><span data-ttu-id=\"46e66-273\">書き込まれるデータ</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-273\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"46e66-274\">文字列</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-274\">A string</span></span></td> <td><span data-ttu-id=\"46e66-275\">指定されたテキストが書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-275\">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-276\">配列の配列 (「マトリックス」) または[Office.TableData](xref:office.Office.TableData)オブジェクト</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-276\">An array of arrays (\"matrix\") or an [Office.TableData](xref:office.Office.TableData) object</span></span></td> <td><span data-ttu-id=\"46e66-277\">HTML</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-277\">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-278\">HTML</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-278\">HTML</span></span></td> <td><span data-ttu-id=\"46e66-279\">指定された HTML が書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-279\">The specified HTML is written.</span></span> <span data-ttu-id=\"46e66-280\">場合は有効ではありませんを記述する HTML のいずれか、Word ではエラーが発生しません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-280\">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id=\"46e66-281\">でき、無効なデータを省略するだけの HTML の単語を書き込みます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-281\">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-282\">指定された XML が書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-282\">Office Open XML (\"Open XML\")</span></span></td> <td><span data-ttu-id=\"46e66-283\">指定された XML が書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-283\">The specified the XML is written.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"46e66-284\">Excel の場合、次のようにバインディングを指定したデータが書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-284\">For Excel, the specified data is written to the binding as follows:</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"46e66-285\">`data`値</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-285\">`data` value</span></span></th> <th><span data-ttu-id=\"46e66-286\">書き込まれるデータ</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-286\">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id=\"46e66-287\">文字列</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-287\">A string</span></span></td> <td><span data-ttu-id=\"46e66-288\">最初のバインドされたセルの値として指定したテキストが挿入されます。バインドされているセルに数式を追加するのには有効な数式を指定することもできます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-288\">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id=\"46e66-289\">たとえば、data を `\"=SUM(A1:A5)\"` と設定すると、指定の範囲内の値が集計されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-289\">For example, setting data to `\"=SUM(A1:A5)\"` will total the values in the specified range.</span></span> <span data-ttu-id=\"46e66-290\">ただし、バインドされたセルで数式を設定する場合、その後、バインドされたセルからは追加された数式 (または既存の数式) を読み取ることができません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-290\">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id=\"46e66-291\">バインドされたセルのデータを読み取ることで、Binding.getDataAsync メソッドを呼び出すと、このメソッドは (計算結果) のセルに表示されるデータのみを返すことができます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-291\">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-292\">配列の配列 (「matrix」)、形状が指定されたバインドの形状と完全に一致する場合</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-292\">An array of arrays (\"matrix\"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id=\"46e66-293\">行と列のセットが書き込まれます。バインドされているセルに追加するのには有効な数式を含む配列の配列を指定することもできます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-293\">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id=\"46e66-294\">データを設定するたとえば、`[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]`は 2 つのセルが含まれているバインディングにこれら 2 つの数式を追加します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-294\">For example, setting data to `[[\"=SUM(A1:A5)\",\"=AVERAGE(A1:A5)\"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id=\"46e66-295\">バインドされた単一のセルに数式を設定するときに読むことができません追加の数式などの既存の数式とのバインドからのと同様、`Binding.getDataAsync`メソッドにバインドされているセルに表示されるデータのみ返します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-295\">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-296\">[Office.TableData](xref:office.Office.TableData)オブジェクト、およびテーブルの形状は、バインドされているテーブルを検索します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-296\">An [Office.TableData](xref:office.Office.TableData) object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id=\"46e66-297\">周囲のセルに含まれるデータが上書きされる場合を除いて、指定された行やヘッダーのセットが書き込まれます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-297\">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id=\"46e66-298\">**注**: TableData オブジェクトを*data*パラメーターを渡すには、数式を指定する場合は、「計算列」列内の数式が自動的にコピーするには、Excel の機能が期待どおりの結果は得られないでしょう。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-298\">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the \"calculated columns\" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id=\"46e66-299\">バインドされているテーブルに数式が含まれている*データ*を記述するときにこの問題を回避するには、としてではなく、TableData オブジェクト) の配列のデータを指定してくださいし、Microsoft.Office.Matrix、または「マトリックス」として*coercionType*を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-299\">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or \"matrix\".</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"46e66-300\">Excel のオンライン。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-300\">For Excel Online:</span></span>\n\n- <span data-ttu-id=\"46e66-301\">データ パラメーターに渡された値のセルの合計数は、このメソッドを 1 回の呼び出しで 20,000 を超えることはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-301\">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>\n\n- <span data-ttu-id=\"46e66-302\">cellFormat パラメーターに渡される書式設定グループの数が 100 を超えることはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-302\">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id=\"46e66-303\">1 つの書式設定グループは、指定のセル範囲に適用される書式設定のセットで構成されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-303\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>\n\n<span data-ttu-id=\"46e66-304\">上記以外の場合は、エラーが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-304\">In all other cases, an error is returned.</span></span>\n\n<span data-ttu-id=\"46e66-305\">SetDataAsync メソッドは、テーブルまたはマトリックス バインドの startRow および startColumn の省略可能なパラメーターを指定すると、有効な範囲を指定する場合のサブセットのデータを記述します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-305\">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>\n\n<span data-ttu-id=\"46e66-306\">SetDataAsync メソッドに渡されるコールバック関数では、次の情報を返す AsyncResult オブジェクトのプロパティを使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-306\">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"46e66-307\">プロパティ</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-307\">Property</span></span></th> <th><span data-ttu-id=\"46e66-308\">使用目的</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-308\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"46e66-309\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-309\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"46e66-310\">オブジェクトまたは取得するデータがないためには、undefined を返します常にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-310\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-311\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-311\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"46e66-312\">操作の成功または失敗を判断します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-312\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-313\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-313\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"46e66-314\">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-314\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"46e66-315\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-315\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"46e66-316\">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-316\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n#### <span data-ttu-id=\"46e66-317\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-317\">Examples</span></span>\n\n```javascript\nfunction setBindingData() {\n    Office.select(\"bindings#MyBinding\").setDataAsync('Hello World!', function (asyncResult) { });\n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.\n// For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter \n// as \"html\" as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: \"html\"}, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In this example, the call to setDataAsync passes the data parameter as an array of arrays\n// (to create a single column of three rows), and specifies the data structure with the \n// coercionType parameter as a \"matrix\".\nfunction writeBoundDataMatrix() {\n    Office.select(\"bindings#myBinding\").setDataAsync(\n        [['Berlin'],['Munich'],['Duisburg']],{ coercionType: \"matrix\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            write('Error: ' + asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter \n// as a TableData object (to write three columns and three rows), and specifies the data structure\n// with the coercionType parameter as a \"table\".\n\n// In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,\n// but as a single column with a new header and three rows, to update the values in the last column \n// of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter \n// is specified as 2 to replace the values in the third column of the table.\nfunction writeBoundDataTable() {\n    // Create a TableData object.\n    var myTable = new Office.TableData();\n    myTable.headers = ['First Name', 'Last Name', 'Grade'];\n    myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];\n\n    // Set myTable in the binding.\n    Office.select(\"bindings#myBinding\").setDataAsync(myTable, { coercionType: \"table\" }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }\n    });\n}\n\n// Replace last column with different data.\nfunction updateTableData() {\n    var newTable = new Office.TableData();\n    newTable.headers = [\"Gender\"];\n    newTable.rows = [[\"M\"],[\"M\"],[\"F\"]];\n    Office.select(\"bindings#myBinding\").setDataAsync(newTable, { coercionType: \"table\", startColumn:2 }, \n        function (asyncResult) {\n            if (asyncResult.status == Office.AsyncResultStatus.Failed) {\n                write('Error: '+ asyncResult.error.message);\n        } else {\n            write('Bound data: ' + asyncResult.value);\n        }     \n    });   \n}\n\n// In this example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setDataAsync([['Berlin'],['Munich'],['Duisburg']],\n  {cellFormat:[{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n      {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}]}, \n  function (asyncResult){});\n```"
  name: setDataAsync(data, callback)
  fullName: setDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="46e66-318">現在の選択範囲に設定するデータ。</span><span class="sxs-lookup"><span data-stu-id="46e66-318">The data to be set in the current selection.</span></span> <span data-ttu-id="46e66-319">ホストで使用可能なデータの種類:</span><span class="sxs-lookup"><span data-stu-id="46e66-319">Possible data types by host:</span></span>


        <span data-ttu-id="46e66-320">文字列: Excel、Excel のオンライン、単語、および単語オンラインのみ</span><span class="sxs-lookup"><span data-stu-id="46e66-320">string: Excel, Excel Online, Word, and Word Online only</span></span>


        <span data-ttu-id="46e66-321">配列の配列: Excel および Word でのみ</span><span class="sxs-lookup"><span data-stu-id="46e66-321">array of arrays: Excel and Word only</span></span>


        <span data-ttu-id="46e66-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access、Excel、および単語のみ</span><span class="sxs-lookup"><span data-stu-id="46e66-322">[Office.TableData](xref:office.Office.TableData)<!-- -->: Access, Excel, and Word only</span></span>


        <span data-ttu-id="46e66-323">HTML: の Word し、Word のオンラインのみ</span><span class="sxs-lookup"><span data-stu-id="46e66-323">HTML: Word and Word Online only</span></span>


        <span data-ttu-id="46e66-324">Office オープン XML: 単語のみ</span><span class="sxs-lookup"><span data-stu-id="46e66-324">Office Open XML: Word only</span></span>
      type:
      - TableData | any
    - id: callback
      description: <span data-ttu-id="46e66-325">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46e66-325">Optional.</span></span> <span data-ttu-id="46e66-326">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="46e66-326">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Binding.document
  summary: <span data-ttu-id="46e66-327">バインディングに関連付けられているドキュメント オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="46e66-327">Get the Document object associated with the binding.</span></span>
  name: document
  fullName: document
  langs:
  - typeScript
  type: property
  syntax:
    content: 'document: Office.Document;'
    return:
      type:
      - office.Office.Document
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"46e66-328\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-328\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.document.url);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.id
  summary: <span data-ttu-id="46e66-329">同じ[Office.Document](xref:office.Office.Document)オブジェクト内のバインディングのバインディングを一意に識別する文字列です。</span><span class="sxs-lookup"><span data-stu-id="46e66-329">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office.Office.Document) object.</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"46e66-330\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-330\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n    write(asyncResult.value.id);\n});\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
- uid: office.Office.Binding.type
  summary: <span data-ttu-id="46e66-331">バインドの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="46e66-331">Gets the type of the binding.</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'type: Office.BindingType;'
    return:
      type:
      - Office.BindingType
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"46e66-332\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"46e66-332\">Examples</span></span>\n\n```javascript\nOffice.context.document.bindings.getByIdAsync(\"MyBinding\", function (asyncResult) { \n    write(asyncResult.value.type); \n}) \n\n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message;  \n}\n```"
