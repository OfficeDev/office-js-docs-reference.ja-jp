### YamlMime:UniversalReference
ms.openlocfilehash: ba8bb19feca95da10060b7bf35ac6063913360e9
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/15/2019
ms.locfileid: "30054962"
items:
- uid: office.Office.Settings
  summary: ホスト ドキュメントに名前/値のペアとして格納される、作業ウィンドウ アドインまたはコンテンツ アドインのカスタム設定を表します。
  remarks: >-
    <table> <tr><td>ホスト</td><td>Access、Excel、PowerPoint、Word</td></tr> <tr><td>要件セット</td><td>設定</td></tr> </table>


    settings オブジェクトのメソッドを使用して作成された設定は、アドインとドキュメントごとに保存されます。 つまり、ユーザーは、それらを作成したアドインのみが利用でき、保存されているドキュメントからのみ使用できます。


    設定の名前は string ですが、値には string、number、boolean、null、object、または array を指定できます。


    settings オブジェクトは Document オブジェクトの一部として自動的に読み込まれ、アドインがアクティブ化されたときに、そのオブジェクトの settings プロパティを呼び出すことで使用できます。


    開発者は、設定を追加または削除した後に、saveAsync メソッドを呼び出して、設定をドキュメントに保存する責任があります。
  name: Office.Settings
  fullName: Office.Settings
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Settings.addHandlerAsync
  - office.Office.Settings.addHandlerAsync_1
  - office.Office.Settings.get
  - office.Office.Settings.refreshAsync
  - office.Office.Settings.remove
  - office.Office.Settings.removeHandlerAsync
  - office.Office.Settings.removeHandlerAsync_1
  - office.Office.Settings.saveAsync
  - office.Office.Settings.saveAsync_1
  - office.Office.Settings.set
- uid: office.Office.Settings.addHandlerAsync
  summary: >-
    settingschanged イベントのイベントハンドラーを追加します。


    **重要**: アドインが excel クライアントで実行されている場合は、アドインのコードで settingschanged イベントのハンドラーを登録できますが、このイベントは、アドインが excel Online に開かれたスプレッドシートを使用して読み込まれた場合にのみ発生します。また、複数のユーザースプレッドシートを編集しています (共同編集)。 したがって、settingschanged イベントは、共同編集のシナリオでは Excel Online でのみサポートされます。
  remarks: >-
    <table><tr><td>要件セット</td><td>設定</td></tr></table>


    各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: 追加するイベントの種類を指定します。必須です。
      type:
      - Office.EventType
    - id: handler
      description: 追加するイベントハンドラー関数。このパラメーターには、 [SettingsChangedEventArgs](xref:office.Office.SettingsChangedEventArgs)<!-- -->型のみが含まれています。 必須です。
      type:
      - any
    - id: options
      description: コールバックで使用するために、変更されていない任意の型のコンテキストデータを保持するためのオプションを提供します。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: >-
        省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターは、型が[Office](xref:office.Office.AsyncResult)<!-- -->であるということです。


        <table> <tr> <th>プロパティ</th> <th>使用目的</th> </tr> <tr> <td>AsyncResult.value</td> <td>イベントハンドラーを追加するときに取得するデータまたはオブジェクトがないため、常に undefined を返します。</td> </tr> <tr> <td>AsyncResult.status</td> <td>操作の成功または失敗を判断します。</td> </tr> <tr> <td>AsyncResult.error</td> <td>操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</td> </tr> </table>


        **サポートの詳細**


        次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。


        office ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。


        *サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> </td><td> Y </td><td> </td></tr> </table>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.addHandlerAsync_1
  summary: >-
    settingschanged イベントのイベントハンドラーを追加します。


    **重要**: アドインが excel クライアントで実行されている場合は、アドインのコードで settingschanged イベントのハンドラーを登録できますが、このイベントは、アドインが excel Online に開かれたスプレッドシートを使用して読み込まれた場合にのみ発生します。また、複数のユーザースプレッドシートを編集しています (共同編集)。 したがって、settingschanged イベントは、共同編集のシナリオでは Excel Online でのみサポートされます。
  remarks: "<table><tr><td>要件セット</td><td>設定</td></tr></table>\n\n各イベントハンドラー関数の名前が一意である限り、指定された eventType に対して複数のイベントハンドラーを追加できます。\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction addSelectionChangedEventHandler() {\n    Office.context.document.settings.addHandlerAsync(Office.EventType.SettingsChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithSettings(eventArgs.settings);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: 追加するイベントの種類を指定します。必須です。
      type:
      - Office.EventType
    - id: handler
      description: 追加するイベントハンドラー関数。このパラメーターには、 [SettingsChangedEventArgs](xref:office.Office.SettingsChangedEventArgs)<!-- -->型のみが含まれています。 必須です。
      type:
      - any
    - id: callback
      description: >-
        省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターは、型が[Office](xref:office.Office.AsyncResult)<!-- -->であるということです。


        <table> <tr> <th>プロパティ</th> <th>使用目的</th> </tr> <tr> <td>AsyncResult.value</td> <td>イベントハンドラーを追加するときに取得するデータまたはオブジェクトがないため、常に undefined を返します。</td> </tr> <tr> <td>AsyncResult.status</td> <td>操作の成功または失敗を判断します。</td> </tr> <tr> <td>AsyncResult.error</td> <td>操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</td> </tr> </table>


        **サポートの詳細**


        次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。


        office ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。


        *サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> </td><td> Y </td><td> </td></tr> </table>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.get
  summary: 指定された設定を取得します。
  remarks: "<table><tr><td>要件セット</td><td>設定</td></tr></table>\n\n**サポートの詳細**\n\n次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。\n\noffice ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>しまう</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>段落</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction displayMySetting() {\n    write('Current value for mySetting: ' + Office.context.document.settings.get('mySetting'));\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: get(name)
  fullName: get(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'get(name: string): any;'
    return:
      type:
      - any
      description: プロパティ名が JSON シリアル化値にマップされたオブジェクト。
    parameters:
    - id: name
      description: ''
      type:
      - string
- uid: office.Office.Settings.refreshAsync
  summary: ドキュメントに保持されている設定をすべて読み取って、メモリ内に保持されているこれらの設定のコンテンツまたは作業ウィンドウ アドインのコピーを更新します。
  remarks: "<table><tr><td>要件セット</td><td>設定</td></tr></table>\n\nこのメソッドは、同じアドインの複数のインスタンスが同じドキュメントに対して機能している場合に、Excel、Word、および PowerPoint の共同編集シナリオで役立ちます。 各アドインは、ユーザーがそれを開いたときにドキュメントから読み込まれた設定のメモリ内コピーに対して機能しているため、各ユーザーが使用する設定値が同期されないようにすることができます。これは、アドインのインスタンスが saveAsync メソッドを呼び出して、そのユーザーのすべての設定をドキュメントに永続化するたびに発生する可能性があります。 アドインの settingschanged イベントのイベントハンドラーから refreshasync メソッドを呼び出すと、すべてのユーザーの設定値が更新されます。\n\nrefreshasync メソッドに渡されたコールバック関数で、AsyncResult オブジェクトのプロパティを使用して、次の情報を返すことができます。\n\n<table> <tr> <th>プロパティ</th> <th>使用目的</th> </tr> <tr> <td>AsyncResult.value</td> <td>更新された値を持つ Settings オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.status</td> <td>操作の成功または失敗を判断します。</td> </tr> <tr> <td>AsyncResult.error</td> <td>操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</td> </tr> </table>\n\n**サポートの詳細**\n\n次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。\n\noffice ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> Y </td><td> Y </td><td> </td></tr> <tr><td><strong>しまう</strong></td><td> Y </td><td> Y </td><td> </td></tr> <tr><td><strong>段落</strong></td><td> Y </td><td> Y </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction refreshSettings() {\n    Office.context.document.settings.refreshAsync(function (asyncResult) {\n        write('Settings refreshed with status: ' + asyncResult.status);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: refreshAsync(callback)
  fullName: refreshAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAsync(callback?: (result: AsyncResult<Office.Settings>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: 省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターは、型が[Office](xref:office.Office.AsyncResult)<!-- -->であるということです。 結果`value`のプロパティは、更新された値を持つ、 [Office の Settings](xref:office.Office.Settings)オブジェクトです。
      type:
      - '(result: AsyncResult<Office.Settings>) => void'
- uid: office.Office.Settings.remove
  summary: >-
    指定された設定を削除します。


    **重要**: settings. remove メソッドは、設定プロパティバッグのメモリ内コピーにのみ影響することに注意してください。 ドキュメント内の指定された設定の削除を永続的に保持するには、saveAsync メソッドを呼び出した後で、この設定を削除してからアドインを閉じる必要があります。
  remarks: >-
    <table><tr><td>要件セット</td><td>設定</td></tr></table>


    null は設定として有効な値です。したがって、 null を設定に割り当ててもその設定が設定プロパティ バッグから削除されるわけではありません。


    **サポートの詳細**


    次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。


    office ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。


    *サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>しまう</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>段落</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>例


    ```javascript

    function removeMySetting() {
        Office.context.document.settings.remove('mySetting');
    }

    ```
  name: remove(name)
  fullName: remove(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(name: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: name
      description: ''
      type:
      - string
- uid: office.Office.Settings.removeHandlerAsync
  summary: settingschanged イベントのイベントハンドラーを削除します。
  remarks: >-
    <table><tr><td>要件セット</td><td>設定</td></tr></table>


    removehandler async メソッドを呼び出すときにオプションの handler パラメーターを省略すると、指定された eventType のすべてのイベントハンドラーが削除されます。


    callback パラメーターに渡した関数が実行されると、AsyncResult オブジェクトを受け取ります。このオブジェクトには、コールバック関数の唯一のパラメーターからアクセスできます。


    removeハンドラ async メソッドに渡されたコールバック関数で、AsyncResult オブジェクトのプロパティを使用して次の情報を返すことができます。


    **サポートの詳細**


    次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。


    office ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。


    *サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> </td><td> Y </td><td> </td></tr> </table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: 削除するイベントの型を指定します。必須です。
      type:
      - Office.EventType
    - id: options
      description: 削除するイベントハンドラーを決めるためのオプションを提供します。
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: 省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターは、型が[Office](xref:office.Office.AsyncResult)<!-- -->であるということです。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.removeHandlerAsync_1
  summary: settingschanged イベントのイベントハンドラーを削除します。
  remarks: "<table><tr><td>要件セット</td><td>設定</td></tr></table>\n\nremovehandler async メソッドを呼び出すときにオプションの handler パラメーターを省略すると、指定された eventType のすべてのイベントハンドラーが削除されます。\n\ncallback パラメーターに渡した関数が実行されると、AsyncResult オブジェクトを受け取ります。このオブジェクトには、コールバック関数の唯一のパラメーターからアクセスできます。\n\nremoveハンドラ async メソッドに渡されたコールバック関数で、AsyncResult オブジェクトのプロパティを使用して次の情報を返すことができます。\n\n**サポートの詳細**\n\n次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。\n\noffice ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> </td><td> Y </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction removeSettingsChangedEventHandler() {\n    Office.context.document.settings.removeHandlerAsync(Office.EventType.SettingsChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithSettings(eventArgs.settings);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: 削除するイベントの型を指定します。必須です。
      type:
      - Office.EventType
    - id: callback
      description: 省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターは、型が[Office](xref:office.Office.AsyncResult)<!-- -->であるということです。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.saveAsync
  summary: 設定プロパティ バッグのメモリ内コピーをドキュメントに保持します。
  remarks: >-
    アドイン によって過去に保存された設定は、アプリの初期化時に読み込まれます。したがって、セッションの実行中に set および get メソッドを使用し、設定プロパティ バッグのメモリ内コピーで作業できます。これらの設定を アドイン の次回使用時にも使用できるように保存するときは、saveAsync メソッドを使用します。


    **注**: saveAsync メソッドは、メモリ内設定プロパティバッグをドキュメントファイルに保持します。 ただし、ドキュメントファイル自体に加えられた変更は、ユーザー (または自動バックアップの設定) でファイルシステムにドキュメントが保存されるときにのみ保存されます。 refreshasync メソッドは、同じアドインの他のインスタンスが設定を変更し、それらの変更をすべてのインスタンスで使用できるようにする必要がある場合にのみ、共同編集シナリオで役立ちます。


    <table> <tr> <th>プロパティ</th> <th>使用目的</th> </tr> <tr> <td>AsyncResult.value</td> <td>取得するオブジェクトまたはデータがないため、常に undefined を返します。</td> </tr> <tr> <td>AsyncResult.status</td> <td>操作の成功または失敗を判断します。</td> </tr> <tr> <td>AsyncResult.error</td> <td>操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</td> </tr> </table>


    **サポートの詳細**


    次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。


    office ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。


    *サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>しまう</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>段落</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>
  name: saveAsync(options, callback)
  fullName: saveAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options?: SaveSettingsOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 設定を保存するためのオプションを提供します。
      type:
      - office.Office.SaveSettingsOptions
    - id: callback
      description: 省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターは、型が[Office](xref:office.Office.AsyncResult)<!-- -->であるということです。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.saveAsync_1
  summary: 設定プロパティ バッグのメモリ内コピーをドキュメントに保持します。
  remarks: "アドイン によって過去に保存された設定は、アプリの初期化時に読み込まれます。したがって、セッションの実行中に set および get メソッドを使用し、設定プロパティ バッグのメモリ内コピーで作業できます。これらの設定を アドイン の次回使用時にも使用できるように保存するときは、saveAsync メソッドを使用します。\n\n**注**: saveAsync メソッドは、メモリ内設定プロパティバッグをドキュメントファイルに保持します。 ただし、ドキュメントファイル自体に加えられた変更は、ユーザー (または自動バックアップの設定) でファイルシステムにドキュメントが保存されるときにのみ保存されます。 refreshasync メソッドは、同じアドインの他のインスタンスが設定を変更し、それらの変更をすべてのインスタンスで使用できるようにする必要がある場合にのみ、共同編集シナリオで役立ちます。\n\n<table> <tr> <th>プロパティ</th> <th>使用目的</th> </tr> <tr> <td>AsyncResult.value</td> <td>取得するオブジェクトまたはデータがないため、常に undefined を返します。</td> </tr> <tr> <td>AsyncResult.status</td> <td>操作の成功または失敗を判断します。</td> </tr> <tr> <td>AsyncResult.error</td> <td>操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</td> </tr> </table>\n\n**サポートの詳細**\n\n次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。\n\noffice ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>しまう</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>段落</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction persistSettings() {\n    Office.context.document.settings.saveAsync(function (asyncResult) {\n        write('Settings saved with status: ' + asyncResult.status);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: saveAsync(callback)
  fullName: saveAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: 省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターは、型が[Office](xref:office.Office.AsyncResult)<!-- -->であるということです。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.set
  summary: >-
    指定された設定を設定または作成します。


    **重要**: settings メソッドは、設定プロパティバッグのメモリ内コピーにのみ影響することに注意してください。 次回ドキュメントを開いたときに、設定の追加または変更がアドインで使用できるようにするには、settings メソッドを呼び出した後、アドインを閉じる前に、saveAsync メソッドを呼び出して保持する必要があります。ドキュメントの設定。
  remarks: >-
    <table><tr><td>要件セット</td><td>設定</td></tr></table>


    set メソッドは、指定された名前が存在しない場合は新しい設定を作成し、設定プロパティバッグのメモリ内コピーに指定した名前の既存の設定を設定します。 saveAsync メソッドを呼び出すと、値はデータ型のシリアル化された JSON 表現としてドキュメントに格納されます。 各アドインの設定には最大2mb を使用できます。


    **サポートの詳細**


    次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。


    office ホストアプリケーションとサーバーの要件の詳細については、「 [office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->」を参照してください。


    *サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows デスクトップ版 Office </th><th> Office Online (ブラウザー) </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>接続</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>シート</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>しまう</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>段落</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>例


    ```javascript

    function setMySetting() {
        Office.context.document.settings.set('mySetting', 'mySetting value');
    }

    ```
  name: set(name, value)
  fullName: set(name, value)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(name: string, value: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: name
      description: ''
      type:
      - string
    - id: value
      description: 格納する値を指定します。
      type:
      - any
