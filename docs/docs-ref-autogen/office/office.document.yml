### YamlMime:UniversalReference
ms.openlocfilehash: f034e576ee68e5a53befd372655e5b6568a2aabd
ms.sourcegitcommit: b05ee546d9dfbc914c8d1c594d9b206b04780bbc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 11/22/2018
ms.locfileid: "26649171"
items:
- uid: office.Office.Document
  summary: <span data-ttu-id="76a42-101">アドインから対話操作するドキュメントを表す抽象クラス。</span><span class="sxs-lookup"><span data-stu-id="76a42-101">An abstract class that represents the document the add-in is interacting with.</span></span>
  remarks: <table><tr><td><span data-ttu-id="76a42-102">ホスト</span><span class="sxs-lookup"><span data-stu-id="76a42-102">Hosts</span></span></td><td><span data-ttu-id="76a42-103">Access、Excel、PowerPoint、Project、Word</span><span class="sxs-lookup"><span data-stu-id="76a42-103">Access, Excel, PowerPoint, Project, Word</span></span></td></tr></table>
  name: Office.Document
  fullName: Office.Document
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Document.addHandlerAsync
  - office.Office.Document.bindings
  - office.Office.Document.customXmlParts
  - office.Office.Document.getActiveViewAsync
  - office.Office.Document.getFileAsync
  - office.Office.Document.getFilePropertiesAsync
  - office.Office.Document.getMaxResourceIndexAsync
  - office.Office.Document.getMaxTaskIndexAsync
  - office.Office.Document.getProjectFieldAsync
  - office.Office.Document.getResourceByIndexAsync
  - office.Office.Document.getResourceFieldAsync
  - office.Office.Document.getSelectedDataAsync
  - office.Office.Document.getSelectedResourceAsync
  - office.Office.Document.getSelectedTaskAsync
  - office.Office.Document.getSelectedViewAsync
  - office.Office.Document.getTaskAsync
  - office.Office.Document.getTaskByIndexAsync
  - office.Office.Document.getTaskFieldAsync
  - office.Office.Document.getWSSUrlAsync
  - office.Office.Document.goToByIdAsync
  - office.Office.Document.mode
  - office.Office.Document.removeHandlerAsync
  - office.Office.Document.setResourceFieldAsync
  - office.Office.Document.setSelectedDataAsync
  - office.Office.Document.setTaskFieldAsync
  - office.Office.Document.settings
  - office.Office.Document.url
- uid: office.Office.Document.addHandlerAsync
  summary: <span data-ttu-id="76a42-104">ドキュメント オブジェクト イベントのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="76a42-104">Adds an event handler for a Document object event.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"76a42-105\">要件の設定</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-105\">Requirement Sets</span></span></td><td><span data-ttu-id=\"76a42-106\">DocumentEvents</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-106\">DocumentEvents</span></span></td></tr></table>\n\n<span data-ttu-id=\"76a42-107\">各イベント ハンドラー関数の名前が重複しない限り、指定されたイベントの種類の複数のイベント ハンドラーを追加できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-107\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n\n<span data-ttu-id=\"76a42-108\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-108\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p101\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p101\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-111\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-111\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-112\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-112\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-113\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-113\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-114\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-114\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-115\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-115\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"76a42-116\">Office for Mac?</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-116\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-117\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-117\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"76a42-118\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-118\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-119\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-119\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-120\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-120\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-121\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-121\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-122\"><strong>OneNote</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-122\"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id=\"76a42-123\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-123\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-124\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-124\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"76a42-125\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-125\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-126\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-126\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-127\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-127\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-128\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-128\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-129\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-129\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-130\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-130\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-131\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-131\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-132\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-132\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-133\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-133\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-134\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-134\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-135\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-135\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-136\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-136\">Examples</span></span>\n\n```javascript\n// The following example adds an event handler for the SelectionChanged event of a document\nfunction addSelectionChangedEventHandler() {\n    Office.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithDocument(eventArgs.document);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following code example adds a handler for the ResourceSelectionChanged event.\n// When the resource selection changes in the document, it gets the GUID of the selected resource.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ResourceSelectionChanged,\n                getResourceGuid);\n        });\n    };\n\n    // Get the GUID of the selected resource and display it in the add-in.\n    function getResourceGuid() {\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html(result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For a complete code sample that shows how to use a ResourceSelectionChanged\n// event handler in a Project add-in, see \"Create your first task pane add-in\n// for Project 2013 by using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```\n```javascript\n// The following code example adds a handler for the TaskSelectionChanged event.\n// When the task selection changes in the document, it gets the GUID of the\n// selected task.\n// The example assumes your add-in has a reference to the jQuery library and that\n// the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.TaskSelectionChanged,\n                getTaskGuid);\n            getTaskGuid();\n        });\n    };\n\n    // Get the GUID of the selected task and display it in the add-in.\n    function getTaskGuid() {\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html(result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```\n```javascript\n// The following code example adds a handler for the ViewSelectionChanged\n// event. When the active view changes, it gets the name and type of the active view.\n// The example assumes your add-in has a reference to the jQuery library and that\n// the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ViewSelectionChanged,\n                getActiveView);\n            getActiveView();\n        });\n    };\n\n    // Get the name and type of the active view and display it in the add-in.\n    function getActiveView() {\n        Office.context.document.getSelectedViewAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var output = String.format(\n                        'View name: {0}<br/>View type: {1}',\n                        result.value.viewName, result.value.viewType);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For an example that shows how to use a ViewSelectionChanged event handler in a\n// Project add-in, see \"Create your first task pane add-in for Project 2013 by\n// using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```\n```javascript\n// The following code example uses addHandlerAsync to add an event handler for the ViewSelectionChanged event.\n// When the active view changes, the handler checks the view type. It enables a button if the view is a resource\n// view and disables the button if it isn't a resource view. Choosing the button gets the GUID of the selected\n// resource and displays it in the add-in.\n// The example assumes that your add-in has a reference to the jQuery library and that the following page controls\n// are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" disabled=\"disabled\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            // Add a ViewSelectionChanged event handler.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ViewSelectionChanged,\n                getActiveView);\n            $('#get-info').click(getResourceGuid);\n\n            // This example calls the handler on page load to get the active view\n            // of the default page.\n            getActiveView();\n        });\n    };\n\n    // Activate the button based on the active view type of the document.\n    // This is the ViewSelectionChanged event handler.\n    function getActiveView() {\n        Office.context.document.getSelectedViewAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var viewType = result.value.viewType;\n                    if (viewType == 6 ||   // ResourceForm\n                        viewType == 7 ||   // ResourceSheet\n                        viewType == 8 ||   // ResourceGraph\n                        viewType == 15) {  // ResourceUsage\n                        $('#get-info').removeAttr('disabled');\n                    }\n                    else {\n                        $('#get-info').attr('disabled', 'disabled');\n                    }\n                    var output = String.format(\n                        'View name: {0}<br/>View type: {1}',\n                        result.value.viewName, viewType);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    // Get the GUID of the currently selected resource and display it in the add-in.\n    function getResourceGuid() {\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html('Resource GUID: ' + result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For a complete code sample that shows how to use a ViewSelectionChanged event handler in a Project add-in,\n// see \"Create your first task pane add-in for Project by using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```"
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="76a42-137">として、ドキュメント オブジェクトのイベントのイベントの種類のパラメーターを指定できます`Office.EventType.Document.SelectionChanged`または`Office.EventType.Document.ActiveViewChanged` <!-- -->、またはこの列挙体の対応するテキスト値です。</span><span class="sxs-lookup"><span data-stu-id="76a42-137">For a Document object event, the eventType parameter can be specified as `Office.EventType.Document.SelectionChanged` or `Office.EventType.Document.ActiveViewChanged`<!-- -->, or the corresponding text value of this enumeration.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="76a42-138">型[Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)が唯一のパラメーターは、イベント ハンドラー関数を追加するに<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-138">The event handler function to add, whose only parameter is of type [Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)<!-- -->.</span></span> <span data-ttu-id="76a42-139">必須。</span><span class="sxs-lookup"><span data-stu-id="76a42-139">Required.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="76a42-140">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-140">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-141">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-141">Optional.</span></span> <span data-ttu-id="76a42-142">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-142">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.bindings
  summary: <span data-ttu-id="76a42-143">ドキュメントに定義されているバインドへのアクセスを提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-143">Gets an object that provides access to the bindings defined in the document.</span></span>
  remarks: "<span data-ttu-id=\"76a42-144\">スクリプト内で直接ドキュメント オブジェクトのインスタンスを作成しません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-144\">You don't instantiate the Document object directly in your script.</span></span> <span data-ttu-id=\"76a42-145\">現在の文書またはワークシートを操作するドキュメント オブジェクトのメンバーを呼び出すには、次のように使用します。 `Office.context.document` 、スクリプトにします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-145\">To call members of the Document object to interact with the current document or worksheet, use `Office.context.document` in your script.</span></span>\n\n<span data-ttu-id=\"76a42-146\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-146\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p105\">次の表で、大文字 Y は、このプロパティは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのプロパティをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p105\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"76a42-149\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-149\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-150\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-150\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-151\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-151\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-152\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-152\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-153\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-153\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"76a42-154\">Office for Mac?</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-154\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-155\"><strong>アクセス</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-155\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"76a42-156\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-156\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-157\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-157\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"76a42-158\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-158\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-159\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-159\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-160\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-160\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-161\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-161\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-162\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-162\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-163\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-163\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-164\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-164\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-165\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-165\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-166\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-166\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-167\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-167\">Examples</span></span>\n\n```javascript\nfunction displayAllBindings() {\n    Office.context.document.bindings.getAllAsync(function (asyncResult) {\n        var bindingString = '';\n        for (var i in asyncResult.value) {\n            bindingString += asyncResult.value[i].id + '\\n';\n        }\n        write('Existing bindings: ' + bindingString);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: bindings
  fullName: bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bindings: Bindings;'
    return:
      type:
      - office.Office.Bindings
- uid: office.Office.Document.customXmlParts
  summary: <span data-ttu-id="76a42-168">ドキュメント内のカスタム XML パーツを表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-168">Gets an object that represents the custom XML parts in the document.</span></span>
  remarks: "<span data-ttu-id=\"76a42-169\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-169\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p106\">次の表で、大文字 Y は、このプロパティは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのプロパティをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p106\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"76a42-172\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-172\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-173\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-173\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-174\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-174\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-175\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-175\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-176\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-176\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"76a42-177\">Office for Mac?</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-177\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-178\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-178\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-179\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-179\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-180\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-180\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-181\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-181\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-182\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-182\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-183\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-183\">Examples</span></span>\n\n```javascript\nfunction getCustomXmlParts(){\n    Office.context.document.customXmlParts.getByNamespaceAsync('http://tempuri.org', function (asyncResult) {\n        write('Retrieved ' + asyncResult.value.length + ' custom XML parts');\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: customXmlParts
  fullName: customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'customXmlParts: CustomXmlParts;'
    return:
      type:
      - office.Office.CustomXmlParts
- uid: office.Office.Document.getActiveViewAsync
  summary: <span data-ttu-id="76a42-184">プレゼンテーションの現在のビューの状態を返します (編集または読み取り)。</span><span class="sxs-lookup"><span data-stu-id="76a42-184">Returns the state of the current view of the presentation (edit or read).</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="76a42-185">要件の設定</span><span class="sxs-lookup"><span data-stu-id="76a42-185">Requirement Sets</span></span></td><td><span data-ttu-id="76a42-186">ActiveView</span><span class="sxs-lookup"><span data-stu-id="76a42-186">ActiveView</span></span></td></tr></table>


    <span data-ttu-id="76a42-187">ビューが変更されたときにイベントをトリガーできます。</span><span class="sxs-lookup"><span data-stu-id="76a42-187">Can trigger an event when the view changes.</span></span>


    <span data-ttu-id="76a42-188">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-188">**Support details**</span></span>


    <span data-ttu-id="76a42-p107">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p107">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-191">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-191">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-192">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-192">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-193">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-193">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-194">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-194">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="76a42-195">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="76a42-195">Office for iPad</span></span> </th><th> <span data-ttu-id="76a42-196">Office for Mac?</span><span class="sxs-lookup"><span data-stu-id="76a42-196">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="76a42-197"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-197"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="76a42-198">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-198">Y</span></span> </td><td> <span data-ttu-id="76a42-199">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-199">Y</span></span> </td><td> <span data-ttu-id="76a42-200">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-200">Y</span></span> </td><td> <span data-ttu-id="76a42-201">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-201">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-202">例</span><span class="sxs-lookup"><span data-stu-id="76a42-202">Examples</span></span>


    ```javascript

    function getFileView() {
        // Get whether the current view is edit or read.
        Office.context.document.getActiveViewAsync(function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage(asyncResult.value);
            }
        });
    }

    ```
  name: getActiveViewAsync(options, callback)
  fullName: getActiveViewAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<"edit" | "read">) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-203">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-203">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-204">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-204">Optional.</span></span> <span data-ttu-id="76a42-205">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-205">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-206">`value` 、結果のプロパティは、プレゼンテーションの現在のビューの状態。</span><span class="sxs-lookup"><span data-stu-id="76a42-206">The `value` property of the result is the state of the presentation's current view.</span></span> <span data-ttu-id="76a42-207">可能にするか、[編集]、または「読み取り」、値が返されます。</span><span class="sxs-lookup"><span data-stu-id="76a42-207">The value returned can be either "edit" or "read".</span></span> <span data-ttu-id="76a42-208">[編集] は、下書きモードまたはアウトライン モードなどのスライドを編集ビューのいずれかに対応しています。</span><span class="sxs-lookup"><span data-stu-id="76a42-208">"edit" corresponds to any of the views in which you can edit slides, such as Normal or Outline View.</span></span> <span data-ttu-id="76a42-209">「読み取り」とは、スライド ショーまたは全画面表示のいずれかに対応します。</span><span class="sxs-lookup"><span data-stu-id="76a42-209">"read" corresponds to either Slide Show or Reading View.</span></span>
      type:
      - '(result: AsyncResult<"edit" | "read">) => void'
- uid: office.Office.Document.getFileAsync
  summary: <span data-ttu-id="76a42-210">ドキュメント ファイル全体を、最大で 4194304 バイト (4 MB) のスライスに分割して返します。</span><span class="sxs-lookup"><span data-stu-id="76a42-210">Returns the entire document file in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id="76a42-211">iOS 用アドインの場合は、最大 65536 バイト (64 KB) のファイル スライスがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="76a42-211">For add-ins for iOS, file slice is supported up to 65536 (64 KB).</span></span> <span data-ttu-id="76a42-212">許容された制限を超えてファイル スライスのサイズを指定すると、"内部エラー" が発生する点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="76a42-212">Note that specifying file slice size of above permitted limit will result in an "Internal Error" failure.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"76a42-213\">要件の設定</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-213\">Requirement Sets</span></span></td><td><span data-ttu-id=\"76a42-214\">ファイル</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-214\">File</span></span></td></tr></table>\n\n<span data-ttu-id=\"76a42-215\">アドインの iOS の Office 以外の Office ホスト アプリケーションで実行されている、getFileAsync メソッドは 4194304 バイト (4 MB) までのスライスにファイルの取得をサポートします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-215\">For add-ins running in Office host applications other than Office for iOS, the getFileAsync method supports getting files in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id=\"76a42-216\">iOS アプリ向けの Office で実行するアドインの場合、getFileAsync メソッドは最大 65536 バイト (64 KB) にスライスしたファイルの取得をサポートします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-216\">For add-ins running in Office for iOS apps, the getFileAsync method supports getting files in slices of up to 65536 (64 KB).</span></span>\n\n<span data-ttu-id=\"76a42-217\">FileType パラメーターは、 [Office.FileType](xref:office.Office.FileType)列挙型や文字列の値を使用して指定できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-217\">The fileType parameter can be specified by using the [Office.FileType](xref:office.Office.FileType) enumeration or text values.</span></span> <span data-ttu-id=\"76a42-218\">使用可能な値は、ホストによって異なります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-218\">But the possible values vary with the host:</span></span>\n\n<span data-ttu-id=\"76a42-219\">Windows 版 Excel のデスクトップ、iPad、および Excel のオンライン。`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-219\">Excel for Windows desktop, iPad, and Excel Online: `Office.FileType.Compressed`</span></span>\n\n<span data-ttu-id=\"76a42-220\">Excel for Mac: `Office.FileType.Compressed` <!-- -->、`Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-220\">Excel for Mac: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`</span></span>\n\n<span data-ttu-id=\"76a42-221\">PowerPoint の Windows デスクトップ、Mac、iPad、および PowerPoint のオンライン: `Office.FileType.Compressed` <!-- -->、`Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-221\">PowerPoint for Windows desktop, Mac, iPad, and PowerPoint Online: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`</span></span>\n\n<span data-ttu-id=\"76a42-222\">Word for Windows のデスクトップ、Mac、iPad、および Word のオンライン: `Office.FileType.Compressed` <!-- -->、 `Office.FileType.Pdf` <!-- -->、`Office.FileType.Text`</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-222\">Word for Windows desktop, Mac, iPad, and Word Online: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`<!-- -->, `Office.FileType.Text`</span></span>\n\n<span data-ttu-id=\"76a42-223\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-223\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p112\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p112\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-226\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-226\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-227\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-227\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-228\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-228\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-229\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-229\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-230\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-230\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"76a42-231\">Office for Mac?</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-231\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-232\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-232\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"76a42-233\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-233\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-234\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-234\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-235\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-235\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-236\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-236\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-237\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-237\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"76a42-238\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-238\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-239\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-239\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-240\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-240\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-241\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-241\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-242\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-242\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-243\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-243\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-244\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-244\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-245\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-245\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-246\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-246\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-247\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-247\">Examples</span></span>\n\n```javascript\n// The following example gets the document in Office Open XML (\"compressed\") format in 65536 bytes (64 KB) slices.\n// Note: The implementation of app.showNotification in this example is from the Visual Studio template for Office Add-ins.\nfunction getDocumentAsCompressed() {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, { sliceSize: 65536 /*64 KB*/ }, \n        function (result) {\n            if (result.status == \"succeeded\") {\n            // If the getFileAsync call succeeded, then\n            // result.value will return a valid File Object.\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            var slicesReceived = 0, gotAllSlices = true, docdataSlices = [];\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n\n            // Get the file slices.\n            getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n            else {\n            app.showNotification(\"Error:\", result.error.message);\n            }\n    });\n}\n\nfunction getSliceAsync(file, nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived) {\n    file.getSliceAsync(nextSlice, function (sliceResult) {\n        if (sliceResult.status == \"succeeded\") {\n            if (!gotAllSlices) { // Failed to get all slices, no need to continue.\n                return;\n            }\n\n            // Got one slice, store it in a temporary array.\n            // (Or you can do something else, such as\n            // send it to a third-party server.)\n            docdataSlices[sliceResult.value.index] = sliceResult.value.data;\n            if (++slicesReceived == sliceCount) {\n              // All slices have been received.\n              file.closeAsync();\n              onGotAllSlices(docdataSlices);\n            }\n            else {\n                getSliceAsync(file, ++nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n        }\n            else {\n                gotAllSlices = false;\n                file.closeAsync();\n                app.showNotification(\"getSliceAsync Error:\", sliceResult.error.message);\n            }\n    });\n}\n\nfunction onGotAllSlices(docdataSlices) {\n    var docdata = [];\n    for (var i = 0; i < docdataSlices.length; i++) {\n        docdata = docdata.concat(docdataSlices[i]);\n    }\n\n    var fileContent = new String();\n    for (var j = 0; j < docdata.length; j++) {\n        fileContent += String.fromCharCode(docdata[j]);\n    }\n\n    // Now all the file content is stored in 'fileContent' variable,\n    // you can do something with it, such as print, fax...\n}\n\n// The following example gets the document in PDF format.\nOffice.context.document.getFileAsync(Office.FileType.Pdf,\n    function(result) {\n        if (result.status == \"succeeded\") {\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n            // Now, you can call getSliceAsync to download the files,\n            // as described in the previous code segment (compressed format).\n            \n            myFile.closeAsync();\n        }\n        else {\n            app.showNotification(\"Error:\", result.error.message);\n        }\n}\n);\n```"
  name: getFileAsync(fileType, options, callback)
  fullName: getFileAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFileAsync(fileType: FileType, options?: GetFileOptions, callback?: (result: AsyncResult<Office.File>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fileType
      description: <span data-ttu-id="76a42-248">形式のファイルが返されます</span><span class="sxs-lookup"><span data-stu-id="76a42-248">The format in which the file will be returned</span></span>
      type:
      - office.Office.FileType
    - id: options
      description: <span data-ttu-id="76a42-249">ドキュメントを分割するスライスのサイズを設定するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-249">Provides options for setting the size of slices that the document will be divided into.</span></span>
      type:
      - office.Office.GetFileOptions
    - id: callback
      description: <span data-ttu-id="76a42-250">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-250">Optional.</span></span> <span data-ttu-id="76a42-251">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-251">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-252">`value` 、結果のプロパティは、ファイル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="76a42-252">The `value` property of the result is the File object.</span></span>
      type:
      - '(result: AsyncResult<Office.File>) => void'
- uid: office.Office.Document.getFilePropertiesAsync
  summary: <span data-ttu-id="76a42-253">現在のドキュメントのファイル プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-253">Gets file properties of the current document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="76a42-254">要件の設定</span><span class="sxs-lookup"><span data-stu-id="76a42-254">Requirement Sets</span></span></td><td><span data-ttu-id="76a42-255">セットには指定できない</span><span class="sxs-lookup"><span data-stu-id="76a42-255">Not in a set</span></span></td></tr></table>


    <span data-ttu-id="76a42-256">Url プロパティを使用してファイルの URL を取得する`asyncResult.value.url` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-256">You get the file's URL with the url property `asyncResult.value.url`<!-- -->.</span></span>


    <span data-ttu-id="76a42-257">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-257">**Support details**</span></span>


    <span data-ttu-id="76a42-p114">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p114">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-260">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-260">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-261">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-261">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-262">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-262">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-263">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-263">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="76a42-264">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="76a42-264">Office for iPad</span></span> </th><th> <span data-ttu-id="76a42-265">Office for Mac?</span><span class="sxs-lookup"><span data-stu-id="76a42-265">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="76a42-266"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-266"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="76a42-267">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-267">Y</span></span> </td><td> <span data-ttu-id="76a42-268">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-268">Y</span></span> </td><td> <span data-ttu-id="76a42-269">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-269">Y</span></span> </td><td> <span data-ttu-id="76a42-270">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-270">Y</span></span> </td></tr> <tr><td><span data-ttu-id="76a42-271"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-271"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="76a42-272">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-272">Y</span></span> </td><td> <span data-ttu-id="76a42-273">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-273">Y</span></span> </td><td> <span data-ttu-id="76a42-274">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-274">Y</span></span> </td><td> <span data-ttu-id="76a42-275">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-275">Y</span></span> </td></tr> <tr><td><span data-ttu-id="76a42-276"><strong>単語</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-276"><strong> Word </strong></span></span></td><td> <span data-ttu-id="76a42-277">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-277">Y</span></span> </td><td> <span data-ttu-id="76a42-278">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-278">Y</span></span> </td><td> <span data-ttu-id="76a42-279">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-279">Y</span></span> </td><td> <span data-ttu-id="76a42-280">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-280">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-281">例</span><span class="sxs-lookup"><span data-stu-id="76a42-281">Examples</span></span>


    ```javascript

    // To read the URL of the current file, you need to write a callback function that returns the URL.

    // The following example shows how to:

    // 1. Pass an anonymous callback function that returns the value of the file's URL

    //    to the callback parameter of the getFilePropertiesAsync method.

    // 2. Display the value on the add-in's page.

    function getFileUrl() {
        // Get the URL of the current file.
        Office.context.document.getFilePropertiesAsync(function (asyncResult) {
            var fileUrl = asyncResult.value.url;
            if (fileUrl == "") {
                showMessage("The file hasn't been saved yet. Save the file and try again");
            }
            else {
                showMessage(fileUrl);
            }
        });
    }

    ```
  name: getFilePropertiesAsync(options, callback)
  fullName: getFilePropertiesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilePropertiesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Office.FileProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-282">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-282">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-283">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-283">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-284">`value` 、結果のプロパティは、ファイルのプロパティ (を参照する URL を使用して`asyncResult.value.url` <!-- -->)。</span><span class="sxs-lookup"><span data-stu-id="76a42-284">The `value` property of the result is the file's properties (with the URL found at `asyncResult.value.url`<!-- -->).</span></span>
      type:
      - '(result: AsyncResult<Office.FileProperties>) => void'
- uid: office.Office.Document.getMaxResourceIndexAsync
  summary: >-
    <span data-ttu-id="76a42-285">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-285">Project documents only.</span></span> <span data-ttu-id="76a42-286">現在のプロジェクト内のリソースのコレクションの最大のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-286">Get the maximum index of the collection of resources in the current project.</span></span>


    <span data-ttu-id="76a42-287">重要:この API は、Wndows デスクトップ上の Project 2016 でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="76a42-287">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"76a42-288\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-288\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p117\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p117\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-291\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-291\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-292\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-292\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-293\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-293\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-294\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-294\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"76a42-295\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-295\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-296\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-296\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-297\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-297\">Examples</span></span>\n\n```javascript\n// The following code example calls getResourceTaskIndexAsync to get the maximum index of the collection \n// of resources in the current project. Then it uses the returned value and the getResourceByIndexAsync\n// method to get each resource GUID. The example assumes that your add-in has a reference to the \n// jQuery library and that the following page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n    var resourceGuids = ;\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the maximum resource index, and then get the resource GUIDs.\n    function getResourceInfo() {\n        getMaxResourceIndex().then(\n            function (data) {\n                getResourceGuids(data);\n            }\n        );\n    }\n\n    // Get the maximum index of the resources for the current project.\n    function getMaxResourceIndex() {\n        var defer = $.Deferred();\n        Office.context.document.getMaxResourceIndexAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get each resource GUID, and then display the GUIDs in the add-in.\n    // There is no 0 index for resources, so start with index 1.\n    function getResourceGuids(maxResourceIndex) {\n        var defer = $.Deferred();\n        for (var i = 1; i <= maxResourceIndex; i++) {\n            getResourceGuid(i);\n        }\n        return defer.promise();\n        function getResourceGuid(index) {\n            Office.context.document.getResourceByIndexAsync(index,\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resourceGuids.push(result.value);\n                        if (index == maxResourceIndex) {\n                            defer.resolve();\n                            $('#message').html(resourceGuids.toString());\n                        }\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n    }\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getMaxResourceIndexAsync(options, callback)
  fullName: getMaxResourceIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getMaxResourceIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-298">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-298">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-299">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-299">Optional.</span></span> <span data-ttu-id="76a42-300">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-300">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-301">`value` 、結果のプロパティは、現在のプロジェクトのリソースのコレクションで最も大きいインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="76a42-301">The `value` property of the result is the highest index number in the current project's resource collection.</span></span>
      type:
      - '(result: AsyncResult<number>) => void'
- uid: office.Office.Document.getMaxTaskIndexAsync
  summary: >-
    <span data-ttu-id="76a42-302">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-302">Project documents only.</span></span> <span data-ttu-id="76a42-303">現在のプロジェクト内のタスクのコレクションの最大のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-303">Get the maximum index of the collection of tasks in the current project.</span></span>


    <span data-ttu-id="76a42-304">重要:この API は、Wndows デスクトップ上の Project 2016 でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="76a42-304">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="76a42-305">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-305">**Support details**</span></span>


    <span data-ttu-id="76a42-p120">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p120">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-308">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-308">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-309">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-309">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-310">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-310">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-311">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-311">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="76a42-312"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-312"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-313">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-313">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-314">例</span><span class="sxs-lookup"><span data-stu-id="76a42-314">Examples</span></span>


    ```javascript

    // The following code example calls getMaxTaskIndexAsync to get the maximum index

    // of the collection of tasks in the current project. Then it uses the returned value

    // with the getTaskByIndexAsync method to get each task GUID.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";
        var taskGuids = ;

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the maximum task index, and then get the task GUIDs.
        function getTaskInfo() {
            getMaxTaskIndex().then(
                function (data) {
                    getTaskGuids(data);
                }
            );
        }

        // Get the maximum index of the tasks for the current project.
        function getMaxTaskIndex() {
            var defer = $.Deferred();
            Office.context.document.getMaxTaskIndexAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get each task GUID, and then display the GUIDs in the add-in.
        function getTaskGuids(maxTaskIndex) {
            var defer = $.Deferred();
            for (var i = 0; i <= maxTaskIndex; i++) {
                getTaskGuid(i);
            }
            return defer.promise();
            function getTaskGuid(index) {
                Office.context.document.getTaskByIndexAsync(index,
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            taskGuids.push(result.value);
                            if (index == maxTaskIndex) {
                                defer.resolve();
                                $('#message').html(taskGuids.toString());
                            }
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
        }
        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getMaxTaskIndexAsync(options, callback)
  fullName: getMaxTaskIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getMaxTaskIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-315">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-315">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-316">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-316">Optional.</span></span> <span data-ttu-id="76a42-317">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-317">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-318">`value` 、結果のプロパティは、現在のプロジェクトのタスクのコレクションで最も大きいインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="76a42-318">The `value` property of the result is the highest index number in the current project's task collection.</span></span>
      type:
      - '(result: AsyncResult<number>) => void'
- uid: office.Office.Document.getProjectFieldAsync
  summary: '<span data-ttu-id="76a42-319">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-319">Project documents only.</span></span> <span data-ttu-id="76a42-320">プロジェクト フィールド (例: を取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-320">Get Project field (Ex.</span></span> <span data-ttu-id="76a42-321">ProjectWebAccessURL)。</span><span class="sxs-lookup"><span data-stu-id="76a42-321">ProjectWebAccessURL).</span></span>'
  remarks: "<span data-ttu-id=\"76a42-322\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-322\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p123\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p123\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-325\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-325\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-326\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-326\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-327\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-327\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-328\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-328\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"76a42-329\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-329\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-330\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-330\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-331\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-331\">Examples</span></span>\n\n```javascript\n// The following code example gets the values of three specified fields for the active project, \n// and then displays the values in the add-in.\n// The example calls getProjectFieldAsync recursively, after the previous call returns successfully.\n// It also tracks the calls to determine when all calls are sent.\n// The example assumes your add-in has a reference to the jQuery library and that the \n// following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // Get information for the active project.\n            getProjectInformation();\n        });\n    };\n\n    // Get the specified fields for the active project.\n    function getProjectInformation() {\n        var fields =\n            [Office.ProjectProjectFields.Start, \n             Office.ProjectProjectFields.Finish, \n             Office.ProjectProjectFields.GUID];\n        var fieldValues = ['Start: ', 'Finish: ', 'GUID: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == fields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n            else {\n                Office.context.document.getProjectFieldAsync(\n                    fields[index],\n                    function (result) {\n\n                        // If the call is successful, get the field value and then get the next field.\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getProjectFieldAsync(fieldId, options, callback)
  fullName: getProjectFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getProjectFieldAsync(fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fieldId
      description: <span data-ttu-id="76a42-332">プロジェクト レベルのフィールドです。</span><span class="sxs-lookup"><span data-stu-id="76a42-332">Project level fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="76a42-333">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-333">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-334">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-334">Optional.</span></span> <span data-ttu-id="76a42-335">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-335">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-336">`value` 、結果のプロパティが含まれています、`fieldValue`プロパティで、指定したフィールドの値を表します。</span><span class="sxs-lookup"><span data-stu-id="76a42-336">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getResourceByIndexAsync
  summary: >-
    <span data-ttu-id="76a42-337">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-337">Project documents only.</span></span> <span data-ttu-id="76a42-338">リソース コレクション内の指定したインデックスを持つリソースの GUID を取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-338">Get the GUID of the resource that has the specified index in the resource collection.</span></span>


    <span data-ttu-id="76a42-339">重要:この API は、Wndows デスクトップ上の Project 2016 でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="76a42-339">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"76a42-340\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-340\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p126\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p126\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-343\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-343\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-344\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-344\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-345\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-345\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-346\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-346\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"76a42-347\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-347\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-348\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-348\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-349\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-349\">Examples</span></span>\n\n```javascript\n// The following code example calls getMaxResourceIndexAsync to get the maximum index in the project's resource\n// collection, and then calls getResourceByIndexAsync to get the GUID for each resource.\n// The example assumes that your add-in has a reference to the jQuery library and that the following \n// page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n    var resourceGuids = ;\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the maximum resource index, and then get the resource GUIDs.\n    function getResourceInfo() {\n        getMaxResourceIndex().then(\n            function (data) {\n                getResourceGuids(data);\n            }\n        );\n    }\n\n    // Get the maximum index of the resources for the current project.\n    function getMaxResourceIndex() {\n        var defer = $.Deferred();\n        Office.context.document.getMaxResourceIndexAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get each resource GUID, and then display the GUIDs in the add-in.\n    // There is no 0 index for resources, so start with index 1.\n    function getResourceGuids(maxResourceIndex) {\n        var defer = $.Deferred();\n        for (var i = 1; i <= maxResourceIndex; i++) {\n            getResourceGuid(i);\n        }\n        return defer.promise();\n        function getResourceGuid(index) {\n            Office.context.document.getResourceByIndexAsync(index,\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resourceGuids.push(result.value);\n                        if (index == maxResourceIndex) {\n                            defer.resolve();\n                            $('#message').html(resourceGuids.toString());\n                        }\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n    }\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getResourceByIndexAsync(resourceIndex, options, callback)
  fullName: getResourceByIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResourceByIndexAsync(resourceIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceIndex
      description: <span data-ttu-id="76a42-350">プロジェクトのリソースのコレクションにあるリソースのインデックス。</span><span class="sxs-lookup"><span data-stu-id="76a42-350">The index of the resource in the collection of resources for the project.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="76a42-351">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-351">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-352">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-352">Optional.</span></span> <span data-ttu-id="76a42-353">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-353">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-354">`value` 、結果のプロパティは、文字列リソースの GUID です。</span><span class="sxs-lookup"><span data-stu-id="76a42-354">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getResourceFieldAsync
  summary: <span data-ttu-id="76a42-355">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-355">Project documents only.</span></span> <span data-ttu-id="76a42-356">指定したリソース id。 (Ex.ResourceName) のリソース フィールドを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-356">Get resource field for provided resource Id. (Ex.ResourceName)</span></span>
  remarks: "<span data-ttu-id=\"76a42-357\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-357\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p129\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p129\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-360\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-360\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-361\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-361\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-362\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-362\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-363\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-363\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"76a42-364\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-364\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-365\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-365\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-366\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-366\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedResourceAsync to get the GUID of the resource\n// that's currently selected in a resource view. Then it gets three resource field values by calling \n// getResourceFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following \n// page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the GUID of the resource and then get the resource fields.\n    function getResourceInfo() {\n        getResourceGuid().then(\n            function (data) {\n                getResourceFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected resource.\n    function getResourceGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected resource.\n    function getResourceFields(resourceGuid) {\n        var targetFields =\n            [Office.ProjectResourceFields.Name,\n             Office.ProjectResourceFields.Units, \n             Office.ProjectResourceFields.BaseCalendar];\n        var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // If the call is successful, get the field value and then get the next field.\n            else {\n                Office.context.document.getResourceFieldAsync(\n                    resourceGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getResourceFieldAsync(resourceId, fieldId, options, callback)
  fullName: getResourceFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResourceFieldAsync(resourceId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceId
      description: <span data-ttu-id="76a42-367">文字列またはリソース id の値のいずれか</span><span class="sxs-lookup"><span data-stu-id="76a42-367">Either a string or value of the Resource Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="76a42-368">リソース フィールドです。</span><span class="sxs-lookup"><span data-stu-id="76a42-368">Resource Fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="76a42-369">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-369">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-370">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-370">Optional.</span></span> <span data-ttu-id="76a42-371">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-371">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-372">`value` 、結果のプロパティは、文字列リソースの GUID です。</span><span class="sxs-lookup"><span data-stu-id="76a42-372">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedDataAsync
  summary: <span data-ttu-id="76a42-373">ドキュメントの現在の選択範囲に含まれるデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="76a42-373">Reads the data contained in the current selection in the document.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"76a42-374\">要件の設定</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-374\">Requirement Sets</span></span></td><td><span data-ttu-id=\"76a42-375\">Selection</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-375\">Selection</span></span></td></tr></table>\n\n<span data-ttu-id=\"76a42-376\">GetSelectedDataAsync メソッドに渡されるコールバック関数では、次の情報を返す AsyncResult オブジェクトのプロパティを使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-376\">In the callback function that is passed to the getSelectedDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"76a42-377\">プロパティ</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-377\">Property</span></span></th> <th><span data-ttu-id=\"76a42-378\">使用目的</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-378\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"76a42-379\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-379\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"76a42-380\">オブジェクトまたは取得するデータがないためには、undefined を返します常にします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-380\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-381\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-381\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"76a42-382\">操作の成功または失敗を判断します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-382\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-383\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-383\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"76a42-384\">操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-384\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-385\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-385\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"76a42-386\">変更されずに AsyncResult オブジェクトで返される任意の型のユーザー定義項目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-386\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"76a42-387\">[Office.CoercionType](xref:office.Office.CoercionType)パラメーターに指定できる値は、ホストによって異なります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-387\">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"76a42-388\">Host</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-388\">Host</span></span></th> <th><span data-ttu-id=\"76a42-389\">サポートされる coercionType</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-389\">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id=\"76a42-390\">Excel、PowerPoint、プロジェクト、および Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-390\">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id=\"76a42-391\">`Office.CoercionType.Text`(文字列)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-391\">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-392\">Excel および Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-392\">Excel and Word</span></span></td> <td><span data-ttu-id=\"76a42-393\">`Office.CoercionType.Matrix`(配列の配列)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-393\">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-394\">Access、Excel、および Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-394\">Access, Excel, and Word</span></span></td> <td><span data-ttu-id=\"76a42-395\">`Office.CoercionType.Table`(TableData オブジェクト)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-395\">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-396\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-396\">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id=\"76a42-397\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-397\">Word</span></span></td> <td><span data-ttu-id=\"76a42-398\">`Office.CoercionType.Ooxml`(Office オープン XML)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-398\">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-399\">PowerPoint、PowerPoint Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-399\">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> </table>\n\n<span data-ttu-id=\"76a42-400\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-400\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p131\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p131\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-403\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-403\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-404\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-404\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-405\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-405\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-406\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-406\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-407\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-407\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"76a42-408\">Office for Mac?</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-408\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-409\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-409\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"76a42-410\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-410\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-411\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-411\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-412\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-412\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-413\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-413\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-414\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-414\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"76a42-415\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-415\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-416\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-416\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-417\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-417\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-418\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-418\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-419\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-419\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-420\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-420\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-421\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-421\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-422\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-422\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-423\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-423\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-424\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-424\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-425\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-425\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-426\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-426\">Examples</span></span>\n\n```javascript\n// The following example uses the getSelectedDataAsync method of the Document object to retrieve the\n// user's current selection as text, and then display it in the add-in's page.\n\n// Display the user's current selection.\nfunction showSelection() {\n    Office.context.document.getSelectedDataAsync(\n        \"text\",                        // coercionType\n        {valueFormat: \"unformatted\",   // valueFormat\n        filterType: \"all\"},            // filterType\n        function (result) {            // callback\n            var dataValue; \n            dataValue = result.value;\n            write('Selected data is: ' + dataValue);\n        });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To read the value of the current selection, you need to write a callback function that reads the selection.\n// The following example shows how to:\n// 1. Pass an anonymous callback function that reads the value of the current selection\n//    to the callback parameter of the getSelectedDataAsync method.\n// 2. Read the selection as text, unformatted, and not filtered.\n// 3. Display the value on the add-in's page.\nfunction getText() {\n    Office.context.document.getSelectedDataAsync(Office.CoercionType.Text, \n        { valueFormat: \"unformatted\", filterType: \"all\" },\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                write(error.name + \": \" + error.message);\n            } \n            else {\n                // Get selected data.\n                var dataValue = asyncResult.value; \n                write('Selected data is ' + dataValue);\n            }            \n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following code example gets the values of the selected cells. It uses the optional\n// asyncContext parameter to pass some text to the callback function.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getSelectedText);\n        });\n    };\n\n    // Get the text from the selected cells in the document, and display it in the add-in.\n    function getSelectedText() {\n        Office.context.document.getSelectedDataAsync(\n            Office.CoercionType.Text,\n            {asyncContext: 'Some related info'},\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var output = String.format(\n                        'Selected text: {0}<br/>Passed info: {1}',\n                        result.value, result.asyncContext);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getSelectedDataAsync(coerciontype, options, callback)
  fullName: getSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync<T>(coerciontype: Office.CoercionType, options?: GetSelectedDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: coerciontype
      description: ''
      type:
      - office.Office.CoercionType
    - id: options
      description: <span data-ttu-id="76a42-427">どのようなデータが返され、書式設定方法をカスタマイズするオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-427">Provides options for customizing what data is returned and how it is formatted.</span></span>
      type:
      - office.Office.GetSelectedDataOptions
    - id: callback
      description: <span data-ttu-id="76a42-428">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-428">Optional.</span></span> <span data-ttu-id="76a42-429">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-429">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-430">`value` 、結果のプロパティは、現在の選択範囲内のデータ。</span><span class="sxs-lookup"><span data-stu-id="76a42-430">The `value` property of the result is the data in the current selection.</span></span> <span data-ttu-id="76a42-431">これは、データ構造体または coercionType パラメーターで指定した形式で返されます。</span><span class="sxs-lookup"><span data-stu-id="76a42-431">This is returned in the data structure or format you specified with the coercionType parameter.</span></span> <span data-ttu-id="76a42-432">(データの強制型変換の詳細については、「注釈」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="76a42-432">(See Remarks for more information about data coercion.)</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Document.getSelectedResourceAsync
  summary: <span data-ttu-id="76a42-433">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-433">Project documents only.</span></span> <span data-ttu-id="76a42-434">現在選択されているリソースの id を取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-434">Get the current selected Resource's Id.</span></span>
  remarks: "<span data-ttu-id=\"76a42-435\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-435\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p134\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p134\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-438\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-438\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-439\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-439\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-440\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-440\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-441\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-441\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"76a42-442\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-442\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-443\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-443\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-444\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-444\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedResourceAsync to get the GUID of the resource that's \n// currently selected in a resource view. Then it gets three resource field values by calling \n// getResourceFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following page controls are\n// defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the GUID of the resource and then get the resource fields.\n    function getResourceInfo() {\n        getResourceGuid().then(\n            function (data) {\n                getResourceFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected resource.\n    function getResourceGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected resource.\n    function getResourceFields(resourceGuid) {\n        var targetFields =\n            [Office.ProjectResourceFields.Name,\n             Office.ProjectResourceFields.Units, \n             Office.ProjectResourceFields.BaseCalendar];\n        var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // If the call is successful, get the field value and then get the next field.\n            else {\n                Office.context.document.getResourceFieldAsync(\n                    resourceGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getSelectedResourceAsync(options, callback)
  fullName: getSelectedResourceAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedResourceAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-445">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-445">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-446">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-446">Optional.</span></span> <span data-ttu-id="76a42-447">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-447">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-448">`value` 、結果のプロパティは、文字列リソースの GUID です。</span><span class="sxs-lookup"><span data-stu-id="76a42-448">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedTaskAsync
  summary: <span data-ttu-id="76a42-449">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-449">Project documents only.</span></span> <span data-ttu-id="76a42-450">現在選択されているタスクの id を取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-450">Get the current selected Task's Id.</span></span>
  remarks: >-
    <span data-ttu-id="76a42-451">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-451">**Support details**</span></span>


    <span data-ttu-id="76a42-p137">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p137">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-454">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-454">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-455">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-455">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-456">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-456">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-457">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-457">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="76a42-458"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-458"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-459">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-459">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-460">例</span><span class="sxs-lookup"><span data-stu-id="76a42-460">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently

    // selected in a task view. Then it gets task properties by calling getTaskAsync.

    // The example assumes your add-in has a reference to the jQuery library and that the following page

    // controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                $('#get-info').click(getTaskInfo);
            });
        };

        // // Get the GUID of the task, and then get local task properties.
        function getTaskInfo() {
            getTaskGuid().then(
                function (data) {
                    getTaskProperties(data);
                }
            );
        }

        // Get the GUID of the selected task.
        function getTaskGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedTaskAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get local properties for the selected task, and then display it in the add-in.
        function getTaskProperties(taskGuid) {
            Office.context.document.getTaskAsync(
                taskGuid,
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var taskInfo = result.value;
                        var output = String.format(
                            'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                            taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getSelectedTaskAsync(options, callback)
  fullName: getSelectedTaskAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedTaskAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-461">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-461">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-462">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-462">Optional.</span></span> <span data-ttu-id="76a42-463">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-463">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-464">`value` 、結果のプロパティは、文字列リソースの GUID です。</span><span class="sxs-lookup"><span data-stu-id="76a42-464">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedViewAsync
  summary: '<span data-ttu-id="76a42-465">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-465">Project documents only.</span></span> <span data-ttu-id="76a42-466">現在選択されているビューの種類 (例: を取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-466">Get the current selected View Type (Ex.</span></span> <span data-ttu-id="76a42-467">ガント) 名を表示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-467">Gantt) and View Name.</span></span>'
  remarks: >-
    <span data-ttu-id="76a42-468">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-468">**Support details**</span></span>


    <span data-ttu-id="76a42-p140">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p140">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-471">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-471">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-472">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-472">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-473">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-473">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-474">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-474">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="76a42-475"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-475"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-476">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-476">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-477">例</span><span class="sxs-lookup"><span data-stu-id="76a42-477">Examples</span></span>


    ```javascript

    // The following code example calls adds a ViewSelectionChanged event handler that

    // calls getSelectedViewAsync to get the name and type of the active view in the document.

    // The example assumes your add-in has a reference to the jQuery library and that

    // the following page control is defined in the content div in the page body:

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                Office.context.document.addHandlerAsync(
                    Office.EventType.ViewSelectionChanged,
                    getActiveView);
                getActiveView();
            });
        };

        // Get the active view's name and type.
        function getActiveView() {
            Office.context.document.getSelectedViewAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var output = String.format(
                            'View name: {0}<br/>View type: {1}',
                            result.value.viewName, viewType);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getSelectedViewAsync(options, callback)
  fullName: getSelectedViewAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-478">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-478">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="76a42-479">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-479">Optional.</span></span> <span data-ttu-id="76a42-480">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-480">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-481">`value` 、結果のプロパティには、次のプロパティが含まれています: `viewName` -ProjectViewTypes の定数として、ビューの名前。</span><span class="sxs-lookup"><span data-stu-id="76a42-481">The `value` property of the result contains the following properties: `viewName` - The name of the view, as a ProjectViewTypes constant.</span></span> <span data-ttu-id="76a42-482">`viewType`-ProjectViewTypes 定数の整数値としてのビューの種類です。</span><span class="sxs-lookup"><span data-stu-id="76a42-482">`viewType` - The type of view, as the integer value of a ProjectViewTypes constant.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getTaskAsync
  summary: <span data-ttu-id="76a42-483">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-483">Project documents only.</span></span> <span data-ttu-id="76a42-484">WSS タスク Id、およびの ResourceNames get タスクの名前、引数 taskId を指定します。</span><span class="sxs-lookup"><span data-stu-id="76a42-484">Get the Task Name, WSS Task Id, and ResourceNames for given taskId.</span></span>
  remarks: >-
    <span data-ttu-id="76a42-485">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-485">**Support details**</span></span>


    <span data-ttu-id="76a42-p143">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p143">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-488">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-488">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-489">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-489">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-490">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-490">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-491">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-491">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="76a42-492"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-492"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-493">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-493">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-494">例</span><span class="sxs-lookup"><span data-stu-id="76a42-494">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedTaskAsync to get the task GUID of the currently

    // selected task. Then it calls getTaskAsync to get the properties for the task that are

    // available from the JavaScript API for Office.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the GUID of the task, and then get local task properties.
        function getTaskInfo() {
            getTaskGuid().then(
                function (data) {
                    getTaskProperties(data);
                }
            );
        }

        // Get the GUID of the selected task.
        function getTaskGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedTaskAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get local properties for the selected task, and then display it in the add-in.
        function getTaskProperties(taskGuid) {
            Office.context.document.getTaskAsync(
                taskGuid,
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var taskInfo = result.value;
                        var output = String.format(
                            'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                            taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getTaskAsync(taskId, options, callback)
  fullName: getTaskAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskAsync(taskId: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="76a42-495">文字列またはタスク id の値のいずれか</span><span class="sxs-lookup"><span data-stu-id="76a42-495">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="76a42-496">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-496">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="76a42-497">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-497">Optional.</span></span> <span data-ttu-id="76a42-498">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-498">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-499">`value` 、結果のプロパティには、次のプロパティが含まれています: `taskName` -タスクの名前。</span><span class="sxs-lookup"><span data-stu-id="76a42-499">The `value` property of the result contains the following properties: `taskName` - The name of the task.</span></span> <span data-ttu-id="76a42-500">`wssTaskId`-同期済みの SharePoint タスク リスト内のタスクの ID です。</span><span class="sxs-lookup"><span data-stu-id="76a42-500">`wssTaskId` - The ID of the task in the synchronized SharePoint task list.</span></span> <span data-ttu-id="76a42-501">SharePoint タスク リストとプロジェクトが同期していない場合、値は 0 になります。</span><span class="sxs-lookup"><span data-stu-id="76a42-501">If the project is not synchronized with a SharePoint task list, the value is 0.</span></span> <span data-ttu-id="76a42-502">`resourceNames`-カンマで区切られたリストのタスクに割り当てられているリソースの名前。</span><span class="sxs-lookup"><span data-stu-id="76a42-502">`resourceNames` - The comma-separated list of the names of resources that are assigned to the task.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getTaskByIndexAsync
  summary: >-
    <span data-ttu-id="76a42-503">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-503">Project documents only.</span></span> <span data-ttu-id="76a42-504">タスクのコレクションで指定されたインデックスを持つタスクの GUID を取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-504">Get the GUID of the task that has the specified index in the task collection.</span></span>


    <span data-ttu-id="76a42-505">重要:この API は、Wndows デスクトップ上の Project 2016 でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="76a42-505">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="76a42-506">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-506">**Support details**</span></span>


    <span data-ttu-id="76a42-p146">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p146">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-509">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-509">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-510">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-510">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-511">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-511">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-512">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-512">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="76a42-513"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-513"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-514">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-514">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-515">例</span><span class="sxs-lookup"><span data-stu-id="76a42-515">Examples</span></span>


    ```javascript

    // The following code example calls getMaxTaskIndexAsync to get the

    // maximum index in the project's task collection, and then

    // calls getTaskByIndexAsync to get the GUID for each task.

    // The example assumes that your add-in has a reference to the

    // jQuery library and that the following page controls are defined

    // in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";
        var taskGuids = ;

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the maximum task index, and then get the task GUIDs.
        function getTaskInfo() {
            getMaxTaskIndex().then(
                function (data) {
                    getTaskGuids(data);
                }
            );
        }

        // Get the maximum index of the tasks for the current project.
        function getMaxTaskIndex() {
            var defer = $.Deferred();
            Office.context.document.getMaxTaskIndexAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get each task GUID, and then display the GUIDs in the add-in.
        function getTaskGuids(maxTaskIndex) {
            var defer = $.Deferred();
            for (var i = 0; i <= maxTaskIndex; i++) {
                getTaskGuid(i);
            }
            return defer.promise();
            function getTaskGuid(index) {
                Office.context.document.getTaskByIndexAsync(index,
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            taskGuids.push(result.value);
                            if (index == maxTaskIndex) {
                                defer.resolve();
                                $('#message').html(taskGuids.toString());
                            }
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
        }
        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getTaskByIndexAsync(taskIndex, options, callback)
  fullName: getTaskByIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskByIndexAsync(taskIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskIndex
      description: <span data-ttu-id="76a42-516">プロジェクトのタスクのコレクションにあるタスクのインデックス。</span><span class="sxs-lookup"><span data-stu-id="76a42-516">The index of the task in the collection of tasks for the project.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="76a42-517">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-517">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-518">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-518">Optional.</span></span> <span data-ttu-id="76a42-519">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-519">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-520">`value` 、結果のプロパティは、文字列としてタスクの GUID です。</span><span class="sxs-lookup"><span data-stu-id="76a42-520">The `value` property of the result is the GUID of the task as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getTaskFieldAsync
  summary: '<span data-ttu-id="76a42-521">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-521">Project documents only.</span></span> <span data-ttu-id="76a42-522">指定されたタスクの id。 (例: のタスク フィールドを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-522">Get task field for provided task Id. (Ex.</span></span> <span data-ttu-id="76a42-523">開始日) です。</span><span class="sxs-lookup"><span data-stu-id="76a42-523">StartDate).</span></span>'
  remarks: "<span data-ttu-id=\"76a42-524\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-524\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p149\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p149\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-527\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-527\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-528\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-528\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-529\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-529\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-530\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-530\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"76a42-531\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-531\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-532\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-532\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-533\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-533\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently\n// selected in a task view. Then it gets two task field values by calling getTaskFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following page\n// controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n            \n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getTaskInfo);\n        });\n    };\n\n    // Get the GUID of the task, and then get the task fields.\n    function getTaskInfo() {\n        getTaskGuid().then(\n            function (data) {\n                getTaskFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected task.\n    function getTaskGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected task.\n    function getTaskFields(taskGuid) {\n        var output = '';\n        var targetFields = [Office.ProjectTaskFields.Priority, Office.ProjectTaskFields.PercentComplete];\n        var fieldValues = ['Priority: ', '% Complete: '];\n        var index = 0;\n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // Get the field value. If the call is successful, then get the next field.\n            else {\n                Office.context.document.getTaskFieldAsync(\n                    taskGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getTaskFieldAsync(taskId, fieldId, options, callback)
  fullName: getTaskFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskFieldAsync(taskId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="76a42-534">文字列またはタスク id の値のいずれか</span><span class="sxs-lookup"><span data-stu-id="76a42-534">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="76a42-535">タスクのフィールドです。</span><span class="sxs-lookup"><span data-stu-id="76a42-535">Task Fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="76a42-536">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-536">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-537">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-537">Optional.</span></span> <span data-ttu-id="76a42-538">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-538">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-539">`value` 、結果のプロパティが含まれています、`fieldValue`プロパティで、指定したフィールドの値を表します。</span><span class="sxs-lookup"><span data-stu-id="76a42-539">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getWSSUrlAsync
  summary: <span data-ttu-id="76a42-540">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-540">Project documents only.</span></span> <span data-ttu-id="76a42-541">タスク リストの WSS の Url およびリストの名前を取得する、すぎる、MPP が同期します。</span><span class="sxs-lookup"><span data-stu-id="76a42-541">Get the WSS Url and list name for the Tasks List, the MPP is synced too.</span></span>
  remarks: >-
    <span data-ttu-id="76a42-542">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-542">**Support details**</span></span>


    <span data-ttu-id="76a42-p152">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p152">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-545">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-545">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-546">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-546">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-547">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-547">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-548">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-548">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="76a42-549"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-549"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-550">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-550">Y</span></span> </td><td> </td></tr> </table>
  name: getWSSUrlAsync(options, callback)
  fullName: getWSSUrlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getWSSUrlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="76a42-551">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-551">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="76a42-552">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-552">Optional.</span></span> <span data-ttu-id="76a42-553">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-553">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-554">`value` 、結果のプロパティには、次のプロパティが含まれています: `listName` -同期の SharePoint タスク リストの名前。</span><span class="sxs-lookup"><span data-stu-id="76a42-554">The `value` property of the result contains the following properties: `listName` - the name of the synchronized SharePoint task list.</span></span> <span data-ttu-id="76a42-555">`serverUrl`-同期済みの SharePoint タスク リストの URL。</span><span class="sxs-lookup"><span data-stu-id="76a42-555">`serverUrl` - the URL of the synchronized SharePoint task list.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.goToByIdAsync
  summary: <span data-ttu-id="76a42-556">ドキュメント内の指定されたオブジェクトまたは場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="76a42-556">Goes to the specified object or location in the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="76a42-557">要件の設定</span><span class="sxs-lookup"><span data-stu-id="76a42-557">Requirement Sets</span></span></td><td><span data-ttu-id="76a42-558">セットではなく</span><span class="sxs-lookup"><span data-stu-id="76a42-558">not in a set</span></span></td></tr></table>


    <span data-ttu-id="76a42-559">PowerPoint では、マスター ビューで、goToByIdAsync メソッドをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="76a42-559">PowerPoint doesn't support the goToByIdAsync method in Master Views.</span></span>


    <span data-ttu-id="76a42-560">SelectionMode オプションが原因で発生する動作は、ホストによって異なります。</span><span class="sxs-lookup"><span data-stu-id="76a42-560">The behavior caused by the selectionMode option varies by host:</span></span>


    <span data-ttu-id="76a42-561">Excel の場合: `Office.SelectionMode.Selected` 、バインディング、または名前付きの項目にすべてのコンテンツを選択します。</span><span class="sxs-lookup"><span data-stu-id="76a42-561">In Excel: `Office.SelectionMode.Selected` selects all content in the binding, or named item.</span></span> <span data-ttu-id="76a42-562">Office.SelectionMode.None では、テキスト バインドの場合は、セルを選択します。マトリックス バインド、テーブル バインド、および名前付きアイテムの場合は、最初のデータ セルを選択します (テーブルの見出し行の最初のセルではありません)。</span><span class="sxs-lookup"><span data-stu-id="76a42-562">Office.SelectionMode.None for text bindings, selects the cell; for matrix bindings, table bindings, and named items, selects the first data cell (not first cell in header row for tables).</span></span>


    <span data-ttu-id="76a42-563">PowerPoint の場合: `Office.SelectionMode.Selected` 、タイトルのスライドまたはスライド上の最初のテキスト ボックスを選択します。</span><span class="sxs-lookup"><span data-stu-id="76a42-563">In PowerPoint: `Office.SelectionMode.Selected` selects the slide title or first textbox on the slide.</span></span> <span data-ttu-id="76a42-564">`Office.SelectionMode.None`何もを選択されません。</span><span class="sxs-lookup"><span data-stu-id="76a42-564">`Office.SelectionMode.None` doesn't select anything.</span></span>


    <span data-ttu-id="76a42-565">単語: `Office.SelectionMode.Selected` 、バインディングのすべてのコンテンツを選択します。</span><span class="sxs-lookup"><span data-stu-id="76a42-565">In Word: `Office.SelectionMode.Selected` selects all content in the binding.</span></span> <span data-ttu-id="76a42-566">Office.SelectionMode.None では、テキスト バインドの場合はテキストの最初までカーソルを移動します。マトリックス バインドとテーブル バインドの場合は、最初のデータ セルを選択します (テーブルの見出し行の最初のセルではありません)。</span><span class="sxs-lookup"><span data-stu-id="76a42-566">Office.SelectionMode.None for text bindings, moves the cursor to the beginning of the text; for matrix bindings and table bindings, selects the first data cell (not first cell in header row for tables).</span></span>


    <span data-ttu-id="76a42-567">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-567">**Support details**</span></span>


    <span data-ttu-id="76a42-p157">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p157">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-570">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-570">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-571">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-571">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-572">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-572">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-573">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-573">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="76a42-574">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="76a42-574">Office for iPad</span></span> </th><th> <span data-ttu-id="76a42-575">Office for Mac?</span><span class="sxs-lookup"><span data-stu-id="76a42-575">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="76a42-576"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-576"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="76a42-577">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-577">Y</span></span> </td><td> <span data-ttu-id="76a42-578">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-578">Y</span></span> </td><td> <span data-ttu-id="76a42-579">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-579">Y</span></span> </td><td> <span data-ttu-id="76a42-580">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-580">Y</span></span> </td></tr> <tr><td><span data-ttu-id="76a42-581"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-581"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="76a42-582">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-582">Y</span></span> </td><td> <span data-ttu-id="76a42-583">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-583">Y</span></span> </td><td> <span data-ttu-id="76a42-584">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-584">Y</span></span> </td><td> <span data-ttu-id="76a42-585">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-585">Y</span></span> </td></tr> <tr><td><span data-ttu-id="76a42-586"><strong>単語</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-586"><strong> Word </strong></span></span></td><td> <span data-ttu-id="76a42-587">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-587">Y</span></span> </td><td> </td><td> <span data-ttu-id="76a42-588">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-588">Y</span></span> </td><td> <span data-ttu-id="76a42-589">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-589">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-590">例</span><span class="sxs-lookup"><span data-stu-id="76a42-590">Examples</span></span>


    ```javascript

    // Go to a binding by id (Word and Excel)

    // The following example shows how to:

    // 1. Create a table binding using the addFromSelectionAsync method as a sample binding to work with.

    // 2. Specify that binding as the binding to go to.

    // 3. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 4. Display the value on the add-in's page.

    function gotoBinding() {
        // Create a new table binding for the selected table.
        Office.context.document.bindings.addFromSelectionAsync("table",{ id: "MyTableBinding" }, function (asyncResult) {
        if (asyncResult.status == "failed") {
                  showMessage("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  showMessage("Added new binding with type: " + asyncResult.value.type +" and id: " + asyncResult.value.id);
              }
        });

        // Go to binding by id.
        Office.context.document.goToByIdAsync("MyTableBinding", Office.GoToType.Binding, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }


    // Go to a table in a spreadsheet (Excel)

    // The following example shows how to:

    // 1. Specify a table by name as the table to go to.

    // 2. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 3. Display the value on the add-in's page.

    function goToTable() {
        Office.context.document.goToByIdAsync("Table1", Office.GoToType.NamedItem, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }


    // Go to the currently selected slide by id (PowerPoint)

    // The following example shows how to:

    // 1. Get the id of the currently selected slides using the getSelectedDataAsync method.

    // 2. Specify the returned id as the slide to go to.

    // 3. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 4. Display the value of the stringified JSON object returned by asyncResult.value,

    //    which contains information about the selected slides, on the add-in's page.

    var firstSlideId = 0;

    function gotoSelectedSlide() {
        //Get currently selected slide's id
        Office.context.document.getSelectedDataAsync(Office.CoercionType.SlideRange, function (asyncResult) {
            if (asyncResult.status == "failed") {
                app.showNotification("Action failed with error: " + asyncResult.error.message);
            }
            else {
                firstSlideId = asyncResult.value.slides[0].id;
                app.showNotification(JSON.stringify(asyncResult.value));
            }
        });
        //Go to slide by id.
        Office.context.document.goToByIdAsync(firstSlideId, Office.GoToType.Slide, function (asyncResult) {
            if (asyncResult.status == "failed") {
                app.showNotification("Action failed with error: " + asyncResult.error.message);
            }
            else {
                app.showNotification("Navigation successful");
            }
        });
    }


    // Go to slide by index (PowerPoint)

    // The following example shows how to:

    // 1. Specify the index of the first, last, previous, or next slide to go to.

    // 2. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 3. Display the value on the add-in's page.

    function goToSlideByIndex() {
        var goToFirst = Office.Index.First;
        var goToLast = Office.Index.Last;
        var goToPrevious = Office.Index.Previous;
        var goToNext = Office.Index.Next;

        Office.context.document.goToByIdAsync(goToNext, Office.GoToType.Index, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }

    ```
  name: goToByIdAsync(id, goToType, options, callback)
  fullName: goToByIdAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'goToByIdAsync(id: string | number, goToType: GoToType, options?: GoToByIdOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="76a42-591">場所に移動するのには、オブジェクトの識別子です。</span><span class="sxs-lookup"><span data-stu-id="76a42-591">The identifier of the object or location to go to.</span></span>
      type:
      - string | number
    - id: goToType
      description: <span data-ttu-id="76a42-592">移動する場所の型。</span><span class="sxs-lookup"><span data-stu-id="76a42-592">The type of the location to go to.</span></span>
      type:
      - office.Office.GoToType
    - id: options
      description: <span data-ttu-id="76a42-593">移動先の場所を選択するかどうかのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-593">Provides options for whether to select the location that is navigated to.</span></span>
      type:
      - office.Office.GoToByIdOptions
    - id: callback
      description: <span data-ttu-id="76a42-594">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-594">Optional.</span></span> <span data-ttu-id="76a42-595">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-595">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-596">`value` 、結果のプロパティは、現在のビューです。</span><span class="sxs-lookup"><span data-stu-id="76a42-596">The `value` property of the result is the current view.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.mode
  summary: <span data-ttu-id="76a42-597">ドキュメントのモードを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-597">Gets the mode the document is in.</span></span>
  remarks: "<span data-ttu-id=\"76a42-598\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-598\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p159\">次の表で、大文字 Y は、このプロパティは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのプロパティをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p159\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"76a42-601\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-601\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-602\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-602\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-603\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-603\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-604\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-604\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-605\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-605\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"76a42-606\">Office for Mac?</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-606\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-607\"><strong>アクセス</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-607\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"76a42-608\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-608\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-609\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-609\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"76a42-610\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-610\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-611\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-611\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-612\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-612\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-613\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-613\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-614\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-614\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"76a42-615\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-615\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-616\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-616\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-617\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-617\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-618\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-618\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-619\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-619\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-620\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-620\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-621\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-621\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-622\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-622\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-623\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-623\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-624\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-624\">Examples</span></span>\n\n```javascript\nfunction displayDocumentMode() {\n    write(Office.context.document.mode);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following example initializes the add-in and then gets properties of the\n// Document object that are available in the context of a Project document.\n// A Project document is the opened, active project. To access members of the\n// ProjectDocument object, use the Office.context.document object as shown in\n// the code examples for ProjectDocument methods and events.\n// The example assumes your add-in has a reference to the jQuery library and\n// that the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // Get information about the document.\n            showDocumentProperties();\n        });\n    };\n\n    // Get the document mode and the URL of the active project.\n    function showDocumentProperties() {\n        var output = String.format(\n            'The document mode is {0}.<br/>The URL of the active project is {1}.',\n            Office.context.document.mode,\n            Office.context.document.url);\n        $('#message').html(output);\n    }\n})();\n```"
  name: mode
  fullName: mode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'mode: DocumentMode;'
    return:
      type:
      - office.Office.DocumentMode
- uid: office.Office.Document.removeHandlerAsync
  summary: <span data-ttu-id="76a42-625">指定されたイベントの種類のイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="76a42-625">Removes an event handler for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="76a42-626">要件の設定</span><span class="sxs-lookup"><span data-stu-id="76a42-626">Requirement Sets</span></span></td><td><span data-ttu-id="76a42-627">DocumentEvents</span><span class="sxs-lookup"><span data-stu-id="76a42-627">DocumentEvents</span></span></td></tr></table>


    <span data-ttu-id="76a42-628">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-628">**Support details**</span></span>


    <span data-ttu-id="76a42-p160">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p160">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-631">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-631">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-632">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-632">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-633">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-633">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-634">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-634">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="76a42-635">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="76a42-635">Office for iPad</span></span> </th><th> <span data-ttu-id="76a42-636">Office for Mac?</span><span class="sxs-lookup"><span data-stu-id="76a42-636">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="76a42-637"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-637"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="76a42-638">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-638">Y</span></span> </td><td> <span data-ttu-id="76a42-639">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-639">Y</span></span> </td><td> <span data-ttu-id="76a42-640">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-640">Y</span></span> </td><td> <span data-ttu-id="76a42-641">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-641">Y</span></span> </td></tr> <tr><td><span data-ttu-id="76a42-642"><strong>OneNote</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-642"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id="76a42-643">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-643">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="76a42-644"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-644"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="76a42-645">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-645">Y</span></span> </td><td> <span data-ttu-id="76a42-646">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-646">Y</span></span> </td><td> <span data-ttu-id="76a42-647">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-647">Y</span></span> </td><td> <span data-ttu-id="76a42-648">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-648">Y</span></span> </td></tr> <tr><td><span data-ttu-id="76a42-649"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-649"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-650">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-650">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="76a42-651"><strong>単語</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-651"><strong> Word </strong></span></span></td><td> <span data-ttu-id="76a42-652">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-652">Y</span></span> </td><td> <span data-ttu-id="76a42-653">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-653">Y</span></span> </td><td> <span data-ttu-id="76a42-654">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-654">Y</span></span> </td><td> <span data-ttu-id="76a42-655">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-655">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-656">例</span><span class="sxs-lookup"><span data-stu-id="76a42-656">Examples</span></span>


    ```javascript

    // The following example removes the event handler named 'MyHandler'.

    function removeSelectionChangedEventHandler() {
        Office.context.document.removeHandlerAsync(Office.EventType.DocumentSelectionChanged, {handler:MyHandler});
    }


    function MyHandler(eventArgs) {
        doSomethingWithDocument(eventArgs.document);
    }

    ```

    ```javascript

    // The following code example uses addHandlerAsync to add an event handler for the

    // ResourceSelectionChanged event and removeHandlerAsync to remove the handler.

    // When a resource is selected in a resource view, the handler displays the

    // resource GUID. When the handler is removed, the GUID is not displayed.

    // The example assumes that your add-in has a reference to the jQuery library and

    // that the following page control is defined in the content div in the page body:

    // <input id="remove-handler" type="button" value="Remove handler" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                Office.context.document.addHandlerAsync(
                    Office.EventType.ResourceSelectionChanged,
                    getResourceGuid);
                $('#remove-handler').click(removeEventHandler);
            });
        };

        // Remove the event handler.
        function removeEventHandler() {
            Office.context.document.removeHandlerAsync(
                Office.EventType.ResourceSelectionChanged,
                {handler:getResourceGuid,
                asyncContext:'The handler is removed.'},
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        $('#remove-handler').attr('disabled', 'disabled');
                        $('#message').html(result.asyncContext);
                    }
                }
            );
        }

        // Get the GUID of the currently selected resource and display it in the add-in.
        function getResourceGuid() {
            Office.context.document.getSelectedResourceAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        $('#message').html('Resource GUID: ' + result.value);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="76a42-657">イベントの種類。</span><span class="sxs-lookup"><span data-stu-id="76a42-657">The event type.</span></span> <span data-ttu-id="76a42-658">ドキュメントの 'Document.SelectionChanged' または 'Document.ActiveViewChanged' をすることができます。</span><span class="sxs-lookup"><span data-stu-id="76a42-658">For document can be 'Document.SelectionChanged' or 'Document.ActiveViewChanged'.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="76a42-659">どのイベント ハンドラーまたはハンドラーを削除するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-659">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="76a42-660">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-660">Optional.</span></span> <span data-ttu-id="76a42-661">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-661">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setResourceFieldAsync
  summary: >-
    <span data-ttu-id="76a42-662">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-662">Project documents only.</span></span> <span data-ttu-id="76a42-663">設定リソース フィールドを指定したリソース id。</span><span class="sxs-lookup"><span data-stu-id="76a42-663">Set resource field for specified resource Id.</span></span>


    <span data-ttu-id="76a42-664">重要:この API は、Wndows デスクトップ上の Project 2016 でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="76a42-664">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="76a42-665">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-665">**Support details**</span></span>


    <span data-ttu-id="76a42-p164">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p164">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="76a42-668">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-668">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-669">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-669">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-670">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-670">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-671">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-671">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="76a42-672"><strong>プロジェクト</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-672"><strong> Project </strong></span></span></td><td> <span data-ttu-id="76a42-673">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-673">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="76a42-674">例</span><span class="sxs-lookup"><span data-stu-id="76a42-674">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedResourceAsync to get the GUID of the resource that's

    // currently selected in a resource view. Then it sets two resource field values by calling

    // setResourceFieldAsync recursively.

    // The getSelectedTaskAsync method used in the example requires that a task view

    // (for example, Task Usage) is the active view and that a task is selected. See the addHandlerAsync

    // method for an example that activates a button based on the active view type.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="set-info" type="button" value="Set info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#set-info').click(setResourceInfo);
            });
        };

        // Get the GUID of the resource, and then get the resource fields.
        function setResourceInfo() {
            getResourceGuid().then(
                function (data) {
                    setResourceFields(data);
                }
            );
        }

        // Get the GUID of the selected resource.
        function getResourceGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedResourceAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Set the specified fields for the selected resource.
        function setResourceFields(resourceGuid) {
            var targetFields = [Office.ProjectResourceFields.StandardRate, Office.ProjectResourceFields.Notes];
            var fieldValues = [.28, 'Notes for the resource.'];

            // Set the field value. If the call is successful, set the next field.
            for (var i = 0; i < targetFields.length; i++) {
                Office.context.document.setResourceFieldAsync(
                    resourceGuid,
                    targetFields[i],
                    fieldValues[i],
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            i++;
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
            $('#message').html('Field values set');
        }

        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: setResourceFieldAsync(resourceId, fieldId, fieldValue, options, callback)
  fullName: setResourceFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setResourceFieldAsync(resourceId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceId
      description: <span data-ttu-id="76a42-675">文字列またはリソース id の値のいずれか</span><span class="sxs-lookup"><span data-stu-id="76a42-675">Either a string or value of the Resource Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="76a42-676">リソース フィールドです。</span><span class="sxs-lookup"><span data-stu-id="76a42-676">Resource Fields.</span></span>
      type:
      - number
    - id: fieldValue
      description: <span data-ttu-id="76a42-677">ターゲット フィールドの値です。</span><span class="sxs-lookup"><span data-stu-id="76a42-677">Value of the target field.</span></span>
      type:
      - string | number | boolean | object
    - id: options
      description: <span data-ttu-id="76a42-678">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-678">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-679">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-679">Optional.</span></span> <span data-ttu-id="76a42-680">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-680">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setSelectedDataAsync
  summary: <span data-ttu-id="76a42-681">現在の選択範囲に指定されたデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="76a42-681">Writes the specified data into the current selection.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"76a42-682\">要件の設定</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-682\">Requirement Sets</span></span></td><td><span data-ttu-id=\"76a42-683\">Selection</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-683\">Selection</span></span></td></tr></table>\n\n<span data-ttu-id=\"76a42-684\">**アプリケーション固有の動作**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-684\">**Application-specific behaviors**</span></span>\n\n<span data-ttu-id=\"76a42-685\">次のアプリケーション固有のアクションは、選択範囲にデータを書き込むときに適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-685\">The following application-specific actions apply when writing data to a selection.</span></span>\n\n<table> <tr><td><span data-ttu-id=\"76a42-686\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-686\">Word</span></span></td><td><span data-ttu-id=\"76a42-687\">選択されていないと、カーソルは、指定された、有効な場所に`data`のカーソル位置に挿入されます</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-687\">If there is no selection and the insertion point is at a valid location, the specified `data` is inserted at the insertion point</span></span></td><td><span data-ttu-id=\"76a42-688\">場合`data`、文字列は、指定したテキストが挿入されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-688\">If `data` is a string, the specified text is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-689\">場合`data`は、配列の配列 (「マトリックス」) または TableData オブジェクトでは、新しい Word の表を挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-689\">If `data` is an array of arrays (\"matrix\") or a TableData object, a new Word table is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-690\">場合`data`は、HTML では、指定した HTML を挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-690\">If `data` is HTML, the specified HTML is inserted.</span></span> <span data-ttu-id=\"76a42-691\">(重要: を挿入する HTML のいずれかが有効な場合は、Word がエラーを発生しません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-691\">(Important: If any of the HTML you insert is invalid, Word won't raise an error.</span></span> <span data-ttu-id=\"76a42-692\">挿入される HTML のことができ、無効なデータを省略する)。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-692\">Word will insert as much of the HTML as it can and omits any invalid data).</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-693\">場合`data`は、Office オープン XML では、指定した XML を挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-693\">If `data` is Office Open XML, the specified XML is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-694\">場合`data`は、base64 でエンコードされたイメージのストリームに、指定したイメージを挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-694\">If `data` is a base64 encoded image stream, the specified image is inserted.</span></span></td></tr></td></tr> <tr><td></td><td><span data-ttu-id=\"76a42-695\">選択範囲がある場合</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-695\">If there is a selection</span></span></td><td><span data-ttu-id=\"76a42-696\">置き換えられます指定した`data`上記と同じ規則に従います。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-696\">It will be replaced with the specified `data` following the same rules as above.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"76a42-697\">イメージを挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-697\">Insert images</span></span></td><td><span data-ttu-id=\"76a42-698\">挿入した画像は、インラインに配置されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-698\">Inserted images are placed inline.</span></span> <span data-ttu-id=\"76a42-699\">ImageLeft パラメーターと imageTop パラメーターは無視されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-699\">The imageLeft and imageTop parameters are ignored.</span></span> <span data-ttu-id=\"76a42-700\">イメージの縦横比は常にロックされています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-700\">The image aspect ratio is always locked.</span></span> <span data-ttu-id=\"76a42-701\">imageWidth パラメーターと imageHeight パラメーターのいずれか 1 つのみが指定された場合、もう一方の値がスケーリングされて自動的に元の縦横比が維持されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-701\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"76a42-702\">Excel</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-702\">Excel</span></span></td><td><span data-ttu-id=\"76a42-703\">1 つのセルが選択されている場合</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-703\">If a single cell is selected</span></span></td><td><span data-ttu-id=\"76a42-704\">場合`data`、文字列は、現在のセルの値として指定したテキストが挿入されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-704\">If `data` is a string, the specified text is inserted as the value of the current cell.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-705\">場合`data`配列の配列 (「マトリックス」)、特定の行のセットは、周囲セル他データは上書きされない場合列を挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-705\">If `data` is an array of arrays (\"matrix\"), the specified set of rows and columns are inserted, if no other data in surrounding cells will be overwritten.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-706\">場合`data`TableData オブジェクトでは、新しい Excel テーブル行の指定したセットにし、周囲のセルに他のデータは上書きされない場合、ヘッダーに挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-706\">If `data` is a TableData object, a new Excel table with the specified set of rows and headers is inserted, if no other data in surrounding cells will be overwritten.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"76a42-707\">複数のセルが選択されている場合</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-707\">If multiple cells are selected</span></span></td><td><span data-ttu-id=\"76a42-708\">図形の形状が一致しない場合`data` <!-- -->、エラーが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-708\">If the shape does not match the shape of `data`<!-- -->, an error is returned.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-709\">選択範囲の形がの形を正確に一致するかどうかは`data`<!-- -->の値に基づいて、選択したセルの値が更新された`data` <!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-709\">If the shape of the selection exactly matches the shape of `data`<!-- -->, the values of the selected cells are updated based on the values in `data`<!-- -->.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"76a42-710\">イメージを挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-710\">Insert images</span></span></td><td><span data-ttu-id=\"76a42-711\">挿入したイメージが浮動しています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-711\">Inserted images are floating.</span></span> <span data-ttu-id=\"76a42-712\">imageLeft パラメーターと imageTop パラメーターの位置は、現在選択されているセルに対して相対的です。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-712\">The position imageLeft and imageTop parameters are relative to currently selected cell(s).</span></span> <span data-ttu-id=\"76a42-713\">負の imageLeft 値と imageTop 値は使用でき、Excel によりワークシート内でイメージの位置が再調整される可能性があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-713\">Negative imageLeft and imageTop values are allowed and possibly readjusted by Excel to position the image inside a worksheet.</span></span> <span data-ttu-id=\"76a42-714\">imageWidth パラメーターと imageHeight パラメーターの両方が指定されている場合を除き、イメージの縦横比はロックされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-714\">Image aspect ratio is locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id=\"76a42-715\">imageWidth パラメーターと imageHeight パラメーターのいずれか 1 つのみが指定された場合、もう一方の値がスケーリングされて自動的に元の縦横比が維持されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-715\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"76a42-716\">その他の場合</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-716\">All other cases</span></span></td><td><span data-ttu-id=\"76a42-717\">エラーが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-717\">An error is returned.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"76a42-718\">Excel Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-718\">Excel Online</span></span></td><td><span data-ttu-id=\"76a42-719\">Excel にデータを書き込むとき、Excel 上で説明した動作だけでなくこれらの制限を適用します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-719\">In addition to the behaviors described for Excel above, these limits apply when writing data in Excel Online</span></span></td><td><span data-ttu-id=\"76a42-720\">ワークシートに書き込むことができますセルの合計数、`data`パラメーターは、このメソッドを 1 回の呼び出しで 20,000 を超えることはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-720\">The total number of cells you can write to a worksheet with the `data` parameter can't exceed 20,000 in a single call to this method.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"76a42-721\">渡された書式設定のグループの数、`cellFormat`パラメーターに 100 を超えることはできません。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-721\">The number of formatting groups passed to the `cellFormat` parameter can't exceed 100.</span></span> <span data-ttu-id=\"76a42-722\">1 つの書式設定グループは、指定のセル範囲に適用される書式設定のセットで構成されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-722\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"76a42-723\">PowerPoint</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-723\">PowerPoint</span></span></td><td><span data-ttu-id=\"76a42-724\">イメージを挿入します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-724\">Insert image</span></span></td><td><span data-ttu-id=\"76a42-725\">挿入したイメージが浮動しています。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-725\">Inserted images are floating.</span></span> <span data-ttu-id=\"76a42-726\">位置 imageLeft および imageTop パラメーターは省略可能ですが、指定した場合、両方とも含める必要があります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-726\">The position imageLeft and imageTop parameters are optional but if provided, both should be present.</span></span> <span data-ttu-id=\"76a42-727\">どちらか 1 つの値が指定される場合、それは無視されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-727\">If a single value is provided, it will be ignored.</span></span> <span data-ttu-id=\"76a42-728\">負の imageLeft 値と imageTop 値は使用でき、スライドの外にイメージを配置できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-728\">Negative imageLeft and imageTop values are allowed and can position an image outside of a slide.</span></span> <span data-ttu-id=\"76a42-729\">省略可能なパラメーターが指定されず、スライドにプレースホルダーが含まれる場合、イメージがスライドのプレースホルダーを置き換えます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-729\">If no optional parameter is given and slide has a placeholder, the image will replace the placeholder in the slide.</span></span> <span data-ttu-id=\"76a42-730\">imageWidth パラメーターと imageHeight パラメーターの両方が指定されない限り、イメージの縦横比はロックされます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-730\">Image aspect ratio will be locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id=\"76a42-731\">imageWidth パラメーターと imageHeight パラメーターのいずれか 1 つのみが指定された場合、もう一方の値がスケーリングされて自動的に元の縦横比が維持されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-731\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr> </table>\n\n<span data-ttu-id=\"76a42-732\">[Office.CoercionType](xref:office.Office.CoercionType)パラメーターに指定できる値は、ホストによって異なります。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-732\">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"76a42-733\">Host</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-733\">Host</span></span></th> <th><span data-ttu-id=\"76a42-734\">サポートされる coercionType</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-734\">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id=\"76a42-735\">Excel、PowerPoint、プロジェクト、および Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-735\">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id=\"76a42-736\">`Office.CoercionType.Text`(文字列)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-736\">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-737\">Excel および Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-737\">Excel and Word</span></span></td> <td><span data-ttu-id=\"76a42-738\">`Office.CoercionType.Matrix`(配列の配列)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-738\">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-739\">Access、Excel、および Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-739\">Access, Excel, and Word</span></span></td> <td><span data-ttu-id=\"76a42-740\">`Office.CoercionType.Table`(TableData オブジェクト)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-740\">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-741\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-741\">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id=\"76a42-742\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-742\">Word</span></span></td> <td><span data-ttu-id=\"76a42-743\">`Office.CoercionType.Ooxml`(Office オープン XML)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-743\">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"76a42-744\">PowerPoint、PowerPoint Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-744\">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> </table>\n\n<span data-ttu-id=\"76a42-745\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-745\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p171\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p171\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-748\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-748\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-749\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-749\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-750\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-750\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-751\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-751\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-752\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-752\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"76a42-753\">Office for Mac?</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-753\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-754\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-754\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"76a42-755\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-755\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-756\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-756\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-757\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-757\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-758\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-758\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-759\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-759\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"76a42-760\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-760\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-761\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-761\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-762\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-762\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-763\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-763\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-764\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-764\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-765\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-765\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-766\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-766\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-767\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-767\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-768\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-768\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-769\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-769\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-770\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-770\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-771\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-771\">Examples</span></span>\n\n```javascript\n// The following example sets the selected text or cell to \"Hello World!\", \n// and if that fails, displays the value of the error.message property.\nfunction writeText() {\n    Office.context.document.setSelectedDataAsync(\"Hello World!\",\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed){\n                write(error.name + \": \" + error.message);\n            }\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write\n// to a selection. The following example writes data as an array of three rows of two columns, \n// specifying the coercionType as \"matrix\" for that data structure, and if that fails, \n// displays the value of the error.message property.\nfunction writeMatrix() {\n    Office.context.document.setSelectedDataAsync(\n        [[\"Red\", \"Rojo\"], [\"Green\", \"Verde\"], [\"Blue\", \"Azul\"]],\n        {coercionType: Office.CoercionType.Matrix}\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed){\n                write(error.name + \": \" + error.message);\n            }\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// The following example writes data as a one column table with a header and four rows, \n// specifying the coercionType as \"table\" for that data structure, and if that fails, \n// displays the value of the error.message property.\nfunction writeTable() {\n    // Build table.\n    var myTable = new Office.TableData();\n    myTable.headers = [[\"Cities\"]];\n    myTable.rows = [['Berlin'], ['Roma'], ['Tokyo'], ['Seattle']];\n\n    // Write table.\n    Office.context.document.setSelectedDataAsync(myTable, {coercionType: Office.CoercionType.Table},\n        function (result) {\n            var error = result.error\n            if (result.status === Office.AsyncResultStatus.Failed) {\n                write(error.name + \": \" + error.message);\n            }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In Word if you want to write HTML to the selection, you can specify the coercionType parameter as \"html\"\n// as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.context.document.setSelectedDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: Office.CoercionType.Html}, function (asyncResult) {\n            if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                write('Error: ' + asyncResult.error.message);\n            }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In Word, PowerPoint, or Excel, if you want to write an image to the selection, you can specify the coercionType\n// parameter as \"image\" as shown in the following example. Note that imageLeft and imageTop are ignored by Word.\nfunction insertPictureAtSelection(base64EncodedImageStr) {\n\n    Office.context.document.setSelectedDataAsync(base64EncodedImageStr, {\n    coercionType: Office.CoercionType.Image,\n    imageLeft: 50,\n    imageTop: 50,\n    imageWidth: 100,\n    imageHeight: 100\n    },\n    function (asyncResult) {\n        if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n            console.log(\"Action failed with error: \" + asyncResult.error.message);\n        }\n    });\n}\n```"
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string | TableData | any[][], options?: SetSelectedDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="76a42-772">設定するデータです。</span><span class="sxs-lookup"><span data-stu-id="76a42-772">The data to be set.</span></span> <span data-ttu-id="76a42-773">文字列または[Office.CoercionType](xref:office.Office.CoercionType)の値、2 次元の配列または TableData オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="76a42-773">Either a string or [Office.CoercionType](xref:office.Office.CoercionType) value, 2d array or TableData object.</span></span>


        <span data-ttu-id="76a42-774">値が渡された場合は`data`です。</span><span class="sxs-lookup"><span data-stu-id="76a42-774">If the value passed for `data` is:</span></span>


        - <span data-ttu-id="76a42-775">文字列:プレーン テキスト、または string に強制的に変換できるその他の値が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="76a42-775">A string: Plain text or anything that can be coerced to a string will be inserted.</span></span> <span data-ttu-id="76a42-776">また Excel では、選択したセルに追加する有効な数式として data を指定できます。</span><span class="sxs-lookup"><span data-stu-id="76a42-776">In Excel, you can also specify data as a valid formula to add that formula to the selected cell.</span></span> <span data-ttu-id="76a42-777">たとえば、「SUM(A1:A5) =」にデータを設定するは合計で指定した範囲内の値です。</span><span class="sxs-lookup"><span data-stu-id="76a42-777">For example, setting data to "=SUM(A1:A5)" will total the values in the specified range.</span></span> <span data-ttu-id="76a42-778">ただし、バインドされたセルで数式を設定する場合、その後、バインドされたセルからは追加された数式 (または既存の数式) を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="76a42-778">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="76a42-779">選択したセルで Document.getSelectedDataAsync メソッドを呼び出してそのデータを読み取ると、このメソッドは (数式の結果である) セルに表示されたデータのみを返します。</span><span class="sxs-lookup"><span data-stu-id="76a42-779">If you call the Document.getSelectedDataAsync method on the selected cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span>


        - <span data-ttu-id="76a42-780">配列の配列 ("matrix"):ヘッダーのない表形式データが挿入されます。</span><span class="sxs-lookup"><span data-stu-id="76a42-780">An array of arrays ("matrix"): Tabular data without headers will be inserted.</span></span> <span data-ttu-id="76a42-781">などの 2 つの列の 3 つの行にデータの書き込みを渡すことができますこのような配列: \[ \["R1C1"、"R1C2"\]、 \["R2C1"、"R2C2"\]、 \["R3C1"、"R3C2"\]\]。</span><span class="sxs-lookup"><span data-stu-id="76a42-781">For example, to write data to three rows in two columns, you can pass an array like this: \[\["R1C1", "R1C2"\], \["R2C1", "R2C2"\], \["R3C1", "R3C2"\]\].</span></span> <span data-ttu-id="76a42-782">記述するには次の 3 つの行の 1 つの列には、次のように配列を渡す: \[ \["R1C1"\]、 \["R2C1"\]、 \["R3C1"\]\]</span><span class="sxs-lookup"><span data-stu-id="76a42-782">To write a single column of three rows, pass an array like this: \[\["R1C1"\], \["R2C1"\], \["R3C1"\]\]</span></span>


        <span data-ttu-id="76a42-783">また、Excel では、有効な数式を含む配列の配列として data を指定して、選択したセルに追加することができます。</span><span class="sxs-lookup"><span data-stu-id="76a42-783">In Excel, you can also specify data as an array of arrays that contains valid formulas to add them to the selected cells.</span></span> <span data-ttu-id="76a42-784">などデータを設定、その他のデータは上書きされますがない場合は\[ \[「SUM(A1:A5)","=AVERAGE(A1:A5) =」\] \]の選択にこれら 2 つの数式を追加します。</span><span class="sxs-lookup"><span data-stu-id="76a42-784">For example if no other data will be overwritten, setting data to \[\["=SUM(A1:A5)","=AVERAGE(A1:A5)"\]\] will add those two formulas to the selection.</span></span> <span data-ttu-id="76a42-785">数式を単一のセルで "テキスト" として設定する場合と同様に、設定後、追加した数式 (または既存の任意の数式) を読み取ることはできません。数式の結果を読み取ることができるだけです。</span><span class="sxs-lookup"><span data-stu-id="76a42-785">Just as when setting a formula on a single cell as "text", you can't read the added formulas (or any pre-existing formulas) after they have been set - you can only read the formulas' results.</span></span>


        - <span data-ttu-id="76a42-786">TableData オブジェクト: ヘッダー付きのテーブルが挿入されます。</span><span class="sxs-lookup"><span data-stu-id="76a42-786">A TableData object: A table with headers will be inserted.</span></span> <span data-ttu-id="76a42-787">Excel では、渡すデータのパラメーターには、TableData オブジェクトの数式を指定する場合は得られないでしょう、列内の数式が自動的にコピーするには、Excel の計算される列」機能が期待どおりの結果です。</span><span class="sxs-lookup"><span data-stu-id="76a42-787">In Excel, if you specify formulas in the TableData object you pass for the data parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="76a42-788">記述する場合にこれを回避するために`data`の数式には、選択したテーブルを含む、としてではなく、TableData オブジェクト) の配列のデータを指定してくださいし、Microsoft.Office.Matrix、または「マトリックス」として、coercionType を指定します。</span><span class="sxs-lookup"><span data-stu-id="76a42-788">To work around this when you want to write `data` that contains formulas to a selected table, try specifying the data as an array of arrays (instead of a TableData object), and specify the coercionType as Microsoft.Office.Matrix or "matrix".</span></span>
      type:
      - string | TableData | any[][]
    - id: options
      description: <span data-ttu-id="76a42-789">選択範囲にデータを挿入する方法のオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-789">Provides options for how to insert data to the selection.</span></span>
      type:
      - office.Office.SetSelectedDataOptions
    - id: callback
      description: <span data-ttu-id="76a42-790">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-790">Optional.</span></span> <span data-ttu-id="76a42-791">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-791">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="76a42-792">AsyncResult.value プロパティはオブジェクトまたは取得するデータがないため未定義常に返します。</span><span class="sxs-lookup"><span data-stu-id="76a42-792">The AsyncResult.value property always returns undefined because there is no object or data to retrieve.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setTaskFieldAsync
  summary: >-
    <span data-ttu-id="76a42-793">プロジェクトのドキュメントの場合のみです。</span><span class="sxs-lookup"><span data-stu-id="76a42-793">Project documents only.</span></span> <span data-ttu-id="76a42-794">設定タスク フィールドを指定したタスクの id。</span><span class="sxs-lookup"><span data-stu-id="76a42-794">Set task field for specified task Id.</span></span>


    <span data-ttu-id="76a42-795">重要:この API は、Wndows デスクトップ上の Project 2016 でのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="76a42-795">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"76a42-796\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-796\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p179\">次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p179\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"76a42-799\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-799\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-800\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-800\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-801\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-801\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-802\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-802\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"76a42-803\"><strong>プロジェクト</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-803\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"76a42-804\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-804\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-805\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-805\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedTaskAsync to get the GUID of the task that's\n// currently selected in a task view. Then it sets two task field values by calling\n// setTaskFieldAsync recursively.\n// The getSelectedTaskAsync method used in the example requires that a task view\n// (for example, Task Usage) is the active view and that a task is selected. See the\n// addHandlerAsync method for an example that activates a button based on the active view type.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page controls are defined in the content div in the page body:\n// <input id=\"set-info\" type=\"button\" value=\"Set info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n            \n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#set-info').click(setTaskInfo);\n        });\n    };\n\n    // Get the GUID of the task, and then get the task fields.\n    function setTaskInfo() {\n        getTaskGuid().then(\n            function (data) {\n                setTaskFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected task.\n    function getTaskGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Set the specified fields for the selected task.\n    function setTaskFields(taskGuid) {\n        var targetFields = [Office.ProjectTaskFields.Active, Office.ProjectTaskFields.Notes];\n        var fieldValues = [true, 'Notes for the task.'];\n\n        // Set the field value. If the call is successful, set the next field.\n        for (var i = 0; i < targetFields.length; i++) {\n            Office.context.document.setTaskFieldAsync(\n                taskGuid,\n                targetFields[i],\n                fieldValues[i],\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        i++;\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n        $('#message').html('Field values set');\n    }\n\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: setTaskFieldAsync(taskId, fieldId, fieldValue, options, callback)
  fullName: setTaskFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTaskFieldAsync(taskId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="76a42-806">文字列またはタスク id の値のいずれか</span><span class="sxs-lookup"><span data-stu-id="76a42-806">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="76a42-807">タスクのフィールドです。</span><span class="sxs-lookup"><span data-stu-id="76a42-807">Task Fields.</span></span>
      type:
      - number
    - id: fieldValue
      description: <span data-ttu-id="76a42-808">ターゲット フィールドの値です。</span><span class="sxs-lookup"><span data-stu-id="76a42-808">Value of the target field.</span></span>
      type:
      - string | number | boolean | object
    - id: options
      description: <span data-ttu-id="76a42-809">任意の型を変更せずに、コールバックで使用するためのコンテキスト データを保持するためのオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="76a42-809">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="76a42-810">省略可能。</span><span class="sxs-lookup"><span data-stu-id="76a42-810">Optional.</span></span> <span data-ttu-id="76a42-811">関数コールバックが返されるときに呼び出されます[Office.AsyncResult](xref:office.Office.AsyncResult)の種類が唯一のパラメーターは、<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-811">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.settings
  summary: <span data-ttu-id="76a42-812">現在のドキュメントのコンテンツ アプリまたは作業ウィンドウ アプリの保存されているカスタム設定を表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-812">Gets an object that represents the saved custom settings of the content or task pane add-in for the current document.</span></span>
  remarks: >-
    <span data-ttu-id="76a42-813">**サポートの詳細**</span><span class="sxs-lookup"><span data-stu-id="76a42-813">**Support details**</span></span>


    <span data-ttu-id="76a42-p181">次の表で、大文字 Y は、このプロパティは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのプロパティをサポートしないことを示します。</span><span class="sxs-lookup"><span data-stu-id="76a42-p181">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>


    <span data-ttu-id="76a42-816">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76a42-816">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="76a42-817">*サポートされるホスト (プラットフォーム別)*</span><span class="sxs-lookup"><span data-stu-id="76a42-817">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="76a42-818">Windows デスクトップ版 Office</span><span class="sxs-lookup"><span data-stu-id="76a42-818">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="76a42-819">Office Online (ブラウザー)</span><span class="sxs-lookup"><span data-stu-id="76a42-819">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="76a42-820">Office for iPad</span><span class="sxs-lookup"><span data-stu-id="76a42-820">Office for iPad</span></span> </th><th> <span data-ttu-id="76a42-821">Office for Mac?</span><span class="sxs-lookup"><span data-stu-id="76a42-821">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="76a42-822"><strong>アクセス</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-822"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="76a42-823">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-823">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="76a42-824"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-824"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="76a42-825">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-825">Y</span></span> </td><td> <span data-ttu-id="76a42-826">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-826">Y</span></span> </td><td> <span data-ttu-id="76a42-827">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-827">Y</span></span> </td><td> <span data-ttu-id="76a42-828">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-828">Y</span></span> </td>&lt;</tr> <tr><td><span data-ttu-id="76a42-829"><strong>OneNote</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-829"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id="76a42-830">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-830">Y</span></span> </td><td> </td><td> </td>&lt;</tr> <tr><td><span data-ttu-id="76a42-831"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-831"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="76a42-832">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-832">Y</span></span> </td><td> <span data-ttu-id="76a42-833">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-833">Y</span></span> </td><td> <span data-ttu-id="76a42-834">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-834">Y</span></span> </td><td> <span data-ttu-id="76a42-835">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-835">Y</span></span> </td>&lt;</tr> <tr><td><span data-ttu-id="76a42-836"><strong>単語</strong></span><span class="sxs-lookup"><span data-stu-id="76a42-836"><strong> Word </strong></span></span></td><td> <span data-ttu-id="76a42-837">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-837">Y</span></span> </td><td> <span data-ttu-id="76a42-838">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-838">Y</span></span> </td><td> <span data-ttu-id="76a42-839">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-839">Y</span></span> </td><td> <span data-ttu-id="76a42-840">Y</span><span class="sxs-lookup"><span data-stu-id="76a42-840">Y</span></span> </td>&lt;</tr> </table>
  name: settings
  fullName: settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'settings: Settings;'
    return:
      type:
      - office.Office.Settings
- uid: office.Office.Document.url
  summary: <span data-ttu-id="76a42-841">ホスト アプリケーションが現在開いているドキュメントの URL を取得します。</span><span class="sxs-lookup"><span data-stu-id="76a42-841">Gets the URL of the document that the host application currently has open.</span></span> <span data-ttu-id="76a42-842">URL が利用できない場合は null を返します。</span><span class="sxs-lookup"><span data-stu-id="76a42-842">Returns null if the URL is unavailable.</span></span>
  remarks: "<span data-ttu-id=\"76a42-843\">**サポートの詳細**</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-843\">**Support details**</span></span>\n\n<span data-ttu-id=\"76a42-p183\">次の表で、大文字 Y は、このプロパティは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのプロパティをサポートしないことを示します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-p183\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"76a42-846\">Office ホスト アプリケーションとサーバーの要件の詳細については、 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)を参照してください<!-- -->。</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-846\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"76a42-847\">*サポートされるホスト (プラットフォーム別)*</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-847\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"76a42-848\">Windows デスクトップ版 Office</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-848\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"76a42-849\">Office Online (ブラウザー)</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-849\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"76a42-850\">Office for iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-850\">Office for iPad</span></span> </th></tr> <tr><td><span data-ttu-id=\"76a42-851\"><strong>アクセス</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-851\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"76a42-852\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-852\">Y</span></span> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-853\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-853\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"76a42-854\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-854\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-855\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-855\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-856\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-856\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"76a42-857\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-857\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"76a42-858\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-858\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"76a42-859\"><strong>単語</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-859\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"76a42-860\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-860\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-861\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-861\">Y</span></span> </td><td> <span data-ttu-id=\"76a42-862\">Y</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-862\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"76a42-863\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"76a42-863\">Examples</span></span>\n\n```javascript\nfunction displayDocumentUrl() {\n    write(Office.context.document.url);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: url
  fullName: url
  langs:
  - typeScript
  type: property
  syntax:
    content: 'url: string;'
    return:
      type:
      - string
