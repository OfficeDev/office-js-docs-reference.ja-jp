### YamlMime:UniversalReference
ms.openlocfilehash: 8179639bf91eb03769575799c9a3f71d1d65c8fa
ms.sourcegitcommit: b05ee546d9dfbc914c8d1c594d9b206b04780bbc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 11/22/2018
ms.locfileid: "26647477"
items:
- uid: office.Office.UI
  summary: >-
    オブジェクトおよびメソッドを作成し、アドイン、Office のダイアログ ボックスなどの UI コンポーネントを操作するに使用できるを提供します。


    参照してください」[で、Office の [アドイン] ダイアログ API を使用して](https://docs.microsoft.com/office/dev/add-ins/develop/dialog-api-in-office-add-ins)<!-- -->」の詳細について。
  name: Office.UI
  fullName: Office.UI
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.UI.closeContainer
  - office.Office.UI.displayDialogAsync
  - office.Office.UI.messageParent
- uid: office.Office.UI.closeContainer
  summary: JavaScript が実行されている UI コンテナーを閉じます。
  remarks: >-
    <table><tr><td>ホスト</td><td>Outlook、Excel、Word、PowerPoint (最小要件セット: メールボックス 1.5)</td></tr></table>


    このメソッドの動作は、次のように指定されます。


    - 省略コマンド ボタンから呼び出されます: 何も行いません。 displayDialogAsync によって開かれたダイアログは開いたままになります。


    - 作業ウィンドウから呼び出されます。 作業ウィンドウが閉じます。 DisplayDialogAsync によって開かれたすべてのダイアログも閉じます。 場合は、作業ウィンドウの固定をサポートしている、ユーザーが固定されたことがない nned されていません。


    - モジュールの拡張機能から呼び出す: 効果はありません。
  name: closeContainer()
  fullName: closeContainer
  langs:
  - typeScript
  type: method
  syntax:
    content: 'closeContainer(): void;'
    return:
      type:
      - void
      description: ''
- uid: office.Office.UI.displayDialogAsync
  summary: Web のナビゲーションを容易にするかを表示するか、ユーザーから情報を収集するダイアログが表示されます。
  remarks: >-
    <table><tr><td>ホスト</td><td>Word、Excel、Outlook、PowerPoint</td></tr>


    <tr><td>要件セット</td><td>DialogAPI、1.4 のメールボックス</td></tr></table>


    このメソッドは、Word、Excel、または PowerPoint のアドインの設定 DialogApi の要件に使用し、メールボックスの要件は Outlook の 1.4 を設定します。 マニフェストで設定する要件を指定する方法の詳細は、 [Office の指定のホストと API の要件](https://docs.microsoft.com/office/dev/add-ins/develop/specify-office-hosts-and-api-requirements)を参照してください<!-- -->。


    (StartAddress パラメーター) の親ページと同じドメイン内の最初のページがある必要があります。 初期ページが読み込まれた後、他のドメインに移動できます。


    任意のページの呼び出し`office.context.ui.messageParent`親ページと同じドメインにある必要があります。


    **設計に関する考慮事項**:


    ダイアログ ボックスの設計には次のような考慮事項が適用されます。


    - Office アドイン] 作業ウィンドウには、1 つだけのダイアログ ボックスをいつでも開くことができます。 (カスタム リボン ボタンまたはメニュー項目) では、アドインのコマンドから同時に複数のダイアログ ボックスが開くことができます。


    - ユーザーは、すべてのダイアログ ボックスを移動およびサイズ変更できます。


    - すべてのダイアログ ボックスは、画面の中央に開かれます。


    - ダイアログ ボックスは、ホスト アプリケーションの前面に、作成された順序で表示されます。


    ダイアログ ボックスは次のような場合に使用します。


    - ユーザーの資格情報を収集する認証ページを表示します。


    - ShowTaskpane または ExecuteAction コマンドからのエラー、構造体、入力の進行状況画面を表示します。


    - ユーザーがタスクの完了に利用できる表示領域を一時的に拡大します。


    ドキュメントとの対話にはダイアログ ボックスを使用しないでください。代わりに作業ウィンドウを使用してください。


    ダイアログ ボックスの作成に使用できるデザイン パターンについては、GitHub の Office アドイン UX デザイン パターン リポジトリの「[クライアント ダイアログ](https://github.com/OfficeDev/Office-Add-in-UX-Design-Patterns/blob/master/Patterns/Client_Dialog.md)」を参照してください。


    **displayDialogAsync エラー**:


    <table> <tr> <th>コード番号</th> <th>意味</th> </tr> <tr> <td>12004</td> <td>DisplayDialogAsync に渡される URL のドメインは、信頼されていません。 ドメインでなければなりません (プロトコルとポート番号を含む)、ホスト ページと同じドメインまたはに登録されている必要があります、<AppDomains>では、アドイン マニフェストのセクションです。</td> </tr> <tr> <td>12005</td> <td>DisplayDialogAsync に渡される URL は、HTTP プロトコルを使用します。 HTTPS が必要です。 (Office の一部のバージョンでは、12004 で返されるのと同じエラー メッセージが、12005 でも返されます)。</td> </tr> <tr> <td>12007</td> <td>ダイアログ ボックスは、作業ウィンドウで既に開いています。作業ウィンドウ アドインで一度に開けるダイアログ ボックスは 1 つだけです。</td> </tr> <tr> <td>12009</td> <td>ダイアログ ボックスを無視するようにユーザーが選択しました。 このエラーは、ダイアログの表示をアドインに許可しないようにユーザーが選択すると、Office のオンライン バージョンで発生することがあります。</td> </tr> </table>


    DisplayDialogAsync メソッドに渡されるコールバック関数では、次の情報を返す AsyncResult オブジェクトのプロパティを使用できます。


    <table> <tr> <th>プロパティ</th> <th>使用目的</th> </tr> <tr> <td>AsyncResult.value</td> <td>Dialog オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.status</td> <td>操作の成功または失敗を判断します。</td> </tr> <tr> <td>AsyncResult.error</td> <td>操作が失敗した場合、エラーに関する情報を提供する Error オブジェクトにアクセスします。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>ユーザー定義のオブジェクトまたは値を asyncContext パラメーターとして渡した場合、そのオブジェクトまたは値にアクセスします。</td> </tr> </table>
  name: displayDialogAsync(startAddress, options, callback)
  fullName: displayDialogAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayDialogAsync(startAddress: string, options?: DialogOptions, callback?: (result: AsyncResult<Dialog>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: startAddress
      description: ダイアログ ボックスを表示する初期 HTTPS URL を受け取ります。
      type:
      - string
    - id: options
      description: 省略可能。 ダイアログの表示を定義する[Office.DialogOptions](xref:office.Office.DialogOptions)オブジェクトを受け入れます。
      type:
      - office.Office.DialogOptions
    - id: callback
      description: 省略可能。 ダイアログ作成の試行を処理するコールバック メソッドを指定できます。 成功した場合、AsyncResult.value は、ダイアログ オブジェクトです。
      type:
      - '(result: AsyncResult<Dialog>) => void'
- uid: office.Office.UI.messageParent
  summary: メッセージをダイアログ ボックスからその親/オープナー ページに配信します。この API を呼び出すページは、親と同じドメインにある必要があります。
  name: messageParent(message)
  fullName: messageParent
  langs:
  - typeScript
  type: method
  syntax:
    content: 'messageParent(message: boolean | string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: ダイアログからメッセージを受け付け、アドインに配信します。 ブール値だけでなく何もすることができます JSON および XML を含む文字列にシリアル化を送信できます。
      type:
      - boolean | string
