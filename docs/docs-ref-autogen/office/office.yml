### YamlMime:TSPackage
uid: office!
name: office
type: package
summary: ''
interfaces:
- office!Office.Actions:interface
- office!Office.AddBindingFromNamedItemOptions:interface
- office!Office.AddBindingFromPromptOptions:interface
- office!Office.AddBindingFromSelectionOptions:interface
- office!Office.Addin:interface
- office!Office.AddinCommands.Event:interface
- office!Office.AddinCommands.EventCompletedOptions:interface
- office!Office.AddinCommands.Source:interface
- office!Office.AsyncContextOptions:interface
- office!Office.AsyncResult:interface
- office!Office.Auth:interface
- office!Office.AuthOptions:interface
- office!Office.Binding:interface
- office!Office.BindingDataChangedEventArgs:interface
- office!Office.Bindings:interface
- office!Office.BindingSelectionChangedEventArgs:interface
- office!Office.Context:interface
- office!Office.ContextInformation:interface
- office!Office.Control:interface
- office!Office.CustomXmlNode:interface
- office!Office.CustomXmlPart:interface
- office!Office.CustomXmlParts:interface
- office!Office.CustomXmlPrefixMappings:interface
- office!Office.Dialog:interface
- office!Office.DialogOptions:interface
- office!Office.DialogParentMessageReceivedEventArgs:interface
- office!Office.Document:interface
- office!Office.DocumentSelectionChangedEventArgs:interface
- office!Office.Error:interface
- office!Office.File:interface
- office!Office.FileProperties:interface
- office!Office.GetBindingDataOptions:interface
- office!Office.GetFileOptions:interface
- office!Office.GetSelectedDataOptions:interface
- office!Office.GoToByIdOptions:interface
- office!Office.IPromiseConstructor:interface
- office!Office.MatrixBinding:interface
- office!Office.NodeDeletedEventArgs:interface
- office!Office.NodeInsertedEventArgs:interface
- office!Office.NodeReplacedEventArgs:interface
- office!Office.OfficeTheme:interface
- office!Office.RangeCoordinates:interface
- office!Office.RangeFormatConfiguration:interface
- office!Office.RemoveHandlerOptions:interface
- office!Office.RequirementSetSupport:interface
- office!Office.Ribbon:interface
- office!Office.RibbonUpdaterData:interface
- office!Office.SaveSettingsOptions:interface
- office!Office.SetBindingDataOptions:interface
- office!Office.SetSelectedDataOptions:interface
- office!Office.Settings:interface
- office!Office.SettingsChangedEventArgs:interface
- office!Office.Slice:interface
- office!Office.Tab:interface
- office!Office.TableBinding:interface
- office!Office.TextBinding:interface
- office!Office.UI:interface
- office!Office.VisibilityModeChangedMessage:interface
- office!OfficeExtension.DebugInfo:interface
- office!OfficeExtension.EmbeddedOptions:interface
- office!OfficeExtension.EventInfo:interface
- office!OfficeExtension.LoadOption:interface
- office!OfficeExtension.RequestContextDebugInfo:interface
- office!OfficeExtension.RequestUrlAndHeaderInfo:interface
- office!OfficeExtension.RunOptions:interface
- office!OfficeExtension.UpdateOptions:interface
enums:
- office!Office.ActiveView:enum
- office!Office.AsyncResultStatus:enum
- office!Office.BindingType:enum
- office!Office.CoercionType:enum
- office!Office.CustomXMLNodeType:enum
- office!Office.DocumentMode:enum
- office!Office.EventType:enum
- office!Office.FileType:enum
- office!Office.FilterType:enum
- office!Office.GoToType:enum
- office!Office.HostType:enum
- office!Office.Index:enum
- office!Office.InitializationReason:enum
- office!Office.PlatformType:enum
- office!Office.ProjectProjectFields:enum
- office!Office.ProjectResourceFields:enum
- office!Office.ProjectTaskFields:enum
- office!Office.ProjectViewTypes:enum
- office!Office.SelectionMode:enum
- office!Office.StartupBehavior:enum
- office!Office.Table:enum
- office!Office.ValueFormat:enum
- office!Office.VisibilityMode:enum
classes:
- office!Office.TableData:class
- office!OfficeExtension.ClientObject:class
- office!OfficeExtension.ClientRequestContext:class
- office!OfficeExtension.ClientResult:class
- office!OfficeExtension.EmbeddedSession:class
- office!OfficeExtension.Error:class
- office!OfficeExtension.ErrorCodes:class
- office!OfficeExtension.EventHandlerResult:class
- office!OfficeExtension.EventHandlers:class
- office!OfficeExtension.TrackedObjects:class
functions:
- name: Office.initialize(reason)
  uid: office!Office.initialize:function(1)
  package: office!
  summary: >-
    ランタイム環境が読み込まれ、アプリケーションやホストされたドキュメントを対話操作するアドインの準備ができたときに発生します。


    Initialize イベントリスナー関数の reason パラメーターは、 `InitializationReason` 初期化が行われた方法を指定する列挙値を返します。 作業ウィンドウ アドインまたはコンテンツ アドインは、次の 2 つの場合に初期化できます。


    - ユーザーは、Office ホストアプリケーションのリボンの [挿入] タブにあるアドインのドロップダウンリストの [最近使用したアドイン] セクションから、または [アドインの挿入] ダイアログボックスからアドインを挿入しただけです。


    - 既にアドインが含まれているドキュメントをユーザーが開いた場合。


    *注*: initialize イベントリスナー関数の reason パラメーターは、 `InitializationReason` 作業ウィンドウアドインとコンテンツアドインの列挙値のみを返します。Outlook アドインの値を返すことはありません。
  remarks: "**サポートの詳細**\n\n次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。\n\nOffice ホストアプリケーションとサーバーの要件の詳細については、「 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)」を参照してください。<!-- -->.\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows での Office </th><th> Web ブラウザーでの Office </th><th> Office on iPad </th><th> モバイルデバイスの Outlook </th><th> Office on Mac </th></tr> <tr><td><strong> シート </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> <tr><td><strong> 出席 </strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong> しまう </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> <tr><td><strong> プロジェクト </strong></td><td> Y </td><td> </td><td> </td><td> </td><td> Y </td></tr> <tr><td><strong> 段落 </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> </table>\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// You can use the value of the InitializationEnumeration to implement different logic for\n// when the add-in is first inserted versus when it is already part of the document.\n// The following example shows some simple logic that uses the value of the reason parameter\n// to display how the task pane or content add-in was initialized.\nOffice.initialize = function (reason) {\n    // Checks for the DOM to load using the jQuery ready function.\n    $(document).ready(function () {\n    // After the DOM is loaded, code specific to the add-in can run.\n    // Display initialization reason.\n    if (reason == \"inserted\")\n    write(\"The add-in was just inserted.\");\n\n    if (reason == \"documentOpened\")\n    write(\"The add-in is already part of the document.\");\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function initialize(reason: InitializationReason): void;'
    parameters:
    - id: reason
      description: アプリが初期化された方法を示します。
      type: <xref uid="office!Office.InitializationReason:enum" />
    return:
      type: void
      description: ''
- name: Office.isSetSupported(name, minVersion)
  uid: office!Office.isSetSupported:function(1)
  package: office!
  summary: 指定した要件セットがホスト Office アプリケーションによってサポートされているかどうかを確認します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function isSetSupported(name: string, minVersion?: string): boolean;'
    parameters:
    - id: name
      description: '名前を設定します。例: "MatrixBindings"。'
      type: string
    - id: minVersion
      description: '最低限必要なバージョン。例: "1.4"。'
      type: string
    return:
      type: boolean
      description: ''
- name: Office.onReady(callback)
  uid: office!Office.onReady:function(1)
  package: office!
  summary: Office JavaScript Api がアドインによって呼び出される準備が整っていることを確認します。 フレームワークがまだ初期化されていない場合、コールバックまたは promise は Office ホストが API 呼び出しを受け入れる準備ができるまで待機します。 この API は Office アドイン内で使用することを目的としていますが、アドインの外部でも使用できます。 その場合、Office.js が Office ホストアプリケーションの外部で実行されていると判断されると、コールバックを呼び出し、ホストとプラットフォームの両方に対して "null" を使用して promise を解決します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function onReady(callback?: (info: { host: HostType, platform: PlatformType }) => any): Promise<{ host: HostType, platform: PlatformType }>;'
    parameters:
    - id: callback
      description: ホストおよびプラットフォームの情報を受け取るオプションのコールバックメソッド。 または、コールバックを使用するのではなく、関数によって返された Promise を解決するだけでアドインが待機することもあります。
      type: '(info: { host: <xref uid="office!Office.HostType:enum" />, platform: <xref uid="office!Office.PlatformType:enum" /> }) =&gt; any'
    return:
      type: 'Promise&lt;{ host: <xref uid="office!Office.HostType:enum" />, platform: <xref uid="office!Office.PlatformType:enum" /> }&gt;'
      description: 初期化が完了すると、ホストとプラットフォームの情報を含む約束ができます。
- name: Office.select(expression, callback)
  uid: office!Office.select:function(1)
  package: office!
  summary: 式で記述されたオブジェクトの promise を返します。 コールバックは、メソッドが失敗した場合にのみ呼び出されます。
  remarks: >-
    **サポートの詳細**


    次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。


    Office ホストアプリケーションとサーバーの要件の詳細については、「 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)」を参照してください。<!-- -->.


    *サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows での Office </th><th> Web ブラウザーでの Office </th><th> Office on iPad </th></tr> <tr><td><strong> シート </strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong> 段落 </strong></td><td> Y </td><td> </td><td> Y </td></tr> </table>


    #### <a name="examples"></a>例


    ```javascript

    // The following code example uses the select method to retrieve a binding with the id "cities" from

    // the Bindings collection, and then calls the addHandlerAsync method to add an event handler for the

    // dataChanged event of the binding.

    function addBindingDataChangedEventHandler() {
        Office.select("bindings#cities", function onError(){}).addHandlerAsync(Office.EventType.BindingDataChanged,
        function (eventArgs) {
            doSomethingWithBinding(eventArgs.binding);
        });
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function select(expression: string, callback?: (result: AsyncResult<any>) => void): Binding;'
    parameters:
    - id: expression
      description: 取得するオブジェクトを指定します。 "Bindings \# bindingname" の例は、' BindingName ' という名前のバインドのためのバインド保証を取得します。
      type: string
    - id: callback
      description: 省略可能。 コールバックが戻るときに呼び出される関数で、唯一のパラメーターの型が[Office AsyncResult](xref:office!Office.AsyncResult:interface)である。<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;any&gt;) =&gt; void'
    return:
      type: <xref uid="office!Office.Binding:interface" />
      description: ''
- name: Office.useShortNamespace(useShortNamespace)
  uid: office!Office.useShortNamespace:function(1)
  package: office!
  summary: '`Office`完全な名前空間のエイリアスをオンまたはオフにし `Microsoft.Office.WebExtension` ます。'
  remarks: "**サポートの詳細**\n\n次の表で、大文字 Y は、このメソッドは、対応する Office ホスト アプリケーションでサポートされていることを示します。空のセルは、Office ホスト アプリケーションでこのメソッドをサポートしないことを示します。\n\nOffice ホストアプリケーションとサーバーの要件の詳細については、「 [Office アドインを実行するための要件](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)」を参照してください。<!-- -->.\n\n*サポートされるホスト (プラットフォーム別)* <table> <tr><th> </th><th> Windows での Office </th><th> Web ブラウザーでの Office </th><th> Office on iPad </th><th> モバイルデバイスの Outlook </th><th> Office on Mac </th></tr> <tr><td><strong> シート </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong> 出席 </strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong> しまう </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong> プロジェクト </strong></td><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong> 段落 </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> </table>\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nfunction startUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(true);\n    }\n    else {\n        Office.useShortNamespace(true);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\nfunction stopUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(false);\n    }\n    else {\n        Office.useShortNamespace(false);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function useShortNamespace(useShortNamespace: boolean): void;'
    parameters:
    - id: useShortNamespace
      description: ショートカットエイリアスを使用する場合は True、それ以外の場合は false を無効にします。 既定値は true です。
      type: boolean
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 857c715bbcafb17c20df32383d9c9c44e38699d0
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49265956"
