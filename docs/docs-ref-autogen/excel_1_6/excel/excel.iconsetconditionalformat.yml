### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.IconSetConditionalFormat:class'
    summary: |-
      <span data-ttu-id="77b59-101">条件付き書式の IconSet 条件を表します。</span><span class="sxs-lookup"><span data-stu-id="77b59-101">Represents an IconSet criteria for conditional formatting.</span></span>

      <span data-ttu-id="77b59-102">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77b59-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.IconSetConditionalFormat
    fullName: Excel.IconSetConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.IconSetConditionalFormat#context:member'
      - 'excel!Excel.IconSetConditionalFormat#criteria:member'
      - 'excel!Excel.IconSetConditionalFormat#load:member(1)'
      - 'excel!Excel.IconSetConditionalFormat#load:member(2)'
      - 'excel!Excel.IconSetConditionalFormat#load:member(3)'
      - 'excel!Excel.IconSetConditionalFormat#reverseIconOrder:member'
      - 'excel!Excel.IconSetConditionalFormat#set:member(1)'
      - 'excel!Excel.IconSetConditionalFormat#set:member(2)'
      - 'excel!Excel.IconSetConditionalFormat#showIconOnly:member'
      - 'excel!Excel.IconSetConditionalFormat#style:member'
      - 'excel!Excel.IconSetConditionalFormat#toJSON:member(1)'
  - uid: 'excel!Excel.IconSetConditionalFormat#context:member'
    summary: <span data-ttu-id="77b59-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="77b59-103">The request context associated with the object.</span></span> <span data-ttu-id="77b59-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="77b59-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.IconSetConditionalFormat#criteria:member'
    summary: |-
      <span data-ttu-id="77b59-105">ルールの条件および IconSets の配列と、条件付きアイコンのユーザー設定のアイコン。</span><span class="sxs-lookup"><span data-stu-id="77b59-105">An array of Criteria and IconSets for the rules and potential custom icons for conditional icons.</span></span> <span data-ttu-id="77b59-106">最初の条件では、カスタムアイコンのみを変更できることに注意してください。設定すると、type、formula、および operator は無視されます。</span><span class="sxs-lookup"><span data-stu-id="77b59-106">Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.</span></span>

      <span data-ttu-id="77b59-107">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77b59-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: Excel.ConditionalIconCriterion[];'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat#criteria~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77b59-108">例</span><span class="sxs-lookup"><span data-stu-id="77b59-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              const iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.IconSetConditionalFormat#load:member(1)'
    summary: <span data-ttu-id="77b59-109">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="77b59-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77b59-110">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="77b59-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="77b59-111">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="77b59-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="77b59-112">`load(option?: string | string[]): Excel.IconSetConditionalFormat`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="77b59-112">`load(option?: string | string[]): Excel.IconSetConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="77b59-113">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="77b59-113">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="77b59-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="77b59-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="77b59-115">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="77b59-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="77b59-116">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="77b59-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="77b59-117">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="77b59-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="77b59-118">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="77b59-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.IconSetConditionalFormatLoadOptions): Excel.IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.IconSetConditionalFormatLoadOptions:interface'
  - uid: 'excel!Excel.IconSetConditionalFormat#load:member(2)'
    summary: <span data-ttu-id="77b59-119">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="77b59-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77b59-120">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="77b59-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="77b59-121">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="77b59-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.IconSetConditionalFormat#load:member(3)'
    summary: <span data-ttu-id="77b59-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="77b59-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77b59-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="77b59-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat;'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="77b59-124">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="77b59-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.IconSetConditionalFormat#reverseIconOrder:member'
    summary: |-
      <span data-ttu-id="77b59-125">True の場合は、IconSet のアイコンオーダーを逆にします。</span><span class="sxs-lookup"><span data-stu-id="77b59-125">If true, reverses the icon orders for the IconSet.</span></span> <span data-ttu-id="77b59-126">カスタムアイコンが使用されている場合は、これを設定できないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="77b59-126">Note that this cannot be set if custom icons are used.</span></span>

      <span data-ttu-id="77b59-127">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77b59-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reverseIconOrder
    fullName: reverseIconOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'reverseIconOrder: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.IconSetConditionalFormat#set:member(1)'
    summary: '<span data-ttu-id="77b59-128">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="77b59-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="77b59-129">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="77b59-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="77b59-130">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="77b59-130">This method has the following additional signature:</span></span>

      `set(properties: Excel.IconSetConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.IconSetConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="77b59-131">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="77b59-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.IconSetConditionalFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="77b59-132">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="77b59-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.IconSetConditionalFormat#set:member(2)'
    summary: '<span data-ttu-id="77b59-133">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="77b59-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.IconSetConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.IconSetConditionalFormat:class'
  - uid: 'excel!Excel.IconSetConditionalFormat#showIconOnly:member'
    summary: |-
      <span data-ttu-id="77b59-134">true の場合、値は非表示にされて、アイコンのみが表示されます。</span><span class="sxs-lookup"><span data-stu-id="77b59-134">If true, hides the values and only shows icons.</span></span>

      <span data-ttu-id="77b59-135">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77b59-135">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showIconOnly
    fullName: showIconOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showIconOnly: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.IconSetConditionalFormat#style:member'
    summary: |-
      <span data-ttu-id="77b59-136">設定すると、条件付き書式の IconSet オプションが表示されます。</span><span class="sxs-lookup"><span data-stu-id="77b59-136">If set, displays the IconSet option for the conditional format.</span></span>

      <span data-ttu-id="77b59-137">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77b59-137">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon";'
      return:
        type:
          - 'excel!Excel.IconSetConditionalFormat#style~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77b59-138">例</span><span class="sxs-lookup"><span data-stu-id="77b59-138">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              const iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.IconSetConditionalFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="77b59-139">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="77b59-139">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="77b59-140">.</span><span class="sxs-lookup"><span data-stu-id="77b59-140"></span></span> <span data-ttu-id="77b59-141">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="77b59-141"></span></span><!-- --><span data-ttu-id="77b59-142">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の IconSetConditionalFormat オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Excel.Interfaces.IconSetConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="77b59-142">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.IconSetConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.IconSetConditionalFormatData`</span></span><!-- --><span data-ttu-id="77b59-143">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="77b59-143">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.IconSetConditionalFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.IconSetConditionalFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.IconSetConditionalFormat#criteria~0:complex'
    name: 'Excel.ConditionalIconCriterion[]'
    fullName: 'Excel.ConditionalIconCriterion[]'
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalIconCriterion:interface'
        name: Excel.ConditionalIconCriterion
        fullName: Excel.ConditionalIconCriterion
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.IconSetConditionalFormat:class'
    name: Excel.IconSetConditionalFormat
  - uid: 'excel!Excel.Interfaces.IconSetConditionalFormatLoadOptions:interface'
    name: Excel.Interfaces.IconSetConditionalFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.IconSetConditionalFormatUpdateData:interface'
    name: Interfaces.IconSetConditionalFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.IconSetConditionalFormat#style~0:complex'
    name: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon"
    fullName: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon"
    spec.typeScript:
      - uid: 'excel!Excel.IconSet:enum'
        name: Excel.IconSet
        fullName: Excel.IconSet
      - name: ' | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon"'
        fullName: ' | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon"'
  - uid: 'excel!Excel.Interfaces.IconSetConditionalFormatData:interface'
    name: Excel.Interfaces.IconSetConditionalFormatData