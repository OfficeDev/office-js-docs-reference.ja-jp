### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableRow
    summary: |-
      <span data-ttu-id="fa79b-101">テーブル内の行を表します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-101">Represents a row in a table.</span></span>

      <span data-ttu-id="fa79b-102">範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。</span><span class="sxs-lookup"><span data-stu-id="fa79b-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="fa79b-103">つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。</span><span class="sxs-lookup"><span data-stu-id="fa79b-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="fa79b-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa79b-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRow
    fullName: Excel.TableRow
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableRow.context
      - excel.Excel.TableRow.delete
      - excel.Excel.TableRow.getRange
      - excel.Excel.TableRow.index
      - excel.Excel.TableRow.load
      - excel.Excel.TableRow.load_1
      - excel.Excel.TableRow.load_2
      - excel.Excel.TableRow.set
      - excel.Excel.TableRow.set_1
      - excel.Excel.TableRow.toJSON
      - excel.Excel.TableRow.values
  - uid: excel.Excel.TableRow.context
    summary: <span data-ttu-id="fa79b-105">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="fa79b-105">The request context associated with the object.</span></span> <span data-ttu-id="fa79b-106">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="fa79b-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableRow.delete
    summary: |-
      <span data-ttu-id="fa79b-107">テーブルから行を削除します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-107">Deletes the row from the table.</span></span>

      <span data-ttu-id="fa79b-108">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa79b-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa79b-109">例</span><span class="sxs-lookup"><span data-stu-id="fa79b-109">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableRow.getRange
    summary: |-
      <span data-ttu-id="fa79b-110">行全体に関連付けられた範囲オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-110">Returns the range object associated with the entire row.</span></span>

      <span data-ttu-id="fa79b-111">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa79b-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa79b-112">例</span><span class="sxs-lookup"><span data-stu-id="fa79b-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(0);
              var rowRange = row.getRange();
              rowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(rowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableRow.index
    summary: |-
      <span data-ttu-id="fa79b-113">テーブルの行コレクション内の行のインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-113">Returns the index number of the row within the rows collection of the table.</span></span> <span data-ttu-id="fa79b-114">0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="fa79b-114">Zero-indexed.</span></span> <span data-ttu-id="fa79b-115">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fa79b-115">Read-only.</span></span>

      <span data-ttu-id="fa79b-116">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa79b-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableRow.load
    summary: <span data-ttu-id="fa79b-117">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="fa79b-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa79b-118">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa79b-118">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="fa79b-119">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="fa79b-119">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="fa79b-120">`load(option?: string | string[]): Excel.TableRow`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="fa79b-120">`load(option?: string | string[]): Excel.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="fa79b-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa79b-121">`load(option?: { select?: string; expand?: string; }): Excel.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="fa79b-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="fa79b-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="fa79b-123">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="fa79b-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="fa79b-124">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fa79b-125">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fa79b-126">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="fa79b-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableRowLoadOptions): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableRowLoadOptions
  - uid: excel.Excel.TableRow.load_1
    summary: <span data-ttu-id="fa79b-127">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="fa79b-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa79b-128">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa79b-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa79b-129">例</span><span class="sxs-lookup"><span data-stu-id="fa79b-129">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItem(0);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var newValues = [["New", "Values", "For", "New", "Row"]];
              var tableName = 'Table1';
              var row = ctx.workbook.tables.getItem(tableName).rows.getItemAt(2);
              row.values = newValues;
              row.load('values');
              return ctx.sync().then(function() {
                  console.log(row.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="fa79b-130">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="fa79b-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableRow.load_2
    summary: <span data-ttu-id="fa79b-131">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="fa79b-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa79b-132">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fa79b-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fa79b-133">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="fa79b-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableRow.set
    summary: '<span data-ttu-id="fa79b-134">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="fa79b-135">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="fa79b-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="fa79b-136">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="fa79b-136">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableRow): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableRowUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="fa79b-137">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fa79b-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableRowUpdateData
        - id: options
          description: <span data-ttu-id="fa79b-138">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TableRow.set_1
    summary: '<span data-ttu-id="fa79b-139">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableRow): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableRow
  - uid: excel.Excel.TableRow.toJSON
    summary: '<span data-ttu-id="fa79b-140">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fa79b-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fa79b-141">.</span><span class="sxs-lookup"><span data-stu-id="fa79b-141"></span></span> <span data-ttu-id="fa79b-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fa79b-142"></span></span><!-- --><span data-ttu-id="fa79b-143">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の TableRow オブジェクトは API オブジェクトであるのに対して`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.TableRowData`</span><span class="sxs-lookup"><span data-stu-id="fa79b-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowData`</span></span><!-- --><span data-ttu-id="fa79b-144">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowData;'
      return:
        type:
          - excel.Excel.Interfaces.TableRowData
        description: ''
  - uid: excel.Excel.TableRow.values
    summary: |-
      <span data-ttu-id="fa79b-145">指定した範囲の Raw 値を表します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-145">Represents the raw values of the specified range.</span></span> <span data-ttu-id="fa79b-146">返されるデータの型は、文字列、数値、ブール値のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="fa79b-146">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="fa79b-147">エラーが含まれているセルは、エラー文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="fa79b-147">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="fa79b-148">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa79b-148">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'