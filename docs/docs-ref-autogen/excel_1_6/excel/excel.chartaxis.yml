### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartAxis:class'
    summary: |-
      <span data-ttu-id="05daf-101">グラフの 1 つの軸を表します。</span><span class="sxs-lookup"><span data-stu-id="05daf-101">Represents a single axis in a chart.</span></span>

      <span data-ttu-id="05daf-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartAxis
    fullName: Excel.ChartAxis
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartAxis#context:member'
      - 'excel!Excel.ChartAxis#format:member'
      - 'excel!Excel.ChartAxis#load:member(1)'
      - 'excel!Excel.ChartAxis#load:member(2)'
      - 'excel!Excel.ChartAxis#load:member(3)'
      - 'excel!Excel.ChartAxis#majorGridlines:member'
      - 'excel!Excel.ChartAxis#majorUnit:member'
      - 'excel!Excel.ChartAxis#maximum:member'
      - 'excel!Excel.ChartAxis#minimum:member'
      - 'excel!Excel.ChartAxis#minorGridlines:member'
      - 'excel!Excel.ChartAxis#minorUnit:member'
      - 'excel!Excel.ChartAxis#set:member(1)'
      - 'excel!Excel.ChartAxis#set:member(2)'
      - 'excel!Excel.ChartAxis#title:member'
      - 'excel!Excel.ChartAxis#toJSON:member(1)'
  - uid: 'excel!Excel.ChartAxis#context:member'
    summary: <span data-ttu-id="05daf-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="05daf-103">The request context associated with the object.</span></span> <span data-ttu-id="05daf-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="05daf-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartAxis#format:member'
    summary: |-
      <span data-ttu-id="05daf-105">グラフオブジェクトの書式を表します。これには、行とフォントの書式設定が含まれます。</span><span class="sxs-lookup"><span data-stu-id="05daf-105">Represents the formatting of a chart object, which includes line and font formatting.</span></span> <span data-ttu-id="05daf-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="05daf-106">Read-only.</span></span>

      <span data-ttu-id="05daf-107">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAxisFormat;'
      return:
        type:
          - 'excel!Excel.ChartAxisFormat:class'
  - uid: 'excel!Excel.ChartAxis#load:member(1)'
    summary: <span data-ttu-id="05daf-108">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="05daf-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="05daf-109">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="05daf-109">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="05daf-110">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="05daf-110">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="05daf-111">`load(option?: string | string[]): Excel.ChartAxis`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="05daf-111">`load(option?: string | string[]): Excel.ChartAxis` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="05daf-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartAxis`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="05daf-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartAxis` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="05daf-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAxis`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="05daf-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAxis` - Only available on collection types.</span></span> <span data-ttu-id="05daf-114">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="05daf-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="05daf-115">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="05daf-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="05daf-116">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="05daf-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="05daf-117">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="05daf-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartAxisLoadOptions): Excel.ChartAxis;'
      return:
        type:
          - 'excel!Excel.ChartAxis:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.ChartAxisLoadOptions:interface'
  - uid: 'excel!Excel.ChartAxis#load:member(2)'
    summary: <span data-ttu-id="05daf-118">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="05daf-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="05daf-119">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="05daf-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxis;'
      return:
        type:
          - 'excel!Excel.ChartAxis:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="05daf-120">例</span><span class="sxs-lookup"><span data-stu-id="05daf-120">Examples</span></span>

          ```javascript
          // Get the maximum of Chart Axis from Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var axis = chart.axes.valueAxis;
              axis.load('maximum');
              return ctx.sync().then(function() {
                      console.log(axis.maximum);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set the maximum, minimum, majorunit, minorunit of valueaxis. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.axes.valueAxis.maximum = 5;
              chart.axes.valueAxis.minimum = 0;
              chart.axes.valueAxis.majorUnit = 1;
              chart.axes.valueAxis.minorUnit = 0.2;
              return ctx.sync().then(function() {
                      console.log("Axis Settings Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="05daf-121">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="05daf-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartAxis#load:member(3)'
    summary: <span data-ttu-id="05daf-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="05daf-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="05daf-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="05daf-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartAxis;'
      return:
        type:
          - 'excel!Excel.ChartAxis:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="05daf-124">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="05daf-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.ChartAxis#majorGridlines:member'
    summary: |-
      <span data-ttu-id="05daf-125">指定された軸の大きい目盛線を表す Gridlines オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="05daf-125">Returns a Gridlines object that represents the major gridlines for the specified axis.</span></span> <span data-ttu-id="05daf-126">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="05daf-126">Read-only.</span></span>

      <span data-ttu-id="05daf-127">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: majorGridlines
    fullName: majorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly majorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - 'excel!Excel.ChartGridlines:class'
  - uid: 'excel!Excel.ChartAxis#majorUnit:member'
    summary: |-
      <span data-ttu-id="05daf-128">2 つの大きい目盛の間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="05daf-128">Represents the interval between two major tick marks.</span></span> <span data-ttu-id="05daf-129">数値の値または空の文字列を設定できます。</span><span class="sxs-lookup"><span data-stu-id="05daf-129">Can be set to a numeric value or an empty string.</span></span> <span data-ttu-id="05daf-130">戻り値は常に数値です。</span><span class="sxs-lookup"><span data-stu-id="05daf-130">The returned value is always a number.</span></span>

      <span data-ttu-id="05daf-131">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: majorUnit
    fullName: majorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'majorUnit: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.ChartAxis#maximum:member'
    summary: |-
      <span data-ttu-id="05daf-132">数値軸の最大値を表します。</span><span class="sxs-lookup"><span data-stu-id="05daf-132">Represents the maximum value on the value axis.</span></span> <span data-ttu-id="05daf-133">数値の値または空の文字列を設定できます (軸の値が自動の場合)。</span><span class="sxs-lookup"><span data-stu-id="05daf-133">Can be set to a numeric value or an empty string (for automatic axis values).</span></span> <span data-ttu-id="05daf-134">戻り値は常に数値です。</span><span class="sxs-lookup"><span data-stu-id="05daf-134">The returned value is always a number.</span></span>

      <span data-ttu-id="05daf-135">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-135">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: maximum
    fullName: maximum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maximum: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.ChartAxis#minimum:member'
    summary: |-
      <span data-ttu-id="05daf-136">数値軸の最小値を表します。</span><span class="sxs-lookup"><span data-stu-id="05daf-136">Represents the minimum value on the value axis.</span></span> <span data-ttu-id="05daf-137">数値の値または空の文字列を設定できます (軸の値が自動の場合)。</span><span class="sxs-lookup"><span data-stu-id="05daf-137">Can be set to a numeric value or an empty string (for automatic axis values).</span></span> <span data-ttu-id="05daf-138">戻り値は常に数値です。</span><span class="sxs-lookup"><span data-stu-id="05daf-138">The returned value is always a number.</span></span>

      <span data-ttu-id="05daf-139">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: minimum
    fullName: minimum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minimum: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.ChartAxis#minorGridlines:member'
    summary: |-
      <span data-ttu-id="05daf-140">指定された軸の小さい目盛線を表す gridlines オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="05daf-140">Returns a Gridlines object that represents the minor gridlines for the specified axis.</span></span> <span data-ttu-id="05daf-141">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="05daf-141">Read-only.</span></span>

      <span data-ttu-id="05daf-142">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-142">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: minorGridlines
    fullName: minorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly minorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - 'excel!Excel.ChartGridlines:class'
  - uid: 'excel!Excel.ChartAxis#minorUnit:member'
    summary: |-
      <span data-ttu-id="05daf-143">2 つの小さい目盛の間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="05daf-143">Represents the interval between two minor tick marks.</span></span> <span data-ttu-id="05daf-144">数値の値または空の文字列を設定できます (軸の値が自動の場合)。</span><span class="sxs-lookup"><span data-stu-id="05daf-144">Can be set to a numeric value or an empty string (for automatic axis values).</span></span> <span data-ttu-id="05daf-145">戻り値は常に数値です。</span><span class="sxs-lookup"><span data-stu-id="05daf-145">The returned value is always a number.</span></span>

      <span data-ttu-id="05daf-146">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: minorUnit
    fullName: minorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minorUnit: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.ChartAxis#set:member(1)'
    summary: '<span data-ttu-id="05daf-147">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="05daf-147">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="05daf-148">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="05daf-148">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="05daf-149">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="05daf-149">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartAxis): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="05daf-150">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="05daf-150">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartAxisUpdateData:interface'
        - id: options
          description: <span data-ttu-id="05daf-151">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="05daf-151">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartAxis#set:member(2)'
    summary: '<span data-ttu-id="05daf-152">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="05daf-152">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxis): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartAxis:class'
  - uid: 'excel!Excel.ChartAxis#title:member'
    summary: |-
      <span data-ttu-id="05daf-153">軸タイトルを表します。</span><span class="sxs-lookup"><span data-stu-id="05daf-153">Represents the axis title.</span></span> <span data-ttu-id="05daf-154">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="05daf-154">Read-only.</span></span>

      <span data-ttu-id="05daf-155">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05daf-155">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartAxisTitle;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitle:class'
  - uid: 'excel!Excel.ChartAxis#toJSON:member(1)'
    summary: '<span data-ttu-id="05daf-156">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="05daf-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="05daf-157">.</span><span class="sxs-lookup"><span data-stu-id="05daf-157"></span></span> <span data-ttu-id="05daf-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="05daf-158"></span></span><!-- --><span data-ttu-id="05daf-159">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の ChartAxis オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.ChartAxisData`</span><span class="sxs-lookup"><span data-stu-id="05daf-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartAxis object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartAxisData`</span></span><!-- --><span data-ttu-id="05daf-160">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="05daf-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartAxisData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartAxisFormat:class'
    name: Excel.ChartAxisFormat
  - uid: 'excel!Excel.ChartAxis:class'
    name: Excel.ChartAxis
  - uid: 'excel!Excel.Interfaces.ChartAxisLoadOptions:interface'
    name: Excel.Interfaces.ChartAxisLoadOptions
  - uid: 'excel!Excel.ChartGridlines:class'
    name: Excel.ChartGridlines
  - uid: 'excel!Excel.Interfaces.ChartAxisUpdateData:interface'
    name: Interfaces.ChartAxisUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.ChartAxisTitle:class'
    name: Excel.ChartAxisTitle
  - uid: 'excel!Excel.Interfaces.ChartAxisData:interface'
    name: Excel.Interfaces.ChartAxisData