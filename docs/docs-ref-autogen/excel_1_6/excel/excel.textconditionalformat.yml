### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TextConditionalFormat
    summary: |-
      <span data-ttu-id="5a893-101">特定のテキスト条件付き書式を表します。</span><span class="sxs-lookup"><span data-stu-id="5a893-101">Represents a specific text conditional format.</span></span>

      <span data-ttu-id="5a893-102">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5a893-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TextConditionalFormat
    fullName: Excel.TextConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TextConditionalFormat.context
      - excel.Excel.TextConditionalFormat.format
      - excel.Excel.TextConditionalFormat.load
      - excel.Excel.TextConditionalFormat.load_1
      - excel.Excel.TextConditionalFormat.load_2
      - excel.Excel.TextConditionalFormat.rule
      - excel.Excel.TextConditionalFormat.set
      - excel.Excel.TextConditionalFormat.set_1
      - excel.Excel.TextConditionalFormat.toJSON
  - uid: excel.Excel.TextConditionalFormat.context
    summary: <span data-ttu-id="5a893-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="5a893-103">The request context associated with the object.</span></span> <span data-ttu-id="5a893-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="5a893-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TextConditionalFormat.format
    summary: |-
      <span data-ttu-id="5a893-105">書式設定オブジェクトを返し、条件付き書式のフォント、塗りつぶし、罫線などのプロパティをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="5a893-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span> <span data-ttu-id="5a893-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5a893-106">Read-only.</span></span>

      <span data-ttu-id="5a893-107">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5a893-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5a893-108">例</span><span class="sxs-lookup"><span data-stu-id="5a893-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: excel.Excel.TextConditionalFormat.load
    summary: <span data-ttu-id="5a893-109">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="5a893-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5a893-110">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5a893-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="5a893-111">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="5a893-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5a893-112">`load(option?: string | string[]): Excel.TextConditionalFormat`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="5a893-112">`load(option?: string | string[]): Excel.TextConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5a893-113">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="5a893-113">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5a893-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="5a893-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="5a893-115">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="5a893-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="5a893-116">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="5a893-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5a893-117">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="5a893-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5a893-118">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="5a893-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TextConditionalFormatLoadOptions): Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TextConditionalFormatLoadOptions
  - uid: excel.Excel.TextConditionalFormat.load_1
    summary: <span data-ttu-id="5a893-119">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="5a893-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5a893-120">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5a893-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="5a893-121">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="5a893-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TextConditionalFormat.load_2
    summary: <span data-ttu-id="5a893-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="5a893-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5a893-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5a893-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="5a893-124">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="5a893-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TextConditionalFormat.rule
    summary: |-
      <span data-ttu-id="5a893-125">条件付き書式のルール。</span><span class="sxs-lookup"><span data-stu-id="5a893-125">The rule of the conditional format.</span></span>

      <span data-ttu-id="5a893-126">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5a893-126">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule: Excel.ConditionalTextComparisonRule;'
      return:
        type:
          - excel.Excel.ConditionalTextComparisonRule
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5a893-127">例</span><span class="sxs-lookup"><span data-stu-id="5a893-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: excel.Excel.TextConditionalFormat.set
    summary: '<span data-ttu-id="5a893-128">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5a893-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5a893-129">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="5a893-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="5a893-130">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="5a893-130">This method has the following additional signature:</span></span>

      `set(properties: Excel.TextConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TextConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="5a893-131">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5a893-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TextConditionalFormatUpdateData
        - id: options
          description: <span data-ttu-id="5a893-132">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="5a893-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TextConditionalFormat.set_1
    summary: '<span data-ttu-id="5a893-133">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5a893-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TextConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TextConditionalFormat
  - uid: excel.Excel.TextConditionalFormat.toJSON
    summary: '<span data-ttu-id="5a893-134">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5a893-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5a893-135">.</span><span class="sxs-lookup"><span data-stu-id="5a893-135"></span></span> <span data-ttu-id="5a893-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5a893-136"></span></span><!-- --><span data-ttu-id="5a893-137">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の TextConditionalFormat オブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.TextConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="5a893-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TextConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TextConditionalFormatData`</span></span><!-- --><span data-ttu-id="5a893-138">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="5a893-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TextConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.TextConditionalFormatData
        description: ''