### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeBorder
    summary: |-
      <span data-ttu-id="40781-101">オブジェクトの輪郭を表します。</span><span class="sxs-lookup"><span data-stu-id="40781-101">Represents the border of an object.</span></span>

      <span data-ttu-id="40781-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="40781-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeBorder
    fullName: Excel.RangeBorder
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.RangeBorder.color
      - excel.Excel.RangeBorder.context
      - excel.Excel.RangeBorder.load
      - excel.Excel.RangeBorder.load_1
      - excel.Excel.RangeBorder.load_2
      - excel.Excel.RangeBorder.set
      - excel.Excel.RangeBorder.set_1
      - excel.Excel.RangeBorder.sideIndex
      - excel.Excel.RangeBorder.style
      - excel.Excel.RangeBorder.toJSON
      - excel.Excel.RangeBorder.weight
  - uid: excel.Excel.RangeBorder.color
    summary: |-
      <span data-ttu-id="40781-103">フォーム\#RRGGBB (例: "FFA500") の境界線の色を表す html カラーコード、または名前付きの html 色 (例: 「オレンジ」)。</span><span class="sxs-lookup"><span data-stu-id="40781-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>

      <span data-ttu-id="40781-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="40781-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeBorder.context
    summary: <span data-ttu-id="40781-105">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="40781-105">The request context associated with the object.</span></span> <span data-ttu-id="40781-106">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="40781-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.RangeBorder.load
    summary: <span data-ttu-id="40781-107">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="40781-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="40781-108">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="40781-108">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="40781-109">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="40781-109">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="40781-110">`load(option?: string | string[]): Excel.RangeBorder`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="40781-110">`load(option?: string | string[]): Excel.RangeBorder` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="40781-111">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorder`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="40781-111">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorder` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="40781-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorder`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="40781-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorder` - Only available on collection types.</span></span> <span data-ttu-id="40781-113">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="40781-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="40781-114">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="40781-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="40781-115">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="40781-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="40781-116">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="40781-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeBorderLoadOptions): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeBorderLoadOptions
  - uid: excel.Excel.RangeBorder.load_1
    summary: <span data-ttu-id="40781-117">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="40781-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="40781-118">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="40781-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: |-


          #### <a name="examples"></a><span data-ttu-id="40781-119">例</span><span class="sxs-lookup"><span data-stu-id="40781-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borders = range.format.borders;
              borders.load('items');
              return ctx.sync().then(function() {
                  console.log(borders.count);
                  for (var i = 0; i < borders.items.length; i++)
                  {
                      console.log(borders.items[i].sideIndex);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="40781-120">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="40781-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeBorder.load_2
    summary: <span data-ttu-id="40781-121">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="40781-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="40781-122">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="40781-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="40781-123">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="40781-123">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.RangeBorder.set
    summary: '<span data-ttu-id="40781-124">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="40781-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="40781-125">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="40781-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="40781-126">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="40781-126">This method has the following additional signature:</span></span>

      `set(properties: Excel.RangeBorder): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="40781-127">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40781-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.RangeBorderUpdateData
        - id: options
          description: <span data-ttu-id="40781-128">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="40781-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.RangeBorder.set_1
    summary: '<span data-ttu-id="40781-129">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="40781-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeBorder): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeBorder
  - uid: excel.Excel.RangeBorder.sideIndex
    summary: |-
      <span data-ttu-id="40781-130">罫線の特定の辺を表す定数値。</span><span class="sxs-lookup"><span data-stu-id="40781-130">Constant value that indicates the specific side of the border.</span></span> <span data-ttu-id="40781-131">詳細については、「Excel BorderIndex」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="40781-131">See Excel.BorderIndex for details.</span></span> <span data-ttu-id="40781-132">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="40781-132">Read-only.</span></span>

      <span data-ttu-id="40781-133">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="40781-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sideIndex
    fullName: sideIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sideIndex: Excel.BorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp";'
      return:
        type:
          - Excel.BorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"
  - uid: excel.Excel.RangeBorder.style
    summary: |-
      <span data-ttu-id="40781-134">罫線の線スタイルを指定する、線スタイル定数のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="40781-134">One of the constants of line style specifying the line style for the border.</span></span> <span data-ttu-id="40781-135">詳細については、「Excel BorderLineStyle」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="40781-135">See Excel.BorderLineStyle for details.</span></span>

      <span data-ttu-id="40781-136">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="40781-136">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.BorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Double" | "SlantDashDot";'
      return:
        type:
          - Excel.BorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Double" | "SlantDashDot"
  - uid: excel.Excel.RangeBorder.toJSON
    summary: '<span data-ttu-id="40781-137">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="40781-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="40781-138">.</span><span class="sxs-lookup"><span data-stu-id="40781-138"></span></span> <span data-ttu-id="40781-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="40781-139"></span></span><!-- --><span data-ttu-id="40781-140">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の RangeBorder オブジェクトは API オブジェクトであるのに対して`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Excel.Interfaces.RangeBorderData`</span><span class="sxs-lookup"><span data-stu-id="40781-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeBorder object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderData`</span></span><!-- --><span data-ttu-id="40781-141">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="40781-141">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeBorderData
        description: ''
  - uid: excel.Excel.RangeBorder.weight
    summary: |-
      <span data-ttu-id="40781-142">範囲周辺の罫線の太さを指定します。</span><span class="sxs-lookup"><span data-stu-id="40781-142">Specifies the weight of the border around a range.</span></span> <span data-ttu-id="40781-143">詳細については、「Excel BorderWeight」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="40781-143">See Excel.BorderWeight for details.</span></span>

      <span data-ttu-id="40781-144">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="40781-144">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: weight
    fullName: weight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'weight: Excel.BorderWeight | "Hairline" | "Thin" | "Medium" | "Thick";'
      return:
        type:
          - Excel.BorderWeight | "Hairline" | "Thin" | "Medium" | "Thick"