### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SettingCollection
    summary: |-
      <span data-ttu-id="da7b5-101">ブックの一部であるキーと値のペア設定オブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-101">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id="da7b5-102">範囲は、ファイルとアドイン (タスクペインまたはコンテンツ) の組み合わせに制限されます。</span><span class="sxs-lookup"><span data-stu-id="da7b5-102">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>

      <span data-ttu-id="da7b5-103">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="da7b5-103">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.SettingCollection
    fullName: Excel.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.SettingCollection.add
      - excel.Excel.SettingCollection.context
      - excel.Excel.SettingCollection.getCount
      - excel.Excel.SettingCollection.getItem
      - excel.Excel.SettingCollection.getItemOrNullObject
      - excel.Excel.SettingCollection.items
      - excel.Excel.SettingCollection.load
      - excel.Excel.SettingCollection.load_1
      - excel.Excel.SettingCollection.load_2
      - excel.Excel.SettingCollection.onSettingsChanged
      - excel.Excel.SettingCollection.toJSON
  - uid: excel.Excel.SettingCollection.add
    summary: |-
      <span data-ttu-id="da7b5-104">指定した設定をブックに設定または追加します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-104">Sets or adds the specified setting to the workbook.</span></span>

      <span data-ttu-id="da7b5-105">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="da7b5-105">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="da7b5-106">例</span><span class="sxs-lookup"><span data-stu-id="da7b5-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="da7b5-107">新しい設定のキーです。</span><span class="sxs-lookup"><span data-stu-id="da7b5-107">The Key of the new setting.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="da7b5-108">新しい設定の値です。</span><span class="sxs-lookup"><span data-stu-id="da7b5-108">The Value for the new setting.</span></span>
          type:
            - string | number | boolean | Date | Array<any> | any
  - uid: excel.Excel.SettingCollection.context
    summary: <span data-ttu-id="da7b5-109">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="da7b5-109">The request context associated with the object.</span></span> <span data-ttu-id="da7b5-110">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="da7b5-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.SettingCollection.getCount
    summary: |-
      <span data-ttu-id="da7b5-111">コレクションに含まれる設定の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-111">Gets the number of Settings in the collection.</span></span>

      <span data-ttu-id="da7b5-112">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="da7b5-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SettingCollection.getItem
    summary: |-
      <span data-ttu-id="da7b5-113">キーに基づいて設定エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-113">Gets a Setting entry via the key.</span></span>

      <span data-ttu-id="da7b5-114">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="da7b5-114">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="da7b5-115">設定のキーです。</span><span class="sxs-lookup"><span data-stu-id="da7b5-115">Key of the setting.</span></span>
          type:
            - string
  - uid: excel.Excel.SettingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="da7b5-116">キーから Setting エントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-116">Gets a Setting entry via the key.</span></span> <span data-ttu-id="da7b5-117">Setting が存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-117">If the Setting does not exist, will return a null object.</span></span>

      <span data-ttu-id="da7b5-118">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="da7b5-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="da7b5-119">例</span><span class="sxs-lookup"><span data-stu-id="da7b5-119">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="da7b5-120">設定のキーです。</span><span class="sxs-lookup"><span data-stu-id="da7b5-120">The key of the setting.</span></span>
          type:
            - string
  - uid: excel.Excel.SettingCollection.items
    summary: <span data-ttu-id="da7b5-121">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Setting[];'
      return:
        type:
          - 'Excel.Setting[]'
  - uid: excel.Excel.SettingCollection.load
    summary: <span data-ttu-id="da7b5-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="da7b5-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="da7b5-123">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="da7b5-123">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="da7b5-124">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="da7b5-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="da7b5-125">`load(option?: string | string[]): Excel.SettingCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="da7b5-125">`load(option?: string | string[]): Excel.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="da7b5-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="da7b5-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="da7b5-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="da7b5-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="da7b5-128">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="da7b5-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="da7b5-129">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="da7b5-130">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="da7b5-131">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="da7b5-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SettingCollection.load_1
    summary: <span data-ttu-id="da7b5-132">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="da7b5-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="da7b5-133">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="da7b5-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="da7b5-134">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="da7b5-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.SettingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.SettingCollection.onSettingsChanged
    summary: |-
      <span data-ttu-id="da7b5-135">ドキュメント内の設定が変更されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="da7b5-135">Occurs when the Settings in the document are changed.</span></span>

      <span data-ttu-id="da7b5-136">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="da7b5-136">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSettingsChanged
    fullName: onSettingsChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="da7b5-137">例</span><span class="sxs-lookup"><span data-stu-id="da7b5-137">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
  - uid: excel.Excel.SettingCollection.toJSON
    summary: '<span data-ttu-id="da7b5-138">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="da7b5-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="da7b5-139">.</span><span class="sxs-lookup"><span data-stu-id="da7b5-139"></span></span> <span data-ttu-id="da7b5-140">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="da7b5-140"></span></span><!-- --><span data-ttu-id="da7b5-141">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.SettingCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.SettingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="da7b5-141">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id="da7b5-142">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="da7b5-142">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SettingCollectionData
        description: ''