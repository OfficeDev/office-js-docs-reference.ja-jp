### YamlMime:TSType
name: Excel.Application
uid: excel!Excel.Application:class
package: excel!
fullName: Excel.Application
summary: >-
  ブックを管理する Excel アプリケーションを表します。


  \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: calculationMode
  uid: excel!Excel.Application#calculationMode:member
  package: excel!
  fullName: calculationMode
  summary: >-
    ブック内の定数で定義されている計算モードを返します。 `Excel.CalculationMode`<!-- -->. 指定できる値は次のとおりです。 `Automatic`<!-- -->、Excel が再計算を制御します。 `AutomaticExceptTables`<!-- -->、Excel は再計算を制御しますが、テーブルの変更は無視します。 `Manual`<!-- -->で、ユーザーが要求した場合に計算が行われます。


    \[[API セット: ExcelApi 1.1 for get、 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type: <xref uid="excel!Excel.CalculationMode:enum" /> | "Automatic" | "AutomaticExceptTables" | "Manual"
- name: context
  uid: excel!Excel.Application#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられた要求コンテキスト。 これにより、アドインのプロセスがホスト アプリケーションのプロセスOfficeに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
methods:
- name: calculate(calculationType)
  uid: excel!Excel.Application#calculate:member(1)
  package: excel!
  fullName: calculate(calculationType)
  summary: >-
    Excel で現在開いているすべてのブックを再計算します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    parameters:
    - id: calculationType
      description: 使用する計算の種類を指定します。 詳細は「`Excel.CalculationType`」をご覧ください。
      type: <xref uid="excel!Excel.CalculationType:enum" />
    return:
      type: void
      description: ''
- name: calculate(calculationTypeString)
  uid: excel!Excel.Application#calculate:member(2)
  package: excel!
  fullName: calculate(calculationTypeString)
  summary: >-
    Excel で現在開いているすべてのブックを再計算します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
    parameters:
    - id: calculationTypeString
      description: 使用する計算の種類を指定します。 詳細は「`Excel.CalculationType`」をご覧ください。
      type: "\"Recalculate\" | \"Full\" | \"FullRebuild\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.Application#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティのオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.ApplicationLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Application:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Application#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Application;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定するコンマ区切り文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Application:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) {\n    var application = ctx.workbook.application;\n    application.load('calculationMode');\n    return ctx.sync().then(function() {\n        console.log(application.calculationMode);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Application#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Application;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマ区切りの文字列で、読み込むナビゲーション プロパティを指定するコンマ区切 `propertyNamesAndPaths.expand` りの文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Application:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Application#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: オブジェクトの複数のプロパティを同時に設定します。 適切なプロパティを持つプレーン オブジェクト、または同じ種類の別の API オブジェクトを渡します。
  remarks: >-
    このメソッドには、次の追加の署名があります。


    `set(properties: Excel.Application): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティと同型的に構造化されたプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="excel!Excel.Interfaces.ApplicationUpdateData:interface" />
    - id: options
      description: properties オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Application#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクト上の複数のプロパティを同時に設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Application): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Application:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Application#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: API オブジェクトを渡す際に、より有用な出力を提供するために `toJSON()` JavaScript メソッドをオーバーライドします。 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->、順番に、渡 `toJSON` されるオブジェクトのメソッドを呼び出します。元の Excel.Application オブジェクトが API オブジェクトであるのに対し、メソッドはプレーンな JavaScript オブジェクト (次のように入力) `toJSON` を返します。 `Excel.Interfaces.ApplicationData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを含む。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ApplicationData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 20d16a73605fe36bfb8ce9043f82f8001a776812
  ms.sourcegitcommit: ce09743deb2fc2a879cd63f96c8ff11ec84a42b2
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/02/2021
  ms.locfileid: "51526648"
