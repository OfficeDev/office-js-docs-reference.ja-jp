### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Table
    summary: |-
      <span data-ttu-id="06173-101">Excel の表を表します。</span><span class="sxs-lookup"><span data-stu-id="06173-101">Represents an Excel table.</span></span> <span data-ttu-id="06173-102">表オブジェクトモデルの詳細については、「 [Excel JAVASCRIPT API を使用してテーブルを操作](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="06173-102">To learn more about the table object model, read [Work with tables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span></span><!-- --><span data-ttu-id="06173-103">.</span><span class="sxs-lookup"><span data-stu-id="06173-103"></span></span>

      <span data-ttu-id="06173-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Table.columns
      - excel.Excel.Table.context
      - excel.Excel.Table.delete
      - excel.Excel.Table.getDataBodyRange
      - excel.Excel.Table.getHeaderRowRange
      - excel.Excel.Table.getRange
      - excel.Excel.Table.getTotalRowRange
      - excel.Excel.Table.id
      - excel.Excel.Table.load
      - excel.Excel.Table.load_1
      - excel.Excel.Table.load_2
      - excel.Excel.Table.name
      - excel.Excel.Table.rows
      - excel.Excel.Table.set
      - excel.Excel.Table.set_1
      - excel.Excel.Table.showHeaders
      - excel.Excel.Table.showTotals
      - excel.Excel.Table.style
      - excel.Excel.Table.toJSON
  - uid: excel.Excel.Table.columns
    summary: |-
      <span data-ttu-id="06173-105">テーブルに含まれるすべての列のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="06173-105">Represents a collection of all the columns in the table.</span></span> <span data-ttu-id="06173-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="06173-106">Read-only.</span></span>

      <span data-ttu-id="06173-107">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - excel.Excel.TableColumnCollection
  - uid: excel.Excel.Table.context
    summary: <span data-ttu-id="06173-108">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="06173-108">The request context associated with the object.</span></span> <span data-ttu-id="06173-109">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="06173-109">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Table.delete
    summary: |-
      <span data-ttu-id="06173-110">テーブルを削除します。</span><span class="sxs-lookup"><span data-stu-id="06173-110">Deletes the table.</span></span>

      <span data-ttu-id="06173-111">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="06173-112">例</span><span class="sxs-lookup"><span data-stu-id="06173-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getDataBodyRange
    summary: |-
      <span data-ttu-id="06173-113">テーブルのデータ本体に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="06173-113">Gets the range object associated with the data body of the table.</span></span>

      <span data-ttu-id="06173-114">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="06173-115">例</span><span class="sxs-lookup"><span data-stu-id="06173-115">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getHeaderRowRange
    summary: |-
      <span data-ttu-id="06173-116">テーブルのヘッダー行に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="06173-116">Gets the range object associated with header row of the table.</span></span>

      <span data-ttu-id="06173-117">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="06173-118">例</span><span class="sxs-lookup"><span data-stu-id="06173-118">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getRange
    summary: |-
      <span data-ttu-id="06173-119">テーブル全体に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="06173-119">Gets the range object associated with the entire table.</span></span>

      <span data-ttu-id="06173-120">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="06173-121">例</span><span class="sxs-lookup"><span data-stu-id="06173-121">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getTotalRowRange
    summary: |-
      <span data-ttu-id="06173-122">テーブルの集計行に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="06173-122">Gets the range object associated with totals row of the table.</span></span>

      <span data-ttu-id="06173-123">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="06173-124">例</span><span class="sxs-lookup"><span data-stu-id="06173-124">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.id
    summary: |-
      <span data-ttu-id="06173-p104">指定されたブックのテーブルを一意に識別する値を返します。識別子の値は、テーブルの名前が変更された場合も変わりません。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="06173-p104">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>

      <span data-ttu-id="06173-128">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.load
    summary: <span data-ttu-id="06173-129">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="06173-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="06173-130">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="06173-130">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="06173-131">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="06173-131">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="06173-132">`load(option?: string | string[]): Excel.Table`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="06173-132">`load(option?: string | string[]): Excel.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="06173-133">`load(option?: { select?: string; expand?: string; }): Excel.Table`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="06173-133">`load(option?: { select?: string; expand?: string; }): Excel.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="06173-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="06173-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table` - Only available on collection types.</span></span> <span data-ttu-id="06173-135">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="06173-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="06173-136">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="06173-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="06173-137">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="06173-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="06173-138">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="06173-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableLoadOptions
  - uid: excel.Excel.Table.load_1
    summary: <span data-ttu-id="06173-139">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="06173-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="06173-140">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="06173-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="06173-141">例</span><span class="sxs-lookup"><span data-stu-id="06173-141">Examples</span></span>

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="06173-142">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="06173-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Table.load_2
    summary: <span data-ttu-id="06173-143">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="06173-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="06173-144">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="06173-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="06173-145">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="06173-145">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Table.name
    summary: |-
      <span data-ttu-id="06173-146">テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="06173-146">Name of the table.</span></span>

      <span data-ttu-id="06173-147">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.rows
    summary: |-
      <span data-ttu-id="06173-148">テーブルに含まれるすべての行のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="06173-148">Represents a collection of all the rows in the table.</span></span> <span data-ttu-id="06173-149">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="06173-149">Read-only.</span></span>

      <span data-ttu-id="06173-150">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-150">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - excel.Excel.TableRowCollection
  - uid: excel.Excel.Table.set
    summary: '<span data-ttu-id="06173-151">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="06173-151">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="06173-152">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="06173-152">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="06173-153">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="06173-153">This method has the following additional signature:</span></span>

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="06173-154">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="06173-154">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableUpdateData
        - id: options
          description: <span data-ttu-id="06173-155">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="06173-155">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Table.set_1
    summary: '<span data-ttu-id="06173-156">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="06173-156">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Table
  - uid: excel.Excel.Table.showHeaders
    summary: |-
      <span data-ttu-id="06173-157">ヘッダー行を表示するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="06173-157">Indicates whether the header row is visible or not.</span></span> <span data-ttu-id="06173-158">この値によって、ヘッダー行の表示または削除を設定できます。</span><span class="sxs-lookup"><span data-stu-id="06173-158">This value can be set to show or remove the header row.</span></span>

      <span data-ttu-id="06173-159">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-159">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.showTotals
    summary: |-
      <span data-ttu-id="06173-160">集計行を表示するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="06173-160">Indicates whether the total row is visible or not.</span></span> <span data-ttu-id="06173-161">この値によって、集計行の表示または削除を設定できます。</span><span class="sxs-lookup"><span data-stu-id="06173-161">This value can be set to show or remove the total row.</span></span>

      <span data-ttu-id="06173-162">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-162">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.style
    summary: |-
      <span data-ttu-id="06173-p113">テーブル スタイルを表す定数値。使用可能な値は次のとおりです。TableStyleLight1 から TableStyleLight21、TableStyleMedium1 から TableStyleMedium28、TableStyleStyleDark1 から TableStyleStyleDark11。ブックに存在するカスタムのユーザー定義スタイルも指定できます。</span><span class="sxs-lookup"><span data-stu-id="06173-p113">Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="06173-166">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06173-166">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.toJSON
    summary: '<span data-ttu-id="06173-167">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="06173-167">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="06173-168">.</span><span class="sxs-lookup"><span data-stu-id="06173-168"></span></span> <span data-ttu-id="06173-169">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="06173-169"></span></span><!-- --><span data-ttu-id="06173-170">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel Table オブジェクトは API オブジェクトであるのに対し`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="06173-170">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="06173-171">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="06173-171">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - excel.Excel.Interfaces.TableData
        description: ''