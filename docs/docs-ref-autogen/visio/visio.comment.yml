### YamlMime:UniversalReference
ms.openlocfilehash: a83603263b89c571aef6c9668a213a5755ddd5f3
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/17/2018
ms.locfileid: "25587334"
items:
- uid: visio.Visio.Comment
  summary: >-
    <span data-ttu-id="61e1c-101">コメントを表します。</span><span class="sxs-lookup"><span data-stu-id="61e1c-101">Represents the Comment.</span></span>


    <span data-ttu-id="61e1c-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="61e1c-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Comment
  fullName: visio.Visio.Comment
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Comment.author
  - visio.Visio.Comment.date
  - visio.Visio.Comment.load
  - visio.Visio.Comment.text
  - visio.Visio.Comment.toJSON
- uid: visio.Visio.Comment.author
  summary: >-
    <span data-ttu-id="61e1c-103">コメントの作成者の名前を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="61e1c-103">A string that specifies the name of the author of the comment.</span></span>


    <span data-ttu-id="61e1c-104">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="61e1c-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: author
  fullName: visio.Visio.Comment.author
  langs:
  - typeScript
  type: property
  syntax:
    content: 'author: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.date
  summary: >-
    <span data-ttu-id="61e1c-105">コメントが作成された日付を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="61e1c-105">A string that specifies the date when the comment was created.</span></span>


    <span data-ttu-id="61e1c-106">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="61e1c-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: date
  fullName: visio.Visio.Comment.date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.load
  summary: <span data-ttu-id="61e1c-107">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="61e1c-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="61e1c-108">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="61e1c-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="61e1c-109">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="61e1c-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="61e1c-110">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="61e1c-110">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="61e1c-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="61e1c-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="61e1c-112">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="61e1c-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="61e1c-113">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="61e1c-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="61e1c-114">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="61e1c-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="61e1c-115">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="61e1c-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="61e1c-116">例</span><span class="sxs-lookup"><span data-stu-id="61e1c-116">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: visio.Visio.Comment.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.Comment;'
    return:
      type:
      - visio.Visio.Comment
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="61e1c-117">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="61e1c-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Comment.text
  summary: >-
    <span data-ttu-id="61e1c-118">コメント テキストを含む文字列です。</span><span class="sxs-lookup"><span data-stu-id="61e1c-118">A string that contains the comment text.</span></span>


    <span data-ttu-id="61e1c-119">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="61e1c-119">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: visio.Visio.Comment.text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.toJSON
  name: toJSON()
  fullName: visio.Visio.Comment.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentData;'
    return:
      type:
      - visio.Visio.Interfaces.CommentData
      description: ''
