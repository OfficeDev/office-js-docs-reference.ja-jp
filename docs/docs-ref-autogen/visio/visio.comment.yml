### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Comment
    summary: |-
      <span data-ttu-id="7c834-101">コメントを表します。</span><span class="sxs-lookup"><span data-stu-id="7c834-101">Represents the Comment.</span></span>

      <span data-ttu-id="7c834-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7c834-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Comment
    fullName: Visio.Comment
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Comment.author
      - visio.Visio.Comment.context
      - visio.Visio.Comment.date
      - visio.Visio.Comment.load
      - visio.Visio.Comment.load_1
      - visio.Visio.Comment.load_2
      - visio.Visio.Comment.set
      - visio.Visio.Comment.set_1
      - visio.Visio.Comment.text
      - visio.Visio.Comment.toJSON
  - uid: visio.Visio.Comment.author
    summary: |-
      <span data-ttu-id="7c834-103">コメントの作成者の名前を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="7c834-103">A string that specifies the name of the author of the comment.</span></span>

      <span data-ttu-id="7c834-104">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7c834-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: author
    fullName: author
    langs:
      - typeScript
    type: property
    syntax:
      content: 'author: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Comment.context
    summary: <span data-ttu-id="7c834-105">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="7c834-105">The request context associated with the object.</span></span> <span data-ttu-id="7c834-106">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="7c834-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Comment.date
    summary: |-
      <span data-ttu-id="7c834-107">コメントが作成された日付を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="7c834-107">A string that specifies the date when the comment was created.</span></span>

      <span data-ttu-id="7c834-108">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7c834-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: date
    fullName: date
    langs:
      - typeScript
    type: property
    syntax:
      content: 'date: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Comment.load
    summary: <span data-ttu-id="7c834-109">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="7c834-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7c834-110">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c834-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="7c834-111">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7c834-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7c834-112">`load(option?: string | string[]): Visio.Comment`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="7c834-112">`load(option?: string | string[]): Visio.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7c834-113">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="7c834-113">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7c834-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="7c834-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="7c834-115">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="7c834-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="7c834-116">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="7c834-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7c834-117">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="7c834-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7c834-118">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="7c834-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="7c834-119">例</span><span class="sxs-lookup"><span data-stu-id="7c834-119">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Position Belt.41";
          var shape = activePage.shapes.getItem(shapeName);
          var shapeComments= shape.comments;
          shapeComments.load(["author", "text"]);
          return ctx.sync().then(function () {
              for(var i = 0; i < shapeComments.items.length; i++)
              {
                  var comment = shapeComments.items[i];
                  console.log("comment Author: " + comment.author);
                  console.log("Comment Text: " + comment.text);
                  console.log("Date " + comment.date);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
      return:
        type:
          - Visio.Comment
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.CommentLoadOptions
  - uid: visio.Visio.Comment.load_1
    summary: <span data-ttu-id="7c834-120">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="7c834-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7c834-121">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c834-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Comment;'
      return:
        type:
          - Visio.Comment
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="7c834-122">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="7c834-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Comment.load_2
    summary: <span data-ttu-id="7c834-123">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="7c834-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7c834-124">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c834-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Comment;'
      return:
        type:
          - Visio.Comment
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7c834-125">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="7c834-125">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Comment.set
    summary: '<span data-ttu-id="7c834-126">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c834-126">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="7c834-127">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="7c834-127">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="7c834-128">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="7c834-128">This method has the following additional signature:</span></span>

      `set(properties: Visio.Comment): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="7c834-129">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c834-129">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.CommentUpdateData
        - id: options
          description: <span data-ttu-id="7c834-130">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="7c834-130">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Comment.set_1
    summary: '<span data-ttu-id="7c834-131">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c834-131">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Comment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Comment
  - uid: visio.Visio.Comment.text
    summary: |-
      <span data-ttu-id="7c834-132">コメント テキストを含む文字列です。</span><span class="sxs-lookup"><span data-stu-id="7c834-132">A string that contains the comment text.</span></span>

      <span data-ttu-id="7c834-133">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7c834-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Comment.toJSON
    summary: '<span data-ttu-id="7c834-134">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7c834-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7c834-135">.</span><span class="sxs-lookup"><span data-stu-id="7c834-135"></span></span> <span data-ttu-id="7c834-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7c834-136"></span></span><!-- --><span data-ttu-id="7c834-137">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Visio. Comment オブジェクトは API オブジェクトですが、この`toJSON`メソッドはプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Visio.Interfaces.CommentData`</span><span class="sxs-lookup"><span data-stu-id="7c834-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Comment object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.CommentData`</span></span><!-- --><span data-ttu-id="7c834-138">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="7c834-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.CommentData;'
      return:
        type:
          - Visio.Interfaces.CommentData
        description: ''