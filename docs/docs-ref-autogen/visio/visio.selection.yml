### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Selection
    summary: |-
      <span data-ttu-id="267e3-101">ページの選択範囲を表します。</span><span class="sxs-lookup"><span data-stu-id="267e3-101">Represents the Selection in the page.</span></span>

      <span data-ttu-id="267e3-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="267e3-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Selection
    fullName: Visio.Selection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Selection.context
      - visio.Visio.Selection.load
      - visio.Visio.Selection.load_1
      - visio.Visio.Selection.shapes
      - visio.Visio.Selection.toJSON
  - uid: visio.Visio.Selection.context
    summary: <span data-ttu-id="267e3-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="267e3-103">The request context associated with the object.</span></span> <span data-ttu-id="267e3-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="267e3-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Selection.load
    summary: <span data-ttu-id="267e3-105">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="267e3-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="267e3-106">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="267e3-106">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Selection;'
      return:
        type:
          - visio.Visio.Selection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="267e3-107">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="267e3-107">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Selection.load_1
    summary: <span data-ttu-id="267e3-108">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="267e3-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="267e3-109">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="267e3-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Selection;'
      return:
        type:
          - visio.Visio.Selection
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="267e3-110">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="267e3-110">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Selection.shapes
    summary: |-
      <span data-ttu-id="267e3-111">選択範囲の図形を取得します。</span><span class="sxs-lookup"><span data-stu-id="267e3-111">Gets the Shapes of the Selection.</span></span> <span data-ttu-id="267e3-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="267e3-112">Read-only.</span></span>

      <span data-ttu-id="267e3-113">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="267e3-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
  - uid: visio.Visio.Selection.toJSON
    summary: '<span data-ttu-id="267e3-114">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="267e3-114">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="267e3-115">.</span><span class="sxs-lookup"><span data-stu-id="267e3-115"></span></span> <span data-ttu-id="267e3-116">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="267e3-116"></span></span><!-- --><span data-ttu-id="267e3-117">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Visio Selection オブジェクトは API オブジェクトですが、このメソッド`toJSON`はプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Visio.Interfaces.SelectionData`</span><span class="sxs-lookup"><span data-stu-id="267e3-117">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Selection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.SelectionData`</span></span><!-- --><span data-ttu-id="267e3-118">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="267e3-118">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.SelectionData;'
      return:
        type:
          - visio.Visio.Interfaces.SelectionData
        description: ''