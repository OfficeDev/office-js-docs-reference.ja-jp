### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Document
    summary: |-
      <span data-ttu-id="19966-101">ドキュメント クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="19966-101">Represents the Document class.</span></span>

      <span data-ttu-id="19966-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Document
    fullName: Visio.Document
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: visio
    children:
      - visio.Visio.Document.application
      - visio.Visio.Document.context
      - visio.Visio.Document.getActivePage
      - visio.Visio.Document.load
      - visio.Visio.Document.load_1
      - visio.Visio.Document.load_2
      - visio.Visio.Document.onDataRefreshComplete
      - visio.Visio.Document.onDocumentLoadComplete
      - visio.Visio.Document.onPageLoadComplete
      - visio.Visio.Document.onSelectionChanged
      - visio.Visio.Document.onShapeMouseEnter
      - visio.Visio.Document.onShapeMouseLeave
      - visio.Visio.Document.pages
      - visio.Visio.Document.set
      - visio.Visio.Document.set_1
      - visio.Visio.Document.setActivePage
      - visio.Visio.Document.startDataRefresh
      - visio.Visio.Document.toJSON
      - visio.Visio.Document.view
  - uid: visio.Visio.Document.application
    summary: |-
      <span data-ttu-id="19966-103">このドキュメントを含む Visio アプリケーションのインスタンスを表します。</span><span class="sxs-lookup"><span data-stu-id="19966-103">Represents a Visio application instance that contains this document.</span></span> <span data-ttu-id="19966-104">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="19966-104">Read-only.</span></span>

      <span data-ttu-id="19966-105">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Visio.Application;'
      return:
        type:
          - visio.Visio.Application
  - uid: visio.Visio.Document.context
    summary: <span data-ttu-id="19966-106">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="19966-106">The request context associated with the object.</span></span> <span data-ttu-id="19966-107">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="19966-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - visio.Visio.RequestContext
  - uid: visio.Visio.Document.getActivePage
    summary: |-
      <span data-ttu-id="19966-108">ドキュメントのアクティブ ページを返します。</span><span class="sxs-lookup"><span data-stu-id="19966-108">Returns the Active Page of the document.</span></span>

      <span data-ttu-id="19966-109">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-109">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getActivePage()
    fullName: getActivePage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): Visio.Page;'
      return:
        type:
          - visio.Visio.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19966-110">例</span><span class="sxs-lookup"><span data-stu-id="19966-110">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var activePage = document.getActivePage();
              activePage.load("name");
              return ctx.sync().then(function () {
                  console.log("pageName: " +activePage.name);
              });   
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.load
    summary: <span data-ttu-id="19966-111">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="19966-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19966-112">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="19966-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="19966-113">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="19966-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="19966-114">`load(option?: string | string[]): Visio.Document`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="19966-114">`load(option?: string | string[]): Visio.Document` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="19966-115">`load(option?: { select?: string; expand?: string; }): Visio.Document`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="19966-115">`load(option?: { select?: string; expand?: string; }): Visio.Document` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="19966-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="19966-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document` - Only available on collection types.</span></span> <span data-ttu-id="19966-117">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="19966-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="19966-118">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="19966-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="19966-119">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="19966-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="19966-120">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="19966-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
      return:
        type:
          - visio.Visio.Document
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.DocumentLoadOptions
  - uid: visio.Visio.Document.load_1
    summary: <span data-ttu-id="19966-121">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="19966-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19966-122">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="19966-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Document;'
      return:
        type:
          - visio.Visio.Document
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="19966-123">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="19966-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Document.load_2
    summary: <span data-ttu-id="19966-124">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="19966-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19966-125">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="19966-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Document;'
      return:
        type:
          - visio.Visio.Document
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="19966-126">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="19966-126">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Document.onDataRefreshComplete
    summary: |-
      <span data-ttu-id="19966-127">ダイアグラムでデータが更新されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="19966-127">Occurs when the data is refreshed in the diagram.</span></span>

      <span data-ttu-id="19966-128">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-128">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onDataRefreshComplete
    fullName: onDataRefreshComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>
  - uid: visio.Visio.Document.onDocumentLoadComplete
    summary: |-
      <span data-ttu-id="19966-129">ドキュメントが読み込まれるとき、更新されるとき、または変更されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="19966-129">Occurs when the Document is loaded, refreshed, or changed.</span></span>

      <span data-ttu-id="19966-130">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-130">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onDocumentLoadComplete
    fullName: onDocumentLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onPageLoadComplete
    summary: |-
      <span data-ttu-id="19966-131">ページの読み込みが完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="19966-131">Occurs when the page is finished loading.</span></span>

      <span data-ttu-id="19966-132">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-132">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onPageLoadComplete
    fullName: onPageLoadComplete
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>
  - uid: visio.Visio.Document.onSelectionChanged
    summary: |-
      <span data-ttu-id="19966-133">現在の選択されている図形が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="19966-133">Occurs when the current selection of shapes changes.</span></span>

      <span data-ttu-id="19966-134">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-134">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>
  - uid: visio.Visio.Document.onShapeMouseEnter
    summary: |-
      <span data-ttu-id="19966-135">ユーザーがマウスポインターを図形の境界ボックスに移動したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="19966-135">Occurs when the user moves the mouse pointer into the bounding box of a shape.</span></span>

      <span data-ttu-id="19966-136">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-136">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onShapeMouseEnter
    fullName: onShapeMouseEnter
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>
  - uid: visio.Visio.Document.onShapeMouseLeave
    summary: |-
      <span data-ttu-id="19966-137">ユーザーがマウスを図形の境界ボックスの外に移動したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="19966-137">Occurs when the user moves the mouse out of the bounding box of a shape.</span></span>

      <span data-ttu-id="19966-138">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-138">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: onShapeMouseLeave
    fullName: onShapeMouseLeave
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>
  - uid: visio.Visio.Document.pages
    summary: |-
      <span data-ttu-id="19966-139">ドキュメントに関連付けられているページのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="19966-139">Represents a collection of pages associated with the document.</span></span> <span data-ttu-id="19966-140">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="19966-140">Read-only.</span></span>

      <span data-ttu-id="19966-141">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-141">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: pages
    fullName: pages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pages: Visio.PageCollection;'
      return:
        type:
          - visio.Visio.PageCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19966-142">例</span><span class="sxs-lookup"><span data-stu-id="19966-142">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var pages = ctx.document.pages;
              var pageCount = pages.getCount();
              return ctx.sync().then(function () {
                  console.log("Pages Count: " +pageCount.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.set
    summary: '<span data-ttu-id="19966-143">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="19966-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="19966-144">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="19966-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="19966-145">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="19966-145">This method has the following additional signature:</span></span>

      `set(properties: Visio.Document): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="19966-146">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="19966-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.DocumentUpdateData
        - id: options
          description: <span data-ttu-id="19966-147">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="19966-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: visio.Visio.Document.set_1
    summary: '<span data-ttu-id="19966-148">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="19966-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Document): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - visio.Visio.Document
  - uid: visio.Visio.Document.setActivePage
    summary: |-
      <span data-ttu-id="19966-149">ドキュメントのアクティブ ページを設定します。</span><span class="sxs-lookup"><span data-stu-id="19966-149">Set the Active Page of the document.</span></span>

      <span data-ttu-id="19966-150">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-150">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: setActivePage(PageName)
    fullName: setActivePage(PageName)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setActivePage(PageName: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19966-151">例</span><span class="sxs-lookup"><span data-stu-id="19966-151">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              var pageName = "Page-1";
              document.setActivePage(pageName);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: PageName
          description: <span data-ttu-id="19966-152">ページの名前</span><span class="sxs-lookup"><span data-stu-id="19966-152">Name of the page</span></span>
          type:
            - string
  - uid: visio.Visio.Document.startDataRefresh
    summary: |-
      <span data-ttu-id="19966-153">すべてのページについて、図内のデータの更新をトリガーします。</span><span class="sxs-lookup"><span data-stu-id="19966-153">Triggers the refresh of the data in the Diagram, for all pages.</span></span>

      <span data-ttu-id="19966-154">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-154">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: startDataRefresh()
    fullName: startDataRefresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startDataRefresh(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19966-155">例</span><span class="sxs-lookup"><span data-stu-id="19966-155">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var document = ctx.document;
              document.startDataRefresh();
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Document.toJSON
    summary: '<span data-ttu-id="19966-156">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="19966-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="19966-157">.</span><span class="sxs-lookup"><span data-stu-id="19966-157"></span></span> <span data-ttu-id="19966-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="19966-158"></span></span><!-- --><span data-ttu-id="19966-159">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Visio ドキュメントは API オブジェクトですが、このメソッドは`toJSON` 、プレーンな JavaScript オブジェクト (として型指定されます) を返します。`Visio.Interfaces.DocumentData`</span><span class="sxs-lookup"><span data-stu-id="19966-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Document object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.DocumentData`</span></span><!-- --><span data-ttu-id="19966-160">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="19966-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.DocumentData;'
      return:
        type:
          - visio.Visio.Interfaces.DocumentData
        description: ''
  - uid: visio.Visio.Document.view
    summary: |-
      <span data-ttu-id="19966-161">DocumentView オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="19966-161">Returns the DocumentView object.</span></span> <span data-ttu-id="19966-162">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="19966-162">Read-only.</span></span>

      <span data-ttu-id="19966-163">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="19966-163">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: view
    fullName: view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.DocumentView;'
      return:
        type:
          - visio.Visio.DocumentView