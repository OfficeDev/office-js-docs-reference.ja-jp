### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.ShapeDataItem:class'
    summary: |-
      <span data-ttu-id="5de56-101">ShapeDataItem を表します。</span><span class="sxs-lookup"><span data-stu-id="5de56-101">Represents the ShapeDataItem.</span></span>

      <span data-ttu-id="5de56-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5de56-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeDataItem
    fullName: Visio.ShapeDataItem
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.ShapeDataItem#context:member'
      - 'visio!Visio.ShapeDataItem#format:member'
      - 'visio!Visio.ShapeDataItem#formattedValue:member'
      - 'visio!Visio.ShapeDataItem#label:member'
      - 'visio!Visio.ShapeDataItem#load:member(1)'
      - 'visio!Visio.ShapeDataItem#load:member(2)'
      - 'visio!Visio.ShapeDataItem#load:member(3)'
      - 'visio!Visio.ShapeDataItem#toJSON:member(1)'
      - 'visio!Visio.ShapeDataItem#value:member'
  - uid: 'visio!Visio.ShapeDataItem#context:member'
    summary: <span data-ttu-id="5de56-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="5de56-103">The request context associated with the object.</span></span> <span data-ttu-id="5de56-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="5de56-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.ShapeDataItem#format:member'
    summary: |-
      <span data-ttu-id="5de56-105">図形データ項目の形式を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="5de56-105">A string that specifies the format of the shape data item.</span></span> <span data-ttu-id="5de56-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5de56-106">Read-only.</span></span>

      <span data-ttu-id="5de56-107">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5de56-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.ShapeDataItem#formattedValue:member'
    summary: |-
      <span data-ttu-id="5de56-108">図形データ項目の書式設定された値を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="5de56-108">A string that specifies the formatted value of the shape data item.</span></span> <span data-ttu-id="5de56-109">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5de56-109">Read-only.</span></span>

      <span data-ttu-id="5de56-110">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5de56-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: formattedValue
    fullName: formattedValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly formattedValue: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.ShapeDataItem#label:member'
    summary: |-
      <span data-ttu-id="5de56-111">図形データ項目のラベルを指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="5de56-111">A string that specifies the label of the shape data item.</span></span> <span data-ttu-id="5de56-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5de56-112">Read-only.</span></span>

      <span data-ttu-id="5de56-113">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5de56-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly label: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.ShapeDataItem#load:member(1)'
    summary: <span data-ttu-id="5de56-114">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="5de56-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5de56-115">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5de56-115">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="5de56-116">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="5de56-116">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5de56-117">`load(option?: string | string[]): Visio.ShapeDataItem`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="5de56-117">`load(option?: string | string[]): Visio.ShapeDataItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5de56-118">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItem`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="5de56-118">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5de56-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItem`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="5de56-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItem` - Only available on collection types.</span></span> <span data-ttu-id="5de56-120">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="5de56-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="5de56-121">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="5de56-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5de56-122">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="5de56-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5de56-123">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="5de56-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="5de56-124">例</span><span class="sxs-lookup"><span data-stu-id="5de56-124">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var shapeDataItem = shape.shapeDataItems.getItem(0);
          shapeDataItem.load(["label", "value"]);
              return ctx.sync().then(function() {
                  console.log(shapeDataItem.label);
                  console.log(shapeDataItem.value);
              });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeDataItemLoadOptions): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.ShapeDataItemLoadOptions:interface'
  - uid: 'visio!Visio.ShapeDataItem#load:member(2)'
    summary: <span data-ttu-id="5de56-125">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="5de56-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5de56-126">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5de56-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="5de56-127">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="5de56-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.ShapeDataItem#load:member(3)'
    summary: <span data-ttu-id="5de56-128">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="5de56-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5de56-129">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5de56-129">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.ShapeDataItem;'
      return:
        type:
          - 'visio!Visio.ShapeDataItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="5de56-130">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="5de56-130">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.ShapeDataItem#toJSON:member(1)'
    summary: '<span data-ttu-id="5de56-131">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5de56-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5de56-132">.</span><span class="sxs-lookup"><span data-stu-id="5de56-132"></span></span> <span data-ttu-id="5de56-133">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5de56-133"></span></span><!-- --><span data-ttu-id="5de56-134">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Visio の shape Dataitem オブジェクトは API オブジェクトですが、この`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します。`Visio.Interfaces.ShapeDataItemData`</span><span class="sxs-lookup"><span data-stu-id="5de56-134">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.ShapeDataItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeDataItemData`</span></span><!-- --><span data-ttu-id="5de56-135">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="5de56-135">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeDataItemData;'
      return:
        type:
          - 'visio!Visio.Interfaces.ShapeDataItemData:interface'
        description: ''
  - uid: 'visio!Visio.ShapeDataItem#value:member'
    summary: |-
      <span data-ttu-id="5de56-136">図形データ項目の値を指定する文字列です。</span><span class="sxs-lookup"><span data-stu-id="5de56-136">A string that specifies the value of the shape data item.</span></span> <span data-ttu-id="5de56-137">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5de56-137">Read-only.</span></span>

      <span data-ttu-id="5de56-138">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="5de56-138">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: string;'
      return:
        type:
          - string
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.ShapeDataItem:class'
    name: Visio.ShapeDataItem
  - uid: 'visio!Visio.Interfaces.ShapeDataItemLoadOptions:interface'
    name: Visio.Interfaces.ShapeDataItemLoadOptions
  - uid: 'visio!Visio.Interfaces.ShapeDataItemData:interface'
    name: Visio.Interfaces.ShapeDataItemData