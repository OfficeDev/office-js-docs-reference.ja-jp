### YamlMime:TSType
name: Visio.Shape
uid: visio!Visio.Shape:class
package: visio!
fullName: Visio.Shape
summary: >-
  図形クラスを表します。


  \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: comments
  uid: visio!Visio.Shape#comments:member
  package: visio!
  fullName: comments
  summary: >-
    Comments コレクションを返します。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
- name: context
  uid: visio!Visio.Shape#context:member
  package: visio!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: hyperlinks
  uid: visio!Visio.Shape#hyperlinks:member
  package: visio!
  fullName: hyperlinks
  summary: >-
    図形オブジェクトのハイパーリンク コレクションを返します。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
- name: id
  uid: visio!Visio.Shape#id:member
  package: visio!
  fullName: id
  summary: >-
    図形の識別子。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: number;'
    return:
      type: number
- name: name
  uid: visio!Visio.Shape#name:member
  package: visio!
  fullName: name
  summary: >-
    図形の名前。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: select
  uid: visio!Visio.Shape#select:member
  package: visio!
  fullName: select
  summary: >-
    図形が選択されている場合は true を返します。 ユーザーが true に設定すれば、明示的に図形を選択できます。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select: boolean;'
    return:
      type: boolean
- name: shapeDataItems
  uid: visio!Visio.Shape#shapeDataItems:member
  package: visio!
  fullName: shapeDataItems
  summary: >-
    図形のデータ セクションを返します。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
- name: subShapes
  uid: visio!Visio.Shape#subShapes:member
  package: visio!
  fullName: subShapes
  summary: >-
    SubShape コレクションを取得します。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
- name: text
  uid: visio!Visio.Shape#text:member
  package: visio!
  fullName: text
  summary: >-
    図形のテキスト。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
- name: view
  uid: visio!Visio.Shape#view:member
  package: visio!
  fullName: view
  summary: >-
    図形のビューを返します。 読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
methods:
- name: getBounds()
  uid: visio!Visio.Shape#getBounds:member(1)
  package: visio!
  fullName: getBounds()
  summary: >-
    図形の境界ボックスを指定する BoundingBox オブジェクトを返します。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.BoundingBox:interface" />&gt;
      description: ''
- name: load(option)
  uid: visio!Visio.Shape#load:member(1)
  package: visio!
  fullName: load(option)
  summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
  remarks: >-
    このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。


    `load(option?: string | string[]): Visio.Shape` -Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。


    `load(option?: { select?: string; expand?: string; }): Visio.Shape` -Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` -コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.Shape#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Shape;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Sample Name\";\n    var shape = activePage.shapes.getItem(shapeName);\n    shape.load([\"name\", \"id\", \"text\", \"select\"]);\n    return ctx.sync().then(function () {\n        console.log(shape.name);\n        console.log(shape.id);\n        console.log(shape.text);\n        console.log(shape.select);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    shape.view.highlight = { color: \"#E7E7E7\", width: 100 };\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.Shape#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
    parameters:
    - id: propertyNamesAndPaths
      description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.Shape#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Visio.Shape): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="visio!Visio.Interfaces.ShapeUpdateData:interface" />
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.Shape#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.Shape): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.Shape:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: visio!Visio.Shape#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の Visio Shape オブジェクトは API オブジェクトであるのに対し `toJSON` て、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Visio.Interfaces.ShapeData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: db857aca01d9a64b2dd052a06e51a233676aa585
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49193062"
