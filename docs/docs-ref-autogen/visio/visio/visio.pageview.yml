### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.PageView:class'
    summary: |-
      PageView クラスを表します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.PageView
    fullName: Visio.PageView
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.PageView#centerViewportOnShape:member(1)'
      - 'visio!Visio.PageView#context:member'
      - 'visio!Visio.PageView#fitToWindow:member(1)'
      - 'visio!Visio.PageView#getPosition:member(1)'
      - 'visio!Visio.PageView#getSelection:member(1)'
      - 'visio!Visio.PageView#isShapeInViewport:member(1)'
      - 'visio!Visio.PageView#load:member(1)'
      - 'visio!Visio.PageView#load:member(2)'
      - 'visio!Visio.PageView#load:member(3)'
      - 'visio!Visio.PageView#set:member(1)'
      - 'visio!Visio.PageView#set:member(2)'
      - 'visio!Visio.PageView#setPosition:member(1)'
      - 'visio!Visio.PageView#toJSON:member(1)'
      - 'visio!Visio.PageView#zoom:member'
  - uid: 'visio!Visio.PageView#centerViewportOnShape:member(1)'
    summary: |-
      ビューの中央に指定した図形を配置する Visio の描画をパンします。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: centerViewportOnShape(ShapeId)
    fullName: centerViewportOnShape(ShapeId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'centerViewportOnShape(ShapeId: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              activePage.view.centerViewportOnShape(shape.Id);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: ShapeId
          description: 中央に表示するため ShapeId。
          type:
            - number
  - uid: 'visio!Visio.PageView#context:member'
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.PageView#fitToWindow:member(1)'
    summary: |-
      現在のウィンドウにページを合わせます。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: fitToWindow()
    fullName: fitToWindow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fitToWindow(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'visio!Visio.PageView#getPosition:member(1)'
    summary: |-
      ビューでページの位置を指定する位置オブジェクトを返します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: getPosition()
    fullName: getPosition()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
      return:
        type:
          - 'visio!Visio.PageView#getPosition~0:complex'
        description: ''
  - uid: 'visio!Visio.PageView#getSelection:member(1)'
    summary: |-
      ページの選択範囲を表します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: getSelection()
    fullName: getSelection()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelection(): Visio.Selection;'
      return:
        type:
          - 'visio!Visio.Selection:class'
        description: ''
  - uid: 'visio!Visio.PageView#isShapeInViewport:member(1)'
    summary: |-
      図形がページのビュー内にあるかどうかを確認します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: isShapeInViewport(Shape)
    fullName: isShapeInViewport(Shape)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'visio!Visio.PageView#isShapeInViewport~0:complex'
        description: ''
      parameters:
        - id: Shape
          description: チェックする図形。
          type:
            - 'visio!Visio.Shape:class'
  - uid: 'visio!Visio.PageView#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): Visio.PageView`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): Visio.PageView`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.PageViewLoadOptions:interface'
  - uid: 'visio!Visio.PageView#load:member(2)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.PageView#load:member(3)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.PageView#set:member(1)'
    summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
    remarks: |-
      このメソッドには、次の追加のシグネチャがあります。

      `set(properties: Visio.PageView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
          type:
            - 'visio!Visio.Interfaces.PageViewUpdateData:interface'
        - id: options
          description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.PageView#set:member(2)'
    summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.PageView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.PageView:class'
  - uid: 'visio!Visio.PageView#setPosition:member(1)'
    summary: |-
      ビューでページの位置を設定します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: setPosition(Position)
    fullName: setPosition(Position)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(Position: Visio.Position): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: Position
          description: ビューで、ページの新しい位置を指定する位置オブジェクト。
          type:
            - 'visio!Visio.Position:interface'
  - uid: 'visio!Visio.PageView#toJSON:member(1)'
    summary: API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の PageView オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Visio.Interfaces.PageViewData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.PageViewData;'
      return:
        type:
          - 'visio!Visio.Interfaces.PageViewData:interface'
        description: ''
  - uid: 'visio!Visio.PageView#zoom:member'
    summary: |-
      ページのズームレベルを取得および設定します。 この値は、10 ~ 400 の範囲で、ズームのパーセンテージを示します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              activePage.view.zoom = 300;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.PageView#getPosition~0:complex'
    name: OfficeExtension.ClientResult<Visio.Position>
    fullName: OfficeExtension.ClientResult<Visio.Position>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'visio!Visio.Position:interface'
        name: Visio.Position
        fullName: Visio.Position
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Selection:class'
    name: Visio.Selection
  - uid: 'visio!Visio.PageView#isShapeInViewport~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'visio!Visio.Shape:class'
    name: Visio.Shape
  - uid: 'visio!Visio.PageView:class'
    name: Visio.PageView
  - uid: 'visio!Visio.Interfaces.PageViewLoadOptions:interface'
    name: Visio.Interfaces.PageViewLoadOptions
  - uid: 'visio!Visio.Interfaces.PageViewUpdateData:interface'
    name: Interfaces.PageViewUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.Position:interface'
    name: Visio.Position
  - uid: 'visio!Visio.Interfaces.PageViewData:interface'
    name: Visio.Interfaces.PageViewData