### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Page:class'
    summary: |-
      Page クラスを表します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.Page
    fullName: Visio.Page
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.Page#activate:member(1)'
      - 'visio!Visio.Page#allShapes:member'
      - 'visio!Visio.Page#comments:member'
      - 'visio!Visio.Page#context:member'
      - 'visio!Visio.Page#height:member'
      - 'visio!Visio.Page#index:member'
      - 'visio!Visio.Page#isBackground:member'
      - 'visio!Visio.Page#load:member(1)'
      - 'visio!Visio.Page#load:member(2)'
      - 'visio!Visio.Page#load:member(3)'
      - 'visio!Visio.Page#name:member'
      - 'visio!Visio.Page#set:member(1)'
      - 'visio!Visio.Page#set:member(2)'
      - 'visio!Visio.Page#shapes:member'
      - 'visio!Visio.Page#toJSON:member(1)'
      - 'visio!Visio.Page#view:member'
      - 'visio!Visio.Page#width:member'
  - uid: 'visio!Visio.Page#activate:member(1)'
    summary: |-
      ドキュメントのアクティブ ページとして設定します。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'visio!Visio.Page#allShapes:member'
    summary: |-
      サブ図形を含む、ページ内のすべての図形。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: allShapes
    fullName: allShapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly allShapes: Visio.ShapeCollection;'
      return:
        type:
          - 'visio!Visio.ShapeCollection:class'
  - uid: 'visio!Visio.Page#comments:member'
    summary: |-
      Comments コレクションを返します。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Visio.CommentCollection;'
      return:
        type:
          - 'visio!Visio.CommentCollection:class'
  - uid: 'visio!Visio.Page#context:member'
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.Page#height:member'
    summary: |-
      ページの高さを返します。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly height: number;'
      return:
        type:
          - number
  - uid: 'visio!Visio.Page#index:member'
    summary: |-
      ページのインデックス。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'visio!Visio.Page#isBackground:member'
    summary: |-
      ページが背景ページかどうか。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: isBackground
    fullName: isBackground
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isBackground: boolean;'
      return:
        type:
          - boolean
  - uid: 'visio!Visio.Page#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): Visio.Page`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): Visio.Page`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Page`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.PageLoadOptions): Visio.Page;'
      return:
        type:
          - 'visio!Visio.Page:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.PageLoadOptions:interface'
  - uid: 'visio!Visio.Page#load:member(2)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Page;'
      return:
        type:
          - 'visio!Visio.Page:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.Page#load:member(3)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Page;'
      return:
        type:
          - 'visio!Visio.Page:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.Page#name:member'
    summary: |-
      ページの名前。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Page#set:member(1)'
    summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
    remarks: |-
      このメソッドには、次の追加のシグネチャがあります。

      `set(properties: Visio.Page): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
          type:
            - 'visio!Visio.Interfaces.PageUpdateData:interface'
        - id: options
          description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.Page#set:member(2)'
    summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Page): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.Page:class'
  - uid: 'visio!Visio.Page#shapes:member'
    summary: |-
      ページ内のすべての最上位レベルの図形です。値の取得のみ可能です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Visio.ShapeCollection;'
      return:
        type:
          - 'visio!Visio.ShapeCollection:class'
  - uid: 'visio!Visio.Page#toJSON:member(1)'
    summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の Visio の Page オブジェクトは API オブジェクトであるのに対し、 `toJSON` メソッドはプレーンな JavaScript オブジェクトを返します。`Visio.Interfaces.PageData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.PageData;'
      return:
        type:
          - 'visio!Visio.Interfaces.PageData:interface'
        description: ''
  - uid: 'visio!Visio.Page#view:member'
    summary: |-
      ページのビューを返します。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: view
    fullName: view
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly view: Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
  - uid: 'visio!Visio.Page#width:member'
    summary: |-
      ページの幅を返します。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly width: number;'
      return:
        type:
          - number
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.ShapeCollection:class'
    name: Visio.ShapeCollection
  - uid: 'visio!Visio.CommentCollection:class'
    name: Visio.CommentCollection
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.Page:class'
    name: Visio.Page
  - uid: 'visio!Visio.Interfaces.PageLoadOptions:interface'
    name: Visio.Interfaces.PageLoadOptions
  - uid: 'visio!Visio.Interfaces.PageUpdateData:interface'
    name: Interfaces.PageUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.Interfaces.PageData:interface'
    name: Visio.Interfaces.PageData
  - uid: 'visio!Visio.PageView:class'
    name: Visio.PageView