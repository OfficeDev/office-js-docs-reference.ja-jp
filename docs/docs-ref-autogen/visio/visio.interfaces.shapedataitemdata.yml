### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Interfaces.ShapeDataItemData
    summary: '"図形 dataitem. tojson ()" を呼び出すことによって返されるデータを記述するインターフェイス。'
    name: Visio.Interfaces.ShapeDataItemData
    fullName: Visio.Interfaces.ShapeDataItemData
    langs:
      - typeScript
    type: interface
    package: visio
    children:
      - visio.Visio.Interfaces.ShapeDataItemData.format
      - visio.Visio.Interfaces.ShapeDataItemData.formattedValue
      - visio.Visio.Interfaces.ShapeDataItemData.label
      - visio.Visio.Interfaces.ShapeDataItemData.value
  - uid: visio.Visio.Interfaces.ShapeDataItemData.format
    summary: |-
      図形データ項目の形式を指定する文字列です。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format?: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Interfaces.ShapeDataItemData.formattedValue
    summary: |-
      図形データ項目の書式設定された値を指定する文字列です。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: formattedValue
    fullName: formattedValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formattedValue?: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Interfaces.ShapeDataItemData.label
    summary: |-
      図形データ項目のラベルを指定する文字列です。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: label
    fullName: label
    langs:
      - typeScript
    type: property
    syntax:
      content: 'label?: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Interfaces.ShapeDataItemData.value
    summary: |-
      図形データ項目の値を指定する文字列です。 読み取り専用です。

      \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value?: string;'
      return:
        type:
          - string