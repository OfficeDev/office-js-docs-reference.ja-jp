### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Hyperlink
    summary: |-
      <span data-ttu-id="6c3ef-101">ハイパーリンクを表します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-101">Represents the Hyperlink.</span></span>

      <span data-ttu-id="6c3ef-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="6c3ef-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Hyperlink
    fullName: Visio.Hyperlink
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Hyperlink.address
      - visio.Visio.Hyperlink.context
      - visio.Visio.Hyperlink.description
      - visio.Visio.Hyperlink.extraInfo
      - visio.Visio.Hyperlink.load
      - visio.Visio.Hyperlink.load_1
      - visio.Visio.Hyperlink.load_2
      - visio.Visio.Hyperlink.subAddress
      - visio.Visio.Hyperlink.toJSON
  - uid: visio.Visio.Hyperlink.address
    summary: |-
      <span data-ttu-id="6c3ef-103">ハイパーリンク オブジェクトのアドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-103">Gets the address of the Hyperlink object.</span></span> <span data-ttu-id="6c3ef-104">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-104">Read-only.</span></span>

      <span data-ttu-id="6c3ef-105">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="6c3ef-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.context
    summary: <span data-ttu-id="6c3ef-106">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-106">The request context associated with the object.</span></span> <span data-ttu-id="6c3ef-107">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Hyperlink.description
    summary: |-
      <span data-ttu-id="6c3ef-108">ハイパーリンクの説明を取得します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-108">Gets the description of a hyperlink.</span></span> <span data-ttu-id="6c3ef-109">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-109">Read-only.</span></span>

      <span data-ttu-id="6c3ef-110">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="6c3ef-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: description
    fullName: description
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly description: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.extraInfo
    summary: |-
      <span data-ttu-id="6c3ef-111">ハイパーリンクの url を解決するために使用される、url 要求に関するその他の情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-111">Gets the extra URL request information used to resolve the hyperlink's URL.</span></span> <span data-ttu-id="6c3ef-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-112">Read-only.</span></span>

      <span data-ttu-id="6c3ef-113">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="6c3ef-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: extraInfo
    fullName: extraInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly extraInfo: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.load
    summary: <span data-ttu-id="6c3ef-114">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6c3ef-115">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-115">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="6c3ef-116">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-116">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6c3ef-117">`load(option?: string | string[]): Visio.Hyperlink`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-117">`load(option?: string | string[]): Visio.Hyperlink` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6c3ef-118">`load(option?: { select?: string; expand?: string; }): Visio.Hyperlink`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-118">`load(option?: { select?: string; expand?: string; }): Visio.Hyperlink` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6c3ef-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Hyperlink`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Hyperlink` - Only available on collection types.</span></span> <span data-ttu-id="6c3ef-120">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="6c3ef-121">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6c3ef-122">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6c3ef-123">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="6c3ef-124">例</span><span class="sxs-lookup"><span data-stu-id="6c3ef-124">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var hyperlink = shape.hyperlinks.getItem(0);
          hyperlink.load();
          return ctx.sync().then(function() {
              console.log(hyperlink.description);
              console.log(hyperlink.address);
              console.log(hyperlink.subAddress);
              console.log(hyperlink.extraInfo);
           });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.HyperlinkLoadOptions): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.HyperlinkLoadOptions
  - uid: visio.Visio.Hyperlink.load_1
    summary: <span data-ttu-id="6c3ef-125">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6c3ef-126">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="6c3ef-127">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.Hyperlink.load_2
    summary: <span data-ttu-id="6c3ef-128">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6c3ef-129">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-129">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6c3ef-130">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-130">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Hyperlink.subAddress
    summary: |-
      <span data-ttu-id="6c3ef-131">ハイパーリンク オブジェクトのサブアドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-131">Gets the sub-address of the Hyperlink object.</span></span> <span data-ttu-id="6c3ef-132">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-132">Read-only.</span></span>

      <span data-ttu-id="6c3ef-133">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="6c3ef-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: subAddress
    fullName: subAddress
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly subAddress: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.toJSON
    summary: '<span data-ttu-id="6c3ef-134">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6c3ef-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6c3ef-135">.</span><span class="sxs-lookup"><span data-stu-id="6c3ef-135"></span></span> <span data-ttu-id="6c3ef-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6c3ef-136"></span></span><!-- --><span data-ttu-id="6c3ef-137">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Visio Hyperlink オブジェクトは API オブジェクトですが、このメソッド`toJSON`はプレーンな JavaScript オブジェクト (として入力されます) を返します。`Visio.Interfaces.HyperlinkData`</span><span class="sxs-lookup"><span data-stu-id="6c3ef-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Hyperlink object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.HyperlinkData`</span></span><!-- --><span data-ttu-id="6c3ef-138">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="6c3ef-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.HyperlinkData;'
      return:
        type:
          - visio.Visio.Interfaces.HyperlinkData
        description: ''