### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeView
    summary: |-
      <span data-ttu-id="71c37-101">ShapeView クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="71c37-101">Represents the ShapeView class.</span></span>

      <span data-ttu-id="71c37-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="71c37-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeView
    fullName: Visio.ShapeView
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeView.addOverlay
      - visio.Visio.ShapeView.addOverlay_1
      - visio.Visio.ShapeView.context
      - visio.Visio.ShapeView.highlight
      - visio.Visio.ShapeView.load
      - visio.Visio.ShapeView.load_1
      - visio.Visio.ShapeView.load_2
      - visio.Visio.ShapeView.removeOverlay
      - visio.Visio.ShapeView.set
      - visio.Visio.ShapeView.set_1
      - visio.Visio.ShapeView.toJSON
  - uid: visio.Visio.ShapeView.addOverlay
    summary: |-
      <span data-ttu-id="71c37-103">図形の上にオーバーレイを追加します。</span><span class="sxs-lookup"><span data-stu-id="71c37-103">Adds an overlay on top of the shape.</span></span>

      <span data-ttu-id="71c37-104">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="71c37-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    fullName: 'addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addOverlay(OverlayType: Visio.OverlayType, Content: string, OverlayHorizontalAlignment: Visio.OverlayHorizontalAlignment, OverlayVerticalAlignment: Visio.OverlayVerticalAlignment, Width: number, Height: number): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="71c37-105">例</span><span class="sxs-lookup"><span data-stu-id="71c37-105">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              var overlayId=shape.view.addOverlay("Image", "Visio Online", "Center", "Middle", 50, 50);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: OverlayType
          description: <span data-ttu-id="71c37-106">オーバーレイの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="71c37-106">An Overlay Type.</span></span> <span data-ttu-id="71c37-107">' Text ' または ' Image ' にすることができます。</span><span class="sxs-lookup"><span data-stu-id="71c37-107">Can be 'Text' or 'Image'.</span></span>
          type:
            - visio.Visio.OverlayType
        - id: Content
          description: <span data-ttu-id="71c37-108">オーバーレイのコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="71c37-108">Content of Overlay.</span></span>
          type:
            - string
        - id: OverlayHorizontalAlignment
          description: '<span data-ttu-id="71c37-109">オーバーレイの水平方向の配置。</span><span class="sxs-lookup"><span data-stu-id="71c37-109">Horizontal Alignment of Overlay.</span></span> <span data-ttu-id="71c37-110">'' Left ''、'' Center ''、または '' Right '' にすることができます。</span><span class="sxs-lookup"><span data-stu-id="71c37-110">Can be ''Left'', ''Center'', or ''Right''.</span></span>'
          type:
            - visio.Visio.OverlayHorizontalAlignment
        - id: OverlayVerticalAlignment
          description: '<span data-ttu-id="71c37-111">オーバーレイの垂直方向の配置。</span><span class="sxs-lookup"><span data-stu-id="71c37-111">Vertical Alignment of Overlay.</span></span> <span data-ttu-id="71c37-112">'' Top ''、'' 中段 ''、'' Bottom '' のどちらかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="71c37-112">Can be ''Top'', ''Middle'', ''Bottom''.</span></span>'
          type:
            - visio.Visio.OverlayVerticalAlignment
        - id: Width
          description: <span data-ttu-id="71c37-113">オーバーレイの幅。</span><span class="sxs-lookup"><span data-stu-id="71c37-113">Overlay Width.</span></span>
          type:
            - number
        - id: Height
          description: <span data-ttu-id="71c37-114">オーバーレイの高さ。</span><span class="sxs-lookup"><span data-stu-id="71c37-114">Overlay Height.</span></span>
          type:
            - number
  - uid: visio.Visio.ShapeView.addOverlay_1
    summary: |-
      <span data-ttu-id="71c37-115">図形の上にオーバーレイを追加します。</span><span class="sxs-lookup"><span data-stu-id="71c37-115">Adds an overlay on top of the shape.</span></span>

      <span data-ttu-id="71c37-116">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="71c37-116">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    fullName: 'addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addOverlay(OverlayTypeString: "Text" | "Image" | "Html", Content: string, OverlayHorizontalAlignment: "Left" | "Center" | "Right", OverlayVerticalAlignment: "Top" | "Middle" | "Bottom", Width: number, Height: number): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: OverlayTypeString
          description: <span data-ttu-id="71c37-117">オーバーレイの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="71c37-117">An Overlay Type.</span></span> <span data-ttu-id="71c37-118">' Text ' または ' Image ' にすることができます。</span><span class="sxs-lookup"><span data-stu-id="71c37-118">Can be 'Text' or 'Image'.</span></span>
          type:
            - '"Text" | "Image" | "Html"'
        - id: Content
          description: <span data-ttu-id="71c37-119">オーバーレイのコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="71c37-119">Content of Overlay.</span></span>
          type:
            - string
        - id: OverlayHorizontalAlignment
          description: '<span data-ttu-id="71c37-120">オーバーレイの水平方向の配置。</span><span class="sxs-lookup"><span data-stu-id="71c37-120">Horizontal Alignment of Overlay.</span></span> <span data-ttu-id="71c37-121">'' Left ''、'' Center ''、または '' Right '' にすることができます。</span><span class="sxs-lookup"><span data-stu-id="71c37-121">Can be ''Left'', ''Center'', or ''Right''.</span></span>'
          type:
            - '"Left" | "Center" | "Right"'
        - id: OverlayVerticalAlignment
          description: '<span data-ttu-id="71c37-122">オーバーレイの垂直方向の配置。</span><span class="sxs-lookup"><span data-stu-id="71c37-122">Vertical Alignment of Overlay.</span></span> <span data-ttu-id="71c37-123">'' Top ''、'' 中段 ''、'' Bottom '' のどちらかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="71c37-123">Can be ''Top'', ''Middle'', ''Bottom''.</span></span>'
          type:
            - '"Top" | "Middle" | "Bottom"'
        - id: Width
          description: <span data-ttu-id="71c37-124">オーバーレイの幅。</span><span class="sxs-lookup"><span data-stu-id="71c37-124">Overlay Width.</span></span>
          type:
            - number
        - id: Height
          description: <span data-ttu-id="71c37-125">オーバーレイの高さ。</span><span class="sxs-lookup"><span data-stu-id="71c37-125">Overlay Height.</span></span>
          type:
            - number
  - uid: visio.Visio.ShapeView.context
    summary: <span data-ttu-id="71c37-126">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="71c37-126">The request context associated with the object.</span></span> <span data-ttu-id="71c37-127">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="71c37-127">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.ShapeView.highlight
    summary: |-
      <span data-ttu-id="71c37-128">図形の周囲の強調表示を表します。</span><span class="sxs-lookup"><span data-stu-id="71c37-128">Represents the highlight around the shape.</span></span>

      <span data-ttu-id="71c37-129">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="71c37-129">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: highlight
    fullName: highlight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlight: Visio.Highlight;'
      return:
        type:
          - visio.Visio.Highlight
        description: |-


          #### <a name="examples"></a><span data-ttu-id="71c37-130">例</span><span class="sxs-lookup"><span data-stu-id="71c37-130">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              shape.view.highlight = { color: "#E7E7E7", width: 100 };
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.ShapeView.load
    summary: <span data-ttu-id="71c37-131">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="71c37-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="71c37-132">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71c37-132">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="71c37-133">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="71c37-133">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="71c37-134">`load(option?: string | string[]): Visio.ShapeView`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="71c37-134">`load(option?: string | string[]): Visio.ShapeView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="71c37-135">`load(option?: { select?: string; expand?: string; }): Visio.ShapeView`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="71c37-135">`load(option?: { select?: string; expand?: string; }): Visio.ShapeView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="71c37-136">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeView`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="71c37-136">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeView` - Only available on collection types.</span></span> <span data-ttu-id="71c37-137">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="71c37-137">It is similar to the preceding signature.</span></span> <span data-ttu-id="71c37-138">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="71c37-138">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="71c37-139">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="71c37-139">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="71c37-140">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="71c37-140">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeViewLoadOptions): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.ShapeViewLoadOptions
  - uid: visio.Visio.ShapeView.load_1
    summary: <span data-ttu-id="71c37-141">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="71c37-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="71c37-142">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71c37-142">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="71c37-143">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="71c37-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeView.load_2
    summary: <span data-ttu-id="71c37-144">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="71c37-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="71c37-145">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="71c37-145">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="71c37-146">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="71c37-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.ShapeView.removeOverlay
    summary: |-
      <span data-ttu-id="71c37-147">特定のオーバーレイまたは図形上のすべてのオーバーレイを削除します。</span><span class="sxs-lookup"><span data-stu-id="71c37-147">Removes particular overlay or all overlays on the Shape.</span></span>

      <span data-ttu-id="71c37-148">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="71c37-148">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: removeOverlay(OverlayId)
    fullName: removeOverlay(OverlayId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeOverlay(OverlayId: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="71c37-149">例</span><span class="sxs-lookup"><span data-stu-id="71c37-149">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              shape.view.removeOverlay(1);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: OverlayId
          description: <span data-ttu-id="71c37-150">オーバーレイの ID。図形から特定のオーバーレイの ID を削除します。</span><span class="sxs-lookup"><span data-stu-id="71c37-150">An Overlay Id. Removes the specific overlay id from the shape.</span></span>
          type:
            - number
  - uid: visio.Visio.ShapeView.set
    summary: '<span data-ttu-id="71c37-151">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="71c37-151">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="71c37-152">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="71c37-152">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="71c37-153">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="71c37-153">This method has the following additional signature:</span></span>

      `set(properties: Visio.ShapeView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ShapeViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="71c37-154">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="71c37-154">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ShapeViewUpdateData
        - id: options
          description: <span data-ttu-id="71c37-155">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="71c37-155">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.ShapeView.set_1
    summary: '<span data-ttu-id="71c37-156">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="71c37-156">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.ShapeView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - visio.Visio.ShapeView
  - uid: visio.Visio.ShapeView.toJSON
    summary: '<span data-ttu-id="71c37-157">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="71c37-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="71c37-158">.</span><span class="sxs-lookup"><span data-stu-id="71c37-158"></span></span> <span data-ttu-id="71c37-159">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="71c37-159"></span></span><!-- --><span data-ttu-id="71c37-160">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Visio のビューオブジェクトは API オブジェクトであるのに対し`toJSON`て、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Visio.Interfaces.ShapeViewData`</span><span class="sxs-lookup"><span data-stu-id="71c37-160">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.ShapeView object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeViewData`</span></span><!-- --><span data-ttu-id="71c37-161">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="71c37-161">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeViewData;'
      return:
        type:
          - visio.Visio.Interfaces.ShapeViewData
        description: ''