### YamlMime:UniversalReference
ms.openlocfilehash: 39068bf1de1b15605fc8fa7efb032bb124cd3241
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/17/2018
ms.locfileid: "25582287"
items:
- uid: visio.Visio.Shape
  summary: >-
    図形クラスを表します。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: Visio.Shape
  fullName: visio.Visio.Shape
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Shape.comments
  - visio.Visio.Shape.getBounds
  - visio.Visio.Shape.hyperlinks
  - visio.Visio.Shape.id
  - visio.Visio.Shape.load
  - visio.Visio.Shape.name
  - visio.Visio.Shape.select
  - visio.Visio.Shape.shapeDataItems
  - visio.Visio.Shape.subShapes
  - visio.Visio.Shape.text
  - visio.Visio.Shape.toJSON
  - visio.Visio.Shape.view
- uid: visio.Visio.Shape.comments
  summary: >-
    Comments コレクションを返します。読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: comments
  fullName: visio.Visio.Shape.comments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type:
      - visio.Visio.CommentCollection
- uid: visio.Visio.Shape.getBounds
  summary: >-
    図形の境界ボックスを指定する BoundingBox オブジェクトを返します。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: getBounds()
  fullName: visio.Visio.Shape.getBounds
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.BoundingBox>
      description: ''
- uid: visio.Visio.Shape.hyperlinks
  summary: >-
    図形オブジェクトのハイパーリンク コレクションを返します。読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: hyperlinks
  fullName: visio.Visio.Shape.hyperlinks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
- uid: visio.Visio.Shape.id
  summary: >-
    図形の識別子です。 読み取り専用。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: id
  fullName: visio.Visio.Shape.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: visio.Visio.Shape.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: >-
    だけでなく、この署名は、このメソッドは、次の署名をします。


    `load(option?: { select?: string; expand?: string; }): Visio.Shape`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。

    #### <a name="examples"></a>例


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Sample Name";
        var shape = activePage.shapes.getItem(shapeName);
        shape.load();
        return ctx.sync().then(function () {
            console.log(shape.name );
            console.log(shape.id );
            console.log(shape.Text );
            console.log(shape.Select );
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        shape.view.highlight = { color: "#E7E7E7", width: 100 };
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: visio.Visio.Shape.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: visio.Visio.Shape.name
  summary: >-
    図形の名前。読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: name
  fullName: visio.Visio.Shape.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.select
  summary: >-
    図形が選択されている場合は true を返します。ユーザーが true に設定すれば、明示的に図形を選択できます。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: select
  fullName: visio.Visio.Shape.select
  langs:
  - typeScript
  type: property
  syntax:
    content: 'select: boolean;'
    return:
      type:
      - boolean
- uid: visio.Visio.Shape.shapeDataItems
  summary: >-
    図形のデータ セクションを返します。読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: shapeDataItems
  fullName: visio.Visio.Shape.shapeDataItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
- uid: visio.Visio.Shape.subShapes
  summary: >-
    SubShape コレクションを取得します。読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: subShapes
  fullName: visio.Visio.Shape.subShapes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
- uid: visio.Visio.Shape.text
  summary: >-
    図形のテキストです。 読み取り専用。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: text
  fullName: visio.Visio.Shape.text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.toJSON
  name: toJSON()
  fullName: visio.Visio.Shape.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type:
      - visio.Visio.Interfaces.ShapeData
      description: ''
- uid: visio.Visio.Shape.view
  summary: >-
    図形のビューを返します。読み取り専用です。


    \[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: view
  fullName: visio.Visio.Shape.view
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type:
      - visio.Visio.ShapeView
