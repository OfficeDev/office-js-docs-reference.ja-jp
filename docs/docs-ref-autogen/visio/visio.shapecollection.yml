### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeCollection
    summary: |-
      <span data-ttu-id="3ee20-101">図形コレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="3ee20-101">Represents the Shape Collection.</span></span>

      <span data-ttu-id="3ee20-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3ee20-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeCollection
    fullName: Visio.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeCollection.context
      - visio.Visio.ShapeCollection.getCount
      - visio.Visio.ShapeCollection.getItem
      - visio.Visio.ShapeCollection.items
      - visio.Visio.ShapeCollection.load
      - visio.Visio.ShapeCollection.load_1
      - visio.Visio.ShapeCollection.load_2
      - visio.Visio.ShapeCollection.toJSON
  - uid: visio.Visio.ShapeCollection.context
    summary: <span data-ttu-id="3ee20-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="3ee20-103">The request context associated with the object.</span></span> <span data-ttu-id="3ee20-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="3ee20-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.ShapeCollection.getCount
    summary: |-
      <span data-ttu-id="3ee20-105">コレクション内の図形の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ee20-105">Gets the number of Shapes in the collection.</span></span>

      <span data-ttu-id="3ee20-106">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3ee20-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3ee20-107">例</span><span class="sxs-lookup"><span data-stu-id="3ee20-107">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var numShapesActivePage = activePage.shapes.getCount();
              return ctx.sync().then(function () {
                  console.log("Shapes Count: " + numShapesActivePage.value);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.ShapeCollection.getItem
    summary: |-
      <span data-ttu-id="3ee20-108">そのキー (名前または ID) を使用して図形を取得します。</span><span class="sxs-lookup"><span data-stu-id="3ee20-108">Gets a Shape using its key (name or Index).</span></span>

      <span data-ttu-id="3ee20-109">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="3ee20-109">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Visio.Shape;'
      return:
        type:
          - Visio.Shape
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="3ee20-110">キーは、取得する図形の名前またはインデックスです。</span><span class="sxs-lookup"><span data-stu-id="3ee20-110">Key is the Name or Index of the shape to be retrieved.</span></span>
          type:
            - number | string
  - uid: visio.Visio.ShapeCollection.items
    summary: <span data-ttu-id="3ee20-111">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="3ee20-111">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Shape[];'
      return:
        type:
          - 'Visio.Shape[]'
  - uid: visio.Visio.ShapeCollection.load
    summary: <span data-ttu-id="3ee20-112">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3ee20-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3ee20-113">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3ee20-113">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="3ee20-114">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3ee20-114">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3ee20-115">`load(option?: string | string[]): Visio.ShapeCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="3ee20-115">`load(option?: string | string[]): Visio.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3ee20-116">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3ee20-116">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3ee20-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3ee20-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="3ee20-118">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="3ee20-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="3ee20-119">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3ee20-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3ee20-120">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3ee20-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3ee20-121">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="3ee20-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.ShapeCollection.load_1
    summary: <span data-ttu-id="3ee20-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3ee20-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3ee20-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3ee20-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3ee20-124">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="3ee20-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
      return:
        type:
          - Visio.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.ShapeCollection.toJSON
    summary: '<span data-ttu-id="3ee20-125">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3ee20-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3ee20-126">.</span><span class="sxs-lookup"><span data-stu-id="3ee20-126"></span></span> <span data-ttu-id="3ee20-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3ee20-127"></span></span><!-- --><span data-ttu-id="3ee20-128">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Visio.ShapeCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Visio.Interfaces.ShapeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="3ee20-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id="3ee20-129">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="3ee20-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
      return:
        type:
          - Visio.Interfaces.ShapeCollectionData
        description: ''