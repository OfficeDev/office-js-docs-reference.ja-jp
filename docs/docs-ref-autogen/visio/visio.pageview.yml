### YamlMime:UniversalReference
ms.openlocfilehash: 5f88201f82a4c125d52d2f793ba5ca179b15d296
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30096508"
items:
- uid: visio.Visio.PageView
  summary: >-
    <span data-ttu-id="17a65-101">PageView クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="17a65-101">Represents the PageView class.</span></span>


    <span data-ttu-id="17a65-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageView
  fullName: Visio.PageView
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageView.centerViewportOnShape
  - visio.Visio.PageView.fitToWindow
  - visio.Visio.PageView.getPosition
  - visio.Visio.PageView.getSelection
  - visio.Visio.PageView.isShapeInViewport
  - visio.Visio.PageView.load
  - visio.Visio.PageView.load_1
  - visio.Visio.PageView.load_2
  - visio.Visio.PageView.set
  - visio.Visio.PageView.set_1
  - visio.Visio.PageView.setPosition
  - visio.Visio.PageView.toJSON
  - visio.Visio.PageView.zoom
- uid: visio.Visio.PageView.centerViewportOnShape
  summary: >-
    <span data-ttu-id="17a65-103">ビューの中央に指定した図形を配置する Visio の描画をパンします。</span><span class="sxs-lookup"><span data-stu-id="17a65-103">Pans the Visio drawing to place the specified shape in the center of the view.</span></span>


    <span data-ttu-id="17a65-104">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: centerViewportOnShape(ShapeId)
  fullName: centerViewportOnShape(ShapeId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'centerViewportOnShape(ShapeId: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"17a65-105\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"17a65-105\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    activePage.view.centerViewportOnShape(shape.Id);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: ShapeId
      description: <span data-ttu-id="17a65-106">中央に表示するため ShapeId。</span><span class="sxs-lookup"><span data-stu-id="17a65-106">ShapeId to be seen in the center.</span></span>
      type:
      - number
- uid: visio.Visio.PageView.fitToWindow
  summary: >-
    <span data-ttu-id="17a65-107">現在のウィンドウにページを合わせます。</span><span class="sxs-lookup"><span data-stu-id="17a65-107">Fit Page to current window.</span></span>


    <span data-ttu-id="17a65-108">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: fitToWindow()
  fullName: fitToWindow()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'fitToWindow(): void;'
    return:
      type:
      - void
      description: ''
- uid: visio.Visio.PageView.getPosition
  summary: >-
    <span data-ttu-id="17a65-109">ビューでページの位置を指定する位置オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="17a65-109">Returns the position object that specifies the position of the page in the view.</span></span>


    <span data-ttu-id="17a65-110">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getPosition()
  fullName: getPosition()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.Position>
      description: ''
- uid: visio.Visio.PageView.getSelection
  summary: >-
    <span data-ttu-id="17a65-111">ページの選択範囲を表します。</span><span class="sxs-lookup"><span data-stu-id="17a65-111">Represents the Selection in the page.</span></span>


    <span data-ttu-id="17a65-112">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-112">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getSelection()
  fullName: getSelection()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelection(): Visio.Selection;'
    return:
      type:
      - visio.Visio.Selection
      description: ''
- uid: visio.Visio.PageView.isShapeInViewport
  summary: >-
    <span data-ttu-id="17a65-113">図形がページのビュー内にあるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="17a65-113">To check if the shape is in view of the page or not.</span></span>


    <span data-ttu-id="17a65-114">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-114">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: isShapeInViewport(Shape)
  fullName: isShapeInViewport(Shape)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
    parameters:
    - id: Shape
      description: <span data-ttu-id="17a65-115">チェックする図形。</span><span class="sxs-lookup"><span data-stu-id="17a65-115">Shape to be checked.</span></span>
      type:
      - Visio.Shape
- uid: visio.Visio.PageView.load
  summary: <span data-ttu-id="17a65-116">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="17a65-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="17a65-117">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="17a65-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="17a65-118">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="17a65-118">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="17a65-119">`load(option?: string | string[]): Visio.PageView`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="17a65-119">`load(option?: string | string[]): Visio.PageView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="17a65-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="17a65-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="17a65-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="17a65-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView` - Only available on collection types.</span></span> <span data-ttu-id="17a65-122">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="17a65-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="17a65-123">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="17a65-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="17a65-124">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="17a65-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="17a65-125">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="17a65-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - visio.Visio.Interfaces.PageViewLoadOptions
- uid: visio.Visio.PageView.load_1
  summary: <span data-ttu-id="17a65-126">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="17a65-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="17a65-127">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="17a65-127">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="17a65-128">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="17a65-128">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageView.load_2
  summary: <span data-ttu-id="17a65-129">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="17a65-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="17a65-130">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="17a65-130">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="17a65-131">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="17a65-131">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.PageView.set
  summary: <span data-ttu-id="17a65-132">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="17a65-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="17a65-133">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="17a65-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="17a65-134">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="17a65-134">This method has the following additional signature:</span></span>


    `set(properties: Visio.PageView): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="17a65-135">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17a65-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PageViewUpdateData
    - id: options
      description: <span data-ttu-id="17a65-136">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="17a65-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.PageView.set_1
  summary: <span data-ttu-id="17a65-137">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="17a65-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.PageView): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - visio.Visio.PageView
- uid: visio.Visio.PageView.setPosition
  summary: >-
    <span data-ttu-id="17a65-138">ビューでページの位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="17a65-138">Sets the position of the page in the view.</span></span>


    <span data-ttu-id="17a65-139">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-139">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: setPosition(Position)
  fullName: setPosition(Position)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(Position: Visio.Position): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: Position
      description: <span data-ttu-id="17a65-140">ビューで、ページの新しい位置を指定する位置オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="17a65-140">Position object that specifies the new position of the page in the view.</span></span>
      type:
      - visio.Visio.Position
- uid: visio.Visio.PageView.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageViewData;'
    return:
      type:
      - visio.Visio.Interfaces.PageViewData
      description: ''
- uid: visio.Visio.PageView.zoom
  summary: >-
    <span data-ttu-id="17a65-141">ページのズームレベルを取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="17a65-141">Get and set Page's Zoom level.</span></span> <span data-ttu-id="17a65-142">この値は、10 ~ 400 の範囲で、ズームのパーセンテージを示します。</span><span class="sxs-lookup"><span data-stu-id="17a65-142">The value can be between 10 and 400 and denotes the percentage of zoom.</span></span>


    <span data-ttu-id="17a65-143">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="17a65-143">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: zoom
  fullName: zoom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'zoom: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"17a65-144\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"17a65-144\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    activePage.view.zoom = 300;\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
