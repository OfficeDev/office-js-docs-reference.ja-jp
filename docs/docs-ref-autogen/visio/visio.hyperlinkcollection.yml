### YamlMime:UniversalReference
items:
  - uid: visio.Visio.HyperlinkCollection
    summary: |-
      <span data-ttu-id="d456c-101">ハイパーリンク コレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="d456c-101">Represents the Hyperlink Collection.</span></span>

      <span data-ttu-id="d456c-102">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d456c-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.HyperlinkCollection
    fullName: Visio.HyperlinkCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.HyperlinkCollection.context
      - visio.Visio.HyperlinkCollection.getCount
      - visio.Visio.HyperlinkCollection.getItem
      - visio.Visio.HyperlinkCollection.items
      - visio.Visio.HyperlinkCollection.load
      - visio.Visio.HyperlinkCollection.load_1
      - visio.Visio.HyperlinkCollection.load_2
      - visio.Visio.HyperlinkCollection.toJSON
  - uid: visio.Visio.HyperlinkCollection.context
    summary: <span data-ttu-id="d456c-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d456c-103">The request context associated with the object.</span></span> <span data-ttu-id="d456c-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="d456c-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.HyperlinkCollection.getCount
    summary: |-
      <span data-ttu-id="d456c-105">ハイパーリンクの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="d456c-105">Gets the number of hyperlinks.</span></span>

      <span data-ttu-id="d456c-106">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d456c-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: visio.Visio.HyperlinkCollection.getItem
    summary: |-
      <span data-ttu-id="d456c-107">そのキー (名前または ID) を使用してハイパーリンクを取得します。</span><span class="sxs-lookup"><span data-stu-id="d456c-107">Gets a Hyperlink using its key (name or Id).</span></span>

      <span data-ttu-id="d456c-108">\[[API セット: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="d456c-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getItem(Key)
    fullName: getItem(Key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(Key: number | string): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: Key
          description: <span data-ttu-id="d456c-109">キーは、取得するハイパーリンクの名前またはインデックスです。</span><span class="sxs-lookup"><span data-stu-id="d456c-109">Key is the name or index of the Hyperlink to be retrieved.</span></span>
          type:
            - number | string
  - uid: visio.Visio.HyperlinkCollection.items
    summary: <span data-ttu-id="d456c-110">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="d456c-110">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Visio.Hyperlink[];'
      return:
        type:
          - 'Visio.Hyperlink[]'
  - uid: visio.Visio.HyperlinkCollection.load
    summary: <span data-ttu-id="d456c-111">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d456c-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d456c-112">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d456c-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="d456c-113">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d456c-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="d456c-114">`load(option?: string | string[]): Visio.HyperlinkCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="d456c-114">`load(option?: string | string[]): Visio.HyperlinkCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="d456c-115">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d456c-115">`load(option?: { select?: string; expand?: string; }): Visio.HyperlinkCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="d456c-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d456c-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.HyperlinkCollection` - Only available on collection types.</span></span> <span data-ttu-id="d456c-117">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="d456c-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="d456c-118">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d456c-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d456c-119">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d456c-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d456c-120">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="d456c-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="d456c-121">例</span><span class="sxs-lookup"><span data-stu-id="d456c-121">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Manager Belt";
          var shape = activePage.shapes.getItem(shapeName);
          var hyperlinks = shape.hyperlinks;
          shapeHyperlinks.load(["description", "address", "subAddress"]);
              ctx.sync().then(function () {
                  for (var i = 0; i < shapeHyperlinks.items.length; i++) {
                      var hyperlink = shapeHyperlinks.items[i];
                      console.log(
                          "Description:"+hyperlink.description +"Address:"+hyperlink.address +"SubAddress:  " + 
                          hyperlink.subAddress);
                  }
              });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.HyperlinkCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
  - uid: visio.Visio.HyperlinkCollection.load_1
    summary: <span data-ttu-id="d456c-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d456c-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d456c-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d456c-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d456c-124">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d456c-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: visio.Visio.HyperlinkCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Visio.HyperlinkCollection;'
      return:
        type:
          - visio.Visio.HyperlinkCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: visio.Visio.HyperlinkCollection.toJSON
    summary: '<span data-ttu-id="d456c-125">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d456c-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d456c-126">.</span><span class="sxs-lookup"><span data-stu-id="d456c-126"></span></span> <span data-ttu-id="d456c-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d456c-127"></span></span><!-- --><span data-ttu-id="d456c-128">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Visio.HyperlinkCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Visio.Interfaces.HyperlinkCollectionData`</span><span class="sxs-lookup"><span data-stu-id="d456c-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Visio.HyperlinkCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.HyperlinkCollectionData`</span></span><!-- --><span data-ttu-id="d456c-129">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="d456c-129">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.HyperlinkCollectionData;'
      return:
        type:
          - visio.Visio.Interfaces.HyperlinkCollectionData
        description: ''