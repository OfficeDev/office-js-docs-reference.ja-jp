### YamlMime:TSType
name: Excel.FunctionResult
uid: excel!Excel.FunctionResult:class
package: excel!
fullName: Excel.FunctionResult
summary: >-
  関数評価操作の結果を含むオブジェクト


  \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.FunctionResult#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: error
  uid: excel!Excel.FunctionResult#error:member
  package: excel!
  fullName: error
  summary: >-
    エラー値 (" \# DIV/0" など) を表すエラー値。 エラー文字列が設定されていない場合は、関数が正常に終了し、その結果が Value フィールドに書き込まれます。 エラーは常に英語のロケールです。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly error: string;'
    return:
      type: string
- name: value
  uid: excel!Excel.FunctionResult#value:member
  package: excel!
  fullName: value
  summary: >-
    関数評価の値。 エラーが発生していない場合にのみ、value フィールドに値が設定されます (つまり、Error プロパティが設定されていない場合)。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly value: T;'
    return:
      type: T
methods:
- name: load(options)
  uid: excel!Excel.FunctionResult#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.FunctionResultLoadOptions): FunctionResult<T>;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.FunctionResultLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.FunctionResult:class" />&lt;T&gt;
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.FunctionResult#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): FunctionResult<T>;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.FunctionResult:class" />&lt;T&gt;
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.FunctionResult#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): FunctionResult<T>;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.FunctionResult:class" />&lt;T&gt;
      description: ''
- name: toJSON()
  uid: excel!Excel.FunctionResult#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の FunctionResult オブジェクトは API オブジェクトであるのに対して、 <T> `toJSON` メソッドはプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Interfaces.FunctionResultData<T>`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Interfaces.FunctionResultData<T>;'
    return:
      type: <xref uid="excel!Excel.Interfaces.FunctionResultData:interface" />&lt;T&gt;
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 22e0109f849db9402fa605c06858c695150f7e18
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49188982"
