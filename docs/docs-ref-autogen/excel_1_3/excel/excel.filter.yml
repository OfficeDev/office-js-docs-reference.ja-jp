### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Filter:class'
    summary: |-
      <span data-ttu-id="46eef-101">テーブルの列のフィルター処理を管理します。</span><span class="sxs-lookup"><span data-stu-id="46eef-101">Manages the filtering of a table's column.</span></span>

      <span data-ttu-id="46eef-102">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Filter
    fullName: Excel.Filter
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Filter#apply:member(1)'
      - 'excel!Excel.Filter#applyBottomItemsFilter:member(1)'
      - 'excel!Excel.Filter#applyBottomPercentFilter:member(1)'
      - 'excel!Excel.Filter#applyCellColorFilter:member(1)'
      - 'excel!Excel.Filter#applyCustomFilter:member(1)'
      - 'excel!Excel.Filter#applyCustomFilter:member(2)'
      - 'excel!Excel.Filter#applyDynamicFilter:member(1)'
      - 'excel!Excel.Filter#applyDynamicFilter:member(2)'
      - 'excel!Excel.Filter#applyFontColorFilter:member(1)'
      - 'excel!Excel.Filter#applyIconFilter:member(1)'
      - 'excel!Excel.Filter#applyTopItemsFilter:member(1)'
      - 'excel!Excel.Filter#applyTopPercentFilter:member(1)'
      - 'excel!Excel.Filter#applyValuesFilter:member(1)'
      - 'excel!Excel.Filter#clear:member(1)'
      - 'excel!Excel.Filter#context:member'
      - 'excel!Excel.Filter#criteria:member'
      - 'excel!Excel.Filter#load:member(1)'
      - 'excel!Excel.Filter#load:member(2)'
      - 'excel!Excel.Filter#load:member(3)'
      - 'excel!Excel.Filter#toJSON:member(1)'
  - uid: 'excel!Excel.Filter#apply:member(1)'
    summary: |-
      <span data-ttu-id="46eef-103">指定の列に、指定したフィルター条件を適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-103">Apply the given filter criteria on the given column.</span></span>

      <span data-ttu-id="46eef-104">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-104">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: apply(criteria)
    fullName: apply(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(criteria: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: <span data-ttu-id="46eef-105">適用する基準。</span><span class="sxs-lookup"><span data-stu-id="46eef-105">The criteria to apply.</span></span>
          type:
            - 'excel!Excel.FilterCriteria:interface'
  - uid: 'excel!Excel.Filter#applyBottomItemsFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-106">指定した数の要素の列に "下位アイテム" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-106">Apply a "Bottom Item" filter to the column for the given number of elements.</span></span>

      <span data-ttu-id="46eef-107">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-107">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyBottomItemsFilter(count)
    fullName: applyBottomItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: <span data-ttu-id="46eef-108">表示する下位からの要素の数。</span><span class="sxs-lookup"><span data-stu-id="46eef-108">The number of elements from the bottom to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyBottomPercentFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-109">指定した割合の要素の列に "下位パーセント" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-109">Apply a "Bottom Percent" filter to the column for the given percentage of elements.</span></span>

      <span data-ttu-id="46eef-110">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyBottomPercentFilter(percent)
    fullName: applyBottomPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: <span data-ttu-id="46eef-111">表示する下位からの要素のパーセンテージ。</span><span class="sxs-lookup"><span data-stu-id="46eef-111">The percentage of elements from the bottom to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyCellColorFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-112">指定した色の列に "セルの色" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-112">Apply a "Cell Color" filter to the column for the given color.</span></span>

      <span data-ttu-id="46eef-113">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-113">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyCellColorFilter(color)
    fullName: applyCellColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCellColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: <span data-ttu-id="46eef-114">表示するセルの背景色です。</span><span class="sxs-lookup"><span data-stu-id="46eef-114">The background color of the cells to show.</span></span>
          type:
            - string
  - uid: 'excel!Excel.Filter#applyCustomFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-115">指定した抽出条件の文字列の列に "アイコン" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-115">Apply an "Icon" filter to the column for the given criteria strings.</span></span>

      <span data-ttu-id="46eef-116">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-116">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'applyCustomFilter(criteria1, criteria2, oper)'
    fullName: 'applyCustomFilter(criteria1, criteria2, oper)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: <span data-ttu-id="46eef-117">最初の条件の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46eef-117">The first criteria string.</span></span>
          type:
            - string
        - id: criteria2
          description: <span data-ttu-id="46eef-118">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46eef-118">Optional.</span></span> <span data-ttu-id="46eef-119">2 つ目の条件の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46eef-119">The second criteria string.</span></span>
          type:
            - string
        - id: oper
          description: <span data-ttu-id="46eef-120">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46eef-120">Optional.</span></span> <span data-ttu-id="46eef-121">2 つの条件を結合する方法を記述する演算子です。</span><span class="sxs-lookup"><span data-stu-id="46eef-121">The operator that describes how the two criteria are joined.</span></span>
          type:
            - 'excel!Excel.FilterOperator:enum'
  - uid: 'excel!Excel.Filter#applyCustomFilter:member(2)'
    summary: |-
      <span data-ttu-id="46eef-122">指定した抽出条件の文字列の列に "アイコン" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-122">Apply an "Icon" filter to the column for the given criteria strings.</span></span>

      <span data-ttu-id="46eef-123">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'applyCustomFilter(criteria1, criteria2, operString)'
    fullName: 'applyCustomFilter(criteria1, criteria2, operString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: <span data-ttu-id="46eef-124">最初の条件の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46eef-124">The first criteria string.</span></span>
          type:
            - string
        - id: criteria2
          description: <span data-ttu-id="46eef-125">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46eef-125">Optional.</span></span> <span data-ttu-id="46eef-126">2 つ目の条件の文字列です。</span><span class="sxs-lookup"><span data-stu-id="46eef-126">The second criteria string.</span></span>
          type:
            - string
        - id: operString
          description: <span data-ttu-id="46eef-127">省略可能。</span><span class="sxs-lookup"><span data-stu-id="46eef-127">Optional.</span></span> <span data-ttu-id="46eef-128">2 つの条件を結合する方法を記述する演算子です。</span><span class="sxs-lookup"><span data-stu-id="46eef-128">The operator that describes how the two criteria are joined.</span></span>
          type:
            - '"And" | "Or"'
  - uid: 'excel!Excel.Filter#applyDynamicFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-129">列に "動的" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-129">Apply a "Dynamic" filter to the column.</span></span>

      <span data-ttu-id="46eef-130">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-130">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyDynamicFilter(criteria)
    fullName: applyDynamicFilter(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: <span data-ttu-id="46eef-131">適用する動的な条件。</span><span class="sxs-lookup"><span data-stu-id="46eef-131">The dynamic criteria to apply.</span></span>
          type:
            - 'excel!Excel.DynamicFilterCriteria:enum'
  - uid: 'excel!Excel.Filter#applyDynamicFilter:member(2)'
    summary: |-
      <span data-ttu-id="46eef-132">列に "動的" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-132">Apply a "Dynamic" filter to the column.</span></span>

      <span data-ttu-id="46eef-133">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-133">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyDynamicFilter(criteriaString)
    fullName: applyDynamicFilter(criteriaString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteriaString
          description: <span data-ttu-id="46eef-134">適用する動的な条件。</span><span class="sxs-lookup"><span data-stu-id="46eef-134">The dynamic criteria to apply.</span></span>
          type:
            - '"Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"'
  - uid: 'excel!Excel.Filter#applyFontColorFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-135">指定した色の列に "フォントの色" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-135">Apply a "Font Color" filter to the column for the given color.</span></span>

      <span data-ttu-id="46eef-136">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-136">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyFontColorFilter(color)
    fullName: applyFontColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFontColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: <span data-ttu-id="46eef-137">表示するセルのフォントの色です。</span><span class="sxs-lookup"><span data-stu-id="46eef-137">The font color of the cells to show.</span></span>
          type:
            - string
  - uid: 'excel!Excel.Filter#applyIconFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-138">指定したアイコンの列に "アイコン" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-138">Apply an "Icon" filter to the column for the given icon.</span></span>

      <span data-ttu-id="46eef-139">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-139">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyIconFilter(icon)
    fullName: applyIconFilter(icon)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyIconFilter(icon: Excel.Icon): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: icon
          description: <span data-ttu-id="46eef-140">表示するセルのアイコンです。</span><span class="sxs-lookup"><span data-stu-id="46eef-140">The icons of the cells to show.</span></span>
          type:
            - 'excel!Excel.Icon:interface'
  - uid: 'excel!Excel.Filter#applyTopItemsFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-141">指定した数の要素の列に "上位アイテム" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-141">Apply a "Top Item" filter to the column for the given number of elements.</span></span>

      <span data-ttu-id="46eef-142">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-142">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyTopItemsFilter(count)
    fullName: applyTopItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: <span data-ttu-id="46eef-143">表示する上位からの要素の数。</span><span class="sxs-lookup"><span data-stu-id="46eef-143">The number of elements from the top to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyTopPercentFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-144">指定した割合の要素の列に "上位パーセント" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-144">Apply a "Top Percent" filter to the column for the given percentage of elements.</span></span>

      <span data-ttu-id="46eef-145">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-145">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyTopPercentFilter(percent)
    fullName: applyTopPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: <span data-ttu-id="46eef-146">表示する上位からの要素のパーセンテージ。</span><span class="sxs-lookup"><span data-stu-id="46eef-146">The percentage of elements from the top to show.</span></span>
          type:
            - number
  - uid: 'excel!Excel.Filter#applyValuesFilter:member(1)'
    summary: |-
      <span data-ttu-id="46eef-147">指定した値の列に "値" フィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="46eef-147">Apply a "Values" filter to the column for the given values.</span></span>

      <span data-ttu-id="46eef-148">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-148">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: applyValuesFilter(values)
    fullName: applyValuesFilter(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: <span data-ttu-id="46eef-149">表示する値のリスト。</span><span class="sxs-lookup"><span data-stu-id="46eef-149">The list of values to show.</span></span> <span data-ttu-id="46eef-150">文字列の配列、または Excel の FilterDateTime オブジェクトの配列を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="46eef-150">This must be an array of strings or an array of Excel.FilterDateTime objects.</span></span>
          type:
            - 'excel!Excel.Filter#applyValuesFilter~0:complex'
  - uid: 'excel!Excel.Filter#clear:member(1)'
    summary: |-
      <span data-ttu-id="46eef-151">指定した列に適用されているフィルターをクリアします。</span><span class="sxs-lookup"><span data-stu-id="46eef-151">Clear the filter on the given column.</span></span>

      <span data-ttu-id="46eef-152">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-152">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Filter#context:member'
    summary: <span data-ttu-id="46eef-153">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="46eef-153">The request context associated with the object.</span></span> <span data-ttu-id="46eef-154">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="46eef-154">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Filter#criteria:member'
    summary: |-
      <span data-ttu-id="46eef-155">指定した列に現在適用されているフィルターです。</span><span class="sxs-lookup"><span data-stu-id="46eef-155">The currently applied filter on the given column.</span></span> <span data-ttu-id="46eef-156">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="46eef-156">Read-only.</span></span>

      <span data-ttu-id="46eef-157">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="46eef-157">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria;'
      return:
        type:
          - 'excel!Excel.FilterCriteria:interface'
  - uid: 'excel!Excel.Filter#load:member(1)'
    summary: <span data-ttu-id="46eef-158">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="46eef-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="46eef-159">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46eef-159">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="46eef-160">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="46eef-160">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="46eef-161">`load(option?: string | string[]): Excel.Filter`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="46eef-161">`load(option?: string | string[]): Excel.Filter` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="46eef-162">`load(option?: { select?: string; expand?: string; }): Excel.Filter`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="46eef-162">`load(option?: { select?: string; expand?: string; }): Excel.Filter` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="46eef-163">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Filter`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="46eef-163">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Filter` - Only available on collection types.</span></span> <span data-ttu-id="46eef-164">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="46eef-164">It is similar to the preceding signature.</span></span> <span data-ttu-id="46eef-165">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="46eef-165">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="46eef-166">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="46eef-166">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="46eef-167">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="46eef-167">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.FilterLoadOptions:interface'
  - uid: 'excel!Excel.Filter#load:member(2)'
    summary: <span data-ttu-id="46eef-168">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="46eef-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="46eef-169">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46eef-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="46eef-170">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="46eef-170">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Filter#load:member(3)'
    summary: <span data-ttu-id="46eef-171">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="46eef-171">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="46eef-172">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="46eef-172">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="46eef-173">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="46eef-173">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Filter#toJSON:member(1)'
    summary: '<span data-ttu-id="46eef-174">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="46eef-174">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="46eef-175">.</span><span class="sxs-lookup"><span data-stu-id="46eef-175"></span></span> <span data-ttu-id="46eef-176">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="46eef-176"></span></span><!-- --><span data-ttu-id="46eef-177">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel Filter オブジェクトは API オブジェクトであるのに対し`toJSON`て、メソッドはプレーンな JavaScript オブジェクトを返します。`Excel.Interfaces.FilterData`</span><span class="sxs-lookup"><span data-stu-id="46eef-177">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Filter object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.FilterData`</span></span><!-- --><span data-ttu-id="46eef-178">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="46eef-178">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.FilterData;'
      return:
        type:
          - 'excel!Excel.Interfaces.FilterData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.FilterCriteria:interface'
    name: Excel.FilterCriteria
  - uid: 'excel!Excel.FilterOperator:enum'
    name: Excel.FilterOperator
  - uid: 'excel!Excel.DynamicFilterCriteria:enum'
    name: Excel.DynamicFilterCriteria
  - uid: 'excel!Excel.Icon:interface'
    name: Excel.Icon
  - uid: 'excel!Excel.Filter#applyValuesFilter~0:complex'
    name: Array<string | FilterDatetime>
    fullName: Array<string | Excel.FilterDatetime>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: '<string | '
        fullName: '<string | '
      - uid: 'excel!Excel.FilterDatetime:interface'
        name: FilterDatetime
        fullName: Excel.FilterDatetime
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Filter:class'
    name: Excel.Filter
  - uid: 'excel!Excel.Interfaces.FilterLoadOptions:interface'
    name: Excel.Interfaces.FilterLoadOptions
  - uid: 'excel!Excel.Interfaces.FilterData:interface'
    name: Excel.Interfaces.FilterData