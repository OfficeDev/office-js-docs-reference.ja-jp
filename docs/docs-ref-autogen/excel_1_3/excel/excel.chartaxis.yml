### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartAxis
    summary: |-
      グラフの 1 つの軸を表します。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartAxis
    fullName: Excel.ChartAxis
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartAxis.context
      - excel.Excel.ChartAxis.format
      - excel.Excel.ChartAxis.load
      - excel.Excel.ChartAxis.load_1
      - excel.Excel.ChartAxis.load_2
      - excel.Excel.ChartAxis.majorGridlines
      - excel.Excel.ChartAxis.majorUnit
      - excel.Excel.ChartAxis.maximum
      - excel.Excel.ChartAxis.minimum
      - excel.Excel.ChartAxis.minorGridlines
      - excel.Excel.ChartAxis.minorUnit
      - excel.Excel.ChartAxis.set
      - excel.Excel.ChartAxis.set_1
      - excel.Excel.ChartAxis.title
      - excel.Excel.ChartAxis.toJSON
  - uid: excel.Excel.ChartAxis.context
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartAxis.format
    summary: |-
      グラフオブジェクトの書式を表します。これには、行とフォントの書式設定が含まれます。 読み取り専用です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAxisFormat;'
      return:
        type:
          - excel.Excel.ChartAxisFormat
  - uid: excel.Excel.ChartAxis.load
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): Excel.ChartAxis`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): Excel.ChartAxis`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAxis`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartAxisLoadOptions): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartAxisLoadOptions
  - uid: excel.Excel.ChartAxis.load_1
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          // Get the maximum of Chart Axis from Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var axis = chart.axes.valueAxis;
              axis.load('maximum');
              return ctx.sync().then(function() {
                      console.log(axis.maximum);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set the maximum, minimum, majorunit, minorunit of valueaxis. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.axes.valueAxis.maximum = 5;
              chart.axes.valueAxis.minimum = 0;
              chart.axes.valueAxis.majorUnit = 1;
              chart.axes.valueAxis.minorUnit = 0.2;
              return ctx.sync().then(function() {
                      console.log("Axis Settings Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartAxis.load_2
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartAxis.majorGridlines
    summary: |-
      指定された軸の大きい目盛線を表す Gridlines オブジェクトを返します。 値の取得のみ可能です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorGridlines
    fullName: majorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly majorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.majorUnit
    summary: |-
      2 つの大きい目盛の間隔を表します。 数値の値または空の文字列を設定できます。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorUnit
    fullName: majorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'majorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.maximum
    summary: |-
      数値軸の最大値を表します。 数値の値または空の文字列を設定できます (軸の値が自動の場合)。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: maximum
    fullName: maximum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maximum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minimum
    summary: |-
      数値軸の最小値を表します。 数値の値または空の文字列を設定できます (軸の値が自動の場合)。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minimum
    fullName: minimum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minimum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minorGridlines
    summary: |-
      指定された軸の小さい目盛線を表す gridlines オブジェクトを返します。 読み取り専用です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorGridlines
    fullName: minorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly minorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.minorUnit
    summary: |-
      2 つの小さい目盛の間隔を表します。 数値の値または空の文字列を設定できます (軸の値が自動の場合)。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorUnit
    fullName: minorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.set
    summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
    remarks: |-
      このメソッドには、次の追加のシグネチャがあります。

      `set(properties: Excel.ChartAxis): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
          type:
            - Interfaces.ChartAxisUpdateData
        - id: options
          description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartAxis.set_1
    summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxis): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartAxis
  - uid: excel.Excel.ChartAxis.title
    summary: |-
      軸タイトルを表します。 読み取り専用です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartAxisTitle;'
      return:
        type:
          - excel.Excel.ChartAxisTitle
  - uid: excel.Excel.ChartAxis.toJSON
    summary: API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の ChartAxis オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.ChartAxisData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartAxisData
        description: ''