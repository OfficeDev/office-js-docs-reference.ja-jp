### YamlMime:TSType
name: Excel.ChartTitle
uid: excel!Excel.ChartTitle:class
package: excel!
fullName: Excel.ChartTitle
summary: >-
  グラフのグラフ タイトルのオブジェクトを表します。


  \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.ChartTitle#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: format
  uid: excel!Excel.ChartTitle#format:member
  package: excel!
  fullName: format
  summary: >-
    塗りつぶしとフォントの書式設定を含む、グラフタイトルの書式設定を表します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: Excel.ChartTitleFormat;'
    return:
      type: <xref uid="excel!Excel.ChartTitleFormat:class" />
- name: height
  uid: excel!Excel.ChartTitle#height:member
  package: excel!
  fullName: height
  summary: >-
    グラフ タイトルの高さ (ポイント数) を返します。 グラフのタイトルが表示されていない場合は Null。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly height: number;'
    return:
      type: number
- name: horizontalAlignment
  uid: excel!Excel.ChartTitle#horizontalAlignment:member
  package: excel!
  fullName: horizontalAlignment
  summary: >-
    グラフタイトルの水平方向の配置を指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'horizontalAlignment: Excel.ChartTextHorizontalAlignment | "Center" | "Left" | "Right" | "Justify" | "Distributed";'
    return:
      type: <xref uid="excel!Excel.ChartTextHorizontalAlignment:enum" /> | "Center" | "Left" | "Right" | "Justify" | "Distributed"
- name: left
  uid: excel!Excel.ChartTitle#left:member
  package: excel!
  fullName: left
  summary: >-
    グラフタイトルの左端からグラフエリアの左端までの距離をポイント単位で指定します。 グラフのタイトルが表示されていない場合は Null。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: overlay
  uid: excel!Excel.ChartTitle#overlay:member
  package: excel!
  fullName: overlay
  summary: >-
    グラフタイトルがグラフを重ねて表示するかどうかを指定します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'overlay: boolean;'
    return:
      type: boolean
- name: position
  uid: excel!Excel.ChartTitle#position:member
  package: excel!
  fullName: position
  summary: >-
    グラフ タイトルの位置を表します。 詳細については、「Excel Charttitle Position」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'position: Excel.ChartTitlePosition | "Automatic" | "Top" | "Bottom" | "Left" | "Right";'
    return:
      type: <xref uid="excel!Excel.ChartTitlePosition:enum" /> | "Automatic" | "Top" | "Bottom" | "Left" | "Right"
- name: showShadow
  uid: excel!Excel.ChartTitle#showShadow:member
  package: excel!
  fullName: showShadow
  summary: >-
    グラフ タイトルが影付きにされるかどうかを指定するブール値を表します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showShadow: boolean;'
    return:
      type: boolean
- name: text
  uid: excel!Excel.ChartTitle#text:member
  package: excel!
  fullName: text
  summary: >-
    グラフのタイトルテキストを指定します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'text: string;'
    return:
      type: string
- name: textOrientation
  uid: excel!Excel.ChartTitle#textOrientation:member
  package: excel!
  fullName: textOrientation
  summary: >-
    グラフタイトルのテキストを表示する角度を指定します。 この値は、-90 ~ 90 の整数、または垂直方向のテキストの整数の180のいずれかである必要があります。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'textOrientation: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-title-format.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const title = sheet.charts.getItemAt(0).title;\n    title.textOrientation = -45;\n\n    await context.sync();\n});\n```"
- name: top
  uid: excel!Excel.ChartTitle#top:member
  package: excel!
  fullName: top
  summary: >-
    グラフタイトルの上端からグラフエリアの上端までの距離をポイント単位で指定します。 グラフのタイトルが表示されていない場合は Null。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: verticalAlignment
  uid: excel!Excel.ChartTitle#verticalAlignment:member
  package: excel!
  fullName: verticalAlignment
  summary: >-
    グラフタイトルの垂直方向の配置を指定します。 詳細については、「Excel Charttext縦書きの配置」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'verticalAlignment: Excel.ChartTextVerticalAlignment | "Center" | "Bottom" | "Top" | "Justify" | "Distributed";'
    return:
      type: <xref uid="excel!Excel.ChartTextVerticalAlignment:enum" /> | "Center" | "Bottom" | "Top" | "Justify" | "Distributed"
- name: visible
  uid: excel!Excel.ChartTitle#visible:member
  package: excel!
  fullName: visible
  summary: >-
    グラフのタイトルが shape.visibile かどうかを指定します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'visible: boolean;'
    return:
      type: boolean
- name: width
  uid: excel!Excel.ChartTitle#width:member
  package: excel!
  fullName: width
  summary: >-
    グラフのタイトルの幅をポイント単位で指定します。 グラフのタイトルが表示されていない場合は Null。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly width: number;'
    return:
      type: number
methods:
- name: getSubstring(start, length)
  uid: excel!Excel.ChartTitle#getSubstring:member(1)
  package: excel!
  fullName: getSubstring(start, length)
  summary: >-
    グラフタイトルのサブ文字列を取得します。 改行 '<!-- -->\\<!-- -->n ' は1文字もカウントします。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSubstring(start: number, length: number): Excel.ChartFormatString;'
    parameters:
    - id: start
      description: 取得するサブ文字列の開始位置を指定します。 Position は0から始まります。
      type: number
    - id: length
      description: 取得するサブ文字列の長さ。
      type: number
    return:
      type: <xref uid="excel!Excel.ChartFormatString:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-title-format.yaml\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let chart = sheet.charts.getItemAt(0);\n\n    // Get first seven characters of the title and color them green.\n    chart.title.getSubstring(0, 7).font.color = \"Yellow\";\n    await context.sync();\n});\n```"
- name: load(options)
  uid: excel!Excel.ChartTitle#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ChartTitleLoadOptions): Excel.ChartTitle;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.ChartTitleLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.ChartTitle:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.ChartTitle#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartTitle;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.ChartTitle:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Get the text of Chart Title from Chart1.\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    \n    var title = chart.title;\n    title.load('text');\n    return ctx.sync().then(function() {\n            console.log(title.text);\n    }).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n    });\n});\n```\n```javascript\n// Set the text of Chart Title to \"My Chart\" and Make it show on top of the chart without overlaying.\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    \n    chart.title.text= \"My Chart\"; \n    chart.title.visible=true;\n    chart.title.overlay=true;\n    \n    return ctx.sync().then(function() {\n        console.log(\"Char Title Changed\");\n    }).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n    });\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.ChartTitle#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.ChartTitle;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.ChartTitle:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.ChartTitle#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Excel.ChartTitle): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ChartTitleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="excel!Excel.Interfaces.ChartTitleUpdateData:interface" />
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.ChartTitle#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.ChartTitle): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.ChartTitle:class" />
    return:
      type: void
      description: ''
- name: setFormula(formula)
  uid: excel!Excel.ChartTitle#setFormula:member(1)
  package: excel!
  fullName: setFormula(formula)
  summary: >-
    A1 スタイルの表記法を使用するグラフ タイトルの数式を表す文字列値を設定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setFormula(formula: string): void;'
    parameters:
    - id: formula
      description: 設定する数式を表す文字列型 (string) の値を指定します。
      type: string
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.ChartTitle#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の ChartTitle オブジェクトは API オブジェクトであるのに対し、 `toJSON` メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ChartTitleData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartTitleData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ChartTitleData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: fc138f67c0b949e911400f9a0c897a575c2f3caa
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49185946"
