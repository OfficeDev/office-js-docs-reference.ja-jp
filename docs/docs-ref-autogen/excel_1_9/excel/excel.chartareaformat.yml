### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartAreaFormat
    summary: |-
      <span data-ttu-id="d12c1-101">グラフ領域全体の書式設定プロパティをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-101">Encapsulates the format properties for the overall chart area.</span></span>

      <span data-ttu-id="d12c1-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12c1-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartAreaFormat
    fullName: Excel.ChartAreaFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartAreaFormat.border
      - excel.Excel.ChartAreaFormat.colorScheme
      - excel.Excel.ChartAreaFormat.context
      - excel.Excel.ChartAreaFormat.fill
      - excel.Excel.ChartAreaFormat.font
      - excel.Excel.ChartAreaFormat.load
      - excel.Excel.ChartAreaFormat.load_1
      - excel.Excel.ChartAreaFormat.load_2
      - excel.Excel.ChartAreaFormat.roundedCorners
      - excel.Excel.ChartAreaFormat.set
      - excel.Excel.ChartAreaFormat.set_1
      - excel.Excel.ChartAreaFormat.toJSON
  - uid: excel.Excel.ChartAreaFormat.border
    summary: |-
      <span data-ttu-id="d12c1-103">グラフエリアの罫線の書式を表します。これには、色、linestyle、およびウエイトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-103">Represents the border format of chart area, which includes color, linestyle, and weight.</span></span> <span data-ttu-id="d12c1-104">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d12c1-104">Read-only.</span></span>

      <span data-ttu-id="d12c1-105">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12c1-105">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: border
    fullName: border
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly border: Excel.ChartBorder;'
      return:
        type:
          - excel.Excel.ChartBorder
  - uid: excel.Excel.ChartAreaFormat.colorScheme
    summary: |-
      <span data-ttu-id="d12c1-106">グラフの配色を返すか、設定します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-106">Returns or sets color scheme of the chart.</span></span> <span data-ttu-id="d12c1-107">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="d12c1-107">Read/Write.</span></span>

      <span data-ttu-id="d12c1-108">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12c1-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: colorScheme
    fullName: colorScheme
    langs:
      - typeScript
    type: property
    syntax:
      content: 'colorScheme: Excel.ChartColorScheme | "ColorfulPalette1" | "ColorfulPalette2" | "ColorfulPalette3" | "ColorfulPalette4" | "MonochromaticPalette1" | "MonochromaticPalette2" | "MonochromaticPalette3" | "MonochromaticPalette4" | "MonochromaticPalette5" | "MonochromaticPalette6" | "MonochromaticPalette7" | "MonochromaticPalette8" | "MonochromaticPalette9" | "MonochromaticPalette10" | "MonochromaticPalette11" | "MonochromaticPalette12" | "MonochromaticPalette13";'
      return:
        type:
          - Excel.ChartColorScheme | "ColorfulPalette1" | "ColorfulPalette2" | "ColorfulPalette3" | "ColorfulPalette4" | "MonochromaticPalette1" | "MonochromaticPalette2" | "MonochromaticPalette3" | "MonochromaticPalette4" | "MonochromaticPalette5" | "MonochromaticPalette6" | "MonochromaticPalette7" | "MonochromaticPalette8" | "MonochromaticPalette9" | "MonochromaticPalette10" | "MonochromaticPalette11" | "MonochromaticPalette12" | "MonochromaticPalette13"
  - uid: excel.Excel.ChartAreaFormat.context
    summary: <span data-ttu-id="d12c1-109">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d12c1-109">The request context associated with the object.</span></span> <span data-ttu-id="d12c1-110">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartAreaFormat.fill
    summary: |-
      <span data-ttu-id="d12c1-111">背景の書式設定情報を含む、オブジェクトの塗りつぶしの書式を表します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-111">Represents the fill format of an object, which includes background formatting information.</span></span> <span data-ttu-id="d12c1-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d12c1-112">Read-only.</span></span>

      <span data-ttu-id="d12c1-113">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12c1-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ChartFill;'
      return:
        type:
          - excel.Excel.ChartFill
  - uid: excel.Excel.ChartAreaFormat.font
    summary: |-
      <span data-ttu-id="d12c1-114">現在のオブジェクトのフォント属性 (フォント名、フォント サイズ、色など) を表します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-114">Represents the font attributes (font name, font size, color, etc.) for the current object.</span></span> <span data-ttu-id="d12c1-115">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="d12c1-115">Read-only.</span></span>

      <span data-ttu-id="d12c1-116">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12c1-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.ChartFont;'
      return:
        type:
          - excel.Excel.ChartFont
  - uid: excel.Excel.ChartAreaFormat.load
    summary: <span data-ttu-id="d12c1-117">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d12c1-118">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d12c1-118">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="d12c1-119">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d12c1-119">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="d12c1-120">`load(option?: string | string[]): Excel.ChartAreaFormat`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="d12c1-120">`load(option?: string | string[]): Excel.ChartAreaFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="d12c1-121">`load(option?: { select?: string; expand?: string; }): Excel.ChartAreaFormat`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d12c1-121">`load(option?: { select?: string; expand?: string; }): Excel.ChartAreaFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="d12c1-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAreaFormat`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAreaFormat` - Only available on collection types.</span></span> <span data-ttu-id="d12c1-123">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="d12c1-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="d12c1-124">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d12c1-125">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d12c1-126">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartAreaFormatLoadOptions): Excel.ChartAreaFormat;'
      return:
        type:
          - excel.Excel.ChartAreaFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartAreaFormatLoadOptions
  - uid: excel.Excel.ChartAreaFormat.load_1
    summary: <span data-ttu-id="d12c1-127">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d12c1-128">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d12c1-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAreaFormat;'
      return:
        type:
          - excel.Excel.ChartAreaFormat
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d12c1-129">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d12c1-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartAreaFormat.load_2
    summary: <span data-ttu-id="d12c1-130">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d12c1-131">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d12c1-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartAreaFormat;'
      return:
        type:
          - excel.Excel.ChartAreaFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d12c1-132">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d12c1-132">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartAreaFormat.roundedCorners
    summary: |-
      <span data-ttu-id="d12c1-133">グラフのグラフ エリアの角が丸いかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-133">Specifies whether or not chart area of the chart has rounded corners.</span></span> <span data-ttu-id="d12c1-134">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="d12c1-134">Read/Write.</span></span>

      <span data-ttu-id="d12c1-135">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d12c1-135">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: roundedCorners
    fullName: roundedCorners
    langs:
      - typeScript
    type: property
    syntax:
      content: 'roundedCorners: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartAreaFormat.set
    summary: '<span data-ttu-id="d12c1-136">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-136">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d12c1-137">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="d12c1-137">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="d12c1-138">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="d12c1-138">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartAreaFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAreaFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="d12c1-139">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d12c1-139">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ChartAreaFormatUpdateData
        - id: options
          description: <span data-ttu-id="d12c1-140">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-140">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartAreaFormat.set_1
    summary: '<span data-ttu-id="d12c1-141">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-141">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAreaFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartAreaFormat
  - uid: excel.Excel.ChartAreaFormat.toJSON
    summary: '<span data-ttu-id="d12c1-142">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d12c1-142">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d12c1-143">.</span><span class="sxs-lookup"><span data-stu-id="d12c1-143"></span></span> <span data-ttu-id="d12c1-144">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d12c1-144"></span></span><!-- --><span data-ttu-id="d12c1-145">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の ChartAreaFormat オブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Excel.Interfaces.ChartAreaFormatData`</span><span class="sxs-lookup"><span data-stu-id="d12c1-145">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartAreaFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartAreaFormatData`</span></span><!-- --><span data-ttu-id="d12c1-146">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="d12c1-146">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAreaFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartAreaFormatData
        description: ''