### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartGridlines:class'
    summary: |-
      <span data-ttu-id="98fc9-101">グラフの軸の目盛線または補助目盛線を表します。</span><span class="sxs-lookup"><span data-stu-id="98fc9-101">Represents major or minor gridlines on a chart axis.</span></span>

      <span data-ttu-id="98fc9-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="98fc9-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartGridlines
    fullName: Excel.ChartGridlines
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartGridlines#context:member'
      - 'excel!Excel.ChartGridlines#format:member'
      - 'excel!Excel.ChartGridlines#load:member(1)'
      - 'excel!Excel.ChartGridlines#load:member(2)'
      - 'excel!Excel.ChartGridlines#load:member(3)'
      - 'excel!Excel.ChartGridlines#set:member(1)'
      - 'excel!Excel.ChartGridlines#set:member(2)'
      - 'excel!Excel.ChartGridlines#toJSON:member(1)'
      - 'excel!Excel.ChartGridlines#visible:member'
  - uid: 'excel!Excel.ChartGridlines#context:member'
    summary: <span data-ttu-id="98fc9-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="98fc9-103">The request context associated with the object.</span></span> <span data-ttu-id="98fc9-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="98fc9-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartGridlines#format:member'
    summary: |-
      <span data-ttu-id="98fc9-105">グラフの目盛線の書式設定を表します。</span><span class="sxs-lookup"><span data-stu-id="98fc9-105">Represents the formatting of chart gridlines.</span></span> <span data-ttu-id="98fc9-106">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="98fc9-106">Read-only.</span></span>

      <span data-ttu-id="98fc9-107">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="98fc9-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartGridlinesFormat;'
      return:
        type:
          - 'excel!Excel.ChartGridlinesFormat:class'
  - uid: 'excel!Excel.ChartGridlines#load:member(1)'
    summary: <span data-ttu-id="98fc9-108">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="98fc9-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="98fc9-109">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="98fc9-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartGridlinesLoadOptions): Excel.ChartGridlines;'
      return:
        type:
          - 'excel!Excel.ChartGridlines:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="98fc9-110">読み込むオブジェクトのプロパティを指定するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="98fc9-110">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartGridlinesLoadOptions:interface'
  - uid: 'excel!Excel.ChartGridlines#load:member(2)'
    summary: <span data-ttu-id="98fc9-111">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="98fc9-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="98fc9-112">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="98fc9-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartGridlines;'
      return:
        type:
          - 'excel!Excel.ChartGridlines:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="98fc9-113">例</span><span class="sxs-lookup"><span data-stu-id="98fc9-113">Examples</span></span>

          ```javascript
          // Get the visible of Major Gridlines on value axis of Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var majGridlines = chart.axes.valueaxis.majorGridlines;
              majGridlines.load('visible');
              return ctx.sync().then(function() {
                      console.log(majGridlines.visible);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set to show major gridlines on valueAxis of Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.axes.valueAxis.majorGridlines.visible = true;
              return ctx.sync().then(function() {
                      console.log("Axis Gridlines Added ");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="98fc9-114">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="98fc9-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartGridlines#load:member(3)'
    summary: <span data-ttu-id="98fc9-115">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="98fc9-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="98fc9-116">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="98fc9-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartGridlines;
      return:
        type:
          - 'excel!Excel.ChartGridlines:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="98fc9-117">`propertyNamesAndPaths.select`は、読み込むプロパティを指定するコンマで区切られた文字列で`propertyNamesAndPaths.expand` 、読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。</span><span class="sxs-lookup"><span data-stu-id="98fc9-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartGridlines#set:member(1)'
    summary: '<span data-ttu-id="98fc9-118">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="98fc9-118">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="98fc9-119">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="98fc9-119">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="98fc9-120">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="98fc9-120">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartGridlines): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartGridlinesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="98fc9-121">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="98fc9-121">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartGridlinesUpdateData:interface'
        - id: options
          description: <span data-ttu-id="98fc9-122">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="98fc9-122">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartGridlines#set:member(2)'
    summary: '<span data-ttu-id="98fc9-123">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="98fc9-123">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartGridlines): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartGridlines:class'
  - uid: 'excel!Excel.ChartGridlines#toJSON:member(1)'
    summary: '<span data-ttu-id="98fc9-124">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="98fc9-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="98fc9-125">.</span><span class="sxs-lookup"><span data-stu-id="98fc9-125"></span></span> <span data-ttu-id="98fc9-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="98fc9-126"></span></span><!-- --><span data-ttu-id="98fc9-127">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の ChartGridlines オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ChartGridlinesData`</span><span class="sxs-lookup"><span data-stu-id="98fc9-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartGridlines object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartGridlinesData`</span></span><!-- --><span data-ttu-id="98fc9-128">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="98fc9-128">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartGridlinesData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartGridlinesData:interface'
        description: ''
  - uid: 'excel!Excel.ChartGridlines#visible:member'
    summary: |-
      <span data-ttu-id="98fc9-129">軸の目盛線を表示するか非表示にするかを表すブール型の値。</span><span class="sxs-lookup"><span data-stu-id="98fc9-129">Boolean value representing if the axis gridlines are visible or not.</span></span>

      <span data-ttu-id="98fc9-130">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="98fc9-130">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartGridlinesFormat:class'
    name: Excel.ChartGridlinesFormat
  - uid: 'excel!Excel.ChartGridlines:class'
    name: Excel.ChartGridlines
  - uid: 'excel!Excel.Interfaces.ChartGridlinesLoadOptions:interface'
    name: Excel.Interfaces.ChartGridlinesLoadOptions
  - uid: 'excel!Excel.Interfaces.ChartGridlinesUpdateData:interface'
    name: Interfaces.ChartGridlinesUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartGridlinesData:interface'
    name: Excel.Interfaces.ChartGridlinesData