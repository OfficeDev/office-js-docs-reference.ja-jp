### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalRangeBorder
    summary: |-
      <span data-ttu-id="86ebb-101">オブジェクトの輪郭を表します。</span><span class="sxs-lookup"><span data-stu-id="86ebb-101">Represents the border of an object.</span></span>

      <span data-ttu-id="86ebb-102">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86ebb-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeBorder
    fullName: Excel.ConditionalRangeBorder
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ConditionalRangeBorder.color
      - excel.Excel.ConditionalRangeBorder.context
      - excel.Excel.ConditionalRangeBorder.load
      - excel.Excel.ConditionalRangeBorder.load_1
      - excel.Excel.ConditionalRangeBorder.load_2
      - excel.Excel.ConditionalRangeBorder.set
      - excel.Excel.ConditionalRangeBorder.set_1
      - excel.Excel.ConditionalRangeBorder.sideIndex
      - excel.Excel.ConditionalRangeBorder.style
      - excel.Excel.ConditionalRangeBorder.toJSON
  - uid: excel.Excel.ConditionalRangeBorder.color
    summary: |-
      <span data-ttu-id="86ebb-103">フォーム\#RRGGBB (例: "FFA500") の境界線の色を表す html カラーコード、または名前付きの html 色 (例: 「オレンジ」)。</span><span class="sxs-lookup"><span data-stu-id="86ebb-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>

      <span data-ttu-id="86ebb-104">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86ebb-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalRangeBorder.context
    summary: <span data-ttu-id="86ebb-105">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="86ebb-105">The request context associated with the object.</span></span> <span data-ttu-id="86ebb-106">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="86ebb-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ConditionalRangeBorder.load
    summary: <span data-ttu-id="86ebb-107">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="86ebb-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86ebb-108">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="86ebb-108">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="86ebb-109">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="86ebb-109">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="86ebb-110">`load(option?: string | string[]): Excel.ConditionalRangeBorder`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="86ebb-110">`load(option?: string | string[]): Excel.ConditionalRangeBorder` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="86ebb-111">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="86ebb-111">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="86ebb-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeBorder`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="86ebb-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeBorder` - Only available on collection types.</span></span> <span data-ttu-id="86ebb-113">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="86ebb-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="86ebb-114">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="86ebb-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="86ebb-115">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="86ebb-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="86ebb-116">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="86ebb-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalRangeBorderLoadOptions): Excel.ConditionalRangeBorder;'
      return:
        type:
          - excel.Excel.ConditionalRangeBorder
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ConditionalRangeBorderLoadOptions
  - uid: excel.Excel.ConditionalRangeBorder.load_1
    summary: <span data-ttu-id="86ebb-117">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="86ebb-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86ebb-118">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="86ebb-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeBorder;'
      return:
        type:
          - excel.Excel.ConditionalRangeBorder
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="86ebb-119">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="86ebb-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ConditionalRangeBorder.load_2
    summary: <span data-ttu-id="86ebb-120">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="86ebb-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="86ebb-121">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="86ebb-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeBorder;'
      return:
        type:
          - excel.Excel.ConditionalRangeBorder
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="86ebb-122">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="86ebb-122">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ConditionalRangeBorder.set
    summary: '<span data-ttu-id="86ebb-123">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="86ebb-123">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="86ebb-124">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="86ebb-124">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="86ebb-125">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="86ebb-125">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeBorder): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="86ebb-126">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="86ebb-126">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ConditionalRangeBorderUpdateData
        - id: options
          description: <span data-ttu-id="86ebb-127">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="86ebb-127">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ConditionalRangeBorder.set_1
    summary: '<span data-ttu-id="86ebb-128">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="86ebb-128">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeBorder): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ConditionalRangeBorder
  - uid: excel.Excel.ConditionalRangeBorder.sideIndex
    summary: |-
      <span data-ttu-id="86ebb-129">罫線の特定の辺を表す定数値。</span><span class="sxs-lookup"><span data-stu-id="86ebb-129">Constant value that indicates the specific side of the border.</span></span> <span data-ttu-id="86ebb-130">詳細については、「Excel の ConditionalRangeBorderIndex」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="86ebb-130">See Excel.ConditionalRangeBorderIndex for details.</span></span> <span data-ttu-id="86ebb-131">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="86ebb-131">Read-only.</span></span>

      <span data-ttu-id="86ebb-132">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86ebb-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sideIndex
    fullName: sideIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sideIndex: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight";'
      return:
        type:
          - Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
  - uid: excel.Excel.ConditionalRangeBorder.style
    summary: |-
      <span data-ttu-id="86ebb-133">罫線の線スタイルを指定する、線スタイル定数のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="86ebb-133">One of the constants of line style specifying the line style for the border.</span></span> <span data-ttu-id="86ebb-134">詳細については、「Excel BorderLineStyle」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="86ebb-134">See Excel.BorderLineStyle for details.</span></span>

      <span data-ttu-id="86ebb-135">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="86ebb-135">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot";'
      return:
        type:
          - Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
  - uid: excel.Excel.ConditionalRangeBorder.toJSON
    summary: '<span data-ttu-id="86ebb-136">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="86ebb-136">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="86ebb-137">.</span><span class="sxs-lookup"><span data-stu-id="86ebb-137"></span></span> <span data-ttu-id="86ebb-138">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="86ebb-138"></span></span><!-- --><span data-ttu-id="86ebb-139">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の ConditionalRangeBorder オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ConditionalRangeBorderData`</span><span class="sxs-lookup"><span data-stu-id="86ebb-139">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeBorder object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeBorderData`</span></span><!-- --><span data-ttu-id="86ebb-140">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="86ebb-140">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeBorderData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalRangeBorderData
        description: ''