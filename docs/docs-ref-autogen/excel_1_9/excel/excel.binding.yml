### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Binding
    summary: |-
      ブックで定義されている Office.js のバインディングを表します。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Binding
    fullName: Excel.Binding
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Binding.context
      - excel.Excel.Binding.delete
      - excel.Excel.Binding.getRange
      - excel.Excel.Binding.getTable
      - excel.Excel.Binding.getText
      - excel.Excel.Binding.id
      - excel.Excel.Binding.load
      - excel.Excel.Binding.load_1
      - excel.Excel.Binding.load_2
      - excel.Excel.Binding.onDataChanged
      - excel.Excel.Binding.onSelectionChanged
      - excel.Excel.Binding.toJSON
      - excel.Excel.Binding.type
  - uid: excel.Excel.Binding.context
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Binding.delete
    summary: |-
      バインドを削除します。

      \[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Binding.getRange
    summary: |-
      バインディングによって表される範囲を返します。 バインドが正しい型ではない場合、エラーがスローされます。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var range = binding.getRange();
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Binding.getTable
    summary: |-
      バインドによって表されるテーブルを返します。 バインドが正しい型ではない場合、エラーがスローされます。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getTable()
    fullName: getTable()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTable(): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var table = binding.getTable();
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Binding.getText
    summary: |-
      バインドによって表されるテキストを返します。 バインドが正しい型ではない場合、エラーがスローされます。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getText()
    fullName: getText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getText(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var text = binding.getText();
              binding.load('text');
              return ctx.sync().then(function() {
                  console.log(text);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Binding.id
    summary: |-
      バインド識別子を表します。 読み取り専用です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Binding.load
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): Excel.Binding`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): Excel.Binding`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.BindingLoadOptions
  - uid: excel.Excel.Binding.load_1
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              binding.load('type');
              return ctx.sync().then(function() {
                  console.log(binding.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: excel.Excel.Binding.load_2
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Binding.onDataChanged
    summary: |-
      バインド内でデータまたは書式設定が変更されるときに発生します。

      \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onDataChanged
    fullName: onDataChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");    
              const salesTable = sheet.tables.getItem("SalesTable");
              const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), "Table", "SalesByQuarter");
              salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);

              console.log("The data changed handler is registered.");

              await context.sync();
          });
          ```
  - uid: excel.Excel.Binding.onSelectionChanged
    summary: |-
      バインドで選択されているコンテンツが変更されたときに発生します。

      \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
  - uid: excel.Excel.Binding.toJSON
    summary: API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel Binding オブジェクトは API オブジェクトですが、このメソッド`toJSON`はプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Excel.Interfaces.BindingData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingData;'
      return:
        type:
          - excel.Excel.Interfaces.BindingData
        description: ''
  - uid: excel.Excel.Binding.type
    summary: |-
      バインドの種類を返します。 詳細については、「Excel. BindingType」を参照してください。 読み取り専用です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
      return:
        type:
          - Excel.BindingType | "Range" | "Table" | "Text"