### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CustomConditionalFormat:class'
    summary: |-
      <span data-ttu-id="604ab-101">ユーザー設定の条件付き書式の種類を表します。</span><span class="sxs-lookup"><span data-stu-id="604ab-101">Represents a custom conditional format type.</span></span>

      <span data-ttu-id="604ab-102">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="604ab-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.CustomConditionalFormat
    fullName: Excel.CustomConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.CustomConditionalFormat#context:member'
      - 'excel!Excel.CustomConditionalFormat#format:member'
      - 'excel!Excel.CustomConditionalFormat#load:member(1)'
      - 'excel!Excel.CustomConditionalFormat#load:member(2)'
      - 'excel!Excel.CustomConditionalFormat#load:member(3)'
      - 'excel!Excel.CustomConditionalFormat#rule:member'
      - 'excel!Excel.CustomConditionalFormat#set:member(1)'
      - 'excel!Excel.CustomConditionalFormat#set:member(2)'
      - 'excel!Excel.CustomConditionalFormat#toJSON:member(1)'
  - uid: 'excel!Excel.CustomConditionalFormat#context:member'
    summary: <span data-ttu-id="604ab-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="604ab-103">The request context associated with the object.</span></span> <span data-ttu-id="604ab-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="604ab-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CustomConditionalFormat#format:member'
    summary: |-
      <span data-ttu-id="604ab-105">書式設定オブジェクトを返し、条件付き書式のフォント、塗りつぶし、罫線などのプロパティをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="604ab-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span> <span data-ttu-id="604ab-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="604ab-106">Read-only.</span></span>

      <span data-ttu-id="604ab-107">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="604ab-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="604ab-108">例</span><span class="sxs-lookup"><span data-stu-id="604ab-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.CustomConditionalFormat#load:member(1)'
    summary: <span data-ttu-id="604ab-109">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="604ab-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="604ab-110">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="604ab-110">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.CustomConditionalFormatLoadOptions): Excel.CustomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="604ab-111">読み込むオブジェクトのプロパティを指定するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="604ab-111">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.CustomConditionalFormatLoadOptions:interface'
  - uid: 'excel!Excel.CustomConditionalFormat#load:member(2)'
    summary: <span data-ttu-id="604ab-112">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="604ab-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="604ab-113">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="604ab-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CustomConditionalFormat;'
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="604ab-114">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="604ab-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CustomConditionalFormat#load:member(3)'
    summary: <span data-ttu-id="604ab-115">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="604ab-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="604ab-116">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="604ab-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.CustomConditionalFormat;
      return:
        type:
          - 'excel!Excel.CustomConditionalFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="604ab-117">`propertyNamesAndPaths.select`は、読み込むプロパティを指定するコンマで区切られた文字列で`propertyNamesAndPaths.expand` 、読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。</span><span class="sxs-lookup"><span data-stu-id="604ab-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.CustomConditionalFormat#rule:member'
    summary: |-
      <span data-ttu-id="604ab-118">この条件付き書式の Rule オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="604ab-118">Represents the Rule object on this conditional format.</span></span> <span data-ttu-id="604ab-119">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="604ab-119">Read-only.</span></span>

      <span data-ttu-id="604ab-120">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="604ab-120">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rule: Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="604ab-121">例</span><span class="sxs-lookup"><span data-stu-id="604ab-121">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              var sheet = ctx.workbook.worksheets.getActiveWorksheet();
              var range = sheet.getRange("A1:A5");
              range.values = [[1], [20], [""], [5], ["test"]];
              var cf = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              var cfCustom = cf.customOrNullObject;
              cfCustom.rule.formula = "=ISBLANK(A1)";
              cfCustom.format.fill.color = "#00FF00";
              return ctx.sync().then(function () {
                  console.log("Added new custom conditional format highlighting all blank cells.");
              });
          }).catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.CustomConditionalFormat#set:member(1)'
    summary: '<span data-ttu-id="604ab-122">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="604ab-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="604ab-123">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="604ab-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="604ab-124">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="604ab-124">This method has the following additional signature:</span></span>

      `set(properties: Excel.CustomConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CustomConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="604ab-125">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="604ab-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.CustomConditionalFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="604ab-126">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="604ab-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.CustomConditionalFormat#set:member(2)'
    summary: '<span data-ttu-id="604ab-127">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="604ab-127">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.CustomConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.CustomConditionalFormat:class'
  - uid: 'excel!Excel.CustomConditionalFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="604ab-128">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="604ab-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="604ab-129">.</span><span class="sxs-lookup"><span data-stu-id="604ab-129"></span></span> <span data-ttu-id="604ab-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="604ab-130"></span></span><!-- --><span data-ttu-id="604ab-131">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の CustomConditionalFormat オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.CustomConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="604ab-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CustomConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CustomConditionalFormatData`</span></span><!-- --><span data-ttu-id="604ab-132">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="604ab-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CustomConditionalFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CustomConditionalFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFormat:class'
    name: Excel.ConditionalRangeFormat
  - uid: 'excel!Excel.CustomConditionalFormat:class'
    name: Excel.CustomConditionalFormat
  - uid: 'excel!Excel.Interfaces.CustomConditionalFormatLoadOptions:interface'
    name: Excel.Interfaces.CustomConditionalFormatLoadOptions
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    name: Excel.ConditionalFormatRule
  - uid: 'excel!Excel.Interfaces.CustomConditionalFormatUpdateData:interface'
    name: Interfaces.CustomConditionalFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.CustomConditionalFormatData:interface'
    name: Excel.Interfaces.CustomConditionalFormatData