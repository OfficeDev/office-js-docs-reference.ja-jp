### YamlMime:TSType
name: Excel.Filter
uid: excel!Excel.Filter:class
package: excel!
fullName: Excel.Filter
summary: >-
  テーブルの列のフィルター処理を管理します。


  \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.Filter#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられた要求コンテキスト。 これにより、アドインのプロセスがホスト アプリケーションのプロセスOfficeに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: criteria
  uid: excel!Excel.Filter#criteria:member
  package: excel!
  fullName: criteria
  summary: >-
    指定した列に現在適用されているフィルターです。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly criteria: Excel.FilterCriteria;'
    return:
      type: <xref uid="excel!Excel.FilterCriteria:interface" />
methods:
- name: apply(criteria)
  uid: excel!Excel.Filter#apply:member(1)
  package: excel!
  fullName: apply(criteria)
  summary: >-
    指定の列に、指定したフィルター条件を適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'apply(criteria: Excel.FilterCriteria): void;'
    parameters:
    - id: criteria
      description: 適用する基準。
      type: <xref uid="excel!Excel.FilterCriteria:interface" />
    return:
      type: void
      description: ''
- name: applyBottomItemsFilter(count)
  uid: excel!Excel.Filter#applyBottomItemsFilter:member(1)
  package: excel!
  fullName: applyBottomItemsFilter(count)
  summary: >-
    指定した数の要素の列に "下位アイテム" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyBottomItemsFilter(count: number): void;'
    parameters:
    - id: count
      description: 表示する下位からの要素の数。
      type: number
    return:
      type: void
      description: ''
- name: applyBottomPercentFilter(percent)
  uid: excel!Excel.Filter#applyBottomPercentFilter:member(1)
  package: excel!
  fullName: applyBottomPercentFilter(percent)
  summary: >-
    指定した割合の要素の列に "下位パーセント" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyBottomPercentFilter(percent: number): void;'
    parameters:
    - id: percent
      description: 表示する下位からの要素のパーセンテージ。
      type: number
    return:
      type: void
      description: ''
- name: applyCellColorFilter(color)
  uid: excel!Excel.Filter#applyCellColorFilter:member(1)
  package: excel!
  fullName: applyCellColorFilter(color)
  summary: >-
    指定した色の列に "セルの色" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyCellColorFilter(color: string): void;'
    parameters:
    - id: color
      description: 表示するセルの背景色です。
      type: string
    return:
      type: void
      description: ''
- name: applyCustomFilter(criteria1, criteria2, oper)
  uid: excel!Excel.Filter#applyCustomFilter:member(1)
  package: excel!
  fullName: applyCustomFilter(criteria1, criteria2, oper)
  summary: >-
    指定した条件文字列の列に "Icon" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
    parameters:
    - id: criteria1
      description: 最初の条件の文字列です。
      type: string
    - id: criteria2
      description: 省略可能。 2 つ目の条件の文字列です。
      type: string
    - id: oper
      description: 省略可能。 2 つの条件を結合する方法を記述する演算子です。
      type: <xref uid="excel!Excel.FilterOperator:enum" />
    return:
      type: void
      description: ''
- name: applyCustomFilter(criteria1, criteria2, operString)
  uid: excel!Excel.Filter#applyCustomFilter:member(2)
  package: excel!
  fullName: applyCustomFilter(criteria1, criteria2, operString)
  summary: >-
    指定した条件文字列の列に "Icon" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
    parameters:
    - id: criteria1
      description: 最初の条件の文字列です。
      type: string
    - id: criteria2
      description: 省略可能。 2 つ目の条件の文字列です。
      type: string
    - id: operString
      description: 省略可能。 2 つの条件を結合する方法を記述する演算子です。
      type: "\"And\" | \"Or\""
    return:
      type: void
      description: ''
- name: applyDynamicFilter(criteria)
  uid: excel!Excel.Filter#applyDynamicFilter:member(1)
  package: excel!
  fullName: applyDynamicFilter(criteria)
  summary: >-
    列に "動的" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
    parameters:
    - id: criteria
      description: 適用する動的な条件。
      type: <xref uid="excel!Excel.DynamicFilterCriteria:enum" />
    return:
      type: void
      description: ''
- name: applyDynamicFilter(criteriaString)
  uid: excel!Excel.Filter#applyDynamicFilter:member(2)
  package: excel!
  fullName: applyDynamicFilter(criteriaString)
  summary: >-
    列に "動的" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
    parameters:
    - id: criteriaString
      description: 適用する動的な条件。
      type: "\"Unknown\" | \"AboveAverage\" | \"AllDatesInPeriodApril\" | \"AllDatesInPeriodAugust\" | \"AllDatesInPeriodDecember\" | \"AllDatesInPeriodFebruray\" | \"AllDatesInPeriodJanuary\" | \"AllDatesInPeriodJuly\" | \"AllDatesInPeriodJune\" | \"AllDatesInPeriodMarch\" | \"AllDatesInPeriodMay\" | \"AllDatesInPeriodNovember\" | \"AllDatesInPeriodOctober\" | \"AllDatesInPeriodQuarter1\" | \"AllDatesInPeriodQuarter2\" | \"AllDatesInPeriodQuarter3\" | \"AllDatesInPeriodQuarter4\" | \"AllDatesInPeriodSeptember\" | \"BelowAverage\" | \"LastMonth\" | \"LastQuarter\" | \"LastWeek\" | \"LastYear\" | \"NextMonth\" | \"NextQuarter\" | \"NextWeek\" | \"NextYear\" | \"ThisMonth\" | \"ThisQuarter\" | \"ThisWeek\" | \"ThisYear\" | \"Today\" | \"Tomorrow\" | \"YearToDate\" | \"Yesterday\""
    return:
      type: void
      description: ''
- name: applyFontColorFilter(color)
  uid: excel!Excel.Filter#applyFontColorFilter:member(1)
  package: excel!
  fullName: applyFontColorFilter(color)
  summary: >-
    指定した色の列に "フォントの色" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyFontColorFilter(color: string): void;'
    parameters:
    - id: color
      description: 表示するセルのフォントの色です。
      type: string
    return:
      type: void
      description: ''
- name: applyIconFilter(icon)
  uid: excel!Excel.Filter#applyIconFilter:member(1)
  package: excel!
  fullName: applyIconFilter(icon)
  summary: >-
    指定したアイコンの列に "Icon" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyIconFilter(icon: Excel.Icon): void;'
    parameters:
    - id: icon
      description: 表示するセルのアイコンです。
      type: <xref uid="excel!Excel.Icon:interface" />
    return:
      type: void
      description: ''
- name: applyTopItemsFilter(count)
  uid: excel!Excel.Filter#applyTopItemsFilter:member(1)
  package: excel!
  fullName: applyTopItemsFilter(count)
  summary: >-
    指定した数の要素の列に "上位アイテム" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyTopItemsFilter(count: number): void;'
    parameters:
    - id: count
      description: 表示する上位からの要素の数。
      type: number
    return:
      type: void
      description: ''
- name: applyTopPercentFilter(percent)
  uid: excel!Excel.Filter#applyTopPercentFilter:member(1)
  package: excel!
  fullName: applyTopPercentFilter(percent)
  summary: >-
    指定した割合の要素の列に "上位パーセント" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyTopPercentFilter(percent: number): void;'
    parameters:
    - id: percent
      description: 表示する上位からの要素のパーセンテージ。
      type: number
    return:
      type: void
      description: ''
- name: applyValuesFilter(values)
  uid: excel!Excel.Filter#applyValuesFilter:member(1)
  package: excel!
  fullName: applyValuesFilter(values)
  summary: >-
    指定した値の列に "値" フィルターを適用します。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
    parameters:
    - id: values
      description: 表示する値のリスト。 これは、文字列の配列またはオブジェクトの配列である必要 `Excel.FilterDateTime` があります。
      type: Array&lt;string | <xref uid="excel!Excel.FilterDatetime:interface" />&gt;
    return:
      type: void
      description: ''
- name: clear()
  uid: excel!Excel.Filter#clear:member(1)
  package: excel!
  fullName: clear()
  summary: >-
    指定した列に適用されているフィルターをクリアします。


    \[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: ''
- name: load(options)
  uid: excel!Excel.Filter#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティのオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.FilterLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Filter:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Filter#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Filter;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定するコンマ区切り文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Filter:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Filter#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Filter;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマ区切りの文字列で、読み込むナビゲーション プロパティを指定するコンマ区切 `propertyNamesAndPaths.expand` りの文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Filter:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.Filter#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: API オブジェクトを渡す際に、より有用な出力を提供するために `toJSON()` JavaScript メソッドをオーバーライドします。 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->、順番に、渡 `toJSON` されるオブジェクトのメソッドを呼び出します。元の Excel.Filter オブジェクトが API オブジェクトであるのに対し、メソッドはプレーンな JavaScript オブジェクト (次のように入力) `toJSON` を返します。 `Excel.Interfaces.FilterData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを含む。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.FilterData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.FilterData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 9fbeba8c73fcfffb640a09d4157072926bcfa1a0
  ms.sourcegitcommit: ce09743deb2fc2a879cd63f96c8ff11ec84a42b2
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/02/2021
  ms.locfileid: "51554817"
