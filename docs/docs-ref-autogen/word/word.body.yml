### YamlMime:UniversalReference
ms.openlocfilehash: ad577f2e563e03f9882bfb3e3d20631b4225190f
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24047584"
items:
- uid: word.Word.Body
  summary: >-
    <span data-ttu-id="686b5-101">文書またはセクションの本文を表します。</span><span class="sxs-lookup"><span data-stu-id="686b5-101">Represents the body of a document or a section.</span></span>


    <span data-ttu-id="686b5-102">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-102">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.Body
  fullName: word.Word.Body
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Body.clear
  - word.Word.Body.contentControls
  - word.Word.Body.font
  - word.Word.Body.getHtml
  - word.Word.Body.getOoxml
  - word.Word.Body.getRange
  - word.Word.Body.inlinePictures
  - word.Word.Body.insertBreak
  - word.Word.Body.insertContentControl
  - word.Word.Body.insertFileFromBase64
  - word.Word.Body.insertHtml
  - word.Word.Body.insertInlinePictureFromBase64
  - word.Word.Body.insertOoxml
  - word.Word.Body.insertParagraph
  - word.Word.Body.insertTable
  - word.Word.Body.insertText
  - word.Word.Body.lists
  - word.Word.Body.load
  - word.Word.Body.paragraphs
  - word.Word.Body.parentBody
  - word.Word.Body.parentBodyOrNullObject
  - word.Word.Body.parentContentControl
  - word.Word.Body.parentContentControlOrNullObject
  - word.Word.Body.parentSection
  - word.Word.Body.parentSectionOrNullObject
  - word.Word.Body.search
  - word.Word.Body.select
  - word.Word.Body.style
  - word.Word.Body.styleBuiltIn
  - word.Word.Body.tables
  - word.Word.Body.text
  - word.Word.Body.toJSON
  - word.Word.Body.track
  - word.Word.Body.type
  - word.Word.Body.untrack
- uid: word.Word.Body.clear
  summary: >-
    <span data-ttu-id="686b5-p101">本文オブジェクトの内容を消去します。ユーザーは、消去された内容を元に戻す操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p101">Clears the contents of the body object. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="686b5-105">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-105">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: word.Word.Body.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-106\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-106\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to clear the contents of the body.\n    body.clear();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Cleared the body contents.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how the \n// clear method can be used to clear the contents of a document.\n// https://aka.ms/sillystorywordaddin\n```"
- uid: word.Word.Body.contentControls
  summary: >-
    <span data-ttu-id="686b5-p102">本文に含まれるリッチ テキストのコンテンツ コントロール オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p102">Gets the collection of rich text content control objects in the body. Read-only.</span></span>


    <span data-ttu-id="686b5-109">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-109">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: word.Word.Body.contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Body.font
  summary: >-
    <span data-ttu-id="686b5-p103">本文のテキスト形式を取得します。これを使用して、フォント名、サイズ、色、およびその他のプロパティを取得および設定します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p103">Gets the text format of the body. Use this to get and set font name, size, color and other properties. Read-only.</span></span>


    <span data-ttu-id="686b5-113">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-113">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: word.Word.Body.font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
- uid: word.Word.Body.getHtml
  summary: >-
    <span data-ttu-id="686b5-114">本文のオブジェクトの HTML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="686b5-114">Gets the HTML representation of the body object.</span></span>


    <span data-ttu-id="686b5-115">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-115">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: word.Word.Body.getHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-116\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-116\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the HTML contents of the body.\n    var bodyHTML = body.getHtml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body HTML contents: \" + bodyHTML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getOoxml
  summary: >-
    <span data-ttu-id="686b5-117">本文オブジェクトの OOXML (Office オープン XML) 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="686b5-117">Gets the OOXML (Office Open XML) representation of the body object.</span></span>


    <span data-ttu-id="686b5-118">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-118">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: word.Word.Body.getOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-119\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-119\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to get the OOXML contents of the body.\n    var bodyOOXML = body.getOoxml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body OOXML contents: \" + bodyOOXML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.getRange
  summary: >-
    <span data-ttu-id="686b5-120">範囲として、本文全体、あるいは本文の開始点または終了点を取得します。</span><span class="sxs-lookup"><span data-stu-id="686b5-120">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>


    <span data-ttu-id="686b5-121">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-121">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: word.Word.Body.getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="686b5-122">省略可能。</span><span class="sxs-lookup"><span data-stu-id="686b5-122">Optional.</span></span> <span data-ttu-id="686b5-123">範囲の場所は、''、または 'コンテンツ'、'全体'、'開始'、'End' にすることができます。</span><span class="sxs-lookup"><span data-stu-id="686b5-123">The range location can be 'Whole', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.Body.inlinePictures
  summary: >-
    <span data-ttu-id="686b5-124">本文内には、InlinePicture オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="686b5-124">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="686b5-125">コレクションでは、フリーのイメージは含まれません。</span><span class="sxs-lookup"><span data-stu-id="686b5-125">The collection does not include floating images.</span></span> <span data-ttu-id="686b5-126">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-126">Read-only.</span></span>


    <span data-ttu-id="686b5-127">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-127">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: word.Word.Body.inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.Body.insertBreak
  summary: >-
    <span data-ttu-id="686b5-p106">メイン文書の指定した位置に、区切りを挿入します。insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p106">Inserts a break at the specified location in the main document. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="686b5-130">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-130">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: word.Word.Body.insertBreak
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-131\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-131\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (ctx) {\n\n    // Create a proxy object for the document body.\n    var body = ctx.document.body;\n\n    // Queue a commmand to insert a page break at the start of the document body.\n    body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        console.log('Added a page break at the start of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: breakType
      description: <span data-ttu-id="686b5-p107">必須。本文に追加する区切りの種類。</span><span class="sxs-lookup"><span data-stu-id="686b5-p107">Required. The break type to add to the body.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: <span data-ttu-id="686b5-p108">必須。有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="686b5-p108">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertContentControl
  summary: >-
    <span data-ttu-id="686b5-136">リッチ テキスト コンテンツ コントロールで本文オブジェクトをラップします。</span><span class="sxs-lookup"><span data-stu-id="686b5-136">Wraps the body object with a Rich Text content control.</span></span>


    <span data-ttu-id="686b5-137">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-137">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertContentControl()
  fullName: word.Word.Body.insertContentControl
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-138\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-138\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to wrap the body in a content control.\n    body.insertContentControl();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Wrapped the body in a content control.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Body.insertFileFromBase64
  summary: >-
    <span data-ttu-id="686b5-139">ドキュメントを指定した位置に本体に挿入します。</span><span class="sxs-lookup"><span data-stu-id="686b5-139">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="686b5-140">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-140">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="686b5-141">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-141">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: word.Word.Body.insertFileFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-142\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-142\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert base64 encoded .docx at the beginning of the content body.\n    // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.\n    body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Added base64 encoded text to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: base64File
      description: <span data-ttu-id="686b5-p110">必須。.docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="686b5-p110">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="686b5-p111">必須。値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p111">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertHtml
  summary: >-
    <span data-ttu-id="686b5-147">指定した位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="686b5-147">Inserts HTML at the specified location.</span></span> <span data-ttu-id="686b5-148">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-148">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="686b5-149">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-149">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: word.Word.Body.insertHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-150\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-150\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert HTML in to the beginning of the body.\n    body.insertHtml(\n        '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('HTML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: html
      description: <span data-ttu-id="686b5-p113">必須。文書に挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="686b5-p113">Required. The HTML to be inserted in the document.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="686b5-p114">必須。値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p114">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="686b5-p115">画像を本文の指定された位置に挿入します。insertLocation の値は、'Start' か 'End' になります。</span><span class="sxs-lookup"><span data-stu-id="686b5-p115">Inserts a picture into the body at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="686b5-157">\[[API セット: WordApi 1.2](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-157">\[ [API set: WordApi 1.2](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: word.Word.Body.insertInlinePictureFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-158\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-158\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert OOXML in to the beginning of the body.\n    body.insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('OOXML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="686b5-p116">必須。本文に挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="686b5-p116">Required. The base64 encoded image to be inserted in the body.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="686b5-p117">必須。有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="686b5-p117">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertOoxml
  summary: >-
    <span data-ttu-id="686b5-163">指定した位置に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="686b5-163">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="686b5-164">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-164">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="686b5-165">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-165">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: word.Word.Body.insertOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="686b5-p119">必須。挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="686b5-p119">Required. The OOXML to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="686b5-p120">必須。値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p120">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertParagraph
  summary: >-
    <span data-ttu-id="686b5-p121">指定した位置に段落を挿入します。insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p121">Inserts a paragraph at the specified location. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="686b5-172">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-172">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: word.Word.Body.insertParagraph
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-173\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-173\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert the paragraph at the end of the document body.\n    body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Paragraph added at the end of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let paragraph = context.document.body.insertParagraph(\"Timeline\", \"End\");\n    paragraph.style = \"Heading 2\";\n    let paragraph2 = context.document.body.insertParagraph(\"The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.\", \"End\");\n    paragraph2.style = \"Normal\";\n    let paragraph3 = context.document.body.insertParagraph(\"Project Costs by Phase\", \"End\");\n    paragraph3.style = \"Heading 2\";\n    // Note a content control with the title of \"ProjectCosts\" is added. Content will be replaced later.\n    let paragraph4 = context.document.body.insertParagraph(\"<Add Project Costs Here>\", \"End\");\n    paragraph4.style = \"Normal\";\n    paragraph4.font.highlightColor = \"#FFFF00\";\n    let contentControl = paragraph4.insertContentControl();\n    contentControl.title = \"ProjectCosts\";\n    let paragraph5 = context.document.body.insertParagraph(\"Project Team\", \"End\");\n    paragraph5.style = \"Heading 2\";\n    paragraph5.font.highlightColor = \"#FFFFFF\";\n    let paragraph6 = context.document.body.insertParagraph(\"Terms of Work\", \"End\");\n    paragraph6.style = \"Heading 1\";\n    let paragraph7 = context.document.body.insertParagraph(\"Contractor shall provide the Services and Deliverable(s) as follows:\", \"End\");\n    paragraph7.style = \"Normal\";\n    let paragraph8 = context.document.body.insertParagraph(\"Out-of-Pocket Expenses / Invoice Procedures\", \"End\");\n    paragraph8.style = \"Heading 2\";\n    let paragraph9 = context.document.body.insertParagraph(\"Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.\", \"End\");\n    paragraph9.style = \"Normal\";\n    // Insert a page break at the end of the document.\n    context.document.body.insertBreak(\"Page\", \"End\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="686b5-p122">必須。挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="686b5-p122">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="686b5-p123">必須。有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="686b5-p123">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.insertTable
  summary: >-
    <span data-ttu-id="686b5-p124">指定した数の行と列を含むテーブルを挿入します。insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p124">Inserts a table with the specified number of rows and columns. The insertLocation value can be 'Start' or 'End'.</span></span>


    <span data-ttu-id="686b5-180">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-180">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: word.Word.Body.insertTable
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-181\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-181\">Examples</span></span>\n\n```typescript\nawait Word.run(async (context) => {\n    // We need a 2D array to hold the initial table values\n    let data = [[\"Apple\", \"Orange\", \"Pineapple\"], [\"Tokyo\", \"Beijing\", \"Seattle\"]];\n    let table = context.document.body.insertTable(3, 3, \"Start\", data);\n    table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;\n\n    await context.sync();\n});\n```"
    parameters:
    - id: rowCount
      description: <span data-ttu-id="686b5-p125">必須。表の行数。</span><span class="sxs-lookup"><span data-stu-id="686b5-p125">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="686b5-p126">必須。表の列数。</span><span class="sxs-lookup"><span data-stu-id="686b5-p126">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: <span data-ttu-id="686b5-p127">必須。有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="686b5-p127">Required. The value can be 'Start' or 'End'.</span></span>
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="686b5-188">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="686b5-188">Optional 2D array.</span></span> <span data-ttu-id="686b5-189">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="686b5-189">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.Body.insertText
  summary: >-
    <span data-ttu-id="686b5-190">指定した場所の本文にテキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="686b5-190">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="686b5-191">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-191">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="686b5-192">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-192">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: word.Word.Body.insertText
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-193\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-193\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert text in to the beginning of the body.\n    body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Text added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="686b5-p130">必須。挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="686b5-p130">Required. Text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="686b5-p131">必須。値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-p131">Required. The value can be 'Replace', 'Start', or 'End'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.Body.lists
  summary: >-
    <span data-ttu-id="686b5-p132">本文に含まれるリスト オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p132">Gets the collection of list objects in the body. Read-only.</span></span>


    <span data-ttu-id="686b5-200">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-200">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lists
  fullName: word.Word.Body.lists
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type:
      - word.Word.ListCollection
- uid: word.Word.Body.load
  summary: <span data-ttu-id="686b5-201">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="686b5-201">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="686b5-202">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="686b5-202">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="686b5-203">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="686b5-203">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="686b5-204">`load(option?: { select?: string; expand?: string; }): Word.Body`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="686b5-204">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="686b5-205">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-205">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="686b5-206">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="686b5-206">It is similar to the preceding signature.</span></span> <span data-ttu-id="686b5-207">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="686b5-207">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="686b5-208">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="686b5-208">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="686b5-209">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="686b5-209">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="686b5-210">例</span><span class="sxs-lookup"><span data-stu-id="686b5-210">Examples</span></span>


    ```javascript

    // Get the text property on the body object

    // Run a batch operation against the Word object model.

    Word.run(function (context) {

        // Create a proxy object for the document body.
        var body = context.document.body;

        // Queue a commmand to load the text in document body.
        context.load(body, 'text');

        // Synchronize the document state by executing the queued commands,
        // and return a promise to indicate task completion.
        return context.sync().then(function () {
            console.log("Body contents: " + body.text);
        });
    })

    .catch(function (error) {
        console.log("Error: " + JSON.stringify(error));
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    // Get the style and the font size, font name, and font color properties on the body object.

    // Run a batch operation against the Word object model.

    Word.run(function (context) {

        // Create a proxy object for the document body.
        var body = context.document.body;

        // Queue a commmand to load font and style information for the document body.
        context.load(body, 'font/size, font/name, font/color, style');

        // Synchronize the document state by executing the queued commands,
        // and return a promise to indicate task completion.
        return context.sync().then(function () {
            // Show the results of the load method. Here we show the
            // property values on the body object.
            var results = 'Font size: ' + body.font.size +
                          '; Font name: ' + body.font.name +
                          '; Font color: ' + body.font.color +
                          '; Body style: ' + body.style;

            console.log(results);
        });
    })

    .catch(function (error) {
        console.log('Error: ' + JSON.stringify(error));
        if (error instanceof OfficeExtension.Error) {
            console.log('Debug info: ' + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: word.Word.Body.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="686b5-211">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="686b5-211">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.Body.paragraphs
  summary: >-
    <span data-ttu-id="686b5-p135">本文に含まれるパラグラフ オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p135">Gets the collection of paragraph objects in the body. Read-only.</span></span>


    <span data-ttu-id="686b5-214">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-214">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: word.Word.Body.paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.Body.parentBody
  summary: >-
    <span data-ttu-id="686b5-p136">本文の親の本文を取得します。たとえば、テーブル セル本文の親本文にはヘッダーを指定できます。親本文がない場合は、スローします。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p136">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="686b5-219">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-219">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: word.Word.Body.parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentBodyOrNullObject
  summary: >-
    <span data-ttu-id="686b5-p137">本文の親の本文を取得します。たとえば、テーブル セル本文の親本文にはヘッダーを指定できます。親本文がない場合は、null オブジェクトを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p137">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>


    <span data-ttu-id="686b5-224">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-224">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBodyOrNullObject
  fullName: word.Word.Body.parentBodyOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBodyOrNullObject: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Body.parentContentControl
  summary: >-
    <span data-ttu-id="686b5-p138">本文を含むコンテンツ コントロールを取得します。親コンテンツ コントロールがない場合は、スローします。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p138">Gets the content control that contains the body. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="686b5-228">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-228">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: word.Word.Body.parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="686b5-p139">本文を含むコンテンツ コントロールを取得します。親コンテンツ コントロールがない場合は、null オブジェクトを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p139">Gets the content control that contains the body. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="686b5-232">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-232">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: word.Word.Body.parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.Body.parentSection
  summary: >-
    <span data-ttu-id="686b5-p140">本文の親セクションを取得します。親セクションがない場合は、スローします。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p140">Gets the parent section of the body. Throws if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="686b5-236">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-236">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSection
  fullName: word.Word.Body.parentSection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSection: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.parentSectionOrNullObject
  summary: >-
    <span data-ttu-id="686b5-p141">本文の親セクションを取得します。親セクションがない場合は、null オブジェクトを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p141">Gets the parent section of the body. Returns a null object if there isn't a parent section. Read-only.</span></span>


    <span data-ttu-id="686b5-240">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-240">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentSectionOrNullObject
  fullName: word.Word.Body.parentSectionOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentSectionOrNullObject: Word.Section;'
    return:
      type:
      - Word.Section
- uid: word.Word.Body.search
  summary: >-
    <span data-ttu-id="686b5-241">本文のオブジェクトの範囲で指定した SearchOptions を使って検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="686b5-241">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="686b5-242">検索結果は、range オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="686b5-242">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="686b5-243">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-243">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: word.Word.Body.search
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-244\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-244\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to search the document.\n    var searchResults = context.document.body.search('video', {matchCase: false});\n\n    // Queue a commmand to load the results.\n    context.load(searchResults, 'text, font');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        var results = 'Found count: ' + searchResults.items.length +\n                      '; we highlighted the results.';\n\n        // Queue a command to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n          searchResults.items[i].font.color = '#FF0000'    // Change color to Red\n          searchResults.items[i].font.highlightColor = '#FFFF00';\n          searchResults.items[i].font.bold = true;\n        }\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log(results);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```\n```typescript\nawait Word.run(async (context) => {\n    let results = context.document.body.search(\"Online\");\n    results.load(\"font/highlightColor\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"yellow\";\n    }\n\n    await context.sync();\n});\n```\n```typescript\nawait Word.run(async (context) => {\n    // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes (i.e. we are using wildcards).\n    let results = context.document.body.search(\"$*.[0-9][0-9]\", { matchWildcards: true });\n    results.load(\"font/highlightColor, font/color\");\n\n    await context.sync();\n\n    // Let's traverse the search results... and highlight...\n    for (let i = 0; i < results.items.length; i++) {\n        results.items[i].font.highlightColor = \"red\";\n        results.items[i].font.color = \"white\";\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: searchText
      description: <span data-ttu-id="686b5-245">必須。</span><span class="sxs-lookup"><span data-stu-id="686b5-245">Required.</span></span> <span data-ttu-id="686b5-246">検索するテキスト。</span><span class="sxs-lookup"><span data-stu-id="686b5-246">The search text.</span></span> <span data-ttu-id="686b5-247">最大 255 文字まで使用できます。</span><span class="sxs-lookup"><span data-stu-id="686b5-247">Can be a maximum of 255 characters.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="686b5-p144">省略可能。検索のオプション。</span><span class="sxs-lookup"><span data-stu-id="686b5-p144">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.Body.select
  summary: >-
    <span data-ttu-id="686b5-250">本文を選択し、その本文に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="686b5-250">Selects the body and navigates the Word UI to it.</span></span>


    <span data-ttu-id="686b5-251">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-251">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: word.Word.Body.select
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"686b5-252\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"686b5-252\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to select the document body. The Word UI will\n    // move to the selected document body.\n    body.select();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Selected the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: selectionMode
      description: <span data-ttu-id="686b5-p145">省略可能。 選択モードは、'Select'、'Start'、'End' のいずれかになります。'Select' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="686b5-p145">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - Word.SelectionMode
- uid: word.Word.Body.style
  summary: >-
    <span data-ttu-id="686b5-p146">本文のスタイル名を取得または設定します。カスタム スタイルとローカライズされたスタイルの名前には、このプロパティを使用します。ロケール間で移植可能な組み込みスタイルを使用するには、"styleBuiltIn" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="686b5-p146">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="686b5-259">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-259">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: word.Word.Body.style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.Body.styleBuiltIn
  summary: >-
    <span data-ttu-id="686b5-p147">本文の組み込みスタイル名を取得または設定します。ロケール間で移植可能な組み込みスタイルの場合は、このプロパティを使用します。カスタム スタイルまたはローカライズされたスタイルの名前を使用するには、"style" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="686b5-p147">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="686b5-263">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-263">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: word.Word.Body.styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.Body.tables
  summary: >-
    <span data-ttu-id="686b5-p148">本文に含まれるテーブル オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p148">Gets the collection of table objects in the body. Read-only.</span></span>


    <span data-ttu-id="686b5-266">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-266">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tables
  fullName: word.Word.Body.tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type:
      - Word.TableCollection
- uid: word.Word.Body.text
  summary: >-
    <span data-ttu-id="686b5-p149">本文のテキストを取得します。insertText メソッドを使用して、テキストを挿入します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p149">Gets the text of the body. Use the insertText method to insert text. Read-only.</span></span>


    <span data-ttu-id="686b5-270">\[[API セット: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-270">\[ [API set: WordApi 1.1](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: word.Word.Body.text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: word.Word.Body.toJSON
  name: toJSON()
  fullName: word.Word.Body.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.BodyData;'
    return:
      type:
      - word.Word.Interfaces.BodyData
      description: ''
- uid: word.Word.Body.track
  summary: <span data-ttu-id="686b5-271">周囲の文書内の変更に基づいて自動的に調整するオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="686b5-271">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="686b5-272">この呼び出しは、context.trackedObjects.add(thisObject) の短縮です。</span><span class="sxs-lookup"><span data-stu-id="686b5-272">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="686b5-273">プロパティを設定するときは、このオブジェクト".sync"の呼び出しで、".run"のバッチ、および get"InvalidObjectPath"エラーの連続実行範囲の外側を使用しているまたは追跡対象のオブジェクトにオブジェクトを追加するのには必要なオブジェクトのメソッドを呼び出して、コレクションのオブジェクトが最初に作成したときです。</span><span class="sxs-lookup"><span data-stu-id="686b5-273">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: word.Word.Body.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
- uid: word.Word.Body.type
  summary: >-
    <span data-ttu-id="686b5-p151">本文の種類を取得します。種類は、'MainDoc'、'Section'、'Header'、'Footer'、または 'TableCell' にできます。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="686b5-p151">Gets the type of the body. The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'. Read-only.</span></span>


    <span data-ttu-id="686b5-277">\[[API セット: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="686b5-277">\[ [API set: WordApi 1.3](/javascript/office/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: type
  fullName: word.Word.Body.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
    return:
      type:
      - Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
- uid: word.Word.Body.untrack
  summary: <span data-ttu-id="686b5-278">リリース履歴管理されていた場合に、このオブジェクトに関連付けられているメモリです。</span><span class="sxs-lookup"><span data-stu-id="686b5-278">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="686b5-279">この呼び出しは、context.trackedObjects.remove(thisObject) の省略形です。</span><span class="sxs-lookup"><span data-stu-id="686b5-279">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="686b5-280">追跡の多くのオブジェクトを持つ速度が遅くなりますホスト アプリケーションでは、そのためできたら、追加するすべてのオブジェクトを解放するために注意してくださいそれらを使用します。</span><span class="sxs-lookup"><span data-stu-id="686b5-280">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="686b5-281">メモリの解放を有効にするには、"context.sync()"を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="686b5-281">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: word.Word.Body.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Body;'
    return:
      type:
      - Word.Body
      description: ''
