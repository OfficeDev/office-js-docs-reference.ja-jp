### YamlMime:UniversalReference
ms.openlocfilehash: 43cf806c1f8cbc5a6c7f50d624ec9c4e99c157b0
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979394"
items:
- uid: word.Word.Document
  summary: >-
    Document オブジェクトは、最上位レベルのオブジェクトです。ドキュメント オブジェクトには、1 つ以上のセクション、コンテンツ コントロール、ドキュメントの内容を含む本文が含まれています。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: Word.Document
  fullName: Word.Document
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.Document.body
  - word.Word.Document.contentControls
  - word.Word.Document.context
  - word.Word.Document.getSelection
  - word.Word.Document.load
  - word.Word.Document.load_1
  - word.Word.Document.load_2
  - word.Word.Document.properties
  - word.Word.Document.save
  - word.Word.Document.saved
  - word.Word.Document.sections
  - word.Word.Document.set
  - word.Word.Document.set_1
  - word.Word.Document.toJSON
  - word.Word.Document.track
  - word.Word.Document.untrack
- uid: word.Word.Document.body
  summary: >-
    ドキュメントの本文オブジェクトを取得します。本文は、ヘッダー、フッター、脚注、テキストボックスなどを除いたテキストです。読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly body: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.Document.contentControls
  summary: >-
    文書にコンテンツ コントロール オブジェクトのコレクションを取得します。 これには、ドキュメント、ヘッダー、フッター、テキスト ボックスなどの本文にコンテンツ コントロールが含まれます. 読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: contentControls
  fullName: contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.Document.context
  summary: オブジェクトに関連付けられた要求コンテキスト。 これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.Document.getSelection
  summary: >-
    ドキュメントの現在の選択範囲を取得します。複数選択はサポートされていません。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getSelection()
  fullName: getSelection()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelection(): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    var textSample = 'This is an example of the insert text method. This is a method ' + \n        'which allows users to insert text into a selection. It can insert text into a ' +\n        'relative location or it can overwrite the current selection. Since the ' +\n        'getSelection method returns a range object, look up the range object documentation ' +\n        'for everything you can do with a selection.';\n    \n    // Create a range proxy object for the current selection.\n    var range = context.document.getSelection();\n    \n    // Queue a commmand to insert text at the end of the selection.\n    range.insertText(textSample, Word.InsertLocation.end);\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Inserted the text at the end of the selection.');\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Document.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: "だけでなく、この署名は、このメソッドは、次の署名をします。\n\n`load(option?: string | string[]): Word.Document`-ここで、オプションは、コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列です。\n\n`load(option?: { select?: string; expand?: string; }): Word.Document`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Document`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n    \n    // Queue a command to load content control properties.\n    context.load(thisDocument, 'contentControls/id, contentControls/text, contentControls/tag');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (thisDocument.contentControls.items.length !== 0) {\n            for (var i = 0; i < thisDocument.contentControls.items.length; i++) {\n                console.log(thisDocument.contentControls.items[i].id);\n                console.log(thisDocument.contentControls.items[i].text);\n                console.log(thisDocument.contentControls.items[i].tag);\n            }\n        } else {\n            console.log('No content controls in this document.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Word.Interfaces.DocumentLoadOptions): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Word.Interfaces.DocumentLoadOptions
- uid: word.Word.Document.load_1
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 呼び出す必要があります`context.sync()`プロパティを読み取る前にします。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
    parameters:
    - id: propertyNames
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: word.Word.Document.load_2
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 呼び出す必要があります`context.sync()`プロパティを読み取る前にします。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: 読み込むには、プロパティを指定するコンマ区切りの文字列は、propertyNamesAndPaths.select、propertyNamesAndPaths.expand は、読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。
      type:
      - '{ select?: string; expand?: string; }'
- uid: word.Word.Document.properties
  summary: >-
    ドキュメントのプロパティを取得します。 読み取り専用です。


    \[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: properties
  fullName: properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Word.DocumentProperties;'
    return:
      type:
      - Word.DocumentProperties
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Word.run(async (context) => {\n    let builtInProperties = context.document.properties;\n    builtInProperties.load(\"*\"); // Let's get all!\n\n    await context.sync();\n    console.log(JSON.stringify(builtInProperties, null, 4));\n});\n```"
- uid: word.Word.Document.save
  summary: >-
    ドキュメントを保存します。ここでは、ドキュメントが保存されたことがない場合は、Word の既定のファイルの名前付け規則を使用します。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: save()
  fullName: save()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'save(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n\n    // Queue a commmand to load the document save state (on the saved property).\n    context.load(thisDocument, 'saved');    \n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (thisDocument.saved === false) {\n            // Queue a command to save this document.\n            thisDocument.save();\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Saved the document');\n            });\n        } else {\n            console.log('The document has not changed since the last save.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.Document.saved
  summary: >-
    ドキュメント内の変更が保存されているかどうかを示します。値 true は、ドキュメントが保存されてから変更されていないことを示します。読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: saved
  fullName: saved
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly saved: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.Document.sections
  summary: >-
    ドキュメント内のセクション オブジェクトのコレクションを取得します。読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: sections
  fullName: sections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sections: Word.SectionCollection;'
    return:
      type:
      - Word.SectionCollection
- uid: word.Word.Document.set
  summary: 同時に複数のオブジェクトのプロパティを設定します。 適切なプロパティで、普通のオブジェクトまたは同じ種類の別の API のオブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加の署名があります。


    `set(properties: Word.Document): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Isomorphically メソッドが呼び出されますオブジェクトのプロパティを構造化されているプロパティを使用して JavaScript オブジェクトです。
      type:
      - Interfaces.DocumentUpdateData
    - id: options
      description: プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを非表示にするオプションが用意されています。
      type:
      - office.OfficeExtension.UpdateOptions
- uid: word.Word.Document.set_1
  summary: オブジェクトに読み込まれている既存のオブジェクトに基づいて、同時に複数のプロパティを設定します。
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Word.Document): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Word.Document
- uid: word.Word.Document.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.DocumentData;'
    return:
      type:
      - Word.Interfaces.DocumentData
      description: ''
- uid: word.Word.Document.track
  summary: 周囲の文書内の変更に基づいて自動的に調整するオブジェクトを追跡します。 この呼び出しは、context.trackedObjects.add(thisObject) の短縮です。 プロパティを設定するときは、このオブジェクト".sync"の呼び出しで、".run"のバッチ、および get"InvalidObjectPath"エラーの連続実行範囲の外側を使用しているまたは追跡対象のオブジェクトにオブジェクトを追加するのには必要なオブジェクトのメソッドを呼び出して、コレクションのオブジェクトが最初に作成したときです。
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
- uid: word.Word.Document.untrack
  summary: リリース履歴管理されていた場合に、このオブジェクトに関連付けられているメモリです。 この呼び出しは、context.trackedObjects.remove(thisObject) の省略形です。 追跡の多くのオブジェクトを持つ速度が遅くなりますホスト アプリケーションでは、そのためできたら、追加するすべてのオブジェクトを解放するために注意してくださいそれらを使用します。 メモリの解放を有効にするには、"context.sync()"を呼び出す必要があります。
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.Document;'
    return:
      type:
      - Word.Document
      description: ''
