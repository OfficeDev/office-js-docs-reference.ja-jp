### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Font:class'
    summary: |-
      <span data-ttu-id="9ef47-101">フォントを表します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-101">Represents a font.</span></span>

      <span data-ttu-id="9ef47-102">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Font
    fullName: Word.Font
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Font#bold:member'
      - 'word!Word.Font#color:member'
      - 'word!Word.Font#context:member'
      - 'word!Word.Font#doubleStrikeThrough:member'
      - 'word!Word.Font#highlightColor:member'
      - 'word!Word.Font#italic:member'
      - 'word!Word.Font#load:member(1)'
      - 'word!Word.Font#load:member(2)'
      - 'word!Word.Font#load:member(3)'
      - 'word!Word.Font#name:member'
      - 'word!Word.Font#set:member(1)'
      - 'word!Word.Font#set:member(2)'
      - 'word!Word.Font#size:member'
      - 'word!Word.Font#strikeThrough:member'
      - 'word!Word.Font#subscript:member'
      - 'word!Word.Font#superscript:member'
      - 'word!Word.Font#toJSON:member(1)'
      - 'word!Word.Font#track:member(1)'
      - 'word!Word.Font#underline:member'
      - 'word!Word.Font#untrack:member(1)'
  - uid: 'word!Word.Font#bold:member'
    summary: |-
      <span data-ttu-id="9ef47-103">フォントが太字かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-103">Gets or sets a value that indicates whether the font is bold.</span></span> <span data-ttu-id="9ef47-104">フォントの書式設定が太字の場合は true、それ以外の場合は false です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-104">True if the font is formatted as bold, otherwise, false.</span></span>

      <span data-ttu-id="9ef47-105">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#color:member'
    summary: |-
      <span data-ttu-id="9ef47-106">指定されたフォントの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-106">Gets or sets the color for the specified font.</span></span> <span data-ttu-id="9ef47-107">値は、'\#RRGGBB ' の形式または色の名前で指定できます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-107">You can provide the value in the '\#RRGGBB' format or the color name.</span></span>

      <span data-ttu-id="9ef47-108">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-108">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Font#context:member'
    summary: <span data-ttu-id="9ef47-109">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="9ef47-109">The request context associated with the object.</span></span> <span data-ttu-id="9ef47-110">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Font#doubleStrikeThrough:member'
    summary: |-
      <span data-ttu-id="9ef47-111">フォントに二重取り消し線があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-111">Gets or sets a value that indicates whether the font has a double strikethrough.</span></span> <span data-ttu-id="9ef47-112">フォントの書式が二重取り消し線付きのテキストである場合は true、それ以外の場合は false です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-112">True if the font is formatted as double strikethrough text, otherwise, false.</span></span>

      <span data-ttu-id="9ef47-113">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: doubleStrikeThrough
    fullName: doubleStrikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doubleStrikeThrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#highlightColor:member'
    summary: |-
      <span data-ttu-id="9ef47-114">強調表示の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-114">Gets or sets the highlight color.</span></span> <span data-ttu-id="9ef47-115">このプロパティを設定するには、'\#RRGGBB ' 形式または色名のいずれかの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-115">To set it, use a value either in the '\#RRGGBB' format or the color name.</span></span> <span data-ttu-id="9ef47-116">蛍光ペンの色を削除するには、その色を null に設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-116">To remove highlight color, set it to null.</span></span> <span data-ttu-id="9ef47-117">蛍光ペンの色は、"\#RRGGBB" 形式で指定できます。強調色が混在している場合は空の文字列、または強調色なしの場合は null になります。</span><span class="sxs-lookup"><span data-stu-id="9ef47-117">The returned highlight color can be in the '\#RRGGBB' format, an empty string for mixed highlight colors, or null for no highlight color.</span></span>

      <span data-ttu-id="9ef47-118">**注**: Windows デスクトップ上の Office では、既定の強調表示色のみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-118">**Note**: Only the default highlight colors are available in Office on Windows Desktop.</span></span> <span data-ttu-id="9ef47-119">これらは、"黄"、"ライム"、"水色"、"ピンク"、"Blue"、"Red"、"DarkBlue"、"青"、"Green"、"紫"、"DarkRed"、"オリーブ"、"灰色"、"淡い灰色"、および "黒" です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-119">These are "Yellow", "Lime", "Turquoise", "Pink", "Blue", "Red", "DarkBlue", "Teal", "Green", "Purple", "DarkRed", "Olive", "Gray", "LightGray", and "Black".</span></span> <span data-ttu-id="9ef47-120">Windows デスクトップ上の Office でアドインを実行すると、フォントに適用すると、その他の色は最も近い色に変換されます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-120">When the add-in runs in Office on Windows Desktop, any other color is converted to the closest color when applied to the font.</span></span>

      <span data-ttu-id="9ef47-121">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: highlightColor
    fullName: highlightColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightColor: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Font#italic:member'
    summary: |-
      <span data-ttu-id="9ef47-122">フォントが斜体かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-122">Gets or sets a value that indicates whether the font is italicized.</span></span> <span data-ttu-id="9ef47-123">フォントが斜体の場合は true、それ以外の場合は false です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-123">True if the font is italicized, otherwise, false.</span></span>

      <span data-ttu-id="9ef47-124">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#load:member(1)'
    summary: <span data-ttu-id="9ef47-125">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9ef47-126">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9ef47-126">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="9ef47-127">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="9ef47-127">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="9ef47-128">`load(option?: string | string[]): Word.Font`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-128">`load(option?: string | string[]): Word.Font` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="9ef47-129">`load(option?: { select?: string; expand?: string; }): Word.Font`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-129">`load(option?: { select?: string; expand?: string; }): Word.Font` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="9ef47-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Font`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Font` - Only available on collection types.</span></span> <span data-ttu-id="9ef47-131">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="9ef47-131">It is similar to the preceding signature.</span></span> <span data-ttu-id="9ef47-132">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-132">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9ef47-133">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-133">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9ef47-134">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-134">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="9ef47-135">例</span><span class="sxs-lookup"><span data-stu-id="9ef47-135">Examples</span></span>

      ```javascript
      // Change the font name
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a range proxy object for the current selection.
          var selection = context.document.getSelection();

          // Queue a command to change the current selection's font name.
          selection.font.name = 'Arial';

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('The font name has changed.');
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Change the font color
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a range proxy object for the current selection.
          var selection = context.document.getSelection();

          // Queue a command to change the font color of the current selection.
          selection.font.color = 'blue';

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('The font color of the selection has been changed.');
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Change the font size
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a range proxy object for the current selection.
          var selection = context.document.getSelection();

          // Queue a command to change the current selection's font size.
          selection.font.size = 20;

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('The font size has changed.');
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Highlight selected text
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a range proxy object for the current selection.
          var selection = context.document.getSelection();

          // Queue a command to highlight the current selection.
          selection.font.highlightColor = '#FFFF00'; // Yellow

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('The selection has been highlighted.');
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Bold format text
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a range proxy object for the current selection.
          var selection = context.document.getSelection();

          // Queue a command to make the current selection bold.
          selection.font.bold = true;

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('The selection is now bold.');
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Underline format text
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a range proxy object for the current selection.
          var selection = context.document.getSelection();

          // Queue a command to underline the current selection.
          selection.font.underline = Word.UnderlineType.single;

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('The selection now has an underline style.');
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Strike format text
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a range proxy object for the current selection.
          var selection = context.document.getSelection();

          // Queue a command to strikethrough the font of the current selection.
          selection.font.strikeThrough = true;

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('The selection now has a strikethrough.');
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.FontLoadOptions): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.FontLoadOptions:interface'
  - uid: 'word!Word.Font#load:member(2)'
    summary: <span data-ttu-id="9ef47-136">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9ef47-137">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9ef47-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="9ef47-138">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="9ef47-138">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Font#load:member(3)'
    summary: <span data-ttu-id="9ef47-139">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9ef47-140">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9ef47-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="9ef47-141">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-141">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Font#name:member'
    summary: |-
      <span data-ttu-id="9ef47-142">フォント名を表す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-142">Gets or sets a value that represents the name of the font.</span></span>

      <span data-ttu-id="9ef47-143">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-143">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Font#set:member(1)'
    summary: '<span data-ttu-id="9ef47-144">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-144">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="9ef47-145">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="9ef47-145">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="9ef47-146">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="9ef47-146">This method has the following additional signature:</span></span>

      `set(properties: Word.Font): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.FontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="9ef47-147">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9ef47-147">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.FontUpdateData:interface'
        - id: options
          description: <span data-ttu-id="9ef47-148">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-148">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Font#set:member(2)'
    summary: '<span data-ttu-id="9ef47-149">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-149">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Font): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Font:class'
  - uid: 'word!Word.Font#size:member'
    summary: |-
      <span data-ttu-id="9ef47-150">フォント サイズをポイント単位で表す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-150">Gets or sets a value that represents the font size in points.</span></span>

      <span data-ttu-id="9ef47-151">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-151">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: size
    fullName: size
    langs:
      - typeScript
    type: property
    syntax:
      content: 'size: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Font#strikeThrough:member'
    summary: |-
      <span data-ttu-id="9ef47-152">フォントに取り消し線を表示するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-152">Gets or sets a value that indicates whether the font has a strikethrough.</span></span> <span data-ttu-id="9ef47-153">フォントの書式が取り消し線付きのテキストである場合は true、それ以外の場合は false です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-153">True if the font is formatted as strikethrough text, otherwise, false.</span></span>

      <span data-ttu-id="9ef47-154">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: strikeThrough
    fullName: strikeThrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strikeThrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#subscript:member'
    summary: |-
      <span data-ttu-id="9ef47-155">フォントが下付き文字かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-155">Gets or sets a value that indicates whether the font is a subscript.</span></span> <span data-ttu-id="9ef47-156">フォントの書式が下付き文字である場合は true、それ以外の場合は false です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-156">True if the font is formatted as subscript, otherwise, false.</span></span>

      <span data-ttu-id="9ef47-157">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-157">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: subscript
    fullName: subscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#superscript:member'
    summary: |-
      <span data-ttu-id="9ef47-158">フォントが上付き文字かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-158">Gets or sets a value that indicates whether the font is a superscript.</span></span> <span data-ttu-id="9ef47-159">フォントの書式が上付き文字である場合は true、それ以外の場合は false です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-159">True if the font is formatted as superscript, otherwise, false.</span></span>

      <span data-ttu-id="9ef47-160">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-160">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: superscript
    fullName: superscript
    langs:
      - typeScript
    type: property
    syntax:
      content: 'superscript: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Font#toJSON:member(1)'
    summary: '<span data-ttu-id="9ef47-161">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="9ef47-161">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="9ef47-162">.</span><span class="sxs-lookup"><span data-stu-id="9ef47-162"></span></span> <span data-ttu-id="9ef47-163">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="9ef47-163"></span></span><!-- --><span data-ttu-id="9ef47-164">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Word フォントオブジェクトは API オブジェクトですが、このメソッド`toJSON`はプレーンな JavaScript オブジェクトを返します (型は`Word.Interfaces.FontData`</span><span class="sxs-lookup"><span data-stu-id="9ef47-164">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Font object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.FontData`</span></span><!-- --><span data-ttu-id="9ef47-165">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-165">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.FontData;'
      return:
        type:
          - 'word!Word.Interfaces.FontData:interface'
        description: ''
  - uid: 'word!Word.Font#track:member(1)'
    summary: '<span data-ttu-id="9ef47-166">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-166">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="9ef47-167">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-167">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="9ef47-168">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="9ef47-168">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
  - uid: 'word!Word.Font#underline:member'
    summary: |-
      <span data-ttu-id="9ef47-169">フォントの下線の種類を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-169">Gets or sets a value that indicates the font's underline type.</span></span> <span data-ttu-id="9ef47-170">フォントに下線が付いていない場合は ' None '。</span><span class="sxs-lookup"><span data-stu-id="9ef47-170">'None' if the font is not underlined.</span></span>

      <span data-ttu-id="9ef47-171">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9ef47-171">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";'
      return:
        type:
          - 'word!Word.Font#underline~0:complex'
  - uid: 'word!Word.Font#untrack:member(1)'
    summary: '<span data-ttu-id="9ef47-172">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="9ef47-172">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="9ef47-173">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="9ef47-173">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="9ef47-174">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="9ef47-174">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="9ef47-175">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9ef47-175">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Interfaces.FontLoadOptions:interface'
    name: Word.Interfaces.FontLoadOptions
  - uid: 'word!Word.Interfaces.FontUpdateData:interface'
    name: Interfaces.FontUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.FontData:interface'
    name: Word.Interfaces.FontData
  - uid: 'word!Word.Font#underline~0:complex'
    name: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    fullName: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
    spec.typeScript:
      - uid: 'word!Word.UnderlineType:enum'
        name: Word.UnderlineType
        fullName: Word.UnderlineType
      - name: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'
        fullName: ' | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"'