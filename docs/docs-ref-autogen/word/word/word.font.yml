### YamlMime:TSType
name: Word.Font
uid: word!Word.Font:class
package: word!
fullName: Word.Font
summary: >-
  フォントを表します。


  \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: bold
  uid: word!Word.Font#bold:member
  package: word!
  fullName: bold
  summary: >-
    フォントが太字かどうかを示す値を取得または設定します。 フォントの書式設定が太字の場合は true、それ以外の場合は false です。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'bold: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Bold format text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to make the current selection bold.\n    selection.font.bold = true;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection is now bold.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: color
  uid: word!Word.Font#color:member
  package: word!
  fullName: color
  summary: >-
    指定されたフォントの色を取得または設定します。 値は、' \# RRGGBB ' の形式または色の名前で指定できます。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Change the font color\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to change the font color of the current selection.\n    selection.font.color = 'blue';\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The font color of the selection has been changed.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: context
  uid: word!Word.Font#context:member
  package: word!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: doubleStrikeThrough
  uid: word!Word.Font#doubleStrikeThrough:member
  package: word!
  fullName: doubleStrikeThrough
  summary: >-
    フォントに二重取り消し線があるかどうかを示す値を取得または設定します。 フォントの書式が二重取り消し線付きのテキストである場合は true、それ以外の場合は false です。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'doubleStrikeThrough: boolean;'
    return:
      type: boolean
- name: highlightColor
  uid: word!Word.Font#highlightColor:member
  package: word!
  fullName: highlightColor
  summary: >-
    強調表示の色を取得または設定します。 このプロパティを設定するには、' \# RRGGBB ' 形式または色名のいずれかの値を使用します。 蛍光ペンの色を削除するには、その色を null に設定します。 蛍光ペンの色は、" \# RRGGBB" 形式で指定できます。強調色が混在している場合は空の文字列、または強調色なしの場合は null になります。 * メモ * *: 既定の強調表示色のみが Office for Windows デスクトップで利用できます。 これらは、"黄"、"ライム"、"水色"、"ピンク"、"Blue"、"Red"、"DarkBlue"、"青"、"Green"、"紫"、"DarkRed"、"オリーブ"、"灰色"、"淡い灰色"、および "黒" です。 Windows デスクトップ版の Office でアドインを実行すると、フォントに適用すると、その他の色は最も近い色に変換されます。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'highlightColor: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Highlight selected text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to highlight the current selection.\n    selection.font.highlightColor = '#FFFF00'; // Yellow\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection has been highlighted.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: italic
  uid: word!Word.Font#italic:member
  package: word!
  fullName: italic
  summary: >-
    フォントが斜体かどうかを示す値を取得または設定します。 フォントが斜体の場合は true、それ以外の場合は false です。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'italic: boolean;'
    return:
      type: boolean
- name: name
  uid: word!Word.Font#name:member
  package: word!
  fullName: name
  summary: >-
    フォント名を表す値を取得または設定します。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Change the font name\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to change the current selection's font name.\n    selection.font.name = 'Arial';\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The font name has changed.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: size
  uid: word!Word.Font#size:member
  package: word!
  fullName: size
  summary: >-
    フォント サイズをポイント単位で表す値を取得または設定します。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'size: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Change the font size\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to change the current selection's font size.\n    selection.font.size = 20;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The font size has changed.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: strikeThrough
  uid: word!Word.Font#strikeThrough:member
  package: word!
  fullName: strikeThrough
  summary: >-
    フォントに取り消し線を表示するかどうかを示す値を取得または設定します。 フォントの書式が取り消し線付きのテキストである場合は true、それ以外の場合は false です。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'strikeThrough: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Strike format text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to strikethrough the font of the current selection.\n    selection.font.strikeThrough = true;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection now has a strikethrough.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: subscript
  uid: word!Word.Font#subscript:member
  package: word!
  fullName: subscript
  summary: >-
    フォントが下付き文字かどうかを示す値を取得または設定します。 フォントの書式が下付き文字である場合は true、それ以外の場合は false です。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'subscript: boolean;'
    return:
      type: boolean
- name: superscript
  uid: word!Word.Font#superscript:member
  package: word!
  fullName: superscript
  summary: >-
    フォントが上付き文字かどうかを示す値を取得または設定します。 フォントの書式が上付き文字である場合は true、それ以外の場合は false です。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'superscript: boolean;'
    return:
      type: boolean
- name: underline
  uid: word!Word.Font#underline:member
  package: word!
  fullName: underline
  summary: >-
    フォントの下線の種類を示す値を取得または設定します。 フォントに下線が付いていない場合は ' None '。


    \[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";'
    return:
      type: <xref uid="word!Word.UnderlineType:enum" /> | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Underline format text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to underline the current selection.\n    selection.font.underline = Word.UnderlineType.single;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection now has an underline style.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
methods:
- name: load(options)
  uid: word!Word.Font#load:member(1)
  package: word!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.FontLoadOptions): Word.Font;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
      type: <xref uid="word!Word.Interfaces.FontLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.Font#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Font;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Font#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Font;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: set(properties, options)
  uid: word!Word.Font#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Word.Font): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.FontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="word!Word.Interfaces.FontUpdateData:interface" />
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Font#set:member(2)
  package: word!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Font): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Font:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.Font#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の Word フォントオブジェクトは API オブジェクトですが、この `toJSON` メソッドはプレーンな JavaScript オブジェクトを返します (型は`Word.Interfaces.FontData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.FontData;'
    return:
      type: <xref uid="word!Word.Interfaces.FontData:interface" />
      description: ''
- name: track()
  uid: word!Word.Font#track:member(1)
  package: word!
  fullName: track()
  summary: ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。 この呼び出しは、の省略形です。 `context.trackedObjects.add(thisObject)`<!-- -->. 呼び出し間でこのオブジェクトを使用していて、 `.sync` "..." バッチの順次実行の外側で、プロパティの設定時またはオブジェクトのメソッドの呼び出し時に "InvalidObjectPath" エラーが発生する場合は、オブジェクトを最初に作成したときに、そのオブジェクトを追跡対象のオブジェクトコレクションに追加する必要がありました。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: untrack()
  uid: word!Word.Font#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: 前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。 この呼び出しは、の短縮形です。 `context.trackedObjects.remove(thisObject)`<!-- -->. 追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。 メモリリリースを有効にするには、を呼び出す必要があり `context.sync()` ます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 5e6e8a12ade089beb219d1ba8f1f9cb699cd2c4a
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49181705"
