### YamlMime:TSType
name: Word.Document
uid: word!Word.Document:class
package: word!
fullName: Word.Document
summary: >-
  Document オブジェクトは、最上位レベルのオブジェクトです。ドキュメント オブジェクトには、1 つ以上のセクション、コンテンツ コントロール、ドキュメントの内容を含む本文が含まれています。


  \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: body
  uid: word!Word.Document#body:member
  package: word!
  fullName: body
  summary: >-
    ドキュメントの本文オブジェクトを取得します。 本文は、ヘッダー、フッター、脚注、テキストボックスなどを除いたテキストです。 読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly body: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: contentControls
  uid: word!Word.Document#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    ドキュメント内のコンテンツ コントロール オブジェクトのコレクションを取得します。 これには、ドキュメントの本文のコンテンツ コントロール、ヘッダー、フッター、テキスト ボックスなどが含まれます。 読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.Document#context:member
  package: word!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスがホスト アプリケーションのプロセスOfficeに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: customXmlParts
  uid: word!Word.Document#customXmlParts:member
  package: word!
  fullName: customXmlParts
  summary: >-
    ドキュメント内のカスタム XML パーツを取得します。 読み取り専用です。


    \[[API セット: WordApi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly customXmlParts: Word.CustomXmlPartCollection;'
    return:
      type: <xref uid="word!Word.CustomXmlPartCollection:class" />
- name: onContentControlAdded
  uid: word!Word.Document#onContentControlAdded:member
  package: word!
  fullName: onContentControlAdded
  summary: >-
    コンテンツ コントロールが追加された際に発生します。 ハンドラーで context.sync() を実行して、新しいコンテンツ コントロールのプロパティを取得します。


    \[[API セット: WordApi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly onContentControlAdded: OfficeExtension.EventHandlers<Word.ContentControlEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="word!Word.ContentControlEventArgs:interface" />&gt;
- name: properties
  uid: word!Word.Document#properties:member
  package: word!
  fullName: properties
  summary: >-
    ドキュメントのプロパティを取得します。 読み取り専用です。


    \[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly properties: Word.DocumentProperties;'
    return:
      type: <xref uid="word!Word.DocumentProperties:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/30-properties/get-built-in-properties.yaml\nawait Word.run(async (context) => {\n    let builtInProperties = context.document.properties;\n    builtInProperties.load(\"*\"); // Let's get all!\n\n    await context.sync();\n    console.log(JSON.stringify(builtInProperties, null, 4));\n});\n```"
- name: saved
  uid: word!Word.Document#saved:member
  package: word!
  fullName: saved
  summary: >-
    ドキュメント内の変更が保存されているかどうかを示します。値 true は、ドキュメントが保存されてから変更されていないことを示します。読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly saved: boolean;'
    return:
      type: boolean
- name: sections
  uid: word!Word.Document#sections:member
  package: word!
  fullName: sections
  summary: >-
    ドキュメント内のセクション オブジェクトのコレクションを取得します。 読み取り専用です。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly sections: Word.SectionCollection;'
    return:
      type: <xref uid="word!Word.SectionCollection:class" />
- name: settings
  uid: word!Word.Document#settings:member
  package: word!
  fullName: settings
  summary: >-
    ドキュメント内のアドインの設定を取得します。 読み取り専用です。


    \[[API セット: WordApi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly settings: Word.SettingCollection;'
    return:
      type: <xref uid="word!Word.SettingCollection:class" />
methods:
- name: deleteBookmark(name)
  uid: word!Word.Document#deleteBookmark:member(1)
  package: word!
  fullName: deleteBookmark(name)
  summary: >-
    ブックマークが存在する場合は、そのブックマークをドキュメントから削除します。


    \[[API セット: WordApi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteBookmark(name: string): void;'
    parameters:
    - id: name
      description: Required. ブックマーク名を指定します。大文字と小文字は区別されません。
      type: string
    return:
      type: void
      description: ''
- name: getBookmarkRange(name)
  uid: word!Word.Document#getBookmarkRange:member(1)
  package: word!
  fullName: getBookmarkRange(name)
  summary: >-
    ブックマークの範囲を取得します。 ブックマークが存在しない場合はエラーをスローします。


    \[[API セット: WordApi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getBookmarkRange(name: string): Word.Range;'
    parameters:
    - id: name
      description: Required. ブックマーク名を指定します。大文字と小文字は区別されません。
      type: string
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getBookmarkRangeOrNullObject(name)
  uid: word!Word.Document#getBookmarkRangeOrNullObject:member(1)
  package: word!
  fullName: getBookmarkRangeOrNullObject(name)
  summary: >-
    ブックマークの範囲を取得します。 ブックマークが存在しない場合は null オブジェクトを返します。


    \[[API セット: WordApi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getBookmarkRangeOrNullObject(name: string): Word.Range;'
    parameters:
    - id: name
      description: Required. ブックマーク名を指定します。大文字と小文字は区別されません。
      type: string
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getSelection()
  uid: word!Word.Document#getSelection:member(1)
  package: word!
  fullName: getSelection()
  summary: >-
    ドキュメントの現在の選択範囲を取得します。 複数選択はサポートされていません。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelection(): Word.Range;'
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    var textSample = 'This is an example of the insert text method. This is a method ' + \n        'which allows users to insert text into a selection. It can insert text into a ' +\n        'relative location or it can overwrite the current selection. Since the ' +\n        'getSelection method returns a range object, look up the range object documentation ' +\n        'for everything you can do with a selection.';\n    \n    // Create a range proxy object for the current selection.\n    var range = context.document.getSelection();\n    \n    // Queue a command to insert text at the end of the selection.\n    range.insertText(textSample, Word.InsertLocation.end);\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Inserted the text at the end of the selection.');\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: word!Word.Document#load:member(1)
  package: word!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.DocumentLoadOptions): Word.Document;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティのオプションを提供します。
      type: <xref uid="word!Word.Interfaces.DocumentLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Document:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n    \n    // Queue a command to load content control properties.\n    context.load(thisDocument, 'contentControls/id, contentControls/text, contentControls/tag');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (thisDocument.contentControls.items.length !== 0) {\n            for (var i = 0; i < thisDocument.contentControls.items.length; i++) {\n                console.log(thisDocument.contentControls.items[i].id);\n                console.log(thisDocument.contentControls.items[i].text);\n                console.log(thisDocument.contentControls.items[i].tag);\n            }\n        } else {\n            console.log('No content controls in this document.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNames)
  uid: word!Word.Document#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Document;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマ区切りの文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Document#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Document;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は読み込むプロパティを指定するコンマ区切りの文字列で、読み込むナビゲーション プロパティを指定するコンマ区切 `propertyNamesAndPaths.expand` りの文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
- name: save()
  uid: word!Word.Document#save:member(1)
  package: word!
  fullName: save()
  summary: >-
    ドキュメントを保存します。 文書が以前に保存されていない場合は、Word の既定のファイルの名前付け規則が使用されます。


    \[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'save(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the document.\n    var thisDocument = context.document;\n\n    // Queue a command to load the document save state (on the saved property).\n    context.load(thisDocument, 'saved');    \n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (thisDocument.saved === false) {\n            // Queue a command to save this document.\n            thisDocument.save();\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Saved the document');\n            });\n        } else {\n            console.log('The document has not changed since the last save.');\n        }\n    });  \n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: set(properties, options)
  uid: word!Word.Document#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: オブジェクトの複数のプロパティを同時に設定します。 適切なプロパティを持つプレーン オブジェクト、または同じ型の別の API オブジェクトを渡す方法があります。
  remarks: >-
    このメソッドには、次の追加署名があります。


    `set(properties: Word.Document): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティと同型に構造化されたプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="word!Word.Interfaces.DocumentUpdateData:interface" />
    - id: options
      description: プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Document#set:member(2)
  package: word!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトの複数のプロパティを同時に設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Document): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Document:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.Document#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: API オブジェクトが渡された場合に、より有用な出力を提供するために `toJSON()` JavaScript メソッドをオーバーライドします。 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->に渡されるオブジェクトのメソッドを呼び `toJSON` 出します)。ument オブジェクトWord.Doc元のオブジェクトが API オブジェクトであるのに対し、このメソッドはプレーンな `toJSON` JavaScript オブジェクト (次のように入力) を返します。 `Word.Interfaces.DocumentData`<!-- -->) を返します。このコピーには、元のオブジェクトから読み込まれた子プロパティの浅いコピーが含まれます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.DocumentData;'
    return:
      type: <xref uid="word!Word.Interfaces.DocumentData:interface" />
      description: ''
- name: track()
  uid: word!Word.Document#track:member(1)
  package: word!
  fullName: track()
  summary: ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。 この呼び出しは、 `context.trackedObjects.add(thisObject)`<!-- -->. このオブジェクトを呼び出し間で使用し、".run" バッチのシーケンシャル実行の外部で、プロパティの設定またはオブジェクトのメソッドの呼び出し時に "InvalidObjectPath" エラーが発生する場合は、オブジェクトが最初に作成された時点で、追跡対象オブジェクト コレクションにオブジェクトを追加する必要がありました。 `.sync`
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Document;'
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
- name: untrack()
  uid: word!Word.Document#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: 前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。 この呼び出しは、 `context.trackedObjects.remove(thisObject)`<!-- -->. 追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。 メモリ解放が有効に `context.sync()` される前に、呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Document;'
    return:
      type: <xref uid="word!Word.Document:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 31a326e6a39d266c2d07020eb68205e970cca4fc
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49859405"
