### YamlMime:UniversalReference
ms.openlocfilehash: 4ec604434ffbae02c99cb4a027cdec774427dfc8
ms.sourcegitcommit: 2dcedf6deec4167dca476a42dad411e28cc92a97
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 01/23/2019
ms.locfileid: "29385393"
items:
- uid: word.Word.ContentControl
  summary: >-
    <span data-ttu-id="87a2b-p101">コンテンツ コントロールを表します。コンテンツ コントロールは、特定の種類のコンテンツのコンテナーとして機能し、ドキュメント内で境界線で区切られ、ラベルが付いた領域になる場合もあります。個々のコンテンツ コントロールには、画像、表、書式設定されたテキストの段落などの内容が含まれていることがあります。現時点では、リッチ テキスト コンテンツ コントロールのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p101">Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text content controls are supported.</span></span>


    <span data-ttu-id="87a2b-105">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.ContentControl
  fullName: Word.ContentControl
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.ContentControl.appearance
  - word.Word.ContentControl.cannotDelete
  - word.Word.ContentControl.cannotEdit
  - word.Word.ContentControl.clear
  - word.Word.ContentControl.color
  - word.Word.ContentControl.contentControls
  - word.Word.ContentControl.context
  - word.Word.ContentControl.delete
  - word.Word.ContentControl.font
  - word.Word.ContentControl.getHtml
  - word.Word.ContentControl.getOoxml
  - word.Word.ContentControl.getRange
  - word.Word.ContentControl.getTextRanges
  - word.Word.ContentControl.id
  - word.Word.ContentControl.inlinePictures
  - word.Word.ContentControl.insertBreak
  - word.Word.ContentControl.insertFileFromBase64
  - word.Word.ContentControl.insertHtml
  - word.Word.ContentControl.insertInlinePictureFromBase64
  - word.Word.ContentControl.insertOoxml
  - word.Word.ContentControl.insertParagraph
  - word.Word.ContentControl.insertTable
  - word.Word.ContentControl.insertText
  - word.Word.ContentControl.lists
  - word.Word.ContentControl.load
  - word.Word.ContentControl.paragraphs
  - word.Word.ContentControl.parentBody
  - word.Word.ContentControl.parentContentControl
  - word.Word.ContentControl.parentContentControlOrNullObject
  - word.Word.ContentControl.parentTable
  - word.Word.ContentControl.parentTableCell
  - word.Word.ContentControl.parentTableCellOrNullObject
  - word.Word.ContentControl.parentTableOrNullObject
  - word.Word.ContentControl.placeholderText
  - word.Word.ContentControl.removeWhenEdited
  - word.Word.ContentControl.search
  - word.Word.ContentControl.select
  - word.Word.ContentControl.split
  - word.Word.ContentControl.style
  - word.Word.ContentControl.styleBuiltIn
  - word.Word.ContentControl.subtype
  - word.Word.ContentControl.tables
  - word.Word.ContentControl.tag
  - word.Word.ContentControl.text
  - word.Word.ContentControl.title
  - word.Word.ContentControl.toJSON
  - word.Word.ContentControl.track
  - word.Word.ContentControl.type
  - word.Word.ContentControl.untrack
- uid: word.Word.ContentControl.appearance
  summary: >-
    <span data-ttu-id="87a2b-106">取得または、コンテンツ コントロールの外観を設定します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-106">Gets or sets the appearance of the content control.</span></span> <span data-ttu-id="87a2b-107">値 'BoundingBox'、'のタグ' または '非表示' を使用できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-107">The value can be 'BoundingBox', 'Tags', or 'Hidden'.</span></span>


    <span data-ttu-id="87a2b-108">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-108">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: appearance
  fullName: appearance
  langs:
  - typeScript
  type: property
  syntax:
    content: 'appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";'
    return:
      type:
      - Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden"
- uid: word.Word.ContentControl.cannotDelete
  summary: >-
    <span data-ttu-id="87a2b-p103">ユーザーがコンテンツ コントロールを削除できるかどうかを示す値を取得または設定します。removeWhenEdited と同時に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p103">Gets or sets a value that indicates whether the user can delete the content control. Mutually exclusive with removeWhenEdited.</span></span>


    <span data-ttu-id="87a2b-111">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-111">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: cannotDelete
  fullName: cannotDelete
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cannotDelete: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.ContentControl.cannotEdit
  summary: >-
    <span data-ttu-id="87a2b-112">ユーザーがコンテンツ コントロールのコンテンツを編集できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-112">Gets or sets a value that indicates whether the user can edit the contents of the content control.</span></span>


    <span data-ttu-id="87a2b-113">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: cannotEdit
  fullName: cannotEdit
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cannotEdit: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.ContentControl.clear
  summary: >-
    <span data-ttu-id="87a2b-p104">コンテンツ コントロールの内容をクリアします。ユーザーは、消去された内容を元に戻す操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p104">Clears the contents of the content control. The user can perform the undo operation on the cleared content.</span></span>


    <span data-ttu-id="87a2b-116">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-117\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-117\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to clear the contents of the first content control.\n            contentControls.items[0].clear();\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControl.color
  summary: >-
    <span data-ttu-id="87a2b-118">コンテンツ コントロールの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-118">Gets or sets the color of the content control.</span></span> <span data-ttu-id="87a2b-119">色が指定された '\#RRGGBB' の書式を設定または色の名前を使用しています。</span><span class="sxs-lookup"><span data-stu-id="87a2b-119">Color is specified in '\#RRGGBB' format or by using the color name.</span></span>


    <span data-ttu-id="87a2b-120">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.contentControls
  summary: >-
    <span data-ttu-id="87a2b-p106">コンテンツ コントロールのコンテンツ コントロール オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p106">Gets the collection of content control objects in the content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-123">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: contentControls
  fullName: contentControls
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type:
      - word.Word.ContentControlCollection
- uid: word.Word.ContentControl.context
  summary: <span data-ttu-id="87a2b-124">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="87a2b-124">The request context associated with the object.</span></span> <span data-ttu-id="87a2b-125">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-125">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.ContentControl.delete
  summary: >-
    <span data-ttu-id="87a2b-p108">コンテンツ コントロールとそのコンテンツを削除します。keepContent が true の場合、コンテンツは削除されません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p108">Deletes the content control and its content. If keepContent is set to true, the content is not deleted.</span></span>


    <span data-ttu-id="87a2b-128">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-128">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: delete(keepContent)
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(keepContent: boolean): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-129\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-129\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to delete the first content control. The\n            // contents will remain in the document.\n            contentControls.items[0].delete(true);\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: keepContent
      description: <span data-ttu-id="87a2b-p109">必須。コンテンツ コントロールを使用してコンテンツを削除する必要があるかどうかを示します。keepContent が true の場合、コンテンツは削除されません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p109">Required. Indicates whether the content should be deleted with the content control. If keepContent is set to true, the content is not deleted.</span></span>
      type:
      - boolean
- uid: word.Word.ContentControl.font
  summary: >-
    <span data-ttu-id="87a2b-p110">コンテンツ コントロールのテキストの書式設定を取得します。これを使用して、フォント名、サイズ、色、およびその他のプロパティを取得および設定します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p110">Gets the text format of the content control. Use this to get and set font name, size, color, and other properties. Read-only.</span></span>


    <span data-ttu-id="87a2b-136">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type:
      - word.Word.Font
- uid: word.Word.ContentControl.getHtml
  summary: >-
    <span data-ttu-id="87a2b-137">コンテンツ コントロール オブジェクトの HTML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-137">Gets an HTML representation of the content control object.</span></span> <span data-ttu-id="87a2b-138">Web ページまたは HTML ビューアーで表示されると、書式設定されますの文書の書式設定の閉じるが、正確ではなく一致。</span><span class="sxs-lookup"><span data-stu-id="87a2b-138">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="87a2b-139">このメソッドは、別のプラットフォーム (Windows、Mac、Word のオンラインなど) で、同じドキュメントの正確な同じ HTML を返しません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-139">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="87a2b-140">使用する必要があります正確な再現性、またはコンシステンシ ・ プラットフォーム間で、`ContentControl.getOoxml()`と、返された XML を HTML に変換します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-140">If you need exact fidelity, or consistency across platforms, use `ContentControl.getOoxml()` and convert the returned XML to HTML.</span></span>


    <span data-ttu-id="87a2b-141">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getHtml()
  fullName: getHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-142\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-142\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection that contains a specific tag.\n    var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');\n    \n    // Queue a command to load the tag property for all of content controls. \n    context.load(contentControlsWithTag, 'tag');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTag.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the HTML contents of the first content control.\n            var html = contentControlsWithTag.items[0].getHtml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control HTML: ' + html.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControl.getOoxml
  summary: >-
    <span data-ttu-id="87a2b-143">コンテンツ コントロール オブジェクトの Office Open XML (OOXML) 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-143">Gets the Office Open XML (OOXML) representation of the content control object.</span></span>


    <span data-ttu-id="87a2b-144">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-144">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getOoxml()
  fullName: getOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-145\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-145\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the OOXML contents of the first content control.\n            var ooxml = contentControls.items[0].getOoxml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control OOXML: ' + ooxml.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: word.Word.ContentControl.getRange
  summary: >-
    <span data-ttu-id="87a2b-146">範囲として、コンテンツ コントロール全体、あるいはコンテンツ コントロールの開始点または終了点を取得します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-146">Gets the whole content control, or the starting or ending point of the content control, as a range.</span></span>


    <span data-ttu-id="87a2b-147">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-147">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getRange(rangeLocation)
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: rangeLocation
      description: <span data-ttu-id="87a2b-148">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87a2b-148">Optional.</span></span> <span data-ttu-id="87a2b-149">範囲の場所は、''、または 'コンテンツ'、'全体' 'の前に'、'開始'、'End' にすることができます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-149">The range location can be 'Whole', 'Before', 'Start', 'End', 'After', or 'Content'.</span></span>
      type:
      - word.Word.RangeLocation
- uid: word.Word.ContentControl.getTextRanges
  summary: >-
    <span data-ttu-id="87a2b-150">句読点やその他の終了のマークを使用して、コンテンツ コントロールのテキスト範囲を取得します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-150">Gets the text ranges in the content control by using punctuation marks and/or other ending marks.</span></span>


    <span data-ttu-id="87a2b-151">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-151">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: getTextRanges(endingMarks, trimSpacing)
  fullName: getTextRanges
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: ''
    parameters:
    - id: endingMarks
      description: <span data-ttu-id="87a2b-p113">必須。文字列配列としての句読点と他の終了記号、またはそのいずれか。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p113">Required. The punctuation marks and/or other ending marks as an array of strings.</span></span>
      type:
      - string[]
    - id: trimSpacing
      description: <span data-ttu-id="87a2b-154">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87a2b-154">Optional.</span></span> <span data-ttu-id="87a2b-155">開始と範囲のコレクションに返される範囲の末尾にある空白文字 (空白、タブ、段区切り、および末尾の段落記号) をトリムするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-155">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="87a2b-156">既定値の範囲のコレクションの開始時と、範囲の末尾の空白文字が含まれていることを示します</span><span class="sxs-lookup"><span data-stu-id="87a2b-156">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.ContentControl.id
  summary: >-
    <span data-ttu-id="87a2b-p115">コンテンツ コントロールの識別子を表す整数値を取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p115">Gets an integer that represents the content control identifier. Read-only.</span></span>


    <span data-ttu-id="87a2b-159">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-159">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: word.Word.ContentControl.inlinePictures
  summary: >-
    <span data-ttu-id="87a2b-p116">コンテンツ コントロールに含まれる inlinePicture オブジェクトのコレクションを取得します。コレクションに浮動イメージは含まれません。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p116">Gets the collection of inlinePicture objects in the content control. The collection does not include floating images. Read-only.</span></span>


    <span data-ttu-id="87a2b-163">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-163">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: inlinePictures
  fullName: inlinePictures
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type:
      - word.Word.InlinePictureCollection
- uid: word.Word.ContentControl.insertBreak
  summary: >-
    <span data-ttu-id="87a2b-164">メイン文書内の指定位置に改行を挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-164">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="87a2b-165">'開始'、'終了'、'' か '' insertLocation を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-165">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="87a2b-166">このメソッドは、'RichTextTable'、'RichTextTableRow' および 'RichTextTableCell' のコンテンツ コントロールを使用できません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-166">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>


    <span data-ttu-id="87a2b-167">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-167">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertBreak(breakType, insertLocation)
  fullName: insertBreak
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-168\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-168\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a commmand to load the id property for all of content controls. \n    context.load(contentControls, 'id');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion. We now will have \n    // access to the content control collection.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a page break after the first content control. \n            contentControls.items[0].insertBreak('page', \"After\");\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion. \n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a page break after the first content control.');    \n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: breakType
      description: <span data-ttu-id="87a2b-169">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-169">Required.</span></span> <span data-ttu-id="87a2b-170">区切りの種類です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-170">Type of break.</span></span>
      type:
      - word.Word.BreakType
    - id: insertLocation
      description: <span data-ttu-id="87a2b-171">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-171">Required.</span></span> <span data-ttu-id="87a2b-172">'開始'、'終了'、'' か '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-172">The value can be 'Start', 'End', 'Before', or 'After'.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertFileFromBase64
  summary: >-
    <span data-ttu-id="87a2b-173">指定した位置にコンテンツ コントロールをドキュメントに挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-173">Inserts a document into the content control at the specified location.</span></span> <span data-ttu-id="87a2b-174">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-174">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="87a2b-175">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-175">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertFileFromBase64(base64File, insertLocation)
  fullName: insertFileFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-176\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-176\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put HTML into the contents of the first content control.\n            contentControls.items[0].insertHtml(\n                '<strong>HTML content inserted into the content control.</strong>',\n                'Start');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted HTML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: base64File
      description: <span data-ttu-id="87a2b-p121">必須。.docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p121">Required. The base64 encoded content of a .docx file.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="87a2b-179">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-179">Required.</span></span> <span data-ttu-id="87a2b-180">値 '置換'、'開始' または '終了' を使用できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-180">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="87a2b-181">[置換] は、'RichTextTable' と 'RichTextTableRow' のコンテンツ コントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-181">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertHtml
  summary: >-
    <span data-ttu-id="87a2b-182">指定した位置にコンテンツ コントロールに HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-182">Inserts HTML into the content control at the specified location.</span></span> <span data-ttu-id="87a2b-183">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-183">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="87a2b-184">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-184">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertHtml(html, insertLocation)
  fullName: insertHtml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: html
      description: <span data-ttu-id="87a2b-p124">必須。コンテンツ コントロールに挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p124">Required. The HTML to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="87a2b-187">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-187">Required.</span></span> <span data-ttu-id="87a2b-188">値 '置換'、'開始' または '終了' を使用できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-188">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="87a2b-189">[置換] は、'RichTextTable' と 'RichTextTableRow' のコンテンツ コントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-189">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertInlinePictureFromBase64
  summary: >-
    <span data-ttu-id="87a2b-190">行内オブジェクトを指定した位置にコンテンツ コントロールに挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-190">Inserts an inline picture into the content control at the specified location.</span></span> <span data-ttu-id="87a2b-191">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-191">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="87a2b-192">\[[API セット: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-192">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  fullName: insertInlinePictureFromBase64
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    return:
      type:
      - word.Word.InlinePicture
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-193\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-193\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put OOXML into the contents of the first content control.\n            contentControls.items[0].insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", \"End\");\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted OOXML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n```"
    parameters:
    - id: base64EncodedImage
      description: <span data-ttu-id="87a2b-p127">必須。コンテンツ コントロールに挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p127">Required. The base64 encoded image to be inserted in the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="87a2b-196">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-196">Required.</span></span> <span data-ttu-id="87a2b-197">値 '置換'、'開始' または '終了' を使用できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-197">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="87a2b-198">[置換] は、'RichTextTable' と 'RichTextTableRow' のコンテンツ コントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-198">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertOoxml
  summary: >-
    <span data-ttu-id="87a2b-199">OOXML を指定した位置にコンテンツ コントロールに挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-199">Inserts OOXML into the content control at the specified location.</span></span> <span data-ttu-id="87a2b-200">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-200">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="87a2b-201">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-201">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertOoxml(ooxml, insertLocation)
  fullName: insertOoxml
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: ''
    parameters:
    - id: ooxml
      description: <span data-ttu-id="87a2b-p130">必須。コンテンツ コントロールに挿入する OOXML。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p130">Required. The OOXML to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="87a2b-204">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-204">Required.</span></span> <span data-ttu-id="87a2b-205">値 '置換'、'開始' または '終了' を使用できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-205">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="87a2b-206">[置換] は、'RichTextTable' と 'RichTextTableRow' のコンテンツ コントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-206">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertParagraph
  summary: >-
    <span data-ttu-id="87a2b-207">指定した位置に段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-207">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="87a2b-208">'開始'、'終了'、'' か '' insertLocation を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-208">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>


    <span data-ttu-id="87a2b-209">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-209">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertParagraph(paragraphText, insertLocation)
  fullName: insertParagraph
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-210\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-210\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a paragraph after the first content control. \n            contentControls.items[0].insertParagraph('Text of the inserted paragraph.', 'After');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a paragraph after the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: paragraphText
      description: <span data-ttu-id="87a2b-p133">必須。挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p133">Required. The paragraph text to be inserted.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="87a2b-213">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-213">Required.</span></span> <span data-ttu-id="87a2b-214">'開始'、'終了'、'' か '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-214">The value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="87a2b-215">'' の前後に '' 'RichTextTable' では使用できません、'RichTextTableRow' と 'RichTextTableCell' のコンテンツを制御します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-215">'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.insertTable
  summary: >-
    <span data-ttu-id="87a2b-216">または、コンテンツ コントロールは、指定した数の行と列を持つテーブルを挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-216">Inserts a table with the specified number of rows and columns into, or next to, a content control.</span></span> <span data-ttu-id="87a2b-217">'開始'、'終了'、'' か '' insertLocation を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-217">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>


    <span data-ttu-id="87a2b-218">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-218">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertTable(rowCount, columnCount, insertLocation, values)
  fullName: insertTable
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    return:
      type:
      - Word.Table
      description: ''
    parameters:
    - id: rowCount
      description: <span data-ttu-id="87a2b-p136">必須。表の行数。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p136">Required. The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="87a2b-p137">必須。表の列数。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p137">Required. The number of columns in the table.</span></span>
      type:
      - number
    - id: insertLocation
      description: <span data-ttu-id="87a2b-223">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-223">Required.</span></span> <span data-ttu-id="87a2b-224">'開始'、'終了'、'' か '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-224">The value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="87a2b-225">'' の前後に '' 'RichTextTable' では使用できません、'RichTextTableRow' と 'RichTextTableCell' のコンテンツを制御します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-225">'Before' and 'After' cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>
      type:
      - Word.InsertLocation
    - id: values
      description: <span data-ttu-id="87a2b-226">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="87a2b-226">Optional 2D array.</span></span> <span data-ttu-id="87a2b-227">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-227">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: word.Word.ContentControl.insertText
  summary: >-
    <span data-ttu-id="87a2b-228">指定した位置にコンテンツ コントロールにテキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-228">Inserts text into the content control at the specified location.</span></span> <span data-ttu-id="87a2b-229">InsertLocation の値には、'置換'、'開始' または '終了' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-229">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>


    <span data-ttu-id="87a2b-230">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-230">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: insertText(text, insertLocation)
  fullName: insertText
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    return:
      type:
      - Word.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-231\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-231\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to replace text in the first content control. \n            contentControls.items[0].insertText('Replaced text in the first content control.', 'Replace');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Replaced text in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how to use the insertText method.\n// https://aka.ms/sillystorywordaddin\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="87a2b-p141">必須。コンテンツ コントロールに挿入する テキスト。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p141">Required. The text to be inserted in to the content control.</span></span>
      type:
      - string
    - id: insertLocation
      description: <span data-ttu-id="87a2b-234">必須です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-234">Required.</span></span> <span data-ttu-id="87a2b-235">値 '置換'、'開始' または '終了' を使用できます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-235">The value can be 'Replace', 'Start', or 'End'.</span></span> <span data-ttu-id="87a2b-236">[置換] は、'RichTextTable' と 'RichTextTableRow' のコンテンツ コントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-236">'Replace' cannot be used with 'RichTextTable' and 'RichTextTableRow' content controls.</span></span>
      type:
      - Word.InsertLocation
- uid: word.Word.ContentControl.lists
  summary: >-
    <span data-ttu-id="87a2b-p143">コンテンツ コントロールに含まれるリスト オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p143">Gets the collection of list objects in the content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-239">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-239">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: lists
  fullName: lists
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type:
      - word.Word.ListCollection
- uid: word.Word.ContentControl.load
  summary: <span data-ttu-id="87a2b-240">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="87a2b-240">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="87a2b-241">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="87a2b-241">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"87a2b-242\">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-242\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"87a2b-243\">`load(option?: { select?: string; expand?: string; }): Word.ContentControl`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-243\">`load(option?: { select?: string; expand?: string; }): Word.ContentControl` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"87a2b-244\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl`でコレクション型のみ使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-244\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl` - Only available on collection types.</span></span> <span data-ttu-id=\"87a2b-245\">前の署名に似ていますが。</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-245\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"87a2b-246\">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-246\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"87a2b-247\">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-247\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"87a2b-248\">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-248\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-249\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-249\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy range object for the current selection.\n    var range = context.document.getSelection();\n    \n    // Queue a commmand to create the content control.\n    var myContentControl = range.insertContentControl();\n    myContentControl.tag = 'Customer-Address';\n    myContentControl.title = ' has t';\n    myContentControl.style = 'Heading 2';\n    myContentControl.insertText('One Microsoft Way, Redmond, WA 98052', 'replace');\n    myContentControl.cannotEdit = true;\n    \n    // Queue a command to load the id property for the content control you created.\n    context.load(myContentControl, 'id');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Created content control with id: ' + myContentControl.id);\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Load all of the content control properties\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to load the properties on the first content control. \n            contentControls.items[0].load(  'appearance,' +\n                                            'cannotDelete,' +\n                                            'cannotEdit,' +\n                                            'id,' +\n                                            'placeHolderText,' +\n                                            'removeWhenEdited,' +\n                                            'title,' +\n                                            'text,' +\n                                            'type,' +\n                                            'style,' +\n                                            'tag,' +\n                                            'font/size,' +\n                                            'font/name,' +\n                                            'font/color');             \n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Property values of the first content control:' + \n                        '   ----- appearance: ' + contentControls.items[0].appearance + \n                        '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +\n                        '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +\n                        '   ----- color: ' + contentControls.items[0].color +\n                        '   ----- id: ' + contentControls.items[0].id +\n                        '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +\n                        '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +\n                        '   ----- title: ' + contentControls.items[0].title +\n                        '   ----- text: ' + contentControls.items[0].text +\n                        '   ----- type: ' + contentControls.items[0].type +\n                        '   ----- style: ' + contentControls.items[0].style +\n                        '   ----- tag: ' + contentControls.items[0].tag +\n                        '   ----- font size: ' + contentControls.items[0].font.size +\n                        '   ----- font name: ' + contentControls.items[0].font.name +\n                        '   ----- font color: ' + contentControls.items[0].font.color);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="87a2b-250">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="87a2b-250">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.ContentControl.paragraphs
  summary: >-
    <span data-ttu-id="87a2b-p146">コンテンツ コントロールにある Paragraph オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p146">Get the collection of paragraph objects in the content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-253">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-253">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
- uid: word.Word.ContentControl.parentBody
  summary: >-
    <span data-ttu-id="87a2b-p147">コンテンツ コントロールの親の本文を取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p147">Gets the parent body of the content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-256">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-256">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentBody
  fullName: parentBody
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type:
      - Word.Body
- uid: word.Word.ContentControl.parentContentControl
  summary: >-
    <span data-ttu-id="87a2b-p148">コンテンツ コントロールを含むコンテンツ コントロールを取得します。親コンテンツ コントロールがない場合、スローします。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p148">Gets the content control that contains the content control. Throws if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-260">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-260">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControl
  fullName: parentContentControl
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.ContentControl.parentContentControlOrNullObject
  summary: >-
    <span data-ttu-id="87a2b-p149">コンテンツ コントロールを含むコンテンツ コントロールを取得します。親コンテンツ コントロールがない場合は、null オブジェクトを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p149">Gets the content control that contains the content control. Returns a null object if there isn't a parent content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-264">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-264">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentContentControlOrNullObject
  fullName: parentContentControlOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
- uid: word.Word.ContentControl.parentTable
  summary: >-
    <span data-ttu-id="87a2b-p150">コンテンツ コントロールを含むテーブルを取得します。テーブルに含まれていない場合、スローします。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p150">Gets the table that contains the content control. Throws if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="87a2b-268">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-268">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTable
  fullName: parentTable
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.ContentControl.parentTableCell
  summary: >-
    <span data-ttu-id="87a2b-p151">コンテンツ コントロールを含むテーブル セルを取得します。テーブル セルに含まれていない場合、スローします。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p151">Gets the table cell that contains the content control. Throws if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="87a2b-272">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-272">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.ContentControl.parentTableCellOrNullObject
  summary: >-
    <span data-ttu-id="87a2b-p152">コンテンツ コントロールを含むテーブル セルを取得します。テーブル セルに含まれていない場合は、null オブジェクトを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p152">Gets the table cell that contains the content control. Returns a null object if it is not contained in a table cell. Read-only.</span></span>


    <span data-ttu-id="87a2b-276">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-276">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNullObject
  fullName: parentTableCellOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type:
      - Word.TableCell
- uid: word.Word.ContentControl.parentTableOrNullObject
  summary: >-
    <span data-ttu-id="87a2b-p153">コンテンツ コントロールを含むテーブルを取得します。テーブルに含まれていない場合は、null オブジェクトを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p153">Gets the table that contains the content control. Returns a null object if it is not contained in a table. Read-only.</span></span>


    <span data-ttu-id="87a2b-280">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-280">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: parentTableOrNullObject
  fullName: parentTableOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type:
      - Word.Table
- uid: word.Word.ContentControl.placeholderText
  summary: >-
    <span data-ttu-id="87a2b-p154">コンテンツ コントロールのプレースホルダー テキストを取得または設定します。コンテンツ コントロールが空の場合は、淡色のテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p154">Gets or sets the placeholder text of the content control. Dimmed text will be displayed when the content control is empty.</span></span>


    <span data-ttu-id="87a2b-283">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-283">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: placeholderText
  fullName: placeholderText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'placeholderText: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.removeWhenEdited
  summary: >-
    <span data-ttu-id="87a2b-p155">コンテンツ コントロールを編集後に削除できるかどうかを示す値を取得または設定します。cannotDelete と同時に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p155">Gets or sets a value that indicates whether the content control is removed after it is edited. Mutually exclusive with cannotDelete.</span></span>


    <span data-ttu-id="87a2b-286">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-286">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: removeWhenEdited
  fullName: removeWhenEdited
  langs:
  - typeScript
  type: property
  syntax:
    content: 'removeWhenEdited: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.ContentControl.search
  summary: >-
    <span data-ttu-id="87a2b-287">コンテンツ コントロール オブジェクトの範囲で指定した SearchOptions を使って検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-287">Performs a search with the specified SearchOptions on the scope of the content control object.</span></span> <span data-ttu-id="87a2b-288">検索結果は、range オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="87a2b-288">The search results are a collection of range objects.</span></span>


    <span data-ttu-id="87a2b-289">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: search(searchText, searchOptions)
  fullName: search
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    return:
      type:
      - word.Word.RangeCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-290\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-290\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to select the first content control.\n            contentControls.items[0].select();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Selected the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: searchText
      description: <span data-ttu-id="87a2b-p157">必須。検索テキスト。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p157">Required. The search text.</span></span>
      type:
      - string
    - id: searchOptions
      description: <span data-ttu-id="87a2b-p158">省略可能。検索のオプション。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p158">Optional. Options for the search.</span></span>
      type:
      - >-
        Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
- uid: word.Word.ContentControl.select
  summary: >-
    <span data-ttu-id="87a2b-p159">コンテンツ コントロールを選択します。その結果、選択肢にスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p159">Selects the content control. This causes Word to scroll to the selection.</span></span>


    <span data-ttu-id="87a2b-297">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-297">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: select(selectionMode)
  fullName: select
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: selectionMode
      description: <span data-ttu-id="87a2b-p160">省略可能。 選択モードは、'Select'、'Start'、'End' のいずれかになります。'Select' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p160">Optional. The selection mode can be 'Select', 'Start', or 'End'. 'Select' is the default.</span></span>
      type:
      - Word.SelectionMode
- uid: word.Word.ContentControl.split
  summary: >-
    <span data-ttu-id="87a2b-301">区切り記号を使用して、コンテンツ コントロールを子の範囲に分割します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-301">Splits the content control into child ranges by using delimiters.</span></span>


    <span data-ttu-id="87a2b-302">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-302">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)
  fullName: split
  langs:
  - typeScript
  type: method
  syntax:
    content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    return:
      type:
      - word.Word.RangeCollection
      description: ''
    parameters:
    - id: delimiters
      description: <span data-ttu-id="87a2b-p161">必須。文字列配列としての区切り記号。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p161">Required. The delimiters as an array of strings.</span></span>
      type:
      - string[]
    - id: multiParagraphs
      description: <span data-ttu-id="87a2b-305">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87a2b-305">Optional.</span></span> <span data-ttu-id="87a2b-306">返された子の範囲が複数の段落を扱うことができるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-306">Indicates whether a returned child range can cover multiple paragraphs.</span></span> <span data-ttu-id="87a2b-307">既定では段落の境界が区切り文字としても使用することを示します false を指定します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-307">Default is false which indicates that the paragraph boundaries are also used as delimiters.</span></span>
      type:
      - boolean
    - id: trimDelimiters
      description: <span data-ttu-id="87a2b-308">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87a2b-308">Optional.</span></span> <span data-ttu-id="87a2b-309">範囲のコレクションの範囲の区切り文字をトリムするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-309">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="87a2b-310">既定値の範囲のコレクションに返される範囲の区切り記号が含まれていることを示します</span><span class="sxs-lookup"><span data-stu-id="87a2b-310">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>
      type:
      - boolean
    - id: trimSpacing
      description: <span data-ttu-id="87a2b-311">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87a2b-311">Optional.</span></span> <span data-ttu-id="87a2b-312">開始と範囲のコレクションに返される範囲の末尾にある空白文字 (空白、タブ、段区切り、および末尾の段落記号) をトリムするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-312">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="87a2b-313">既定値の範囲のコレクションの開始時と、範囲の末尾の空白文字が含まれていることを示します</span><span class="sxs-lookup"><span data-stu-id="87a2b-313">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>
      type:
      - boolean
- uid: word.Word.ContentControl.style
  summary: >-
    <span data-ttu-id="87a2b-p165">コンテンツ コントロールのスタイル名を取得または設定します。カスタム スタイルとローカライズされたスタイルの名前には、このプロパティを使用します。ロケール間で移植可能な組み込みスタイルを使用するには、"styleBuiltIn" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p165">Gets or sets the style name for the content control. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>


    <span data-ttu-id="87a2b-317">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-317">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.styleBuiltIn
  summary: >-
    <span data-ttu-id="87a2b-p166">コンテンツ コントロールの組み込みスタイル名を取得または設定します。ロケール間で移植可能な組み込みスタイルの場合は、このプロパティを使用します。カスタム スタイルまたはローカライズされたスタイルの名前を使用するには、"style" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p166">Gets or sets the built-in style name for the content control. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>


    <span data-ttu-id="87a2b-321">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-321">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: styleBuiltIn
  fullName: styleBuiltIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type:
      - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- uid: word.Word.ContentControl.subtype
  summary: >-
    <span data-ttu-id="87a2b-p167">コンテンツ コントロールのサブタイプを取得します。リッチ テキスト コンテンツ コントロールの場合、サブタイプは、'RichTextInline'、'RichTextParagraphs'、'RichTextTableCell'、'RichTextTableRow' および 'RichTextTable' にできます。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p167">Gets the content control subtype. The subtype can be 'RichTextInline', 'RichTextParagraphs', 'RichTextTableCell', 'RichTextTableRow' and 'RichTextTable' for rich text content controls. Read-only.</span></span>


    <span data-ttu-id="87a2b-325">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-325">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: subtype
  fullName: subtype
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly subtype: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
    return:
      type:
      - Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
- uid: word.Word.ContentControl.tables
  summary: >-
    <span data-ttu-id="87a2b-p168">コンテンツ コントロールに含まれるテーブル オブジェクトのコレクションを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p168">Gets the collection of table objects in the content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-328">\[[API セット: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-328">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type:
      - Word.TableCollection
- uid: word.Word.ContentControl.tag
  summary: >-
    <span data-ttu-id="87a2b-329">コンテンツ コントロールを識別するタグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-329">Gets or sets a tag to identify a content control.</span></span>


    <span data-ttu-id="87a2b-330">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-330">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: tag
  fullName: tag
  langs:
  - typeScript
  type: property
  syntax:
    content: 'tag: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"87a2b-331\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"87a2b-331\">Examples</span></span>\n\n```typescript\n// Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags\nawait Word.run(async (context) => {\n    let paragraphs = context.document.body.paragraphs;\n    paragraphs.load(\"$none\"); //Don't need any properties, we'll just wrap each paragraph with a content control\n\n    await context.sync();\n\n    for (let i = 0; i < paragraphs.items.length; i++) {\n        let contentControl = paragraphs.items[i].insertContentControl();\n        // For even we tag \"even\"\n        if (i % 2 === 0) {\n            contentControl.tag = \"even\";\n        }\n\n        else {\n            contentControl.tag = \"odd\";\n        }\n    }\n    console.log(\"Content controls inserted: \" + paragraphs.items.length)\n\n    await context.sync();\n});\n\n```"
- uid: word.Word.ContentControl.text
  summary: >-
    <span data-ttu-id="87a2b-p169">コンテンツ コントロールのテキストを取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p169">Gets the text of the content control. Read-only.</span></span>


    <span data-ttu-id="87a2b-334">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-334">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.title
  summary: >-
    <span data-ttu-id="87a2b-335">コンテンツ コントロールのタイトルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-335">Gets or sets the title for a content control.</span></span>


    <span data-ttu-id="87a2b-336">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-336">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: title
  fullName: title
  langs:
  - typeScript
  type: property
  syntax:
    content: 'title: string;'
    return:
      type:
      - string
- uid: word.Word.ContentControl.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ContentControlData;'
    return:
      type:
      - word.Word.Interfaces.ContentControlData
      description: ''
- uid: word.Word.ContentControl.track
  summary: <span data-ttu-id="87a2b-337">周囲の文書内の変更に基づいて自動的に調整するオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-337">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="87a2b-338">この呼び出しは、context.trackedObjects.add(thisObject) の短縮です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-338">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="87a2b-339">プロパティを設定するときは、このオブジェクト".sync"の呼び出しで、".run"のバッチ、および get"InvalidObjectPath"エラーの連続実行範囲の外側を使用しているまたは追跡対象のオブジェクトにオブジェクトを追加するのには必要なオブジェクトのメソッドを呼び出して、コレクションのオブジェクトが最初に作成したときです。</span><span class="sxs-lookup"><span data-stu-id="87a2b-339">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
- uid: word.Word.ContentControl.type
  summary: >-
    <span data-ttu-id="87a2b-p171">コンテンツ コントロールの種類を取得します。現在、リッチ テキストのコンテンツ コントロールのみがサポートされています。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-p171">Gets the content control type. Only rich text content controls are supported currently. Read-only.</span></span>


    <span data-ttu-id="87a2b-343">\[[API セット: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87a2b-343">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
    return:
      type:
      - Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
- uid: word.Word.ContentControl.untrack
  summary: <span data-ttu-id="87a2b-344">リリース履歴管理されていた場合に、このオブジェクトに関連付けられているメモリです。</span><span class="sxs-lookup"><span data-stu-id="87a2b-344">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="87a2b-345">この呼び出しは、context.trackedObjects.remove(thisObject) の省略形です。</span><span class="sxs-lookup"><span data-stu-id="87a2b-345">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="87a2b-346">追跡の多くのオブジェクトを持つ速度が遅くなりますホスト アプリケーションでは、そのためできたら、追加するすべてのオブジェクトを解放するために注意してくださいそれらを使用します。</span><span class="sxs-lookup"><span data-stu-id="87a2b-346">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="87a2b-347">メモリの解放を有効にするには、"context.sync()"を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="87a2b-347">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.ContentControl;'
    return:
      type:
      - word.Word.ContentControl
      description: ''
