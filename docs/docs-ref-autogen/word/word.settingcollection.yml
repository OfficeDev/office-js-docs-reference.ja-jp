### YamlMime:UniversalReference
items:
  - uid: word.Word.SettingCollection
    summary: |-
      <span data-ttu-id="0db25-101">[設定](xref:word.Word.Setting)オブジェクトのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="0db25-101">Contains the collection of [Word.Setting](xref:word.Word.Setting) objects.</span></span>

      <span data-ttu-id="0db25-102">\[[API set: WORDAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0db25-102">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Word.SettingCollection
    fullName: Word.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.SettingCollection.add
      - word.Word.SettingCollection.context
      - word.Word.SettingCollection.deleteAll
      - word.Word.SettingCollection.getCount
      - word.Word.SettingCollection.getItem
      - word.Word.SettingCollection.getItemOrNullObject
      - word.Word.SettingCollection.items
      - word.Word.SettingCollection.load
      - word.Word.SettingCollection.load_1
      - word.Word.SettingCollection.load_2
      - word.Word.SettingCollection.toJSON
      - word.Word.SettingCollection.track
      - word.Word.SettingCollection.untrack
  - uid: word.Word.SettingCollection.add
    summary: |-
      <span data-ttu-id="0db25-103">新しい設定を作成するか、既存の設定を設定します。</span><span class="sxs-lookup"><span data-stu-id="0db25-103">Creates a new setting or sets an existing setting.</span></span>

      <span data-ttu-id="0db25-104">\[[API set: WORDAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0db25-104">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: any): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="0db25-105">必須です。</span><span class="sxs-lookup"><span data-stu-id="0db25-105">Required.</span></span> <span data-ttu-id="0db25-106">設定のキー。大文字と小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="0db25-106">The setting''s key, which is case-sensitive.</span></span>'
          type:
            - string
        - id: value
          description: <span data-ttu-id="0db25-107">必須です。</span><span class="sxs-lookup"><span data-stu-id="0db25-107">Required.</span></span> <span data-ttu-id="0db25-108">設定の値。</span><span class="sxs-lookup"><span data-stu-id="0db25-108">The setting's value.</span></span>
          type:
            - any
  - uid: word.Word.SettingCollection.context
    summary: <span data-ttu-id="0db25-109">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="0db25-109">The request context associated with the object.</span></span> <span data-ttu-id="0db25-110">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="0db25-110">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word.Word.SettingCollection.deleteAll
    summary: |-
      <span data-ttu-id="0db25-111">このアドインのすべての設定を削除します。</span><span class="sxs-lookup"><span data-stu-id="0db25-111">Deletes all settings in this add-in.</span></span>

      <span data-ttu-id="0db25-112">\[[API set: WORDAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0db25-112">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: deleteAll()
    fullName: deleteAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAll(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0db25-113">例</span><span class="sxs-lookup"><span data-stu-id="0db25-113">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.SettingCollection.getCount
    summary: |-
      <span data-ttu-id="0db25-114">設定の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="0db25-114">Gets the count of settings.</span></span>

      <span data-ttu-id="0db25-115">\[[API set: WORDAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0db25-115">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0db25-116">例</span><span class="sxs-lookup"><span data-stu-id="0db25-116">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.SettingCollection.getItem
    summary: |-
      <span data-ttu-id="0db25-117">キーによって設定オブジェクトを取得します。大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="0db25-117">Gets a setting object by its key, which is case-sensitive.</span></span> <span data-ttu-id="0db25-118">設定が存在しない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="0db25-118">Throws if the setting does not exist.</span></span>

      <span data-ttu-id="0db25-119">\[[API set: WORDAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0db25-119">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0db25-120">例</span><span class="sxs-lookup"><span data-stu-id="0db25-120">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to retrieve a setting.
              var startMonth = settings.getItem('startMonth');

              // Queue a command to load the setting.
              context.load(startMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(JSON.stringify(startMonth.value));
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });
              
              // Queue commands to retrieve settings.
              var startMonth = settings.getItemOrNullObject('startMonth');
              var endMonth = settings.getItemOrNullObject('endMonth');

              // Queue commands to load settings.
              context.load(startMonth);
              context.load(endMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
                 return context.sync().then(function () {
                     if (startMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(startMonth.value));
                     }
                      if (endMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(endMonth.value));
                     }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="0db25-121">設定オブジェクトを識別するキー。</span><span class="sxs-lookup"><span data-stu-id="0db25-121">The key that identifies the setting object.</span></span>
          type:
            - string
  - uid: word.Word.SettingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="0db25-122">キーによって設定オブジェクトを取得します。大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="0db25-122">Gets a setting object by its key, which is case-sensitive.</span></span> <span data-ttu-id="0db25-123">設定が存在しない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="0db25-123">Returns a null object if the setting does not exist.</span></span>

      <span data-ttu-id="0db25-124">\[[API set: WORDAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0db25-124">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="0db25-125">必須です。</span><span class="sxs-lookup"><span data-stu-id="0db25-125">Required.</span></span> <span data-ttu-id="0db25-126">設定オブジェクトを識別するキー。</span><span class="sxs-lookup"><span data-stu-id="0db25-126">The key that identifies the setting object.</span></span>
          type:
            - string
  - uid: word.Word.SettingCollection.items
    summary: <span data-ttu-id="0db25-127">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="0db25-127">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Setting[];'
      return:
        type:
          - 'Word.Setting[]'
  - uid: word.Word.SettingCollection.load
    summary: <span data-ttu-id="0db25-128">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="0db25-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0db25-129">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0db25-129">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="0db25-130">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0db25-130">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0db25-131">`load(option?: string | string[]): Word.SettingCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="0db25-131">`load(option?: string | string[]): Word.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0db25-132">`load(option?: { select?: string; expand?: string; }): Word.SettingCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="0db25-132">`load(option?: { select?: string; expand?: string; }): Word.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0db25-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SettingCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="0db25-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="0db25-134">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="0db25-134">It is similar to the preceding signature.</span></span> <span data-ttu-id="0db25-135">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="0db25-135">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0db25-136">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="0db25-136">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0db25-137">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="0db25-137">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
  - uid: word.Word.SettingCollection.load_1
    summary: <span data-ttu-id="0db25-138">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="0db25-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0db25-139">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0db25-139">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0db25-140">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="0db25-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.SettingCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: word.Word.SettingCollection.toJSON
    summary: '<span data-ttu-id="0db25-141">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0db25-141">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0db25-142">.</span><span class="sxs-lookup"><span data-stu-id="0db25-142"></span></span> <span data-ttu-id="0db25-143">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0db25-143"></span></span><!-- --><span data-ttu-id="0db25-144">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Word.SettingCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Word.Interfaces.SettingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="0db25-144">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id="0db25-145">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="0db25-145">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SettingCollectionData;'
      return:
        type:
          - Word.Interfaces.SettingCollectionData
        description: ''
  - uid: word.Word.SettingCollection.track
    summary: '<span data-ttu-id="0db25-146">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="0db25-146">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="0db25-147">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="0db25-147">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="0db25-148">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="0db25-148">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    isPreview: true
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
  - uid: word.Word.SettingCollection.untrack
    summary: '<span data-ttu-id="0db25-149">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="0db25-149">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="0db25-150">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="0db25-150">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="0db25-151">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="0db25-151">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="0db25-152">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0db25-152">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    isPreview: true
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''