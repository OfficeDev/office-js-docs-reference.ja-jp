### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="69fd9-101">Excel カスタム関数で使用できる、非同期、グローバル、永続的なキー値のストレージ。</span><span class="sxs-lookup"><span data-stu-id="69fd9-101">Asynchronous, global, and persistent key-value storage that can be used by Excel Custom Functions.</span></span>'
    remarks: |-
      <span data-ttu-id="69fd9-102">各アドインインスタンスには、ユーザーとそのデバイスに固有のストレージパーティションがあります。</span><span class="sxs-lookup"><span data-stu-id="69fd9-102">Each add-in instance has its own storage partition, unique to a user and their device.</span></span>

      <span data-ttu-id="69fd9-103">アドインごとに許可される既定の記憶領域の合計は 5 mb です。</span><span class="sxs-lookup"><span data-stu-id="69fd9-103">The default amount of total storage allowed per add-in is 5MB.</span></span>

      <span data-ttu-id="69fd9-104">次に示す各メソッドは、Promise オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-104">Each method listed below returns a Promise object.</span></span>
    isPreview: true
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="69fd9-105">すべてのキーを使用して Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-105">Returns a Promise with all keys.</span></span>
    isPreview: true
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: <span data-ttu-id="69fd9-106">キーに基づいてオブジェクトを取得し、終了時にコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-106">Retrieves an object based on a key and invokes a callback when finished.</span></span> <span data-ttu-id="69fd9-107">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-107">Returns a Promise.</span></span>
    isPreview: true
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: '<span data-ttu-id="69fd9-108">`keys`配列で指定されたキーのバッチをフェッチします。</span><span class="sxs-lookup"><span data-stu-id="69fd9-108">Fetches a batch of keys, specified in the `keys` array.</span></span> <span data-ttu-id="69fd9-109">キーが存在しない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-109">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: '<span data-ttu-id="69fd9-110">`keys`配列で指定されたキーのバッチを削除します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-110">Deletes a batch of keys, specified in the `keys` array.</span></span>'
    isPreview: true
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: '<span data-ttu-id="69fd9-111">複数のキーと値のペアを1つのバッチに格納します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-111">Stores multiple key-value pairs in one batch.</span></span> <span data-ttu-id="69fd9-112">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-112">Returns a Promise.</span></span> <span data-ttu-id="69fd9-113">キーが存在しない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-113">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: ''
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: <span data-ttu-id="69fd9-114">指定したキーの項目を削除し、終了時にコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-114">Removes an item for specified key and invokes a callback when finished.</span></span> <span data-ttu-id="69fd9-115">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-115">Returns a Promise.</span></span>
    isPreview: true
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: <span data-ttu-id="69fd9-116">キーと値のペアの値を割り当て、終了時にコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-116">Assigns the value for a key-value pair and invokes a callback when finished.</span></span> <span data-ttu-id="69fd9-117">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="69fd9-117">Returns a Promise.</span></span>
    isPreview: true
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: value
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'