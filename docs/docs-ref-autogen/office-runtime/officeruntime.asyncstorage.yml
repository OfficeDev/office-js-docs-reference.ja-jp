### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="2f685-101">非同期、グローバル、および永続的なキー値のストレージ。</span><span class="sxs-lookup"><span data-stu-id="2f685-101">Asynchronous, global, and persistent key-value storage.</span></span> <span data-ttu-id="2f685-102">格納域の制限は、ドメインごとに 10 MB で、複数のアドインによって共有される場合があります。</span><span class="sxs-lookup"><span data-stu-id="2f685-102">Storage limit is 10 MB per domain, which may be shared by multiple add-ins.</span></span>'
    remarks: '<span data-ttu-id="2f685-103">今後は使用されなくなります。代わりに、Office. Storage を使用してください。</span><span class="sxs-lookup"><span data-stu-id="2f685-103">Will be deprecated in the future, please use Office.Storage instead.</span></span>'
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="2f685-104">すべてのキーを取得し、終了時にコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2f685-104">Retrieves all keys and invokes a callback when finished.</span></span> <span data-ttu-id="2f685-105">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="2f685-105">Returns a Promise.</span></span>
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: '<span data-ttu-id="2f685-106">キーによってアイテムを取得し、コールバックを発行します。</span><span class="sxs-lookup"><span data-stu-id="2f685-106">Retrieves an item by key, then issues a callback.</span></span> <span data-ttu-id="2f685-107">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="2f685-107">Returns a Promise.</span></span>'
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="2f685-108">取得するキーの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="2f685-108">The name of the key to retrieve.</span></span> <span data-ttu-id="2f685-109">文字列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f685-109">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: <span data-ttu-id="2f685-110">返された result は文字列です。</span><span class="sxs-lookup"><span data-stu-id="2f685-110">Returned result is a string.</span></span>
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: <span data-ttu-id="2f685-111">ストレージから複数の項目を取得し、終了時にコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2f685-111">Retrieves multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="2f685-112">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="2f685-112">Returns a Promise.</span></span>
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="2f685-113">取得するアイテムのキー。</span><span class="sxs-lookup"><span data-stu-id="2f685-113">Keys of the items to be retrieved.</span></span> <span data-ttu-id="2f685-114">文字列の配列であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="2f685-114">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: <span data-ttu-id="2f685-115">ストレージから複数の項目を削除し、終了時にコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2f685-115">Removes multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="2f685-116">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="2f685-116">Returns a Promise.</span></span>
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="2f685-117">削除するアイテムのキー。</span><span class="sxs-lookup"><span data-stu-id="2f685-117">Keys of the items to be removed.</span></span> <span data-ttu-id="2f685-118">文字列の配列であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="2f685-118">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: <span data-ttu-id="2f685-119">複数のキーと値のペアを設定し、終了時にコールバックを起動します。</span><span class="sxs-lookup"><span data-stu-id="2f685-119">Sets multiple key-value pairs and invokes a callback when finished.</span></span> <span data-ttu-id="2f685-120">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="2f685-120">Returns a Promise.</span></span>
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: <span data-ttu-id="2f685-121">文字列の配列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f685-121">Must be arrays of strings.</span></span>
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: <span data-ttu-id="2f685-122">キーによってアイテムを削除し、終了時にコールバックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2f685-122">Removes items by key and invokes a callback when finished.</span></span> <span data-ttu-id="2f685-123">このメソッドは、要求されたキーと値を含むオブジェクトに解決される Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="2f685-123">It returns a Promise that resolves to an object containing the keys and values requested.</span></span>
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="2f685-124">削除するアイテムのキー。</span><span class="sxs-lookup"><span data-stu-id="2f685-124">The key of the item to be removed.</span></span> <span data-ttu-id="2f685-125">文字列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f685-125">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: <span data-ttu-id="2f685-126">新しいキーと値のペアをストレージに作成するか、既存のキーを新しい値で更新します。</span><span class="sxs-lookup"><span data-stu-id="2f685-126">Creates a new key-value pair in storage or updates an existing key with a new value.</span></span> <span data-ttu-id="2f685-127">Promise を返します。</span><span class="sxs-lookup"><span data-stu-id="2f685-127">Returns a Promise.</span></span>
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="2f685-128">キーと値のペアのキーの名前。</span><span class="sxs-lookup"><span data-stu-id="2f685-128">The name of the key for the key-value pair.</span></span> <span data-ttu-id="2f685-129">文字列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f685-129">Must be a string.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="2f685-130">値の名前。</span><span class="sxs-lookup"><span data-stu-id="2f685-130">The name of the value.</span></span> <span data-ttu-id="2f685-131">文字列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f685-131">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'