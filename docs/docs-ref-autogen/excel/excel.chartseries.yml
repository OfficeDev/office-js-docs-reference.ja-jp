### YamlMime:UniversalReference
ms.openlocfilehash: 3324652c4910ba29702959771a1e2958bb24fe64
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30097978"
items:
- uid: excel.Excel.ChartSeries
  summary: >-
    グラフのデータ系列を表します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ChartSeries
  fullName: Excel.ChartSeries
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartSeries.axisGroup
  - excel.Excel.ChartSeries.binOptions
  - excel.Excel.ChartSeries.boxwhiskerOptions
  - excel.Excel.ChartSeries.bubbleScale
  - excel.Excel.ChartSeries.chartType
  - excel.Excel.ChartSeries.context
  - excel.Excel.ChartSeries.dataLabels
  - excel.Excel.ChartSeries.delete
  - excel.Excel.ChartSeries.doughnutHoleSize
  - excel.Excel.ChartSeries.explosion
  - excel.Excel.ChartSeries.filtered
  - excel.Excel.ChartSeries.firstSliceAngle
  - excel.Excel.ChartSeries.format
  - excel.Excel.ChartSeries.gapWidth
  - excel.Excel.ChartSeries.gradientMaximumColor
  - excel.Excel.ChartSeries.gradientMaximumType
  - excel.Excel.ChartSeries.gradientMaximumValue
  - excel.Excel.ChartSeries.gradientMidpointColor
  - excel.Excel.ChartSeries.gradientMidpointType
  - excel.Excel.ChartSeries.gradientMidpointValue
  - excel.Excel.ChartSeries.gradientMinimumColor
  - excel.Excel.ChartSeries.gradientMinimumType
  - excel.Excel.ChartSeries.gradientMinimumValue
  - excel.Excel.ChartSeries.gradientStyle
  - excel.Excel.ChartSeries.hasDataLabels
  - excel.Excel.ChartSeries.invertColor
  - excel.Excel.ChartSeries.invertIfNegative
  - excel.Excel.ChartSeries.load
  - excel.Excel.ChartSeries.load_1
  - excel.Excel.ChartSeries.load_2
  - excel.Excel.ChartSeries.mapOptions
  - excel.Excel.ChartSeries.markerBackgroundColor
  - excel.Excel.ChartSeries.markerForegroundColor
  - excel.Excel.ChartSeries.markerSize
  - excel.Excel.ChartSeries.markerStyle
  - excel.Excel.ChartSeries.name
  - excel.Excel.ChartSeries.overlap
  - excel.Excel.ChartSeries.parentLabelStrategy
  - excel.Excel.ChartSeries.plotOrder
  - excel.Excel.ChartSeries.points
  - excel.Excel.ChartSeries.secondPlotSize
  - excel.Excel.ChartSeries.set
  - excel.Excel.ChartSeries.set_1
  - excel.Excel.ChartSeries.setBubbleSizes
  - excel.Excel.ChartSeries.setValues
  - excel.Excel.ChartSeries.setXAxisValues
  - excel.Excel.ChartSeries.showConnectorLines
  - excel.Excel.ChartSeries.showLeaderLines
  - excel.Excel.ChartSeries.showShadow
  - excel.Excel.ChartSeries.smooth
  - excel.Excel.ChartSeries.splitType
  - excel.Excel.ChartSeries.splitValue
  - excel.Excel.ChartSeries.toJSON
  - excel.Excel.ChartSeries.trendlines
  - excel.Excel.ChartSeries.varyByCategories
  - excel.Excel.ChartSeries.xerrorBars
  - excel.Excel.ChartSeries.yerrorBars
- uid: excel.Excel.ChartSeries.axisGroup
  summary: >-
    指定されたデータ系列のグループを返すか設定します。 読み取り/書き込み


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: axisGroup
  fullName: axisGroup
  langs:
  - typeScript
  type: property
  syntax:
    content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
    return:
      type:
      - Excel.ChartAxisGroup | "Primary" | "Secondary"
- uid: excel.Excel.ChartSeries.binOptions
  summary: >-
    ヒストグラムグラフおよびパレート図の bin オプションのみをカプセル化します。 読み取り専用です。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: binOptions
  fullName: binOptions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly binOptions: Excel.ChartBinOptions;'
    return:
      type:
      - excel.Excel.ChartBinOptions
- uid: excel.Excel.ChartSeries.boxwhiskerOptions
  summary: >-
    箱&amp;ひげ図のオプションをカプセル化します。 読み取り専用です。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: boxwhiskerOptions
  fullName: boxwhiskerOptions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly boxwhiskerOptions: Excel.ChartBoxwhiskerOptions;'
    return:
      type:
      - excel.Excel.ChartBoxwhiskerOptions
- uid: excel.Excel.ChartSeries.bubbleScale
  summary: >-
    指定されたグラフ グループ内のバブルのスケール ファクターを返すか設定します。 既定のサイズのパーセンテージに対応する 0 (ゼロ) から 300 までの整数値とすることができます。 バブル チャートにのみ適用されます。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: bubbleScale
  fullName: bubbleScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bubbleScale: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.chartType
  summary: >-
    グラフ系列の種類を表します。 詳細については、「ChartType」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: chartType
  fullName: chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.ChartSeries.context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartSeries.dataLabels
  summary: >-
    系列に含まれるすべてのデータ ラベルのコレクションを表します。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: dataLabels
  fullName: dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel.Excel.ChartSeries.delete
  summary: >-
    グラフ系列を削除します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n  const seriesCollection = sheet.charts.getItemAt(0).series;\n  seriesCollection.load(\"count\");\n  await context.sync();\n\n  if (seriesCollection.count > 0) {\n    const series = seriesCollection.getItemAt(0);\n\n    // Delete the first series.\n    series.delete();\n  }\n\n  await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.doughnutHoleSize
  summary: >-
    グラフ系列のドーナツの穴の大きさを表します。 ドーナツ グラフと doughnutExploded グラフでのみ有効です。 無効なグラフで無効な引数の例外をスローします。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: doughnutHoleSize
  fullName: doughnutHoleSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'doughnutHoleSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.explosion
  summary: >-
    円グラフまたはドーナツ グラフのスライス切り出し表示の値を返すか設定します。 切り出し表示は行われず、スライスの先端が円の中心と一致する場合、0 を返します。 読み取り/書き込み可能。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: explosion
  fullName: explosion
  langs:
  - typeScript
  type: property
  syntax:
    content: 'explosion: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.filtered
  summary: >-
    データ系列がフィルター処理されるかどうかを表すブール値。 等高線グラフには適用されません。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: filtered
  fullName: filtered
  langs:
  - typeScript
  type: property
  syntax:
    content: 'filtered: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.firstSliceAngle
  summary: >-
    円グラフまたはドーナツ グラフの最初のスライスの角度 (縦の中心から時計回りでの度数) を返すか設定します。 円グラフ、3-D 円グラフ、およびドーナツ グラフにのみ適用されます。 0 から 360 の範囲内で値を指定できます。 読み取り/書き込み


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: firstSliceAngle
  fullName: firstSliceAngle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'firstSliceAngle: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.format
  summary: >-
    グラフ の系列の書式設定を表します。これには塗りつぶしと線の書式設定などがあります。値の取得のみ可能です。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartSeriesFormat;'
    return:
      type:
      - excel.Excel.ChartSeriesFormat
- uid: excel.Excel.ChartSeries.gapWidth
  summary: >-
    グラフ系列間に設けられる間隔を表します。 横棒グラフと縦棒グラフ、および折れ線グラフと円グラフの特定のクラスに対してのみ有効です。 無効なグラフで無効な引数の例外をスローします。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: gapWidth
  fullName: gapWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gapWidth: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.gradientMaximumColor
  summary: >-
    領域マップグラフの系列の最大値の色を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMaximumColor
  fullName: gradientMaximumColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMaximumColor: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.gradientMaximumType
  summary: >-
    地域マップグラフの系列の最大値の種類を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMaximumType
  fullName: gradientMaximumType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMaximumType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
    return:
      type:
      - Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent"
- uid: excel.Excel.ChartSeries.gradientMaximumValue
  summary: >-
    地域マップグラフの系列の最大値を返すか設定します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMaximumValue
  fullName: gradientMaximumValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMaximumValue: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.gradientMidpointColor
  summary: >-
    地域マップのグラフ系列の中間値の色を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMidpointColor
  fullName: gradientMidpointColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMidpointColor: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.gradientMidpointType
  summary: >-
    地域マップのグラフ系列の中間値の種類を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMidpointType
  fullName: gradientMidpointType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMidpointType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
    return:
      type:
      - Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent"
- uid: excel.Excel.ChartSeries.gradientMidpointValue
  summary: >-
    地域マップのグラフ系列の中間値を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMidpointValue
  fullName: gradientMidpointValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMidpointValue: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.gradientMinimumColor
  summary: >-
    地域マップのグラフ系列の最小値の色を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMinimumColor
  fullName: gradientMinimumColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMinimumColor: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.gradientMinimumType
  summary: >-
    地域マップのグラフ系列の最小値の型を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMinimumType
  fullName: gradientMinimumType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMinimumType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
    return:
      type:
      - Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent"
- uid: excel.Excel.ChartSeries.gradientMinimumValue
  summary: >-
    地域マップのグラフ系列の最小値を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientMinimumValue
  fullName: gradientMinimumValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientMinimumValue: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.gradientStyle
  summary: >-
    地域マップグラフの系列のグラデーションのスタイルを設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: gradientStyle
  fullName: gradientStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientStyle: Excel.ChartGradientStyle | "TwoPhaseColor" | "ThreePhaseColor";'
    return:
      type:
      - Excel.ChartGradientStyle | "TwoPhaseColor" | "ThreePhaseColor"
- uid: excel.Excel.ChartSeries.hasDataLabels
  summary: >-
    系列のデータ ラベルの有無を表すブール値。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: hasDataLabels
  fullName: hasDataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasDataLabels: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.invertColor
  summary: >-
    系列内の負のデータ要素に対する塗りつぶしの色を示します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: invertColor
  fullName: invertColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'invertColor: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.invertIfNegative
  summary: >-
    true の場合、Microsoft Excel により、負の数値に対応する項目でパターンが反転されます。 読み取り/書き込み可能。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: invertIfNegative
  fullName: invertIfNegative
  langs:
  - typeScript
  type: property
  syntax:
    content: 'invertIfNegative: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.load
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。
  remarks: >-
    このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。


    `load(option?: string | string[]): Excel.ChartSeries`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。


    `load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ChartSeriesLoadOptions
- uid: excel.Excel.ChartSeries.load_1
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Rename the 1st series of Chart1 to \"New Series Name\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.series.getItemAt(0).name = \"New Series Name\";\n    return ctx.sync().then(function() {\n            console.log(\"Series1 Renamed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.ChartSeries.load_2
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ChartSeries.mapOptions
  summary: >-
    マップグラフのオプションをカプセル化します。 読み取り専用です。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: mapOptions
  fullName: mapOptions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly mapOptions: Excel.ChartMapOptions;'
    return:
      type:
      - excel.Excel.ChartMapOptions
- uid: excel.Excel.ChartSeries.markerBackgroundColor
  summary: >-
    グラフ系列のマーカー背景色を表します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerBackgroundColor
  fullName: markerBackgroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerBackgroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerForegroundColor
  summary: >-
    グラフ系列のマーカー前景色を表します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerForegroundColor
  fullName: markerForegroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerForegroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerSize
  summary: >-
    グラフ系列のマーカー サイズを表します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerSize
  fullName: markerSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerSize: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerStyle
  summary: >-
    グラフ系列のマーカー スタイルを表します。 詳細については、「ChartMarkerStyle」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: markerStyle
  fullName: markerStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
    return:
      type:
      - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.name
  summary: >-
    グラフのデータ系列の名前を表します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.overlap
  summary: >-
    横棒と縦棒の配置方法を指定します。 -100 から100までの値を指定できます。 2-D 横棒グラフと 2-D 縦棒グラフにのみ適用されます。 読み取り/書き込み可能。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: overlap
  fullName: overlap
  langs:
  - typeScript
  type: property
  syntax:
    content: 'overlap: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.parentLabelStrategy
  summary: >-
    ツリーマップグラフの系列の親ラベル戦略領域を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: parentLabelStrategy
  fullName: parentLabelStrategy
  langs:
  - typeScript
  type: property
  syntax:
    content: 'parentLabelStrategy: Excel.ChartParentLabelStrategy | "None" | "Banner" | "Overlapping";'
    return:
      type:
      - Excel.ChartParentLabelStrategy | "None" | "Banner" | "Overlapping"
- uid: excel.Excel.ChartSeries.plotOrder
  summary: >-
    グラフ グループ内でのグラフ系列のプロット順序を表します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: plotOrder
  fullName: plotOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotOrder: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.points
  summary: >-
    データ系列にあるすべてのポイントのコレクションを返します。値の取得のみ可能です。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: points
  fullName: points
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly points: Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
- uid: excel.Excel.ChartSeries.secondPlotSize
  summary: >-
    補助円グラフ付き円グラフまたは補助縦棒グラフ付き円グラフのセカンダリ セクションのサイズを、プライマリ セクションのサイズのパーセンテージとして返すか設定します。 5 から 200 の範囲内で値を指定できます。 読み取り/書き込み可能。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: secondPlotSize
  fullName: secondPlotSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'secondPlotSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.set
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Excel.ChartSeries): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type:
      - Interfaces.ChartSeriesUpdateData
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ChartSeries.set_1
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ChartSeries): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ChartSeries
- uid: excel.Excel.ChartSeries.setBubbleSizes
  summary: >-
    グラフ系列のバブル サイズを設定します。 バブル チャートにのみ適用されます。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setBubbleSizes(sourceData)
  fullName: setBubbleSizes(sourceData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setBubbleSizes(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: データ ソースに対応する Range オブジェクトです。
      type:
      - Range
- uid: excel.Excel.ChartSeries.setValues
  summary: >-
    グラフ系列の値を設定します。 散布図の場合、Y 軸の値を意味します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setValues(sourceData)
  fullName: setValues(sourceData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n  let seriesCollection = sheet.charts.getItemAt(0);\n  let rangeSelection = sheet.getRange(\"C2:C7\");\n  let xRangeSelection = sheet.getRange(\"A1:A7\");\n\n  // Add a series.\n  let newSeries = seriesCollection.series.add(\"Qtr2\");\n  newSeries.setValues(rangeSelection);\n  newSeries.setXAxisValues(xRangeSelection);\n\n  await context.sync();\n});\n```"
    parameters:
    - id: sourceData
      description: データ ソースに対応する Range オブジェクトです。
      type:
      - Range
- uid: excel.Excel.ChartSeries.setXAxisValues
  summary: >-
    グラフ系列の X 軸の値を設定します。 散布図にのみ適用されます。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: setXAxisValues(sourceData)
  fullName: setXAxisValues(sourceData)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXAxisValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: データ ソースに対応する Range オブジェクトです。
      type:
      - Range
- uid: excel.Excel.ChartSeries.showConnectorLines
  summary: >-
    ウォーターフォール図にコネクタ線が表示される場合に返すか設定します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: showConnectorLines
  fullName: showConnectorLines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showConnectorLines: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.showLeaderLines
  summary: >-
    True の場合、Microsoft Excel では、leaderlines の datalabel ごとに表示されます。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: showLeaderLines
  fullName: showLeaderLines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showLeaderLines: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.showShadow
  summary: >-
    系列に影があるかどうかを表すブール型 (Boolean) の値を指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: showShadow
  fullName: showShadow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showShadow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.smooth
  summary: >-
    系列が平滑化されるかどうかを表すブール値。 折れ線グラフおよび散布図にのみ適用されます。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: smooth
  fullName: smooth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'smooth: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.splitType
  summary: >-
    補助円グラフ付き円グラフまたは補助縦棒グラフ付き円グラフを 2 つの部分に分割する方法を返すか設定します。 読み取り/書き込み可能。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: splitType
  fullName: splitType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
    return:
      type:
      - Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
- uid: excel.Excel.ChartSeries.splitValue
  summary: >-
    補助円グラフ付き円グラフまたは補助縦棒付き円グラフの2つのセクションを区切るしきい値を設定または返します。 読み取り/書き込み可能。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: splitValue
  fullName: splitValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'splitValue: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.toJSON
  summary: API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。 (`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の Excel chartseries オブジェクトは API オブジェクトであるのに対し`toJSON` 、メソッドは、元のオブジェクトから読み込ま`Excel.Interfaces.ChartSeriesData` <!-- -->れた子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartSeriesData
      description: ''
- uid: excel.Excel.ChartSeries.trendlines
  summary: >-
    データ系列に含まれる近似曲線のコレクションを表します。 読み取り専用です。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: trendlines
  fullName: trendlines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
    return:
      type:
      - excel.Excel.ChartTrendlineCollection
- uid: excel.Excel.ChartSeries.varyByCategories
  summary: >-
    true の場合、Microsoft Excel により、データ マーカーごとに異なる色またはパターンが割り当てられます。 グラフに含まれるデータ系列は 1 つだけでなければなりません。 読み取り/書き込み可能。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: varyByCategories
  fullName: varyByCategories
  langs:
  - typeScript
  type: property
  syntax:
    content: 'varyByCategories: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.xerrorBars
  summary: >-
    グラフ系列の誤差 bar オブジェクトを表します。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: xerrorBars
  fullName: xerrorBars
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly xerrorBars: Excel.ChartErrorBars;'
    return:
      type:
      - excel.Excel.ChartErrorBars
- uid: excel.Excel.ChartSeries.yerrorBars
  summary: >-
    グラフ系列の誤差 bar オブジェクトを表します。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: yerrorBars
  fullName: yerrorBars
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly yerrorBars: Excel.ChartErrorBars;'
    return:
      type:
      - excel.Excel.ChartErrorBars
