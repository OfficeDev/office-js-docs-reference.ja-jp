### YamlMime:UniversalReference
ms.openlocfilehash: 2b3e79dc9041287b8439d8468848fbd345c13b01
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/20/2018
ms.locfileid: "24048598"
items:
- uid: excel.Excel.ChartSeries
  summary: >-
    グラフのデータ系列を表します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ChartSeries
  fullName: excel.Excel.ChartSeries
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartSeries.chartType
  - excel.Excel.ChartSeries.delete
  - excel.Excel.ChartSeries.doughnutHoleSize
  - excel.Excel.ChartSeries.filtered
  - excel.Excel.ChartSeries.format
  - excel.Excel.ChartSeries.gapWidth
  - excel.Excel.ChartSeries.hasDataLabels
  - excel.Excel.ChartSeries.load
  - excel.Excel.ChartSeries.markerBackgroundColor
  - excel.Excel.ChartSeries.markerForegroundColor
  - excel.Excel.ChartSeries.markerSize
  - excel.Excel.ChartSeries.markerStyle
  - excel.Excel.ChartSeries.name
  - excel.Excel.ChartSeries.plotOrder
  - excel.Excel.ChartSeries.points
  - excel.Excel.ChartSeries.setBubbleSizes
  - excel.Excel.ChartSeries.setValues
  - excel.Excel.ChartSeries.setXAxisValues
  - excel.Excel.ChartSeries.showShadow
  - excel.Excel.ChartSeries.smooth
  - excel.Excel.ChartSeries.toJSON
  - excel.Excel.ChartSeries.trendlines
- uid: excel.Excel.ChartSeries.chartType
  summary: >-
    系列のグラフの種類を表します。 詳細については Excel.ChartType を参照してください。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: chartType
  fullName: excel.Excel.ChartSeries.chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.ChartSeries.delete
  summary: >-
    グラフの系列を削除します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: excel.Excel.ChartSeries.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series;\n    let series = seriesCollection.getItemAt(0);\n\n    // Delete the first series.\n    series.delete();\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.doughnutHoleSize
  summary: >-
    グラフの系列のドーナツの穴の大きさを表します。 ドーナツ グラフおよび doughnutExploded のグラフでのみ有効です。 無効なグラフでは、無効な引数の例外をスローします。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: doughnutHoleSize
  fullName: excel.Excel.ChartSeries.doughnutHoleSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'doughnutHoleSize: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.filtered
  summary: >-
    ブール値を表すか、系列をフィルターの場合です。 等高線グラフには適用されません。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: filtered
  fullName: excel.Excel.ChartSeries.filtered
  langs:
  - typeScript
  type: property
  syntax:
    content: 'filtered: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.format
  summary: >-
    グラフ の系列の書式設定を表します。これには塗りつぶしと線の書式設定などがあります。値の取得のみ可能です。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: format
  fullName: excel.Excel.ChartSeries.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartSeriesFormat;'
    return:
      type:
      - excel.Excel.ChartSeriesFormat
- uid: excel.Excel.ChartSeries.gapWidth
  summary: >-
    グラフの系列の棒の間隔を表します。 上でのみ有効なバーと縦棒グラフと同様に、線と円グラフの特定のクラスです。 無効なグラフでは、無効な引数の例外をスローします。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: gapWidth
  fullName: excel.Excel.ChartSeries.gapWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gapWidth: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.hasDataLabels
  summary: >-
    系列ラベルがあるない場合のデータかを表すブール値です。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: hasDataLabels
  fullName: excel.Excel.ChartSeries.hasDataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasDataLabels: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: "だけでなく、この署名は、このメソッドは、次の署名をします。\n\n`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Rename the 1st series of Chart1 to \"New Series Name\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.series.getItemAt(0).name = \"New Series Name\";\n    return ctx.sync().then(function() {\n            console.log(\"Series1 Renamed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.ChartSeries.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartSeries;'
    return:
      type:
      - excel.Excel.ChartSeries
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.ChartSeries.markerBackgroundColor
  summary: >-
    グラフの系列のマーカーの背景色を表します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: markerBackgroundColor
  fullName: excel.Excel.ChartSeries.markerBackgroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerBackgroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerForegroundColor
  summary: >-
    グラフの系列のマーカーの前景色を表します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: markerForegroundColor
  fullName: excel.Excel.ChartSeries.markerForegroundColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerForegroundColor: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerSize
  summary: >-
    グラフの系列のマーカーのサイズを表します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: markerSize
  fullName: excel.Excel.ChartSeries.markerSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerSize: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.markerStyle
  summary: >-
    グラフの系列のデータ マーカーのスタイルを表します。 詳細については Excel.ChartMarkerStyle を参照してください。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: markerStyle
  fullName: excel.Excel.ChartSeries.markerStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
    return:
      type:
      - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartSeries.name
  summary: >-
    グラフのデータ系列の名前を表します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: excel.Excel.ChartSeries.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartSeries.plotOrder
  summary: >-
    グラフ種類グループのグラフの系列をプロットする順序を表します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: plotOrder
  fullName: excel.Excel.ChartSeries.plotOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotOrder: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartSeries.points
  summary: >-
    データ系列にあるすべてのポイントのコレクションを返します。値の取得のみ可能です。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: points
  fullName: excel.Excel.ChartSeries.points
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly points: Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
- uid: excel.Excel.ChartSeries.setBubbleSizes
  summary: >-
    グラフの系列のバブル サイズを設定します。 バブル チャートでのみ有効です。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: setBubbleSizes(sourceData)
  fullName: excel.Excel.ChartSeries.setBubbleSizes
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setBubbleSizes(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: データ ソースに対応する Range オブジェクトです。
      type:
      - Range
- uid: excel.Excel.ChartSeries.setValues
  summary: >-
    グラフの系列の値を設定します。 散布図のグラフの Y 軸の値を意味します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: setValues(sourceData)
  fullName: excel.Excel.ChartSeries.setValues
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series;\n\n    // Add new series.\n    let series = seriesCollection.add(\"New Product\");\n    let values = sheet.getRange(\"E2:E7\");\n\n    // Set the vertical values for the series.\n    series.setValues(values);\n    seriesCollection.load(\"count\");\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"Number of series  = \" + seriesCollection.count);\n});\n```"
    parameters:
    - id: sourceData
      description: データ ソースに対応する Range オブジェクトです。
      type:
      - Range
- uid: excel.Excel.ChartSeries.setXAxisValues
  summary: >-
    軸をグラフの系列の X の値を設定します。 散布図でのみ有効です。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: setXAxisValues(sourceData)
  fullName: excel.Excel.ChartSeries.setXAxisValues
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXAxisValues(sourceData: Range): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: データ ソースに対応する Range オブジェクトです。
      type:
      - Range
- uid: excel.Excel.ChartSeries.showShadow
  summary: >-
    系列か影がある場合はブール値を表します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showShadow
  fullName: excel.Excel.ChartSeries.showShadow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showShadow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.smooth
  summary: >-
    系列が滑らかでない、または場合はブール値を表します。 折れ線グラフおよび散布図のグラフにのみ適用できます。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: smooth
  fullName: excel.Excel.ChartSeries.smooth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'smooth: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ChartSeries.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartSeries.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartSeriesData
      description: ''
- uid: excel.Excel.ChartSeries.trendlines
  summary: >-
    系列の近似曲線のコレクションを表します。 読み取り専用。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: trendlines
  fullName: excel.Excel.ChartSeries.trendlines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
    return:
      type:
      - excel.Excel.ChartTrendlineCollection
