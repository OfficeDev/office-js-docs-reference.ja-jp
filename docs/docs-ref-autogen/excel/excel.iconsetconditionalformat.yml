### YamlMime:UniversalReference
ms.openlocfilehash: 4ef0814141a999a8720f5986389f7f7d077e8706
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24047646"
items:
- uid: excel.Excel.IconSetConditionalFormat
  summary: >-
    条件付き書式の IconSet 条件を表します。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.IconSetConditionalFormat
  fullName: excel.Excel.IconSetConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.IconSetConditionalFormat.criteria
  - excel.Excel.IconSetConditionalFormat.load
  - excel.Excel.IconSetConditionalFormat.reverseIconOrder
  - excel.Excel.IconSetConditionalFormat.showIconOnly
  - excel.Excel.IconSetConditionalFormat.style
  - excel.Excel.IconSetConditionalFormat.toJSON
- uid: excel.Excel.IconSetConditionalFormat.criteria
  summary: >-
    IconSets 基準の規則と条件付きのアイコンの潜在的なユーザー設定のアイコンの配列。 最初の基準カスタム アイコンだけ変更することが、型の中に数式を設定すると演算子は無視されることに注意してください。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: criteria
  fullName: excel.Excel.IconSetConditionalFormat.criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalIconCriterion[];'
    return:
      type:
      - Excel.ConditionalIconCriterion[]
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: >-
    だけでなく、この署名は、このメソッドは、次の署名をします。


    `load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。
  name: load(option)
  fullName: excel.Excel.IconSetConditionalFormat.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.IconSetConditionalFormat.reverseIconOrder
  summary: >-
    True の場合、IconSet のアイコンの順序を反転します。カスタム アイコンを使用する場合には、この設定は適用できません。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: reverseIconOrder
  fullName: excel.Excel.IconSetConditionalFormat.reverseIconOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'reverseIconOrder: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.showIconOnly
  summary: >-
    True の場合、値を非表示にし、アイコンのみを表示します。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showIconOnly
  fullName: excel.Excel.IconSetConditionalFormat.showIconOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showIconOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.style
  summary: >-
    場合設定、条件付き書式の IconSet オプションが表示されます。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: style
  fullName: excel.Excel.IconSetConditionalFormat.style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes";'
    return:
      type:
      - Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes"
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.toJSON
  name: toJSON()
  fullName: excel.Excel.IconSetConditionalFormat.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.IconSetConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatData
      description: ''
