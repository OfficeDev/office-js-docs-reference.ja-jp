### YamlMime:UniversalReference
ms.openlocfilehash: bf9c1bb2d260a20869bbbbf6574bd4b8c70a733d
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29978379"
items:
- uid: excel.Excel.IconSetConditionalFormat
  summary: >-
    <span data-ttu-id="c6a34-101">条件付き書式の IconSet 条件を表します。</span><span class="sxs-lookup"><span data-stu-id="c6a34-101">Represents an IconSet criteria for conditional formatting.</span></span>


    <span data-ttu-id="c6a34-102">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6a34-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.IconSetConditionalFormat
  fullName: Excel.IconSetConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.IconSetConditionalFormat.context
  - excel.Excel.IconSetConditionalFormat.criteria
  - excel.Excel.IconSetConditionalFormat.load
  - excel.Excel.IconSetConditionalFormat.load_1
  - excel.Excel.IconSetConditionalFormat.load_2
  - excel.Excel.IconSetConditionalFormat.reverseIconOrder
  - excel.Excel.IconSetConditionalFormat.set
  - excel.Excel.IconSetConditionalFormat.set_1
  - excel.Excel.IconSetConditionalFormat.showIconOnly
  - excel.Excel.IconSetConditionalFormat.style
  - excel.Excel.IconSetConditionalFormat.toJSON
- uid: excel.Excel.IconSetConditionalFormat.context
  summary: <span data-ttu-id="c6a34-103">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="c6a34-103">The request context associated with the object.</span></span> <span data-ttu-id="c6a34-104">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="c6a34-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.IconSetConditionalFormat.criteria
  summary: >-
    <span data-ttu-id="c6a34-105">IconSets 基準の規則と条件付きのアイコンの潜在的なユーザー設定のアイコンの配列。</span><span class="sxs-lookup"><span data-stu-id="c6a34-105">An array of Criteria and IconSets for the rules and potential custom icons for conditional icons.</span></span> <span data-ttu-id="c6a34-106">最初の基準カスタム アイコンだけ変更することが、型の中に数式を設定すると演算子は無視されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c6a34-106">Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.</span></span>


    <span data-ttu-id="c6a34-107">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6a34-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalIconCriterion[];'
    return:
      type:
      - Excel.ConditionalIconCriterion[]
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c6a34-108\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c6a34-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.load
  summary: <span data-ttu-id="c6a34-109">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="c6a34-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6a34-110">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c6a34-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="c6a34-111">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="c6a34-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="c6a34-112">`load(option?: string | string[]): Excel.IconSetConditionalFormat`-ここで、オプションは、コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="c6a34-112">`load(option?: string | string[]): Excel.IconSetConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="c6a34-113">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="c6a34-113">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="c6a34-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c6a34-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="c6a34-115">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="c6a34-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="c6a34-116">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c6a34-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c6a34-117">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c6a34-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c6a34-118">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="c6a34-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.IconSetConditionalFormatLoadOptions): Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatLoadOptions
- uid: excel.Excel.IconSetConditionalFormat.load_1
  summary: <span data-ttu-id="c6a34-119">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="c6a34-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6a34-120">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="c6a34-120">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="c6a34-121">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="c6a34-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.IconSetConditionalFormat.load_2
  summary: <span data-ttu-id="c6a34-122">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="c6a34-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6a34-123">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="c6a34-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="c6a34-124">読み込むには、プロパティを指定するコンマ区切りの文字列は、propertyNamesAndPaths.select、propertyNamesAndPaths.expand は、読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="c6a34-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.IconSetConditionalFormat.reverseIconOrder
  summary: >-
    <span data-ttu-id="c6a34-p107">true の場合、IconSet のアイコンの順序を反転します。カスタム アイコンを使用する場合、この設定は適用できません。</span><span class="sxs-lookup"><span data-stu-id="c6a34-p107">If true, reverses the icon orders for the IconSet. Note that this cannot be set if custom icons are used.</span></span>


    <span data-ttu-id="c6a34-127">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6a34-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: reverseIconOrder
  fullName: reverseIconOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'reverseIconOrder: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.set
  summary: <span data-ttu-id="c6a34-128">同時に複数のオブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c6a34-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c6a34-129">適切なプロパティで、普通のオブジェクトまたは同じ種類の別の API のオブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c6a34-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="c6a34-130">このメソッドには、次の追加の署名があります。</span><span class="sxs-lookup"><span data-stu-id="c6a34-130">This method has the following additional signature:</span></span>


    `set(properties: Excel.IconSetConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.IconSetConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="c6a34-131">Isomorphically メソッドが呼び出されますオブジェクトのプロパティを構造化されているプロパティを使用して JavaScript オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c6a34-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.IconSetConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="c6a34-132">プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを非表示にするオプションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="c6a34-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.IconSetConditionalFormat.set_1
  summary: <span data-ttu-id="c6a34-133">オブジェクトに読み込まれている既存のオブジェクトに基づいて、同時に複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c6a34-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.IconSetConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.IconSetConditionalFormat
- uid: excel.Excel.IconSetConditionalFormat.showIconOnly
  summary: >-
    <span data-ttu-id="c6a34-134">true の場合、値は非表示にされて、アイコンのみが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c6a34-134">If true, hides the values and only shows icons.</span></span>


    <span data-ttu-id="c6a34-135">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6a34-135">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showIconOnly
  fullName: showIconOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showIconOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.style
  summary: >-
    <span data-ttu-id="c6a34-136">場合設定、条件付き書式の IconSet オプションが表示されます。</span><span class="sxs-lookup"><span data-stu-id="c6a34-136">If set, displays the IconSet option for the conditional format.</span></span>


    <span data-ttu-id="c6a34-137">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6a34-137">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon";'
    return:
      type:
      - Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c6a34-138\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c6a34-138\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.toJSON
  summary: <span data-ttu-id="c6a34-139">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="c6a34-139">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="c6a34-140">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.IconSetConditionalFormat オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.IconSetConditionalFormatData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="c6a34-140">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.IconSetConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.IconSetConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.IconSetConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatData
      description: ''
