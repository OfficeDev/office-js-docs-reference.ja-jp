### YamlMime:UniversalReference
ms.openlocfilehash: 6ba53ccdd2450ef99228582bf9d30150a2b7715d
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24047670"
items:
- uid: excel.Excel.RangeFill
  summary: >-
    <span data-ttu-id="945f7-101">Range オブジェクトの背景を表します。</span><span class="sxs-lookup"><span data-stu-id="945f7-101">Represents the background of a range object.</span></span>


    <span data-ttu-id="945f7-102">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="945f7-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeFill
  fullName: excel.Excel.RangeFill
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFill.clear
  - excel.Excel.RangeFill.color
  - excel.Excel.RangeFill.load
  - excel.Excel.RangeFill.toJSON
- uid: excel.Excel.RangeFill.clear
  summary: >-
    <span data-ttu-id="945f7-103">範囲の背景をリセットします。</span><span class="sxs-lookup"><span data-stu-id="945f7-103">Resets the range background.</span></span>


    <span data-ttu-id="945f7-104">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="945f7-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: excel.Excel.RangeFill.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"945f7-105\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-105\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.RangeFill.color
  summary: >-
    <span data-ttu-id="945f7-106">HTML コードは、フォームの境界線の色を表す\#RRGGBB (例:"FFA500")、または名前付きの HTML 色 (例:「オレンジ」)</span><span class="sxs-lookup"><span data-stu-id="945f7-106">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange")</span></span>


    <span data-ttu-id="945f7-107">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="945f7-107">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: excel.Excel.RangeFill.color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFill.load
  summary: <span data-ttu-id="945f7-108">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="945f7-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="945f7-109">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="945f7-109">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"945f7-110\">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-110\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"945f7-111\">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-111\">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"945f7-112\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill`でコレクション型のみ使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-112\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill` - Only available on collection types.</span></span> <span data-ttu-id=\"945f7-113\">前の署名に似ていますが。</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-113\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"945f7-114\">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-114\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"945f7-115\">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-115\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"945f7-116\">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-116\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"945f7-117\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"945f7-117\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.load('color');\n    return ctx.sync().then(function() {\n        console.log(rangeFill.color);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets fill color. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.RangeFill.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="945f7-118">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="945f7-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeFill.toJSON
  name: toJSON()
  fullName: excel.Excel.RangeFill.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFillData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFillData
      description: ''
