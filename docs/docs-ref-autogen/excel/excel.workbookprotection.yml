### YamlMime:UniversalReference
ms.openlocfilehash: 78d6db0603ae26388cfd057de1ab85bc63cbfdd3
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/17/2018
ms.locfileid: "25582934"
items:
- uid: excel.Excel.WorkbookProtection
  summary: >-
    <span data-ttu-id="2ed29-101">ブック オブジェクトの保護を表します。</span><span class="sxs-lookup"><span data-stu-id="2ed29-101">Represents the protection of a workbook object.</span></span>


    <span data-ttu-id="2ed29-102">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ed29-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookProtection
  fullName: excel.Excel.WorkbookProtection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorkbookProtection.load
  - excel.Excel.WorkbookProtection.protect
  - excel.Excel.WorkbookProtection.protected
  - excel.Excel.WorkbookProtection.toJSON
  - excel.Excel.WorkbookProtection.unprotect
- uid: excel.Excel.WorkbookProtection.load
  summary: <span data-ttu-id="2ed29-103">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="2ed29-103">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2ed29-104">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2ed29-104">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="2ed29-105">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="2ed29-105">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="2ed29-106">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="2ed29-106">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="2ed29-107">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="2ed29-107">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="2ed29-108">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="2ed29-108">It is similar to the preceding signature.</span></span> <span data-ttu-id="2ed29-109">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2ed29-109">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2ed29-110">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2ed29-110">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2ed29-111">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="2ed29-111">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: excel.Excel.WorkbookProtection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="2ed29-112">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="2ed29-112">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.WorkbookProtection.protect
  summary: >-
    <span data-ttu-id="2ed29-113">ブックを保護します。</span><span class="sxs-lookup"><span data-stu-id="2ed29-113">Protects a workbook.</span></span> <span data-ttu-id="2ed29-114">ブックが保護されている場合は失敗します。</span><span class="sxs-lookup"><span data-stu-id="2ed29-114">Fails if the workbook has been protected.</span></span>


    <span data-ttu-id="2ed29-115">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ed29-115">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(password)
  fullName: excel.Excel.WorkbookProtection.protect
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2ed29-116\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2ed29-116\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect(password);\n    }\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="2ed29-117">ブック保護のパスワードです。</span><span class="sxs-lookup"><span data-stu-id="2ed29-117">workbook protection password.</span></span>
      type:
      - string
- uid: excel.Excel.WorkbookProtection.protected
  summary: >-
    <span data-ttu-id="2ed29-118">ブックが保護されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="2ed29-118">Indicates if the workbook is protected.</span></span> <span data-ttu-id="2ed29-119">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="2ed29-119">Read-Only.</span></span>


    <span data-ttu-id="2ed29-120">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ed29-120">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: excel.Excel.WorkbookProtection.protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.WorkbookProtection.toJSON
  name: toJSON()
  fullName: excel.Excel.WorkbookProtection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookProtectionData
      description: ''
- uid: excel.Excel.WorkbookProtection.unprotect
  summary: >-
    <span data-ttu-id="2ed29-121">ブックの保護を解除します。</span><span class="sxs-lookup"><span data-stu-id="2ed29-121">Unprotects a workbook.</span></span>


    <span data-ttu-id="2ed29-122">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2ed29-122">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: excel.Excel.WorkbookProtection.unprotect
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2ed29-123\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2ed29-123\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="2ed29-124">ブック保護のパスワードです。</span><span class="sxs-lookup"><span data-stu-id="2ed29-124">workbook protection password.</span></span>
      type:
      - string
