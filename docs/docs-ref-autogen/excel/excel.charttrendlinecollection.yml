### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartTrendlineCollection
    summary: |-
      グラフの近似曲線のコレクションを表します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartTrendlineCollection
    fullName: Excel.ChartTrendlineCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ChartTrendlineCollection.add
      - excel.Excel.ChartTrendlineCollection.add_1
      - excel.Excel.ChartTrendlineCollection.context
      - excel.Excel.ChartTrendlineCollection.getCount
      - excel.Excel.ChartTrendlineCollection.getItem
      - excel.Excel.ChartTrendlineCollection.items
      - excel.Excel.ChartTrendlineCollection.load
      - excel.Excel.ChartTrendlineCollection.load_1
      - excel.Excel.ChartTrendlineCollection.load_2
      - excel.Excel.ChartTrendlineCollection.toJSON
  - uid: excel.Excel.ChartTrendlineCollection.add
    summary: |-
      近似曲線のコレクションに新しい近似曲線を追加します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: add(type)
    fullName: add(type)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type?: Excel.ChartTrendlineType): Excel.ChartTrendline;'
      return:
        type:
          - excel.Excel.ChartTrendline
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              let seriesCollection = sheet.charts.getItemAt(0).series;

               // Add a trendline.  
              seriesCollection.getItemAt(0).trendlines.add("Linear");

              await context.sync();
          });
          ```
      parameters:
        - id: type
          description: 近似曲線の種類を指定します。 既定値は "Linear" です。 詳細については、「Excel charttrendline 曲線」を参照してください。
          type:
            - excel.Excel.ChartTrendlineType
  - uid: excel.Excel.ChartTrendlineCollection.add_1
    summary: |-
      近似曲線のコレクションに新しい近似曲線を追加します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: add(typeString)
    fullName: add(typeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(typeString?: "Linear" | "Exponential" | "Logarithmic" | "MovingAverage" | "Polynomial" | "Power"): Excel.ChartTrendline;'
      return:
        type:
          - excel.Excel.ChartTrendline
        description: ''
      parameters:
        - id: typeString
          description: 近似曲線の種類を指定します。 既定値は "Linear" です。 詳細については、「Excel charttrendline 曲線」を参照してください。
          type:
            - '"Linear" | "Exponential" | "Logarithmic" | "MovingAverage" | "Polynomial" | "Power"'
  - uid: excel.Excel.ChartTrendlineCollection.context
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.ChartTrendlineCollection.getCount
    summary: |-
      コレクションに含まれる近似曲線の数を返します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ChartTrendlineCollection.getItem
    summary: |-
      インデックス (項目配列内の挿入順序) に基づいて trendline オブジェクトを取得します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number): Excel.ChartTrendline;'
      return:
        type:
          - excel.Excel.ChartTrendline
        description: ''
      parameters:
        - id: index
          description: アイテムの配列内の挿入順序を表します。
          type:
            - number
  - uid: excel.Excel.ChartTrendlineCollection.items
    summary: このコレクション内に読み込まれた子アイテムを取得します。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartTrendline[];'
      return:
        type:
          - 'Excel.ChartTrendline[]'
  - uid: excel.Excel.ChartTrendlineCollection.load
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): Excel.ChartTrendlineCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): Excel.ChartTrendlineCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartTrendlineCollection`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartTrendlineCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ChartTrendlineCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ChartTrendlineCollection.load_1
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartTrendlineCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.ChartTrendlineCollection.toJSON
    summary: API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.ChartTrendlineCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ChartTrendlineCollectionData`<!-- -->) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartTrendlineCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartTrendlineCollectionData
        description: ''