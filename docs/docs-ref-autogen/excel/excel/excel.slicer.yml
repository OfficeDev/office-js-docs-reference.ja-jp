### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Slicer:class'
    summary: |-
      <span data-ttu-id="03610-101">ブック内のスライサーオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="03610-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="03610-102">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Slicer#caption:member'
      - 'excel!Excel.Slicer#clearFilters:member(1)'
      - 'excel!Excel.Slicer#context:member'
      - 'excel!Excel.Slicer#delete:member(1)'
      - 'excel!Excel.Slicer#getSelectedItems:member(1)'
      - 'excel!Excel.Slicer#height:member'
      - 'excel!Excel.Slicer#id:member'
      - 'excel!Excel.Slicer#isFilterCleared:member'
      - 'excel!Excel.Slicer#left:member'
      - 'excel!Excel.Slicer#load:member(1)'
      - 'excel!Excel.Slicer#load:member(2)'
      - 'excel!Excel.Slicer#load:member(3)'
      - 'excel!Excel.Slicer#name:member'
      - 'excel!Excel.Slicer#nameInFormula:member'
      - 'excel!Excel.Slicer#selectItems:member(1)'
      - 'excel!Excel.Slicer#set:member(1)'
      - 'excel!Excel.Slicer#set:member(2)'
      - 'excel!Excel.Slicer#slicerItems:member'
      - 'excel!Excel.Slicer#sortBy:member'
      - 'excel!Excel.Slicer#style:member'
      - 'excel!Excel.Slicer#toJSON:member(1)'
      - 'excel!Excel.Slicer#top:member'
      - 'excel!Excel.Slicer#width:member'
      - 'excel!Excel.Slicer#worksheet:member'
  - uid: 'excel!Excel.Slicer#caption:member'
    summary: |-
      <span data-ttu-id="03610-103">スライサーのキャプションを表します。</span><span class="sxs-lookup"><span data-stu-id="03610-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="03610-104">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#clearFilters:member(1)'
    summary: |-
      <span data-ttu-id="03610-105">現在スライサーに適用されているすべてのフィルターを消去します。</span><span class="sxs-lookup"><span data-stu-id="03610-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="03610-106">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03610-107">例</span><span class="sxs-lookup"><span data-stu-id="03610-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#context:member'
    summary: <span data-ttu-id="03610-108">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="03610-108">The request context associated with the object.</span></span> <span data-ttu-id="03610-109">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="03610-109">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Slicer#delete:member(1)'
    summary: |-
      <span data-ttu-id="03610-110">スライサーを削除します。</span><span class="sxs-lookup"><span data-stu-id="03610-110">Deletes the slicer.</span></span>

      <span data-ttu-id="03610-111">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03610-112">例</span><span class="sxs-lookup"><span data-stu-id="03610-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#getSelectedItems:member(1)'
    summary: |-
      <span data-ttu-id="03610-113">選択されたアイテムのキーの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="03610-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="03610-114">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="03610-114">Read-only.</span></span>

      <span data-ttu-id="03610-115">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.Slicer#getSelectedItems~0:complex'
        description: ''
  - uid: 'excel!Excel.Slicer#height:member'
    summary: |-
      <span data-ttu-id="03610-116">スライサーの高さ (ポイント数) を表します。</span><span class="sxs-lookup"><span data-stu-id="03610-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="03610-117">"引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="03610-117">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="03610-118">負の値で設定した場合、または入力に0の場合は例外。</span><span class="sxs-lookup"><span data-stu-id="03610-118">exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="03610-119">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-119">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#id:member'
    summary: |-
      <span data-ttu-id="03610-120">スライサーの一意の ID を表します。</span><span class="sxs-lookup"><span data-stu-id="03610-120">Represents the unique id of slicer.</span></span> <span data-ttu-id="03610-121">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="03610-121">Read-only.</span></span>

      <span data-ttu-id="03610-122">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#isFilterCleared:member'
    summary: |-
      <span data-ttu-id="03610-123">スライサーに現在適用されているフィルターがすべて消去されている場合、true となります。</span><span class="sxs-lookup"><span data-stu-id="03610-123">True if all filters currently applied on the slicer are cleared.</span></span>

      <span data-ttu-id="03610-124">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-124">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Slicer#left:member'
    summary: |-
      <span data-ttu-id="03610-125">スライサーの左側からワークシートの左までの距離を表します (ポイント数)。</span><span class="sxs-lookup"><span data-stu-id="03610-125">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="03610-126">"引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="03610-126">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="03610-127">負の値を入力として設定した場合の例外。</span><span class="sxs-lookup"><span data-stu-id="03610-127">exception when set with negative value as input.</span></span>

      <span data-ttu-id="03610-128">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#load:member(1)'
    summary: <span data-ttu-id="03610-129">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="03610-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03610-130">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="03610-130">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="03610-131">読み込むオブジェクトのプロパティを指定するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="03610-131">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
  - uid: 'excel!Excel.Slicer#load:member(2)'
    summary: <span data-ttu-id="03610-132">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="03610-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03610-133">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="03610-133">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="03610-134">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="03610-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Slicer#load:member(3)'
    summary: <span data-ttu-id="03610-135">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="03610-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="03610-136">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="03610-136">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Slicer;
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="03610-137">`propertyNamesAndPaths.select`は、読み込むプロパティを指定するコンマで区切られた文字列で`propertyNamesAndPaths.expand` 、読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。</span><span class="sxs-lookup"><span data-stu-id="03610-137">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Slicer#name:member'
    summary: |-
      <span data-ttu-id="03610-138">スライサーの名前を表します。</span><span class="sxs-lookup"><span data-stu-id="03610-138">Represents the name of slicer.</span></span>

      <span data-ttu-id="03610-139">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-139">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#nameInFormula:member'
    summary: |-
      <span data-ttu-id="03610-140">数式で使用するスライサーの名前を表します。</span><span class="sxs-lookup"><span data-stu-id="03610-140">Represents the slicer name used in the formula.</span></span>

      <span data-ttu-id="03610-141">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#selectItems:member(1)'
    summary: |-
      <span data-ttu-id="03610-142">キーに基づいてスライサーアイテムを選択します。</span><span class="sxs-lookup"><span data-stu-id="03610-142">Selects slicer items based on their keys.</span></span> <span data-ttu-id="03610-143">以前の選択はクリアされます。</span><span class="sxs-lookup"><span data-stu-id="03610-143">The previous selections are cleared.</span></span> <span data-ttu-id="03610-144">配列が空の場合、既定ではすべてのアイテムが選択されます。</span><span class="sxs-lookup"><span data-stu-id="03610-144">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="03610-145">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03610-146">例</span><span class="sxs-lookup"><span data-stu-id="03610-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: <span data-ttu-id="03610-147">省略可能。</span><span class="sxs-lookup"><span data-stu-id="03610-147">Optional.</span></span> <span data-ttu-id="03610-148">選択するスライサーアイテムの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="03610-148">The specified slicer item names to be selected.</span></span>
          type:
            - 'string[]'
  - uid: 'excel!Excel.Slicer#set:member(1)'
    summary: '<span data-ttu-id="03610-149">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="03610-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="03610-150">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="03610-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="03610-151">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="03610-151">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="03610-152">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="03610-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerUpdateData:interface'
        - id: options
          description: <span data-ttu-id="03610-153">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="03610-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Slicer#set:member(2)'
    summary: '<span data-ttu-id="03610-154">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="03610-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Slicer:class'
  - uid: 'excel!Excel.Slicer#slicerItems:member'
    summary: |-
      <span data-ttu-id="03610-155">スライサーに含まれる SlicerItems のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="03610-155">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="03610-156">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="03610-156">Read-only.</span></span>

      <span data-ttu-id="03610-157">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-157">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - 'excel!Excel.SlicerItemCollection:class'
  - uid: 'excel!Excel.Slicer#sortBy:member'
    summary: |-
      <span data-ttu-id="03610-158">スライサーに含まれるアイテムの並べ替え順序を表します。</span><span class="sxs-lookup"><span data-stu-id="03610-158">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="03610-159">可能な値は、"DataSourceOrder"、"昇順"、"降順" です。</span><span class="sxs-lookup"><span data-stu-id="03610-159">Possible values are: "DataSourceOrder", "Ascending", "Descending".</span></span>

      <span data-ttu-id="03610-160">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-160">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - 'excel!Excel.Slicer#sortBy~0:complex'
  - uid: 'excel!Excel.Slicer#style:member'
    summary: |-
      <span data-ttu-id="03610-161">スライサー スタイルを表す定数値。</span><span class="sxs-lookup"><span data-stu-id="03610-161">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="03610-162">可能な値は次のとおりです。 "SlicerStyleLight1" は "SlicerStyleLight6"、"TableStyleOther1" ~ "TableStyleOther2"、"SlicerStyleDark1" ~ "SlicerStyleDark6" です。</span><span class="sxs-lookup"><span data-stu-id="03610-162">Possible values are: "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".</span></span> <span data-ttu-id="03610-163">ブックに存在するカスタムのユーザー定義スタイルも指定できます。</span><span class="sxs-lookup"><span data-stu-id="03610-163">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="03610-164">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-164">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="03610-165">例</span><span class="sxs-lookup"><span data-stu-id="03610-165">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#toJSON:member(1)'
    summary: '<span data-ttu-id="03610-166">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="03610-166">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="03610-167">.</span><span class="sxs-lookup"><span data-stu-id="03610-167"></span></span> <span data-ttu-id="03610-168">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="03610-168"></span></span><!-- --><span data-ttu-id="03610-169">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel のスライサーオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="03610-169">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="03610-170">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="03610-170">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerData:interface'
        description: ''
  - uid: 'excel!Excel.Slicer#top:member'
    summary: |-
      <span data-ttu-id="03610-171">スライサーの上端からワークシートの上端までの距離を表します (ポイント数)。</span><span class="sxs-lookup"><span data-stu-id="03610-171">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="03610-172">"引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="03610-172">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="03610-173">負の値を入力として設定した場合の例外。</span><span class="sxs-lookup"><span data-stu-id="03610-173">exception when set with negative value as input.</span></span>

      <span data-ttu-id="03610-174">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-174">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#width:member'
    summary: |-
      <span data-ttu-id="03610-175">スライサーの幅 (ポイント数) を表します。</span><span class="sxs-lookup"><span data-stu-id="03610-175">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="03610-176">"引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="03610-176">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="03610-177">負の値で設定した場合、または入力に0の場合は例外。</span><span class="sxs-lookup"><span data-stu-id="03610-177">exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="03610-178">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#worksheet:member'
    summary: |-
      <span data-ttu-id="03610-179">スライサーを含んでいるワークシートを表します。</span><span class="sxs-lookup"><span data-stu-id="03610-179">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="03610-180">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="03610-180">Read-only.</span></span>

      <span data-ttu-id="03610-181">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="03610-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Slicer#getSelectedItems~0:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.Slicer:class'
    name: Excel.Slicer
  - uid: 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
    name: Excel.Interfaces.SlicerLoadOptions
  - uid: 'excel!Excel.Interfaces.SlicerUpdateData:interface'
    name: Interfaces.SlicerUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SlicerItemCollection:class'
    name: Excel.SlicerItemCollection
  - uid: 'excel!Excel.Slicer#sortBy~0:complex'
    name: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    fullName: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    spec.typeScript:
      - uid: 'excel!Excel.SlicerSortType:enum'
        name: Excel.SlicerSortType
        fullName: Excel.SlicerSortType
      - name: ' | "DataSourceOrder" | "Ascending" | "Descending"'
        fullName: ' | "DataSourceOrder" | "Ascending" | "Descending"'
  - uid: 'excel!Excel.Interfaces.SlicerData:interface'
    name: Excel.Interfaces.SlicerData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet