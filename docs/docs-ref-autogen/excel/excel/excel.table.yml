### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Table
    summary: |-
      <span data-ttu-id="df80b-101">Excel の表を表します。</span><span class="sxs-lookup"><span data-stu-id="df80b-101">Represents an Excel table.</span></span> <span data-ttu-id="df80b-102">表オブジェクトモデルの詳細については、「 [Excel JAVASCRIPT API を使用してテーブルを操作](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="df80b-102">To learn more about the table object model, read [Work with tables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span></span><!-- --><span data-ttu-id="df80b-103">.</span><span class="sxs-lookup"><span data-stu-id="df80b-103"></span></span>

      <span data-ttu-id="df80b-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Table.autoFilter
      - excel.Excel.Table.clearFilters
      - excel.Excel.Table.clearStyle
      - excel.Excel.Table.columns
      - excel.Excel.Table.context
      - excel.Excel.Table.convertToRange
      - excel.Excel.Table.delete
      - excel.Excel.Table.getDataBodyRange
      - excel.Excel.Table.getHeaderRowRange
      - excel.Excel.Table.getRange
      - excel.Excel.Table.getTotalRowRange
      - excel.Excel.Table.highlightFirstColumn
      - excel.Excel.Table.highlightLastColumn
      - excel.Excel.Table.id
      - excel.Excel.Table.legacyId
      - excel.Excel.Table.load
      - excel.Excel.Table.load_1
      - excel.Excel.Table.load_2
      - excel.Excel.Table.name
      - excel.Excel.Table.onChanged
      - excel.Excel.Table.onFiltered
      - excel.Excel.Table.onSelectionChanged
      - excel.Excel.Table.reapplyFilters
      - excel.Excel.Table.rows
      - excel.Excel.Table.set
      - excel.Excel.Table.set_1
      - excel.Excel.Table.showBandedColumns
      - excel.Excel.Table.showBandedRows
      - excel.Excel.Table.showFilterButton
      - excel.Excel.Table.showHeaders
      - excel.Excel.Table.showTotals
      - excel.Excel.Table.sort
      - excel.Excel.Table.style
      - excel.Excel.Table.toJSON
      - excel.Excel.Table.worksheet
  - uid: excel.Excel.Table.autoFilter
    summary: |-
      <span data-ttu-id="df80b-105">テーブルの AutoFilter オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="df80b-105">Represents the AutoFilter object of the table.</span></span> <span data-ttu-id="df80b-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="df80b-106">Read-Only.</span></span>

      <span data-ttu-id="df80b-107">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFilter
    fullName: autoFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoFilter: Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
  - uid: excel.Excel.Table.clearFilters
    summary: |-
      <span data-ttu-id="df80b-108">現在テーブルに適用されているすべてのフィルターをクリアします。</span><span class="sxs-lookup"><span data-stu-id="df80b-108">Clears all the filters currently applied on the table.</span></span>

      <span data-ttu-id="df80b-109">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-109">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Table.clearStyle
    summary: |-
      <span data-ttu-id="df80b-110">既定のテーブル スタイルを使用するようにテーブルを変更します。</span><span class="sxs-lookup"><span data-stu-id="df80b-110">Changes the table to use the default table style.</span></span>

      <span data-ttu-id="df80b-111">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearStyle()
    fullName: clearStyle()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearStyle(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Table.columns
    summary: |-
      <span data-ttu-id="df80b-112">テーブルに含まれるすべての列のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="df80b-112">Represents a collection of all the columns in the table.</span></span> <span data-ttu-id="df80b-113">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="df80b-113">Read-only.</span></span>

      <span data-ttu-id="df80b-114">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - excel.Excel.TableColumnCollection
  - uid: excel.Excel.Table.context
    summary: <span data-ttu-id="df80b-115">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="df80b-115">The request context associated with the object.</span></span> <span data-ttu-id="df80b-116">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="df80b-116">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Table.convertToRange
    summary: |-
      <span data-ttu-id="df80b-117">テーブルを通常の範囲のセルに変換します。</span><span class="sxs-lookup"><span data-stu-id="df80b-117">Converts the table into a normal range of cells.</span></span> <span data-ttu-id="df80b-118">すべてのデータが保持されます。</span><span class="sxs-lookup"><span data-stu-id="df80b-118">All data is preserved.</span></span>

      <span data-ttu-id="df80b-119">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-119">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: convertToRange()
    fullName: convertToRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-120">例</span><span class="sxs-lookup"><span data-stu-id="df80b-120">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.convertToRange();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.delete
    summary: |-
      <span data-ttu-id="df80b-121">テーブルを削除します。</span><span class="sxs-lookup"><span data-stu-id="df80b-121">Deletes the table.</span></span>

      <span data-ttu-id="df80b-122">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-122">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-123">例</span><span class="sxs-lookup"><span data-stu-id="df80b-123">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getDataBodyRange
    summary: |-
      <span data-ttu-id="df80b-124">テーブルのデータ本体に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="df80b-124">Gets the range object associated with the data body of the table.</span></span>

      <span data-ttu-id="df80b-125">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-126">例</span><span class="sxs-lookup"><span data-stu-id="df80b-126">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getHeaderRowRange
    summary: |-
      <span data-ttu-id="df80b-127">テーブルのヘッダー行に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="df80b-127">Gets the range object associated with header row of the table.</span></span>

      <span data-ttu-id="df80b-128">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-129">例</span><span class="sxs-lookup"><span data-stu-id="df80b-129">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getRange
    summary: |-
      <span data-ttu-id="df80b-130">テーブル全体に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="df80b-130">Gets the range object associated with the entire table.</span></span>

      <span data-ttu-id="df80b-131">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-132">例</span><span class="sxs-lookup"><span data-stu-id="df80b-132">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.getTotalRowRange
    summary: |-
      <span data-ttu-id="df80b-133">テーブルの集計行に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="df80b-133">Gets the range object associated with totals row of the table.</span></span>

      <span data-ttu-id="df80b-134">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-135">例</span><span class="sxs-lookup"><span data-stu-id="df80b-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Table.highlightFirstColumn
    summary: |-
      <span data-ttu-id="df80b-136">最初の列に特別な書式設定が含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="df80b-136">Indicates whether the first column contains special formatting.</span></span>

      <span data-ttu-id="df80b-137">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-137">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: highlightFirstColumn
    fullName: highlightFirstColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightFirstColumn: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.highlightLastColumn
    summary: |-
      <span data-ttu-id="df80b-138">最後の列に特別な書式設定が含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="df80b-138">Indicates whether the last column contains special formatting.</span></span>

      <span data-ttu-id="df80b-139">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-139">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: highlightLastColumn
    fullName: highlightLastColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightLastColumn: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.id
    summary: |-
      <span data-ttu-id="df80b-p106">指定されたブックのテーブルを一意に識別する値を返します。識別子の値は、テーブルの名前が変更された場合も変わりません。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="df80b-p106">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>

      <span data-ttu-id="df80b-143">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-143">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.legacyId
    summary: |-
      <span data-ttu-id="df80b-144">数値 id を返します。</span><span class="sxs-lookup"><span data-stu-id="df80b-144">Returns a numeric id.</span></span>

      <span data-ttu-id="df80b-145">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-145">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: legacyId
    fullName: legacyId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly legacyId: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.load
    summary: <span data-ttu-id="df80b-146">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="df80b-146">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="df80b-147">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="df80b-147">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="df80b-148">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="df80b-148">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="df80b-149">`load(option?: string | string[]): Excel.Table`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="df80b-149">`load(option?: string | string[]): Excel.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="df80b-150">`load(option?: { select?: string; expand?: string; }): Excel.Table`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="df80b-150">`load(option?: { select?: string; expand?: string; }): Excel.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="df80b-151">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="df80b-151">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table` - Only available on collection types.</span></span> <span data-ttu-id="df80b-152">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="df80b-152">It is similar to the preceding signature.</span></span> <span data-ttu-id="df80b-153">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="df80b-153">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="df80b-154">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="df80b-154">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="df80b-155">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="df80b-155">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableLoadOptions
  - uid: excel.Excel.Table.load_1
    summary: <span data-ttu-id="df80b-156">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="df80b-156">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="df80b-157">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="df80b-157">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-158">例</span><span class="sxs-lookup"><span data-stu-id="df80b-158">Examples</span></span>

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="df80b-159">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="df80b-159">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Table.load_2
    summary: <span data-ttu-id="df80b-160">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="df80b-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="df80b-161">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="df80b-161">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="df80b-162">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="df80b-162">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Table.name
    summary: |-
      <span data-ttu-id="df80b-163">テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="df80b-163">Name of the table.</span></span>

      <span data-ttu-id="df80b-164">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.onChanged
    summary: |-
      <span data-ttu-id="df80b-165">特定の表で、セル内のデータが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="df80b-165">Occurs when data in cells changes on a specific table.</span></span>

      <span data-ttu-id="df80b-166">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-166">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-167">例</span><span class="sxs-lookup"><span data-stu-id="df80b-167">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event");
          });
          ```
  - uid: excel.Excel.Table.onFiltered
    summary: |-
      <span data-ttu-id="df80b-168">フィルターが特定のテーブルに適用されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="df80b-168">Occurs when filter is applied on a specific table.</span></span>

      <span data-ttu-id="df80b-169">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-169">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.TableFilteredEventArgs>
  - uid: excel.Excel.Table.onSelectionChanged
    summary: |-
      <span data-ttu-id="df80b-170">特定の表で選択範囲が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="df80b-170">Occurs when the selection changes on a specific table.</span></span>

      <span data-ttu-id="df80b-171">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-171">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="df80b-172">例</span><span class="sxs-lookup"><span data-stu-id="df80b-172">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onSelectionChanged.add(onSelectionChange);

              await context.sync();
              console.log("A handler has been registered for table onSelectionChanged event");
          });
          ```
  - uid: excel.Excel.Table.reapplyFilters
    summary: |-
      <span data-ttu-id="df80b-173">テーブルに現在設定されているすべてのフィルターを再適用します。</span><span class="sxs-lookup"><span data-stu-id="df80b-173">Reapplies all the filters currently on the table.</span></span>

      <span data-ttu-id="df80b-174">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-174">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapplyFilters()
    fullName: reapplyFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Table.rows
    summary: |-
      <span data-ttu-id="df80b-175">テーブルに含まれるすべての行のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="df80b-175">Represents a collection of all the rows in the table.</span></span> <span data-ttu-id="df80b-176">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="df80b-176">Read-only.</span></span>

      <span data-ttu-id="df80b-177">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-177">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - excel.Excel.TableRowCollection
  - uid: excel.Excel.Table.set
    summary: '<span data-ttu-id="df80b-178">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="df80b-178">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="df80b-179">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="df80b-179">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="df80b-180">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="df80b-180">This method has the following additional signature:</span></span>

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="df80b-181">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="df80b-181">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableUpdateData
        - id: options
          description: <span data-ttu-id="df80b-182">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="df80b-182">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Table.set_1
    summary: '<span data-ttu-id="df80b-183">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="df80b-183">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Table
  - uid: excel.Excel.Table.showBandedColumns
    summary: |-
      <span data-ttu-id="df80b-184">テーブルを見やすくするため、奇数列を偶数列とは異なる方法で強調表示する書式設定にして、列を縞模様で表示するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="df80b-184">Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.</span></span>

      <span data-ttu-id="df80b-185">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-185">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showBandedColumns
    fullName: showBandedColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedColumns: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.showBandedRows
    summary: |-
      <span data-ttu-id="df80b-186">テーブルを見やすくするため、奇数行を偶数行とは異なる方法で強調表示する書式設定にして、行を縞模様で表示するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="df80b-186">Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.</span></span>

      <span data-ttu-id="df80b-187">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-187">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showBandedRows
    fullName: showBandedRows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedRows: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.showFilterButton
    summary: |-
      <span data-ttu-id="df80b-p113">フィルター ボタンを各列のヘッダーの上部に表示するかどうかを示します。これは、テーブルにヘッダー行が含まれている場合のみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="df80b-p113">Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.</span></span>

      <span data-ttu-id="df80b-190">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-190">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showFilterButton
    fullName: showFilterButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showFilterButton: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.showHeaders
    summary: |-
      <span data-ttu-id="df80b-191">ヘッダー行を表示するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="df80b-191">Indicates whether the header row is visible or not.</span></span> <span data-ttu-id="df80b-192">この値によって、ヘッダー行の表示または削除を設定できます。</span><span class="sxs-lookup"><span data-stu-id="df80b-192">This value can be set to show or remove the header row.</span></span>

      <span data-ttu-id="df80b-193">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-193">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.showTotals
    summary: |-
      <span data-ttu-id="df80b-194">集計行を表示するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="df80b-194">Indicates whether the total row is visible or not.</span></span> <span data-ttu-id="df80b-195">この値によって、集計行の表示または削除を設定できます。</span><span class="sxs-lookup"><span data-stu-id="df80b-195">This value can be set to show or remove the total row.</span></span>

      <span data-ttu-id="df80b-196">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-196">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Table.sort
    summary: |-
      <span data-ttu-id="df80b-197">テーブル内の並べ替えを表します。</span><span class="sxs-lookup"><span data-stu-id="df80b-197">Represents the sorting for the table.</span></span> <span data-ttu-id="df80b-198">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="df80b-198">Read-only.</span></span>

      <span data-ttu-id="df80b-199">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-199">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type:
          - excel.Excel.TableSort
  - uid: excel.Excel.Table.style
    summary: |-
      <span data-ttu-id="df80b-200">テーブル スタイルを表す定数値。</span><span class="sxs-lookup"><span data-stu-id="df80b-200">Constant value that represents the Table style.</span></span> <span data-ttu-id="df80b-201">可能な値は次のとおりです。 "TableStyleLight1" は "TableStyleLight21"、"TableStyleMedium1" ~ "TableStyleMedium28"、"TableStyleStyleDark1" ~ "TableStyleStyleDark11" です。</span><span class="sxs-lookup"><span data-stu-id="df80b-201">Possible values are: "TableStyleLight1" through "TableStyleLight21", "TableStyleMedium1" through "TableStyleMedium28", "TableStyleStyleDark1" through "TableStyleStyleDark11".</span></span> <span data-ttu-id="df80b-202">ブックに存在するカスタムのユーザー定義スタイルも指定できます。</span><span class="sxs-lookup"><span data-stu-id="df80b-202">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="df80b-203">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-203">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Table.toJSON
    summary: '<span data-ttu-id="df80b-204">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="df80b-204">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="df80b-205">.</span><span class="sxs-lookup"><span data-stu-id="df80b-205"></span></span> <span data-ttu-id="df80b-206">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="df80b-206"></span></span><!-- --><span data-ttu-id="df80b-207">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel Table オブジェクトは API オブジェクトであるのに対し`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="df80b-207">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="df80b-208">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="df80b-208">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - excel.Excel.Interfaces.TableData
        description: ''
  - uid: excel.Excel.Table.worksheet
    summary: |-
      <span data-ttu-id="df80b-209">現在のテーブルを含んでいるワークシート。</span><span class="sxs-lookup"><span data-stu-id="df80b-209">The worksheet containing the current table.</span></span> <span data-ttu-id="df80b-210">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="df80b-210">Read-only.</span></span>

      <span data-ttu-id="df80b-211">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="df80b-211">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet