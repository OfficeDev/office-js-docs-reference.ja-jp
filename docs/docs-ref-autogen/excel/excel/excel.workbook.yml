### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Workbook:class'
    summary: |-
      <span data-ttu-id="0f3a5-101">Workbook は、ワークシート、テーブル、範囲などの関連するブックオブジェクトを含む最上位レベルのオブジェクトです。ブックオブジェクトモデルの詳細については、「 [Excel JAVASCRIPT API を使用してブックを操作](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc. To learn more about the workbook object model, read [Work with workbooks using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)</span></span><!-- --><span data-ttu-id="0f3a5-102">.</span><span class="sxs-lookup"><span data-stu-id="0f3a5-102"></span></span>

      <span data-ttu-id="0f3a5-103">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-103">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Workbook#application:member'
      - 'excel!Excel.Workbook#autoSave:member'
      - 'excel!Excel.Workbook#bindings:member'
      - 'excel!Excel.Workbook#calculationEngineVersion:member'
      - 'excel!Excel.Workbook#chartDataPointTrack:member'
      - 'excel!Excel.Workbook#close:member(1)'
      - 'excel!Excel.Workbook#close:member(2)'
      - 'excel!Excel.Workbook#comments:member'
      - 'excel!Excel.Workbook#context:member'
      - 'excel!Excel.Workbook#customXmlParts:member'
      - 'excel!Excel.Workbook#dataConnections:member'
      - 'excel!Excel.Workbook#functions:member'
      - 'excel!Excel.Workbook#getActiveCell:member(1)'
      - 'excel!Excel.Workbook#getActiveChart:member(1)'
      - 'excel!Excel.Workbook#getActiveChartOrNullObject:member(1)'
      - 'excel!Excel.Workbook#getActiveSlicer:member(1)'
      - 'excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)'
      - 'excel!Excel.Workbook#getIsActiveCollabSession:member(1)'
      - 'excel!Excel.Workbook#getSelectedRange:member(1)'
      - 'excel!Excel.Workbook#getSelectedRanges:member(1)'
      - 'excel!Excel.Workbook#isDirty:member'
      - 'excel!Excel.Workbook#load:member(1)'
      - 'excel!Excel.Workbook#load:member(2)'
      - 'excel!Excel.Workbook#load:member(3)'
      - 'excel!Excel.Workbook#name:member'
      - 'excel!Excel.Workbook#names:member'
      - 'excel!Excel.Workbook#onAutoSaveSettingChanged:member'
      - 'excel!Excel.Workbook#onSelectionChanged:member'
      - 'excel!Excel.Workbook#pivotTables:member'
      - 'excel!Excel.Workbook#pivotTableStyles:member'
      - 'excel!Excel.Workbook#previouslySaved:member'
      - 'excel!Excel.Workbook#properties:member'
      - 'excel!Excel.Workbook#protection:member'
      - 'excel!Excel.Workbook#readOnly:member'
      - 'excel!Excel.Workbook#save:member(1)'
      - 'excel!Excel.Workbook#save:member(2)'
      - 'excel!Excel.Workbook#set:member(1)'
      - 'excel!Excel.Workbook#set:member(2)'
      - 'excel!Excel.Workbook#settings:member'
      - 'excel!Excel.Workbook#slicers:member'
      - 'excel!Excel.Workbook#slicerStyles:member'
      - 'excel!Excel.Workbook#styles:member'
      - 'excel!Excel.Workbook#tables:member'
      - 'excel!Excel.Workbook#tableStyles:member'
      - 'excel!Excel.Workbook#timelineStyles:member'
      - 'excel!Excel.Workbook#toJSON:member(1)'
      - 'excel!Excel.Workbook#use1904DateSystem:member'
      - 'excel!Excel.Workbook#usePrecisionAsDisplayed:member'
      - 'excel!Excel.Workbook#worksheets:member'
  - uid: 'excel!Excel.Workbook#application:member'
    summary: |-
      <span data-ttu-id="0f3a5-104">このブックを含む Excel アプリケーションインスタンスを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-104">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="0f3a5-105">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-105">Read-only.</span></span>

      <span data-ttu-id="0f3a5-106">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - 'excel!Excel.Application:class'
  - uid: 'excel!Excel.Workbook#autoSave:member'
    summary: |-
      <span data-ttu-id="0f3a5-107">ブックが自動保存モードかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-107">Specifies whether or not the workbook is in autosave mode.</span></span> <span data-ttu-id="0f3a5-108">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-108">Read-Only.</span></span>

      <span data-ttu-id="0f3a5-109">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-109">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoSave
    fullName: autoSave
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoSave: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#bindings:member'
    summary: |-
      <span data-ttu-id="0f3a5-110">ブックの一部であるバインドのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-110">Represents a collection of bindings that are part of the workbook.</span></span> <span data-ttu-id="0f3a5-111">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-111">Read-only.</span></span>

      <span data-ttu-id="0f3a5-112">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
  - uid: 'excel!Excel.Workbook#calculationEngineVersion:member'
    summary: |-
      <span data-ttu-id="0f3a5-113">Excel 計算エンジンのバージョンとして数字を返します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-113">Returns a number about the version of Excel Calculation Engine.</span></span> <span data-ttu-id="0f3a5-114">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-114">Read-Only.</span></span>

      <span data-ttu-id="0f3a5-115">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-115">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculationEngineVersion
    fullName: calculationEngineVersion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly calculationEngineVersion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Workbook#chartDataPointTrack:member'
    summary: |-
      <span data-ttu-id="0f3a5-116">関連付けられている実際のデータ ポイントをブックの全グラフが追跡している場合、true となります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-116">True if all charts in the workbook are tracking the actual data points to which they are attached.</span></span> <span data-ttu-id="0f3a5-117">False の場合、グラフはデータポイントのインデックスを追跡します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-117">False if the charts track the index of the data points.</span></span>

      <span data-ttu-id="0f3a5-118">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-118">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartDataPointTrack
    fullName: chartDataPointTrack
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartDataPointTrack: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#close:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-119">現在のブックを閉じます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-119">Close current workbook.</span></span>

      <span data-ttu-id="0f3a5-120">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: close(closeBehavior)
    fullName: close(closeBehavior)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(closeBehavior?: Excel.CloseBehavior): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0f3a5-121">例</span><span class="sxs-lookup"><span data-stu-id="0f3a5-121">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.close(Excel.CloseBehavior.save);
          });
          ```
      parameters:
        - id: closeBehavior
          description: <span data-ttu-id="0f3a5-122">ブックのクローズの動作</span><span class="sxs-lookup"><span data-stu-id="0f3a5-122">workbook close behavior.</span></span>
          type:
            - 'excel!Excel.CloseBehavior:enum'
  - uid: 'excel!Excel.Workbook#close:member(2)'
    summary: |-
      <span data-ttu-id="0f3a5-123">現在のブックを閉じます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-123">Close current workbook.</span></span>

      <span data-ttu-id="0f3a5-124">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-124">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: close(closeBehaviorString)
    fullName: close(closeBehaviorString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(closeBehaviorString?: "Save" | "SkipSave"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: closeBehaviorString
          description: <span data-ttu-id="0f3a5-125">ブックのクローズの動作</span><span class="sxs-lookup"><span data-stu-id="0f3a5-125">workbook close behavior.</span></span>
          type:
            - '"Save" | "SkipSave"'
  - uid: 'excel!Excel.Workbook#comments:member'
    summary: |-
      <span data-ttu-id="0f3a5-126">ブックに関連付けられているコメントの集まりを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-126">Represents a collection of Comments associated with the workbook.</span></span> <span data-ttu-id="0f3a5-127">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-127">Read-only.</span></span>

      <span data-ttu-id="0f3a5-128">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
  - uid: 'excel!Excel.Workbook#context:member'
    summary: <span data-ttu-id="0f3a5-129">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-129">The request context associated with the object.</span></span> <span data-ttu-id="0f3a5-130">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-130">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Workbook#customXmlParts:member'
    summary: |-
      <span data-ttu-id="0f3a5-131">このブックに格納されているカスタム XML パーツのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-131">Represents the collection of custom XML parts contained by this workbook.</span></span> <span data-ttu-id="0f3a5-132">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-132">Read-only.</span></span>

      <span data-ttu-id="0f3a5-133">\[[API セット: excelapi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-133">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: customXmlParts
    fullName: customXmlParts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
      return:
        type:
          - 'excel!Excel.CustomXmlPartCollection:class'
  - uid: 'excel!Excel.Workbook#dataConnections:member'
    summary: |-
      <span data-ttu-id="0f3a5-134">ブック内のすべてのデータ接続を表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-134">Represents all data connections in the workbook.</span></span> <span data-ttu-id="0f3a5-135">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-135">Read-only.</span></span>

      <span data-ttu-id="0f3a5-136">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-136">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataConnections
    fullName: dataConnections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataConnections: Excel.DataConnectionCollection;'
      return:
        type:
          - 'excel!Excel.DataConnectionCollection:class'
  - uid: 'excel!Excel.Workbook#functions:member'
    summary: |-
      <span data-ttu-id="0f3a5-137">計算に使用できるワークシート関数のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-137">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="0f3a5-138">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-138">Read-only.</span></span>

      <span data-ttu-id="0f3a5-139">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-139">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - 'excel!Excel.Functions:class'
  - uid: 'excel!Excel.Workbook#getActiveCell:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-140">ブックで現在アクティブなセルを取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-140">Gets the currently active cell from the workbook.</span></span>

      <span data-ttu-id="0f3a5-141">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-141">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveCell()
    fullName: getActiveCell()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveCell(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0f3a5-142">例</span><span class="sxs-lookup"><span data-stu-id="0f3a5-142">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let activeCell = myWorkbook.getActiveCell();
              activeCell.load("address");

              await context.sync();
              
              console.log("The active cell is " + activeCell.address);
          });
          ```
  - uid: 'excel!Excel.Workbook#getActiveChart:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-143">ブックで現在アクティブになっているグラフを取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-143">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="0f3a5-144">アクティブなグラフがない場合は、 `ItemNotFound`例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-144">If there is no active chart, an `ItemNotFound` exception is thrown.</span></span>

      <span data-ttu-id="0f3a5-145">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-145">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveChart()
    fullName: getActiveChart()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChart(): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
  - uid: 'excel!Excel.Workbook#getActiveChartOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-146">ブックで現在アクティブになっているグラフを取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-146">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="0f3a5-147">アクティブなグラフがない場合は、null オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-147">If there is no active chart, a null object is returned.</span></span>

      <span data-ttu-id="0f3a5-148">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-148">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveChartOrNullObject()
    fullName: getActiveChartOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveChartOrNullObject(): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
  - uid: 'excel!Excel.Workbook#getActiveSlicer:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-149">ブックで現在アクティブになっているスライサーを取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-149">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="0f3a5-150">アクティブなスライサーがない場合は、 `ItemNotFound`例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-150">If there is no active slicer, an `ItemNotFound` exception is thrown.</span></span>

      <span data-ttu-id="0f3a5-151">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-151">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getActiveSlicer()
    fullName: getActiveSlicer()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSlicer(): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
  - uid: 'excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-152">ブックで現在アクティブになっているスライサーを取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-152">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="0f3a5-153">アクティブになっているスライサーがない場合、null オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-153">If there is no active slicer, a null object is returned.</span></span>

      <span data-ttu-id="0f3a5-154">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-154">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getActiveSlicerOrNullObject()
    fullName: getActiveSlicerOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSlicerOrNullObject(): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
  - uid: 'excel!Excel.Workbook#getIsActiveCollabSession:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-155">ブックが複数のユーザーによって編集されている場合 (共同編集)、true となります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-155">True if the workbook is being edited by multiple users (co-authoring).</span></span> <span data-ttu-id="0f3a5-156">ブックの状態が変更されたときと、メソッドの結果に変更が反映されるまでには、多少の時間がかかる場合があるのでご注意ください。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-156">Please be aware there might be some delay between when the workbook status changes and when the changes are reflected on the result of the method.</span></span>

      <span data-ttu-id="0f3a5-157">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-157">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getIsActiveCollabSession()
    fullName: getIsActiveCollabSession()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.Workbook#getIsActiveCollabSession~0:complex'
        description: ''
  - uid: 'excel!Excel.Workbook#getSelectedRange:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-158">ブックから現在選択されている1つのセル範囲を取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-158">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="0f3a5-159">複数の範囲が選択されている場合、このメソッドはエラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-159">If there are multiple ranges selected, this method will throw an error.</span></span>

      <span data-ttu-id="0f3a5-160">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-160">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0f3a5-161">例</span><span class="sxs-lookup"><span data-stu-id="0f3a5-161">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Workbook#getSelectedRanges:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-162">ブックから現在選択されている 1 つまたは複数の範囲を取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-162">Gets the currently selected one or more ranges from the workbook.</span></span> <span data-ttu-id="0f3a5-163">getSelectedRange() の場合と同様に、このメソッドは、選択されているすべての範囲を表す RangeAreas オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-163">Unlike getSelectedRange(), this method returns a RangeAreas object that represents all the selected ranges.</span></span>

      <span data-ttu-id="0f3a5-164">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-164">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRanges()
    fullName: getSelectedRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRanges(): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0f3a5-165">例</span><span class="sxs-lookup"><span data-stu-id="0f3a5-165">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              const selectedRanges = context.workbook.getSelectedRanges();
              selectedRanges.format.fill.color = "lightblue";

              await context.sync();
          })
          ```
  - uid: 'excel!Excel.Workbook#isDirty:member'
    summary: |-
      <span data-ttu-id="0f3a5-166">ブックが最後に保存された後に変更が行われたかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-166">Specifies whether or not changes have been made since the workbook was last saved.</span></span> <span data-ttu-id="0f3a5-167">変更したブックを保存しない、または保存するかどうかを確認するダイアログボックスを非表示にして閉じる場合は、このプロパティを true に設定しておくことができます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-167">You can set this property to true if you want to close a modified workbook without either saving it or being prompted to save it.</span></span>

      <span data-ttu-id="0f3a5-168">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-168">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: isDirty
    fullName: isDirty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isDirty: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#load:member(1)'
    summary: <span data-ttu-id="0f3a5-169">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-169">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0f3a5-170">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-170">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="0f3a5-171">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-171">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0f3a5-172">`load(option?: string | string[]): Excel.Workbook`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-172">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0f3a5-173">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-173">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0f3a5-174">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-174">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="0f3a5-175">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-175">It is similar to the preceding signature.</span></span> <span data-ttu-id="0f3a5-176">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-176">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0f3a5-177">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-177">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0f3a5-178">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-178">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
  - uid: 'excel!Excel.Workbook#load:member(2)'
    summary: <span data-ttu-id="0f3a5-179">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-179">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0f3a5-180">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-180">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0f3a5-181">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-181">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Workbook#load:member(3)'
    summary: <span data-ttu-id="0f3a5-182">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-182">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0f3a5-183">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-183">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
      return:
        type:
          - 'excel!Excel.Workbook:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0f3a5-184">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-184">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Workbook#name:member'
    summary: |-
      <span data-ttu-id="0f3a5-185">ブックの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-185">Gets the workbook name.</span></span> <span data-ttu-id="0f3a5-186">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-186">Read-only.</span></span>

      <span data-ttu-id="0f3a5-187">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-187">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Workbook#names:member'
    summary: |-
      <span data-ttu-id="0f3a5-188">ブック スコープの名前付き項目 (名前付き範囲と名前付き定数) のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-188">Represents a collection of workbook scoped named items (named ranges and constants).</span></span> <span data-ttu-id="0f3a5-189">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-189">Read-only.</span></span>

      <span data-ttu-id="0f3a5-190">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-190">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
  - uid: 'excel!Excel.Workbook#onAutoSaveSettingChanged:member'
    summary: |-
      <span data-ttu-id="0f3a5-191">ブックで autoSave の設定が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-191">Occurs when the autoSave setting is changed on the workbook.</span></span>

      <span data-ttu-id="0f3a5-192">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-192">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAutoSaveSettingChanged
    fullName: onAutoSaveSettingChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAutoSaveSettingChanged: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Workbook#onAutoSaveSettingChanged~0:complex'
  - uid: 'excel!Excel.Workbook#onSelectionChanged:member'
    summary: |-
      <span data-ttu-id="0f3a5-193">ドキュメント内で選択が変更されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-193">Occurs when the selection in the document is changed.</span></span>

      <span data-ttu-id="0f3a5-194">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-194">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Workbook#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.Workbook#pivotTables:member'
    summary: |-
      <span data-ttu-id="0f3a5-195">ブックに関連付けられているピボットテーブルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-195">Represents a collection of PivotTables associated with the workbook.</span></span> <span data-ttu-id="0f3a5-196">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-196">Read-only.</span></span>

      <span data-ttu-id="0f3a5-197">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-197">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
  - uid: 'excel!Excel.Workbook#pivotTableStyles:member'
    summary: |-
      <span data-ttu-id="0f3a5-198">ブックに関連付けられている PivotTableStyle のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-198">Represents a collection of PivotTableStyles associated with the workbook.</span></span> <span data-ttu-id="0f3a5-199">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-199">Read-only.</span></span>

      <span data-ttu-id="0f3a5-200">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-200">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: pivotTableStyles
    fullName: pivotTableStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTableStyles: Excel.PivotTableStyleCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableStyleCollection:class'
  - uid: 'excel!Excel.Workbook#previouslySaved:member'
    summary: |-
      <span data-ttu-id="0f3a5-201">ブックがローカル環境またはオンライン環境に保存されたかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-201">Specifies whether or not the workbook has ever been saved locally or online.</span></span> <span data-ttu-id="0f3a5-202">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-202">Read-Only.</span></span>

      <span data-ttu-id="0f3a5-203">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-203">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: previouslySaved
    fullName: previouslySaved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly previouslySaved: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#properties:member'
    summary: |-
      <span data-ttu-id="0f3a5-204">ブックのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-204">Gets the workbook properties.</span></span> <span data-ttu-id="0f3a5-205">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-205">Read-only.</span></span>

      <span data-ttu-id="0f3a5-206">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-206">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: properties
    fullName: properties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly properties: Excel.DocumentProperties;'
      return:
        type:
          - 'excel!Excel.DocumentProperties:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0f3a5-207">例</span><span class="sxs-lookup"><span data-stu-id="0f3a5-207">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let titleValue = "Excel document properties API";
              let subjectValue = "Set and get document properties";
              let keywordsValue = "Set and get operations";
              let commentsValue = "This is an Excel document properties API code sample";
              let categoryValue = "Office Add-ins";
              let managerValue = "John";
              let companyValue = "Microsoft";

              let docProperties = context.workbook.properties;

              // Set the writeable document properties.
              docProperties.title = titleValue;
              docProperties.subject = subjectValue;
              docProperties.keywords = keywordsValue;
              docProperties.comments = commentsValue;
              docProperties.category = categoryValue;
              docProperties.manager = managerValue;
              docProperties.company = companyValue;

              await context.sync();

              console.log("Set the following document properties: title, subject, keywords, comments, category, manager, company.");
          });
          ```
  - uid: 'excel!Excel.Workbook#protection:member'
    summary: |-
      <span data-ttu-id="0f3a5-208">ブックの workbookProtection オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-208">Returns workbook protection object for a workbook.</span></span> <span data-ttu-id="0f3a5-209">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-209">Read-only.</span></span>

      <span data-ttu-id="0f3a5-210">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-210">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorkbookProtection;'
      return:
        type:
          - 'excel!Excel.WorkbookProtection:class'
  - uid: 'excel!Excel.Workbook#readOnly:member'
    summary: |-
      <span data-ttu-id="0f3a5-211">true の場合、ブックが読み取り専用モードで開かれます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-211">True if the workbook is open in Read-only mode.</span></span> <span data-ttu-id="0f3a5-212">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-212">Read-only.</span></span>

      <span data-ttu-id="0f3a5-213">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-213">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly readOnly: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#save:member(1)'
    summary: |-
      <span data-ttu-id="0f3a5-214">現在のブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-214">Save current workbook.</span></span>

      <span data-ttu-id="0f3a5-215">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-215">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: save(saveBehavior)
    fullName: save(saveBehavior)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'save(saveBehavior?: Excel.SaveBehavior): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0f3a5-216">例</span><span class="sxs-lookup"><span data-stu-id="0f3a5-216">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.save(Excel.SaveBehavior.save);
          });
          ```
      parameters:
        - id: saveBehavior
          description: <span data-ttu-id="0f3a5-217">ブックの保存動作。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-217">workbook save behavior.</span></span>
          type:
            - 'excel!Excel.SaveBehavior:enum'
  - uid: 'excel!Excel.Workbook#save:member(2)'
    summary: |-
      <span data-ttu-id="0f3a5-218">現在のブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-218">Save current workbook.</span></span>

      <span data-ttu-id="0f3a5-219">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-219">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: save(saveBehaviorString)
    fullName: save(saveBehaviorString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'save(saveBehaviorString?: "Save" | "Prompt"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: saveBehaviorString
          description: <span data-ttu-id="0f3a5-220">ブックの保存動作。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-220">workbook save behavior.</span></span>
          type:
            - '"Save" | "Prompt"'
  - uid: 'excel!Excel.Workbook#set:member(1)'
    summary: '<span data-ttu-id="0f3a5-221">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-221">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0f3a5-222">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-222">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="0f3a5-223">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-223">This method has the following additional signature:</span></span>

      `set(properties: Excel.Workbook): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="0f3a5-224">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-224">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
        - id: options
          description: <span data-ttu-id="0f3a5-225">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-225">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Workbook#set:member(2)'
    summary: '<span data-ttu-id="0f3a5-226">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-226">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Workbook:class'
  - uid: 'excel!Excel.Workbook#settings:member'
    summary: |-
      <span data-ttu-id="0f3a5-227">ブックに関連付けられている Setting のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-227">Represents a collection of Settings associated with the workbook.</span></span> <span data-ttu-id="0f3a5-228">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-228">Read-only.</span></span>

      <span data-ttu-id="0f3a5-229">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-229">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: settings
    fullName: settings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly settings: Excel.SettingCollection;'
      return:
        type:
          - 'excel!Excel.SettingCollection:class'
  - uid: 'excel!Excel.Workbook#slicers:member'
    summary: |-
      <span data-ttu-id="0f3a5-230">ブックに関連付けられているスライサーの集まりを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-230">Represents a collection of Slicers associated with the workbook.</span></span> <span data-ttu-id="0f3a5-231">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-231">Read-only.</span></span>

      <span data-ttu-id="0f3a5-232">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-232">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicers
    fullName: slicers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicers: Excel.SlicerCollection;'
      return:
        type:
          - 'excel!Excel.SlicerCollection:class'
  - uid: 'excel!Excel.Workbook#slicerStyles:member'
    summary: |-
      <span data-ttu-id="0f3a5-233">ブックに関連付けられている SlicerStyle のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-233">Represents a collection of SlicerStyles associated with the workbook.</span></span> <span data-ttu-id="0f3a5-234">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-234">Read-only.</span></span>

      <span data-ttu-id="0f3a5-235">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-235">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerStyles
    fullName: slicerStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerStyles: Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
  - uid: 'excel!Excel.Workbook#styles:member'
    summary: |-
      <span data-ttu-id="0f3a5-236">ブックに関連付けられているスタイルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-236">Represents a collection of styles associated with the workbook.</span></span> <span data-ttu-id="0f3a5-237">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-237">Read-only.</span></span>

      <span data-ttu-id="0f3a5-238">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-238">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: styles
    fullName: styles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly styles: Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
  - uid: 'excel!Excel.Workbook#tables:member'
    summary: |-
      <span data-ttu-id="0f3a5-239">ブックに関連付けられているテーブルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-239">Represents a collection of tables associated with the workbook.</span></span> <span data-ttu-id="0f3a5-240">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-240">Read-only.</span></span>

      <span data-ttu-id="0f3a5-241">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-241">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
  - uid: 'excel!Excel.Workbook#tableStyles:member'
    summary: |-
      <span data-ttu-id="0f3a5-242">ブックに関連付けられている TableStyle のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-242">Represents a collection of TableStyles associated with the workbook.</span></span> <span data-ttu-id="0f3a5-243">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-243">Read-only.</span></span>

      <span data-ttu-id="0f3a5-244">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-244">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: tableStyles
    fullName: tableStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableStyles: Excel.TableStyleCollection;'
      return:
        type:
          - 'excel!Excel.TableStyleCollection:class'
  - uid: 'excel!Excel.Workbook#timelineStyles:member'
    summary: |-
      <span data-ttu-id="0f3a5-245">ブックに関連付けられている TimelineStyle のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-245">Represents a collection of TimelineStyles associated with the workbook.</span></span> <span data-ttu-id="0f3a5-246">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-246">Read-only.</span></span>

      <span data-ttu-id="0f3a5-247">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-247">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: timelineStyles
    fullName: timelineStyles
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly timelineStyles: Excel.TimelineStyleCollection;'
      return:
        type:
          - 'excel!Excel.TimelineStyleCollection:class'
  - uid: 'excel!Excel.Workbook#toJSON:member(1)'
    summary: '<span data-ttu-id="0f3a5-248">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0f3a5-248">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0f3a5-249">.</span><span class="sxs-lookup"><span data-stu-id="0f3a5-249"></span></span> <span data-ttu-id="0f3a5-250">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0f3a5-250"></span></span><!-- --><span data-ttu-id="0f3a5-251">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元のブックのオブジェクトは API オブジェクトであるのに対し`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.WorkbookData`</span><span class="sxs-lookup"><span data-stu-id="0f3a5-251">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`</span></span><!-- --><span data-ttu-id="0f3a5-252">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-252">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookData:interface'
        description: ''
  - uid: 'excel!Excel.Workbook#use1904DateSystem:member'
    summary: |-
      <span data-ttu-id="0f3a5-253">ブックの日付を 1904 年から計算する場合、true となります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-253">True if the workbook uses the 1904 date system.</span></span>

      <span data-ttu-id="0f3a5-254">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-254">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: use1904DateSystem
    fullName: use1904DateSystem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'use1904DateSystem: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#usePrecisionAsDisplayed:member'
    summary: |-
      <span data-ttu-id="0f3a5-255">ブックを表示桁数でのみ計算する場合、true となります。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-255">True if calculations in this workbook will be done using only the precision of the numbers as they're displayed.</span></span> <span data-ttu-id="0f3a5-256">このプロパティを false から true に切り替えた場合、データは完全に正確に失われます。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-256">Data will permanently lose accuracy when switching this property from false to true.</span></span>

      <span data-ttu-id="0f3a5-257">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-257">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: usePrecisionAsDisplayed
    fullName: usePrecisionAsDisplayed
    langs:
      - typeScript
    type: property
    syntax:
      content: 'usePrecisionAsDisplayed: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Workbook#worksheets:member'
    summary: |-
      <span data-ttu-id="0f3a5-258">ブックに関連付けられているワークシートのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-258">Represents a collection of worksheets associated with the workbook.</span></span> <span data-ttu-id="0f3a5-259">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="0f3a5-259">Read-only.</span></span>

      <span data-ttu-id="0f3a5-260">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0f3a5-260">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - 'excel!Excel.WorksheetCollection:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Application:class'
    name: Excel.Application
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.CloseBehavior:enum'
    name: Excel.CloseBehavior
  - uid: 'excel!Excel.CommentCollection:class'
    name: Excel.CommentCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CustomXmlPartCollection:class'
    name: Excel.CustomXmlPartCollection
  - uid: 'excel!Excel.DataConnectionCollection:class'
    name: Excel.DataConnectionCollection
  - uid: 'excel!Excel.Functions:class'
    name: Excel.Functions
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Chart:class'
    name: Excel.Chart
  - uid: 'excel!Excel.Slicer:class'
    name: Excel.Slicer
  - uid: 'excel!Excel.Workbook#getIsActiveCollabSession~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.RangeAreas:class'
    name: Excel.RangeAreas
  - uid: 'excel!Excel.Workbook:class'
    name: Excel.Workbook
  - uid: 'excel!Excel.Interfaces.WorkbookLoadOptions:interface'
    name: Excel.Interfaces.WorkbookLoadOptions
  - uid: 'excel!Excel.NamedItemCollection:class'
    name: Excel.NamedItemCollection
  - uid: 'excel!Excel.Workbook#onAutoSaveSettingChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.WorkbookAutoSaveSettingChangedEventArgs:interface'
        name: Excel.WorkbookAutoSaveSettingChangedEventArgs
        fullName: Excel.WorkbookAutoSaveSettingChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Workbook#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.SelectionChangedEventArgs:interface'
        name: Excel.SelectionChangedEventArgs
        fullName: Excel.SelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.PivotTableStyleCollection:class'
    name: Excel.PivotTableStyleCollection
  - uid: 'excel!Excel.DocumentProperties:class'
    name: Excel.DocumentProperties
  - uid: 'excel!Excel.WorkbookProtection:class'
    name: Excel.WorkbookProtection
  - uid: 'excel!Excel.SaveBehavior:enum'
    name: Excel.SaveBehavior
  - uid: 'excel!Excel.Interfaces.WorkbookUpdateData:interface'
    name: Interfaces.WorkbookUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SettingCollection:class'
    name: Excel.SettingCollection
  - uid: 'excel!Excel.SlicerCollection:class'
    name: Excel.SlicerCollection
  - uid: 'excel!Excel.SlicerStyleCollection:class'
    name: Excel.SlicerStyleCollection
  - uid: 'excel!Excel.StyleCollection:class'
    name: Excel.StyleCollection
  - uid: 'excel!Excel.TableCollection:class'
    name: Excel.TableCollection
  - uid: 'excel!Excel.TableStyleCollection:class'
    name: Excel.TableStyleCollection
  - uid: 'excel!Excel.TimelineStyleCollection:class'
    name: Excel.TimelineStyleCollection
  - uid: 'excel!Excel.Interfaces.WorkbookData:interface'
    name: Excel.Interfaces.WorkbookData
  - uid: 'excel!Excel.WorksheetCollection:class'
    name: Excel.WorksheetCollection