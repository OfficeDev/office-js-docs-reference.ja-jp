### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedItem:class'
    summary: |-
      <span data-ttu-id="bad28-101">セルまたは値の範囲の定義済みの名前を表します。</span><span class="sxs-lookup"><span data-stu-id="bad28-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="bad28-102">名前には、プリミティブという名前のオブジェクト、range オブジェクト、または範囲への参照を指定できます。</span><span class="sxs-lookup"><span data-stu-id="bad28-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="bad28-103">このオブジェクトを使用して、名前に関連付けられた範囲オブジェクトを取得することができます。</span><span class="sxs-lookup"><span data-stu-id="bad28-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="bad28-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.NamedItem#arrayValues:member'
      - 'excel!Excel.NamedItem#comment:member'
      - 'excel!Excel.NamedItem#context:member'
      - 'excel!Excel.NamedItem#delete:member(1)'
      - 'excel!Excel.NamedItem#formula:member'
      - 'excel!Excel.NamedItem#getRange:member(1)'
      - 'excel!Excel.NamedItem#getRangeOrNullObject:member(1)'
      - 'excel!Excel.NamedItem#load:member(1)'
      - 'excel!Excel.NamedItem#load:member(2)'
      - 'excel!Excel.NamedItem#load:member(3)'
      - 'excel!Excel.NamedItem#name:member'
      - 'excel!Excel.NamedItem#scope:member'
      - 'excel!Excel.NamedItem#set:member(1)'
      - 'excel!Excel.NamedItem#set:member(2)'
      - 'excel!Excel.NamedItem#toJSON:member(1)'
      - 'excel!Excel.NamedItem#type:member'
      - 'excel!Excel.NamedItem#value:member'
      - 'excel!Excel.NamedItem#visible:member'
      - 'excel!Excel.NamedItem#worksheet:member'
      - 'excel!Excel.NamedItem#worksheetOrNullObject:member'
  - uid: 'excel!Excel.NamedItem#arrayValues:member'
    summary: |-
      <span data-ttu-id="bad28-105">名前付きアイテムの値と型を含むオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="bad28-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bad28-106">Read-only.</span></span>

      <span data-ttu-id="bad28-107">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: arrayValues
    fullName: arrayValues
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
      return:
        type:
          - 'excel!Excel.NamedItemArrayValues:class'
  - uid: 'excel!Excel.NamedItem#comment:member'
    summary: |-
      <span data-ttu-id="bad28-108">この名前に関連付けられているコメントを表します。</span><span class="sxs-lookup"><span data-stu-id="bad28-108">Represents the comment associated with this name.</span></span>

      <span data-ttu-id="bad28-109">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: comment
    fullName: comment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comment: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.NamedItem#context:member'
    summary: <span data-ttu-id="bad28-110">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="bad28-110">The request context associated with the object.</span></span> <span data-ttu-id="bad28-111">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="bad28-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NamedItem#delete:member(1)'
    summary: |-
      <span data-ttu-id="bad28-112">指定された名前を削除します。</span><span class="sxs-lookup"><span data-stu-id="bad28-112">Deletes the given name.</span></span>

      <span data-ttu-id="bad28-113">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bad28-114">例</span><span class="sxs-lookup"><span data-stu-id="bad28-114">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const totalName = sheet.names.getItemOrNullObject("TotalAmount");
              totalName.load();
              await context.sync();

              if (totalName.value) {
                  totalName.delete();

                  // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
                  sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];
              } else {
                  console.log("No named item created for the formula.");
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.NamedItem#formula:member'
    summary: |-
      <span data-ttu-id="bad28-115">名前付きのアイテムの数式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="bad28-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="bad28-116">数式は常に '=' 記号で始まります。</span><span class="sxs-lookup"><span data-stu-id="bad28-116">Formula always starts with a '=' sign.</span></span>

      <span data-ttu-id="bad28-117">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bad28-118">例</span><span class="sxs-lookup"><span data-stu-id="bad28-118">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Get the named item
              const myNamedItem = sheet.names.getItemOrNullObject("MyRange");
              myNamedItem.load("name, formula");
              await context.sync();

              if (myNamedItem.isNullObject) {
                  console.log(`There is no named item. Create it with "Add named item for a range" first.`);
              } else {                    
                  // Update named item to point to the second range
                  myNamedItem.formula = "=Sample!$B$10:$D$14";
                  sheet.getRange("B10:D14").select();
                  await context.sync();

                  console.log(`Just updated the named item "${myNamedItem.name}" -- it's now located here: ${myNamedItem.formula}`);
              }
          });
          ```
  - uid: 'excel!Excel.NamedItem#getRange:member(1)'
    summary: |-
      <span data-ttu-id="bad28-119">名前に関連付けられている範囲オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-119">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="bad28-120">名前付きアイテムの型が範囲でない場合、エラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="bad28-120">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="bad28-121">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bad28-122">例</span><span class="sxs-lookup"><span data-stu-id="bad28-122">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.NamedItem#getRangeOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="bad28-123">名前に関連付けられている範囲オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-123">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="bad28-124">名前付きアイテムの型が範囲でない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-124">Returns a null object if the named item's type is not a range.</span></span>

      <span data-ttu-id="bad28-125">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.NamedItem#load:member(1)'
    summary: <span data-ttu-id="bad28-126">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bad28-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bad28-127">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bad28-127">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="bad28-128">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="bad28-128">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="bad28-129">`load(option?: string | string[]): Excel.NamedItem`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="bad28-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="bad28-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="bad28-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="bad28-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="bad28-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="bad28-132">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="bad28-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="bad28-133">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="bad28-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bad28-134">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="bad28-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bad28-135">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="bad28-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.NamedItemLoadOptions:interface'
  - uid: 'excel!Excel.NamedItem#load:member(2)'
    summary: <span data-ttu-id="bad28-136">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bad28-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bad28-137">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bad28-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bad28-138">例</span><span class="sxs-lookup"><span data-stu-id="bad28-138">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="bad28-139">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="bad28-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.NamedItem#load:member(3)'
    summary: <span data-ttu-id="bad28-140">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bad28-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bad28-141">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bad28-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="bad28-142">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="bad28-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.NamedItem#name:member'
    summary: |-
      <span data-ttu-id="bad28-143">オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="bad28-143">The name of the object.</span></span> <span data-ttu-id="bad28-144">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="bad28-144">Read-only.</span></span>

      <span data-ttu-id="bad28-145">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.NamedItem#scope:member'
    summary: |-
      <span data-ttu-id="bad28-146">ブックまたは特定のワークシートに対して名前のスコープを設定するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="bad28-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="bad28-147">可能な値は次のとおりです。ワークシート、ブック。</span><span class="sxs-lookup"><span data-stu-id="bad28-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="bad28-148">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bad28-148">Read-only.</span></span>

      <span data-ttu-id="bad28-149">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: scope
    fullName: scope
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
      return:
        type:
          - 'excel!Excel.NamedItem#scope~0:complex'
  - uid: 'excel!Excel.NamedItem#set:member(1)'
    summary: '<span data-ttu-id="bad28-150">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="bad28-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="bad28-151">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="bad28-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="bad28-152">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="bad28-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="bad28-153">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bad28-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.NamedItemUpdateData:interface'
        - id: options
          description: <span data-ttu-id="bad28-154">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="bad28-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.NamedItem#set:member(2)'
    summary: '<span data-ttu-id="bad28-155">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="bad28-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.NamedItem:class'
  - uid: 'excel!Excel.NamedItem#toJSON:member(1)'
    summary: '<span data-ttu-id="bad28-156">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="bad28-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="bad28-157">.</span><span class="sxs-lookup"><span data-stu-id="bad28-157"></span></span> <span data-ttu-id="bad28-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="bad28-158"></span></span><!-- --><span data-ttu-id="bad28-159">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の NamedItem オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="bad28-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="bad28-160">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="bad28-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - 'excel!Excel.Interfaces.NamedItemData:interface'
        description: ''
  - uid: 'excel!Excel.NamedItem#type:member'
    summary: |-
      <span data-ttu-id="bad28-161">名前の数式によって返される値の型を示します。</span><span class="sxs-lookup"><span data-stu-id="bad28-161">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="bad28-162">詳細については、「Excel. NamedItemType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bad28-162">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="bad28-163">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bad28-163">Read-only.</span></span>

      <span data-ttu-id="bad28-164">\[[API set: ExcelApi 1.1 For String、Integer、Double、Boolean、Range、Error; 1.7 (配列](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets))\]</span><span class="sxs-lookup"><span data-stu-id="bad28-164">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - 'excel!Excel.NamedItem#type~0:complex'
  - uid: 'excel!Excel.NamedItem#value:member'
    summary: |-
      <span data-ttu-id="bad28-165">名前の数式で計算された値を表します。</span><span class="sxs-lookup"><span data-stu-id="bad28-165">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="bad28-166">名前付き範囲の場合は範囲のアドレスを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-166">For a named range, will return the range address.</span></span> <span data-ttu-id="bad28-167">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="bad28-167">Read-only.</span></span>

      <span data-ttu-id="bad28-168">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-168">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.NamedItem#visible:member'
    summary: |-
      <span data-ttu-id="bad28-169">オブジェクトを表示するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="bad28-169">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="bad28-170">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-170">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.NamedItem#worksheet:member'
    summary: |-
      <span data-ttu-id="bad28-171">名前付きのアイテムの対象になるワークシートを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="bad28-172">アイテムのスコープがブックに設定されている場合は、エラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="bad28-172">Throws an error if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="bad28-173">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
  - uid: 'excel!Excel.NamedItem#worksheetOrNullObject:member'
    summary: |-
      <span data-ttu-id="bad28-174">名前付きのアイテムの対象になるワークシートを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-174">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="bad28-175">アイテムがブックを対象にしている場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bad28-175">Returns a null object if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="bad28-176">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bad28-176">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheetOrNullObject
    fullName: worksheetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.NamedItemArrayValues:class'
    name: Excel.NamedItemArrayValues
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.NamedItem:class'
    name: Excel.NamedItem
  - uid: 'excel!Excel.Interfaces.NamedItemLoadOptions:interface'
    name: Excel.Interfaces.NamedItemLoadOptions
  - uid: 'excel!Excel.NamedItem#scope~0:complex'
    name: Excel.NamedItemScope | "Worksheet" | "Workbook"
    fullName: Excel.NamedItemScope | "Worksheet" | "Workbook"
    spec.typeScript:
      - uid: 'excel!Excel.NamedItemScope:enum'
        name: Excel.NamedItemScope
        fullName: Excel.NamedItemScope
      - name: ' | "Worksheet" | "Workbook"'
        fullName: ' | "Worksheet" | "Workbook"'
  - uid: 'excel!Excel.Interfaces.NamedItemUpdateData:interface'
    name: Interfaces.NamedItemUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.NamedItemData:interface'
    name: Excel.Interfaces.NamedItemData
  - uid: 'excel!Excel.NamedItem#type~0:complex'
    name: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
    fullName: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
    spec.typeScript:
      - uid: 'excel!Excel.NamedItemType:enum'
        name: Excel.NamedItemType
        fullName: Excel.NamedItemType
      - name: ' | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"'
        fullName: ' | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"'
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet