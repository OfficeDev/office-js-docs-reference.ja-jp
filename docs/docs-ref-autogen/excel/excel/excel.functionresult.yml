### YamlMime:UniversalReference
items:
  - uid: excel.Excel.FunctionResult
    summary: |-
      <span data-ttu-id="dfe48-101">関数評価操作の結果を含むオブジェクト</span><span class="sxs-lookup"><span data-stu-id="dfe48-101">An object containing the result of a function-evaluation operation</span></span>

      <span data-ttu-id="dfe48-102">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dfe48-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.FunctionResult
    fullName: Excel.FunctionResult
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.FunctionResult.context
      - excel.Excel.FunctionResult.error
      - excel.Excel.FunctionResult.load
      - excel.Excel.FunctionResult.load_1
      - excel.Excel.FunctionResult.load_2
      - excel.Excel.FunctionResult.toJSON
      - excel.Excel.FunctionResult.value
  - uid: excel.Excel.FunctionResult.context
    summary: <span data-ttu-id="dfe48-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="dfe48-103">The request context associated with the object.</span></span> <span data-ttu-id="dfe48-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="dfe48-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.FunctionResult.error
    summary: |-
      <span data-ttu-id="dfe48-105">エラー値 ("\#DIV/0" など) を表すエラー値。</span><span class="sxs-lookup"><span data-stu-id="dfe48-105">Error value (such as "\#DIV/0") representing the error.</span></span> <span data-ttu-id="dfe48-106">エラー文字列が設定されていない場合は、関数が正常に終了し、その結果が Value フィールドに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="dfe48-106">If the error string is not set, then the function succeeded, and its result is written to the Value field.</span></span> <span data-ttu-id="dfe48-107">エラーは常に英語のロケールです。</span><span class="sxs-lookup"><span data-stu-id="dfe48-107">The error is always in the English locale.</span></span>

      <span data-ttu-id="dfe48-108">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dfe48-108">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: error
    fullName: error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly error: string;'
      return:
        type:
          - string
  - uid: excel.Excel.FunctionResult.load
    summary: <span data-ttu-id="dfe48-109">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="dfe48-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dfe48-110">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dfe48-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="dfe48-111">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dfe48-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="dfe48-112">`load(option?: string | string[]): FunctionResult<T>`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="dfe48-112">`load(option?: string | string[]): FunctionResult<T>` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="dfe48-113">`load(option?: { select?: string; expand?: string; }): FunctionResult<T>`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="dfe48-113">`load(option?: { select?: string; expand?: string; }): FunctionResult<T>` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="dfe48-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): FunctionResult<T>`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="dfe48-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): FunctionResult<T>` - Only available on collection types.</span></span> <span data-ttu-id="dfe48-115">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="dfe48-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="dfe48-116">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="dfe48-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="dfe48-117">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="dfe48-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="dfe48-118">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="dfe48-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FunctionResultLoadOptions): FunctionResult<T>;'
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.FunctionResultLoadOptions
  - uid: excel.Excel.FunctionResult.load_1
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): FunctionResult<T>;'
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[]'
  - uid: excel.Excel.FunctionResult.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(option?: {
                    select?: string;
                    expand?: string;
                }): FunctionResult<T>;
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: excel.Excel.FunctionResult.toJSON
    summary: '<span data-ttu-id="dfe48-119">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="dfe48-119">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="dfe48-120">.</span><span class="sxs-lookup"><span data-stu-id="dfe48-120"></span></span> <span data-ttu-id="dfe48-121">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="dfe48-121"></span></span><!-- --><span data-ttu-id="dfe48-122">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の FunctionResult<T>オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Interfaces.FunctionResultData<T>`</span><span class="sxs-lookup"><span data-stu-id="dfe48-122">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original FunctionResult<T> object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Interfaces.FunctionResultData<T>`</span></span><!-- --><span data-ttu-id="dfe48-123">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="dfe48-123">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Interfaces.FunctionResultData<T>;'
      return:
        type:
          - Interfaces.FunctionResultData<T>
        description: ''
  - uid: excel.Excel.FunctionResult.value
    summary: |-
      <span data-ttu-id="dfe48-124">関数評価の値。</span><span class="sxs-lookup"><span data-stu-id="dfe48-124">The value of function evaluation.</span></span> <span data-ttu-id="dfe48-125">エラーが発生していない場合にのみ、value フィールドに値が設定されます (つまり、Error プロパティが設定されていない場合)。</span><span class="sxs-lookup"><span data-stu-id="dfe48-125">The value field will be populated only if no error has occurred (i.e., the Error property is not set).</span></span>

      <span data-ttu-id="dfe48-126">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dfe48-126">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: T;'
      return:
        type:
          - T