### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SlicerItem:class'
    summary: |-
      <span data-ttu-id="d6af1-101">スライサーのスライサーアイテムを表します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-101">Represents a slicer item in a slicer.</span></span>

      <span data-ttu-id="d6af1-102">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6af1-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerItem
    fullName: Excel.SlicerItem
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.SlicerItem#context:member'
      - 'excel!Excel.SlicerItem#hasData:member'
      - 'excel!Excel.SlicerItem#isSelected:member'
      - 'excel!Excel.SlicerItem#key:member'
      - 'excel!Excel.SlicerItem#load:member(1)'
      - 'excel!Excel.SlicerItem#load:member(2)'
      - 'excel!Excel.SlicerItem#load:member(3)'
      - 'excel!Excel.SlicerItem#name:member'
      - 'excel!Excel.SlicerItem#set:member(1)'
      - 'excel!Excel.SlicerItem#set:member(2)'
      - 'excel!Excel.SlicerItem#toJSON:member(1)'
  - uid: 'excel!Excel.SlicerItem#context:member'
    summary: <span data-ttu-id="d6af1-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d6af1-103">The request context associated with the object.</span></span> <span data-ttu-id="d6af1-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="d6af1-104">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SlicerItem#hasData:member'
    summary: |-
      <span data-ttu-id="d6af1-105">スライサー アイテムにデータが含まれている場合、true となります。</span><span class="sxs-lookup"><span data-stu-id="d6af1-105">True if the slicer item has data.</span></span>

      <span data-ttu-id="d6af1-106">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6af1-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: hasData
    fullName: hasData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hasData: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.SlicerItem#isSelected:member'
    summary: |-
      <span data-ttu-id="d6af1-107">スライサー アイテムが選択されている場合、true となります。</span><span class="sxs-lookup"><span data-stu-id="d6af1-107">True if the slicer item is selected.</span></span> <span data-ttu-id="d6af1-108">この値を設定しても、他の SlicerItems の選択されている状態は消去されません。</span><span class="sxs-lookup"><span data-stu-id="d6af1-108">Setting this value will not clear other SlicerItems' selected state.</span></span> <span data-ttu-id="d6af1-109">既定では、スライサーアイテムが選択されているのが1つだけの場合、選択を解除すると、すべてのアイテムが選択されます。</span><span class="sxs-lookup"><span data-stu-id="d6af1-109">By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.</span></span>

      <span data-ttu-id="d6af1-110">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6af1-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isSelected
    fullName: isSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.SlicerItem#key:member'
    summary: |-
      <span data-ttu-id="d6af1-111">スライサー アイテムを表す一意の値を表します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-111">Represents the unique value representing the slicer item.</span></span>

      <span data-ttu-id="d6af1-112">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6af1-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.SlicerItem#load:member(1)'
    summary: <span data-ttu-id="d6af1-113">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d6af1-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6af1-114">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6af1-114">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerItemLoadOptions): Excel.SlicerItem;'
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="d6af1-115">読み込むオブジェクトのプロパティを指定するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-115">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerItemLoadOptions:interface'
  - uid: 'excel!Excel.SlicerItem#load:member(2)'
    summary: <span data-ttu-id="d6af1-116">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d6af1-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6af1-117">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6af1-117">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerItem;'
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d6af1-118">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d6af1-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SlicerItem#load:member(3)'
    summary: <span data-ttu-id="d6af1-119">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d6af1-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d6af1-120">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d6af1-120">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.SlicerItem;
      return:
        type:
          - 'excel!Excel.SlicerItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d6af1-121">`propertyNamesAndPaths.select`は、読み込むプロパティを指定するコンマで区切られた文字列で`propertyNamesAndPaths.expand` 、読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。</span><span class="sxs-lookup"><span data-stu-id="d6af1-121">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.SlicerItem#name:member'
    summary: |-
      <span data-ttu-id="d6af1-122">UI に表示されるタイトルを表します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-122">Represents the title displayed in the UI.</span></span>

      <span data-ttu-id="d6af1-123">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d6af1-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.SlicerItem#set:member(1)'
    summary: '<span data-ttu-id="d6af1-124">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d6af1-125">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="d6af1-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="d6af1-126">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="d6af1-126">This method has the following additional signature:</span></span>

      `set(properties: Excel.SlicerItem): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="d6af1-127">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d6af1-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerItemUpdateData:interface'
        - id: options
          description: <span data-ttu-id="d6af1-128">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.SlicerItem#set:member(2)'
    summary: '<span data-ttu-id="d6af1-129">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.SlicerItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.SlicerItem:class'
  - uid: 'excel!Excel.SlicerItem#toJSON:member(1)'
    summary: '<span data-ttu-id="d6af1-130">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d6af1-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d6af1-131">.</span><span class="sxs-lookup"><span data-stu-id="d6af1-131"></span></span> <span data-ttu-id="d6af1-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d6af1-132"></span></span><!-- --><span data-ttu-id="d6af1-133">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の SlicerItem オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.SlicerItemData`</span><span class="sxs-lookup"><span data-stu-id="d6af1-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.SlicerItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerItemData`</span></span><!-- --><span data-ttu-id="d6af1-134">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="d6af1-134">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerItemData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerItemData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.SlicerItem:class'
    name: Excel.SlicerItem
  - uid: 'excel!Excel.Interfaces.SlicerItemLoadOptions:interface'
    name: Excel.Interfaces.SlicerItemLoadOptions
  - uid: 'excel!Excel.Interfaces.SlicerItemUpdateData:interface'
    name: Interfaces.SlicerItemUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.SlicerItemData:interface'
    name: Excel.Interfaces.SlicerItemData