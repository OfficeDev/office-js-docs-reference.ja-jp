### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableScopedCollection
    summary: |-
      <span data-ttu-id="3545a-101">表のスコープが設定されたコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="3545a-101">Represents a scoped collection of tables.</span></span> <span data-ttu-id="3545a-102">表ごとに、左上隅がアンカー位置と見なされ、表は上から下、左から右に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="3545a-102">For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.</span></span>

      <span data-ttu-id="3545a-103">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3545a-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableScopedCollection
    fullName: Excel.TableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.TableScopedCollection.context
      - excel.Excel.TableScopedCollection.getCount
      - excel.Excel.TableScopedCollection.getFirst
      - excel.Excel.TableScopedCollection.getItem
      - excel.Excel.TableScopedCollection.items
      - excel.Excel.TableScopedCollection.load
      - excel.Excel.TableScopedCollection.load_1
      - excel.Excel.TableScopedCollection.load_2
      - excel.Excel.TableScopedCollection.toJSON
  - uid: excel.Excel.TableScopedCollection.context
    summary: <span data-ttu-id="3545a-104">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="3545a-104">The request context associated with the object.</span></span> <span data-ttu-id="3545a-105">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="3545a-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.TableScopedCollection.getCount
    summary: |-
      <span data-ttu-id="3545a-106">コレクションに含まれるテーブルの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3545a-106">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="3545a-107">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3545a-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.TableScopedCollection.getFirst
    summary: |-
      <span data-ttu-id="3545a-108">コレクション内の最初のテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="3545a-108">Gets the first table in the collection.</span></span> <span data-ttu-id="3545a-109">一番上の左のテーブルがコレクション内で最初のテーブルになるように、コレクションのテーブルが上から下へ、左から右への順で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="3545a-109">The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.</span></span>

      <span data-ttu-id="3545a-110">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3545a-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
  - uid: excel.Excel.TableScopedCollection.getItem
    summary: |-
      <span data-ttu-id="3545a-111">名前または ID を使用してテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="3545a-111">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="3545a-112">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3545a-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="3545a-113">取得するテーブルの名前または ID。</span><span class="sxs-lookup"><span data-stu-id="3545a-113">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.TableScopedCollection.items
    summary: <span data-ttu-id="3545a-114">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="3545a-114">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'Excel.Table[]'
  - uid: excel.Excel.TableScopedCollection.load
    summary: <span data-ttu-id="3545a-115">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3545a-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3545a-116">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3545a-116">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="3545a-117">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3545a-117">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3545a-118">`load(option?: string | string[]): Excel.TableScopedCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="3545a-118">`load(option?: string | string[]): Excel.TableScopedCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3545a-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3545a-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3545a-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3545a-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection` - Only available on collection types.</span></span> <span data-ttu-id="3545a-121">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="3545a-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="3545a-122">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3545a-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3545a-123">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3545a-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3545a-124">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="3545a-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.TableScopedCollection.load_1
    summary: <span data-ttu-id="3545a-125">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3545a-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3545a-126">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3545a-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3545a-127">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="3545a-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableScopedCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.TableScopedCollection.toJSON
    summary: '<span data-ttu-id="3545a-128">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3545a-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3545a-129">.</span><span class="sxs-lookup"><span data-stu-id="3545a-129"></span></span> <span data-ttu-id="3545a-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3545a-130"></span></span><!-- --><span data-ttu-id="3545a-131">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.TableScopedCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.TableScopedCollectionData`</span><span class="sxs-lookup"><span data-stu-id="3545a-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableScopedCollectionData`</span></span><!-- --><span data-ttu-id="3545a-132">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="3545a-132">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.TableScopedCollectionData
        description: ''