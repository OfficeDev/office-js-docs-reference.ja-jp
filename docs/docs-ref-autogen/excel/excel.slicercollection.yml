### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerCollection
    summary: |-
      <span data-ttu-id="2e5c2-101">ブックまたはワークシート上のすべてのスライサーオブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>

      <span data-ttu-id="2e5c2-102">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e5c2-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerCollection
    fullName: Excel.SlicerCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SlicerCollection.add
      - excel.Excel.SlicerCollection.context
      - excel.Excel.SlicerCollection.getCount
      - excel.Excel.SlicerCollection.getItem
      - excel.Excel.SlicerCollection.getItemAt
      - excel.Excel.SlicerCollection.getItemOrNullObject
      - excel.Excel.SlicerCollection.items
      - excel.Excel.SlicerCollection.load
      - excel.Excel.SlicerCollection.load_1
      - excel.Excel.SlicerCollection.load_2
      - excel.Excel.SlicerCollection.toJSON
  - uid: excel.Excel.SlicerCollection.add
    summary: |-
      <span data-ttu-id="2e5c2-103">ブックに新しいスライサーを追加します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-103">Adds a new slicer to the workbook.</span></span>

      <span data-ttu-id="2e5c2-104">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e5c2-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(slicerSource, sourceField, slicerDestination)'
    fullName: 'add(slicerSource, sourceField, slicerDestination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: <span data-ttu-id="2e5c2-105">新しいスライサー。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-105">The new slicer.</span></span>
      parameters:
        - id: slicerSource
          description: '<span data-ttu-id="2e5c2-106">新しいスライサーの基となるデータソース。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-106">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="2e5c2-107">PivotTable オブジェクト、Table オブジェクト、または文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-107">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="2e5c2-108">pivottable オブジェクトが渡されると、データソースは pivottable オブジェクトのソースになります。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-108">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="2e5c2-109">table オブジェクトが渡されると、データソースは table オブジェクトになります。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-109">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="2e5c2-110">文字列が渡されると、PivotTable/Table の名前または id として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-110">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>'
          type:
            - string | PivotTable | Table
        - id: sourceField
          description: '<span data-ttu-id="2e5c2-111">フィルター処理の対象となるデータソース内のフィールド。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-111">The field in the data source to filter by.</span></span> <span data-ttu-id="2e5c2-112">pivotfield オブジェクト、TableColumn オブジェクト、pivotfield の id、または TableColumn の id または名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-112">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>'
          type:
            - string | PivotField | number | TableColumn
        - id: slicerDestination
          description: <span data-ttu-id="2e5c2-113">省略可能です。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-113">Optional.</span></span> <span data-ttu-id="2e5c2-114">新しいスライサーを作成するワークシートを指定します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-114">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="2e5c2-115">ワークシートオブジェクト、またはワークシートの名前/id を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-115">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="2e5c2-116">スライサーコレクションをワークシートから取得する場合は、このパラメーターを省略できます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-116">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>
          type:
            - string | Worksheet
  - uid: excel.Excel.SlicerCollection.context
    summary: <span data-ttu-id="2e5c2-117">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-117">The request context associated with the object.</span></span> <span data-ttu-id="2e5c2-118">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-118">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SlicerCollection.getCount
    summary: |-
      <span data-ttu-id="2e5c2-119">コレクションに含まれるスライサーの数を返します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-119">Returns the number of slicers in the collection.</span></span>

      <span data-ttu-id="2e5c2-120">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e5c2-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerCollection.getItem
    summary: |-
      <span data-ttu-id="2e5c2-121">名前または ID を使用してスライサー オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-121">Gets a slicer object using its name or id.</span></span>

      <span data-ttu-id="2e5c2-122">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e5c2-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="2e5c2-123">スライサーの名前または id。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-123">The name or id of the slicer.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerCollection.getItemAt
    summary: |-
      <span data-ttu-id="2e5c2-124">コレクション内の位置に基づいてスライサーを取得します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-124">Gets a slicer based on its position in the collection.</span></span>

      <span data-ttu-id="2e5c2-125">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e5c2-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="2e5c2-126">取得するオブジェクトのインデックス値。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-126">Index value of the object to be retrieved.</span></span> <span data-ttu-id="2e5c2-127">0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-127">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.SlicerCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="2e5c2-128">名前または ID に基づいてスライサーを取得します。スライサーが存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-128">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>

      <span data-ttu-id="2e5c2-129">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2e5c2-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="2e5c2-130">取得するスライサーの名前または Id。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-130">Name or Id of the slicer to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerCollection.items
    summary: <span data-ttu-id="2e5c2-131">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-131">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Slicer[];'
      return:
        type:
          - 'Excel.Slicer[]'
  - uid: excel.Excel.SlicerCollection.load
    summary: <span data-ttu-id="2e5c2-132">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2e5c2-133">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-133">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="2e5c2-134">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-134">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="2e5c2-135">`load(option?: string | string[]): Excel.SlicerCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-135">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="2e5c2-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="2e5c2-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="2e5c2-138">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-138">It is similar to the preceding signature.</span></span> <span data-ttu-id="2e5c2-139">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-139">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2e5c2-140">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-140">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2e5c2-141">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-141">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerCollection.load_1
    summary: <span data-ttu-id="2e5c2-142">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2e5c2-143">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-143">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="2e5c2-144">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-144">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerCollection.toJSON
    summary: '<span data-ttu-id="2e5c2-145">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="2e5c2-145">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="2e5c2-146">.</span><span class="sxs-lookup"><span data-stu-id="2e5c2-146"></span></span> <span data-ttu-id="2e5c2-147">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="2e5c2-147"></span></span><!-- --><span data-ttu-id="2e5c2-148">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.SlicerCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.SlicerCollectionData`</span><span class="sxs-lookup"><span data-stu-id="2e5c2-148">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`</span></span><!-- --><span data-ttu-id="2e5c2-149">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="2e5c2-149">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerCollectionData
        description: ''