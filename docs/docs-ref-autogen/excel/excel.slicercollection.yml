### YamlMime:UniversalReference
ms.openlocfilehash: 3f1eb34fd6274b5bcbf9e3a7700cbe5671c17331
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110992"
items:
- uid: excel.Excel.SlicerCollection
  summary: >-
    ブックまたはワークシート上のすべてのスライサーオブジェクトのコレクションを表します。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.SlicerCollection
  fullName: Excel.SlicerCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerCollection.add
  - excel.Excel.SlicerCollection.context
  - excel.Excel.SlicerCollection.getCount
  - excel.Excel.SlicerCollection.getItem
  - excel.Excel.SlicerCollection.getItemAt
  - excel.Excel.SlicerCollection.getItemOrNullObject
  - excel.Excel.SlicerCollection.items
  - excel.Excel.SlicerCollection.load
  - excel.Excel.SlicerCollection.load_1
  - excel.Excel.SlicerCollection.load_2
  - excel.Excel.SlicerCollection.toJSON
- uid: excel.Excel.SlicerCollection.add
  summary: >-
    新しいスライサーをブックに追加します。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: add(slicerSource, sourceField, slicerDestination)
  fullName: add(slicerSource, sourceField, slicerDestination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: 新しいスライサー。
    parameters:
    - id: slicerSource
      description: 新しいスライサーの基となるデータソース。 PivotTable オブジェクト、Table オブジェクト、または文字列を指定できます。 pivottable オブジェクトが渡されると、データソースは pivottable オブジェクトのソースになります。 table オブジェクトが渡されると、データソースは table オブジェクトになります。 文字列が渡されると、PivotTable/Table の名前または id として解釈されます。
      type:
      - string | PivotTable | Table
    - id: sourceField
      description: フィルター処理の対象となるデータソース内のフィールド。 pivotfield オブジェクト、TableColumn オブジェクト、pivotfield の id、または TableColumn の id または名前を指定できます。
      type:
      - string | PivotField | number | TableColumn
    - id: slicerDestination
      description: 省略可能。 新しいスライサーを作成するワークシートを指定します。 ワークシートオブジェクト、またはワークシートの名前/id を指定できます。 スライサーコレクションをワークシートから取得する場合は、このパラメーターを省略できます。
      type:
      - string | Worksheet
- uid: excel.Excel.SlicerCollection.context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerCollection.getCount
  summary: >-
    コレクション内のスライサーの数を返します。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerCollection.getItem
  summary: >-
    名前または id を使用してスライサーオブジェクトを取得します。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: スライサーの名前または id。
      type:
      - string
- uid: excel.Excel.SlicerCollection.getItemAt
  summary: >-
    コレクション内の位置に基づいてスライサーを取得します。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: index
      description: 取得するオブジェクトのインデックス値。0 を起点とする番号になります。
      type:
      - number
- uid: excel.Excel.SlicerCollection.getItemOrNullObject
  summary: >-
    名前または id を使用してスライサーを取得します。スライサーが存在しない場合は、null オブジェクトが返されます。


    \[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: 取得するスライサーの名前または Id。
      type:
      - string
- uid: excel.Excel.SlicerCollection.items
  summary: このコレクション内の読み込まれた子アイテムを取得します。
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Slicer[];'
    return:
      type:
      - Excel.Slicer[]
- uid: excel.Excel.SlicerCollection.load
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。
  remarks: >-
    このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。


    `load(option?: string | string[]): Excel.SlicerCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。


    `load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerCollection.load_1
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.SlicerCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerCollection.toJSON
  summary: API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。 (`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。`Excel.SlicerCollection`元のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、コレクションのアイテムから`Excel.Interfaces.SlicerCollectionData` <!-- -->読み込まれたプロパティの浅いコピーを持つ "items" 配列を含む、プレーンな JavaScript オブジェクト (として型指定) を返します。
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerCollectionData
      description: ''
