### YamlMime:UniversalReference
ms.openlocfilehash: 21e920133696aeb162151fa12d63d9872084b411
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724550"
items:
- uid: excel.Excel.Setting
  summary: >-
    <span data-ttu-id="dc6e5-101">(単位あたりのアドインのファイル) のドキュメントに永続化設定のキーと値のペア設定を表します。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-101">Setting represents a key-value pair of a setting persisted to the document (per file per add-in).</span></span> <span data-ttu-id="dc6e5-102">コンテンツまたは作業ウィンドウで必要な状態やライフ サイクルの情報を格納するこれらカスタムのキーと値のペアを使用することができますアドインです。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-102">These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in.</span></span> <span data-ttu-id="dc6e5-103">設定は、ドキュメントに保存されている、そのユーザー情報やパスワードなど機密性の高い、または保護された情報を格納する場所することができませんので注意してください。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-103">Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.</span></span>


    <span data-ttu-id="dc6e5-104">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dc6e5-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Setting
  fullName: Excel.Setting
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Setting.context
  - excel.Excel.Setting.delete
  - excel.Excel.Setting.key
  - excel.Excel.Setting.load
  - excel.Excel.Setting.toJSON
  - excel.Excel.Setting.value
- uid: excel.Excel.Setting.context
  summary: <span data-ttu-id="dc6e5-105">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-105">The request context associated with the object.</span></span> <span data-ttu-id="dc6e5-106">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Setting.delete
  summary: >-
    <span data-ttu-id="dc6e5-107">設定を削除します。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-107">Deletes the setting.</span></span>


    <span data-ttu-id="dc6e5-108">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dc6e5-108">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"dc6e5-109\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"dc6e5-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        console.log(\"The setting has been deleted\");\n    } else {\n        console.log(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Setting.key
  summary: >-
    <span data-ttu-id="dc6e5-p103">Setting の ID を表すキーを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-p103">Returns the key that represents the id of the Setting. Read-only.</span></span>


    <span data-ttu-id="dc6e5-112">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dc6e5-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: key
  fullName: key
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly key: string;'
    return:
      type:
      - string
- uid: excel.Excel.Setting.load
  summary: <span data-ttu-id="dc6e5-113">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dc6e5-114">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-114">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="dc6e5-115">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-115">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="dc6e5-116">`load(option?: { select?: string; expand?: string; }): Excel.Setting`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-116">`load(option?: { select?: string; expand?: string; }): Excel.Setting` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="dc6e5-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting` - Only available on collection types.</span></span> <span data-ttu-id="dc6e5-118">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="dc6e5-119">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="dc6e5-120">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="dc6e5-121">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="dc6e5-122">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Setting.toJSON
  summary: <span data-ttu-id="dc6e5-123">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-123">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="dc6e5-124">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.Setting オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.SettingData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-124">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Setting object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SettingData;'
    return:
      type:
      - excel.Excel.Interfaces.SettingData
      description: ''
- uid: excel.Excel.Setting.value
  summary: >-
    <span data-ttu-id="dc6e5-125">この設定に格納されている値を表します。</span><span class="sxs-lookup"><span data-stu-id="dc6e5-125">Represents the value stored for this setting.</span></span>


    <span data-ttu-id="dc6e5-126">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dc6e5-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'value: any;'
    return:
      type:
      - any
