### YamlMime:UniversalReference
ms.openlocfilehash: dbf7155c3afe2e10b782cf957a9df5d831b138e9
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24048938"
items:
- uid: excel.Excel.Setting
  summary: >-
    (単位あたりのアドインのファイル) のドキュメントに永続化設定のキーと値のペア設定を表します。 コンテンツまたは作業ウィンドウで必要な状態やライフ サイクルの情報を格納するこれらカスタムのキーと値のペアを使用することができますアドインです。 設定は、ドキュメントに保存されている、そのユーザー情報やパスワードなど機密性の高い、または保護された情報を格納する場所することができませんので注意してください。


    \[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Setting
  fullName: excel.Excel.Setting
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Setting.delete
  - excel.Excel.Setting.key
  - excel.Excel.Setting.load
  - excel.Excel.Setting.toJSON
  - excel.Excel.Setting.value
- uid: excel.Excel.Setting.delete
  summary: >-
    設定を削除します。


    \[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: excel.Excel.Setting.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        OfficeHelpers.UI.notify(\"The setting has been deleted\");\n    } else {\n        OfficeHelpers.UI.notify(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Setting.key
  summary: >-
    Setting の ID を表すキーを返します。読み取り専用。


    \[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: key
  fullName: excel.Excel.Setting.key
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly key: string;'
    return:
      type:
      - string
- uid: excel.Excel.Setting.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: >-
    だけでなく、この署名は、このメソッドは、次の署名をします。


    `load(option?: { select?: string; expand?: string; }): Excel.Setting`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。
  name: load(option)
  fullName: excel.Excel.Setting.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.Setting.toJSON
  name: toJSON()
  fullName: excel.Excel.Setting.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SettingData;'
    return:
      type:
      - excel.Excel.Interfaces.SettingData
      description: ''
- uid: excel.Excel.Setting.value
  summary: >-
    この設定に格納されている値を表します。


    \[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: value
  fullName: excel.Excel.Setting.value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'value: any;'
    return:
      type:
      - any
