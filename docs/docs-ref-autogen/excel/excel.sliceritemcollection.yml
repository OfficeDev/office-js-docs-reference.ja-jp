### YamlMime:UniversalReference
ms.openlocfilehash: 67240d48283b5962ba4b24f7cacbb3ed805d8d07
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110229"
items:
- uid: excel.Excel.SlicerItemCollection
  summary: >-
    <span data-ttu-id="7056a-101">スライサーにあるすべてのスライサーアイテムオブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="7056a-101">Represents a collection of all the slicer item objects on the slicer.</span></span>


    <span data-ttu-id="7056a-102">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7056a-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerItemCollection
  fullName: Excel.SlicerItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerItemCollection.context
  - excel.Excel.SlicerItemCollection.getCount
  - excel.Excel.SlicerItemCollection.getItem
  - excel.Excel.SlicerItemCollection.getItemAt
  - excel.Excel.SlicerItemCollection.getItemOrNullObject
  - excel.Excel.SlicerItemCollection.items
  - excel.Excel.SlicerItemCollection.load
  - excel.Excel.SlicerItemCollection.load_1
  - excel.Excel.SlicerItemCollection.load_2
  - excel.Excel.SlicerItemCollection.toJSON
- uid: excel.Excel.SlicerItemCollection.context
  summary: <span data-ttu-id="7056a-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="7056a-103">The request context associated with the object.</span></span> <span data-ttu-id="7056a-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="7056a-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerItemCollection.getCount
  summary: >-
    <span data-ttu-id="7056a-105">スライサー内のスライサーアイテムの数を返します。</span><span class="sxs-lookup"><span data-stu-id="7056a-105">Returns the number of slicer items in the slicer.</span></span>


    <span data-ttu-id="7056a-106">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7056a-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerItemCollection.getItem
  summary: >-
    <span data-ttu-id="7056a-107">そのキーまたは名前を使用して、スライサーアイテムオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7056a-107">Gets a slicer item object using its key or name.</span></span>


    <span data-ttu-id="7056a-108">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7056a-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="7056a-109">スライサーアイテムのキーまたは名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="7056a-109">The key or name of the slicer item.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerItemCollection.getItemAt
  summary: >-
    <span data-ttu-id="7056a-110">コレクション内の位置に基づいてスライサーアイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="7056a-110">Gets a slicer item based on its position in the collection.</span></span>


    <span data-ttu-id="7056a-111">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7056a-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="7056a-p102">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="7056a-p102">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.SlicerItemCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="7056a-114">そのキーまたは名前を使用してスライサーアイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="7056a-114">Gets a slicer item using its key or name.</span></span> <span data-ttu-id="7056a-115">スライサーアイテムが存在しない場合は、null オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="7056a-115">If the slicer item does not exist, will return a null object.</span></span>


    <span data-ttu-id="7056a-116">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7056a-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="7056a-117">取得するスライサーのキーまたは名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="7056a-117">Key or name of the slicer to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerItemCollection.items
  summary: <span data-ttu-id="7056a-118">このコレクション内の読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="7056a-118">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.SlicerItem[];'
    return:
      type:
      - Excel.SlicerItem[]
- uid: excel.Excel.SlicerItemCollection.load
  summary: <span data-ttu-id="7056a-119">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="7056a-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7056a-120">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7056a-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="7056a-121">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7056a-121">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="7056a-122">`load(option?: string | string[]): Excel.SlicerItemCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="7056a-122">`load(option?: string | string[]): Excel.SlicerItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="7056a-123">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItemCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="7056a-123">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="7056a-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItemCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="7056a-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="7056a-125">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="7056a-125">It is similar to the preceding signature.</span></span> <span data-ttu-id="7056a-126">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="7056a-126">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7056a-127">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="7056a-127">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7056a-128">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="7056a-128">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerItemCollection.load_1
  summary: <span data-ttu-id="7056a-129">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="7056a-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7056a-130">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7056a-130">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="7056a-131">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="7056a-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerItemCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerItemCollection.toJSON
  summary: <span data-ttu-id="7056a-132">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="7056a-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="7056a-133">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。`Excel.SlicerItemCollection`元のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、コレクションのアイテムから`Excel.Interfaces.SlicerItemCollectionData` <!-- -->読み込まれたプロパティの浅いコピーを持つ "items" 配列を含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="7056a-133">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerItemCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerItemCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerItemCollectionData
      description: ''
