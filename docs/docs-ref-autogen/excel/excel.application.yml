### YamlMime:UniversalReference
ms.openlocfilehash: a787d67b1da6d65f43dd93aa48c4baa5e4a8a6d5
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/27/2019
ms.locfileid: "30302998"
items:
- uid: excel.Excel.Application
  summary: >-
    <span data-ttu-id="12692-101">ブックを管理する Excel アプリケーションを表します。</span><span class="sxs-lookup"><span data-stu-id="12692-101">Represents the Excel application that manages the workbook.</span></span>


    <span data-ttu-id="12692-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Application
  fullName: Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Application.calculate
  - excel.Excel.Application.calculate_1
  - excel.Excel.Application.calculationEngineVersion
  - excel.Excel.Application.calculationMode
  - excel.Excel.Application.calculationState
  - excel.Excel.Application.context
  - excel.Excel.Application.iterativeCalculation
  - excel.Excel.Application.load
  - excel.Excel.Application.load_1
  - excel.Excel.Application.load_2
  - excel.Excel.Application.set
  - excel.Excel.Application.set_1
  - excel.Excel.Application.suspendApiCalculationUntilNextSync
  - excel.Excel.Application.suspendScreenUpdatingUntilNextSync
  - excel.Excel.Application.toJSON
- uid: excel.Excel.Application.calculate
  summary: >-
    <span data-ttu-id="12692-103">Excel で現在開いているすべてのブックを再計算します。</span><span class="sxs-lookup"><span data-stu-id="12692-103">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="12692-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationType)
  fullName: calculate(calculationType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: calculationType
      description: <span data-ttu-id="12692-105">使用する計算の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="12692-105">Specifies the calculation type to use.</span></span> <span data-ttu-id="12692-106">詳細については、「Excel の種類」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="12692-106">See Excel.CalculationType for details.</span></span>
      type:
      - excel.Excel.CalculationType
- uid: excel.Excel.Application.calculate_1
  summary: >-
    <span data-ttu-id="12692-107">Excel で現在開いているすべてのブックを再計算します。</span><span class="sxs-lookup"><span data-stu-id="12692-107">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="12692-108">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationTypeString)
  fullName: calculate(calculationTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"12692-109\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"12692-109\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationTypeString
      description: <span data-ttu-id="12692-110">使用する計算の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="12692-110">Specifies the calculation type to use.</span></span> <span data-ttu-id="12692-111">詳細については、「Excel の種類」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="12692-111">See Excel.CalculationType for details.</span></span>
      type:
      - "\"Recalculate\" | \"Full\" | \"FullRebuild\""
- uid: excel.Excel.Application.calculationEngineVersion
  summary: >-
    <span data-ttu-id="12692-112">ブックが最後に完全に再計算された Excel 計算エンジンのバージョンに関する数値を返します。</span><span class="sxs-lookup"><span data-stu-id="12692-112">Returns a number about the version of Excel Calculation Engine that the workbook was last fully recalculated by.</span></span> <span data-ttu-id="12692-113">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="12692-113">Read-only.</span></span>


    <span data-ttu-id="12692-114">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-114">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: calculationEngineVersion
  fullName: calculationEngineVersion
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type:
      - number
- uid: excel.Excel.Application.calculationMode
  summary: >-
    <span data-ttu-id="12692-115">CalculationMode の定数によって定義されている、ブックで使用されている計算モードを返します。</span><span class="sxs-lookup"><span data-stu-id="12692-115">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="12692-116">使用可能な値`Automatic` <!-- -->は次のとおりです。 Excel では、再計算が制御されます。`AutomaticExceptTables`、Excel は再計算を制御しますが、テーブル内の変更は無視し<!-- -->ます。`Manual`、ユーザーが要求すると、計算が行われ<!-- -->ます。</span><span class="sxs-lookup"><span data-stu-id="12692-116">Possible values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user requests it.</span></span>


    <span data-ttu-id="12692-117">\[[API set: excelapi 1.1 for get、set の 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-117">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculationMode
  fullName: calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel.Excel.Application.calculationState
  summary: >-
    <span data-ttu-id="12692-118">アプリケーションの計算状態を示す電卓 ationstate を返します。</span><span class="sxs-lookup"><span data-stu-id="12692-118">Returns a CalculationState that indicates the calculation state of the application.</span></span> <span data-ttu-id="12692-119">詳細については、「Excel を使用する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="12692-119">See Excel.CalculationState for details.</span></span> <span data-ttu-id="12692-120">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="12692-120">Read-only.</span></span>


    <span data-ttu-id="12692-121">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: calculationState
  fullName: calculationState
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly calculationState: Excel.CalculationState | "Done" | "Calculating" | "Pending";'
    return:
      type:
      - Excel.CalculationState | "Done" | "Calculating" | "Pending"
- uid: excel.Excel.Application.context
  summary: <span data-ttu-id="12692-122">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="12692-122">The request context associated with the object.</span></span> <span data-ttu-id="12692-123">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="12692-123">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Application.iterativeCalculation
  summary: >-
    <span data-ttu-id="12692-124">反復計算の設定を返します。</span><span class="sxs-lookup"><span data-stu-id="12692-124">Returns the Iterative Calculation settings.</span></span> <span data-ttu-id="12692-125">excel for Windows および excel for Mac の場合、設定は excel アプリケーションに適用されます。</span><span class="sxs-lookup"><span data-stu-id="12692-125">On Excel for Windows and Excel for Mac, the settings will apply to the Excel Application.</span></span> <span data-ttu-id="12692-126">excel Online および excel の他のプラットフォームの場合、設定は作業中のブックに適用されます。</span><span class="sxs-lookup"><span data-stu-id="12692-126">On Excel Online and Excel for other platforms, the settings will apply to the active workbook.</span></span>


    <span data-ttu-id="12692-127">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-127">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: iterativeCalculation
  fullName: iterativeCalculation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iterativeCalculation: Excel.IterativeCalculation;'
    return:
      type:
      - excel.Excel.IterativeCalculation
- uid: excel.Excel.Application.load
  summary: <span data-ttu-id="12692-128">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="12692-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="12692-129">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="12692-129">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="12692-130">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="12692-130">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="12692-131">`load(option?: string | string[]): Excel.Application`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="12692-131">`load(option?: string | string[]): Excel.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="12692-132">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="12692-132">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="12692-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="12692-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="12692-134">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="12692-134">It is similar to the preceding signature.</span></span> <span data-ttu-id="12692-135">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="12692-135">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="12692-136">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="12692-136">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="12692-137">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="12692-137">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ApplicationLoadOptions
- uid: excel.Excel.Application.load_1
  summary: <span data-ttu-id="12692-138">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="12692-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="12692-139">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="12692-139">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"12692-140\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"12692-140\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var application = ctx.workbook.application;\n    application.load('calculationMode');\n    return ctx.sync().then(function() {\n        console.log(application.calculationMode);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="12692-141">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="12692-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Application.load_2
  summary: <span data-ttu-id="12692-142">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="12692-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="12692-143">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="12692-143">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="12692-144">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="12692-144">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Application.set
  summary: <span data-ttu-id="12692-145">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="12692-145">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="12692-146">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="12692-146">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="12692-147">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="12692-147">This method has the following additional signature:</span></span>


    `set(properties: Excel.Application): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="12692-148">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="12692-148">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ApplicationUpdateData
    - id: options
      description: <span data-ttu-id="12692-149">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="12692-149">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Application.set_1
  summary: <span data-ttu-id="12692-150">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="12692-150">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Application): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Application
- uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    <span data-ttu-id="12692-p113">次の "context.sync()" が呼び出されるまで、計算を中断します。設定されると、依存関係が確実に伝達されるようにブックを再計算するのは開発者の責任です。</span><span class="sxs-lookup"><span data-stu-id="12692-p113">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>


    <span data-ttu-id="12692-153">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-153">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: suspendApiCalculationUntilNextSync()
  fullName: suspendApiCalculationUntilNextSync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.suspendScreenUpdatingUntilNextSync
  summary: >-
    <span data-ttu-id="12692-154">次の "sync ()" が呼び出されるまで、sceen の更新を中断します。</span><span class="sxs-lookup"><span data-stu-id="12692-154">Suspends sceen updating until the next "context.sync()" is called.</span></span>


    <span data-ttu-id="12692-155">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12692-155">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: suspendScreenUpdatingUntilNextSync()
  fullName: suspendScreenUpdatingUntilNextSync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendScreenUpdatingUntilNextSync(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"12692-156\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"12692-156\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    const rowCount = 500;\n    const columnCount = 20;\n\n    const startTime = Date.now();\n    console.log(\"Starting...\");\n\n    if (pauseScreenPainting) {\n        context.application.suspendScreenUpdatingUntilNextSync();\n    }\n\n    for (let i = 0; i < rowCount; i++) {\n        for (let j = 0; j < columnCount; j++) {\n            let cell = sheet.getCell(i, j);\n            cell.values = [[i * j * Math.random()]];\n            if (untrack) {\n                cell.untrack();\n            }\n        }\n    }\n\n    await context.sync();\n\n    console.log(`Ending. Adding ${rowCount * columnCount} cells took ${Date.now() - startTime} milliseconds`);\n});\n```"
- uid: excel.Excel.Application.toJSON
  summary: <span data-ttu-id="12692-157">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="12692-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="12692-158">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の Excel オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.ApplicationData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="12692-158">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
