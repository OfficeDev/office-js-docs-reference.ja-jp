### YamlMime:UniversalReference
ms.openlocfilehash: b3d7ec8e103580a051d09634b95218a93c966bc6
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/17/2018
ms.locfileid: "25583225"
items:
- uid: excel.Excel.Application
  summary: >-
    ブックを管理する Excel アプリケーションを表します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Application
  fullName: excel.Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Application.calculate
  - excel.Excel.Application.calculationMode
  - excel.Excel.Application.load
  - excel.Excel.Application.suspendApiCalculationUntilNextSync
  - excel.Excel.Application.toJSON
- uid: excel.Excel.Application.calculate
  summary: >-
    Excel で現在開いているすべてのブックを再計算します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: calculate(calculationType)
  fullName: excel.Excel.Application.calculate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationType
      description: 使用する計算の種類を指定します。 詳細については Excel.CalculationType を参照してください。
      type:
      - excel.Excel.CalculationType
- uid: excel.Excel.Application.calculationMode
  summary: >-
    Excel.CalculationMode の定数で定義されているブックで使用される計算モードを返します。 使用可能な値: `Automatic`<!-- -->という、Excel コントロールの再計算します。`AutomaticExceptTables` <!-- -->Excel が再計算を制御するが、テーブル内の変更は無視されますが、`Manual`<!-- -->ユーザーが要求したときに計算を実行する場所です。


    \[[API セット: 取得、セットの 1.8 の ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: calculationMode
  fullName: excel.Excel.Application.calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel.Excel.Application.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: >-
    だけでなく、この署名は、このメソッドは、次の署名をします。


    `load(option?: { select?: string; expand?: string; }): Excel.Application`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。

    #### <a name="examples"></a>例


    ```javascript

    Excel.run(function (ctx) {
        var application = ctx.workbook.application;
        application.load('calculationMode');
        return ctx.sync().then(function() {
            console.log(application.calculationMode);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: excel.Excel.Application.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    次の "context.sync()" が呼び出されるまで、計算を中断します。設定されると、依存関係が確実に伝達されるようにブックを再計算するのは開発者の責任です。


    \[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: suspendApiCalculationUntilNextSync()
  fullName: excel.Excel.Application.suspendApiCalculationUntilNextSync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.toJSON
  name: toJSON()
  fullName: excel.Excel.Application.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
