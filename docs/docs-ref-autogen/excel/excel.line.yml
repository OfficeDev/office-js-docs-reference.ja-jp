### YamlMime:UniversalReference
ms.openlocfilehash: d51731c0c79607574a66c115e69f3b78f1cbbf95
ms.sourcegitcommit: 5e31602ed9cbddfcff2768b7ed69dd4821440b90
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/14/2019
ms.locfileid: "30575663"
items:
- uid: excel.Excel.Line
  summary: >-
    <span data-ttu-id="b8a4c-101">ワークシート内の行を表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-101">Represents a line inside a worksheet.</span></span> <span data-ttu-id="b8a4c-102">対応する Shape オブジェクトを取得するには、`Line.shape`</span><span class="sxs-lookup"><span data-stu-id="b8a4c-102">To get the corresponding Shape object, use `Line.shape`</span></span><!-- --><span data-ttu-id="b8a4c-103">.</span><span class="sxs-lookup"><span data-stu-id="b8a4c-103"></span></span>


    <span data-ttu-id="b8a4c-104">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.Line
  fullName: Excel.Line
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Line.beginArrowheadLength
  - excel.Excel.Line.beginArrowheadStyle
  - excel.Excel.Line.beginArrowheadWidth
  - excel.Excel.Line.beginConnectedShape
  - excel.Excel.Line.beginConnectedSite
  - excel.Excel.Line.connectBeginShape
  - excel.Excel.Line.connectEndShape
  - excel.Excel.Line.connectorType
  - excel.Excel.Line.context
  - excel.Excel.Line.disconnectBeginShape
  - excel.Excel.Line.disconnectEndShape
  - excel.Excel.Line.endArrowheadLength
  - excel.Excel.Line.endArrowheadStyle
  - excel.Excel.Line.endArrowheadWidth
  - excel.Excel.Line.endConnectedShape
  - excel.Excel.Line.endConnectedSite
  - excel.Excel.Line.id
  - excel.Excel.Line.isBeginConnected
  - excel.Excel.Line.isEndConnected
  - excel.Excel.Line.load
  - excel.Excel.Line.load_1
  - excel.Excel.Line.load_2
  - excel.Excel.Line.set
  - excel.Excel.Line.set_1
  - excel.Excel.Line.shape
  - excel.Excel.Line.toJSON
- uid: excel.Excel.Line.beginArrowheadLength
  summary: >-
    <span data-ttu-id="b8a4c-105">指定した線の始点にある矢印の先端の長さを表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-105">Represents the length of the arrowhead at the beginning of the specified line.</span></span>


    <span data-ttu-id="b8a4c-106">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: beginArrowheadLength
  fullName: beginArrowheadLength
  langs:
  - typeScript
  type: property
  syntax:
    content: 'beginArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
    return:
      type:
      - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
- uid: excel.Excel.Line.beginArrowheadStyle
  summary: >-
    <span data-ttu-id="b8a4c-107">指定した線の始点にある矢印の先端のスタイルを表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-107">Represents the style of the arrowhead at the beginning of the specified line.</span></span>


    <span data-ttu-id="b8a4c-108">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: beginArrowheadStyle
  fullName: beginArrowheadStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'beginArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
    return:
      type:
      - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
- uid: excel.Excel.Line.beginArrowheadWidth
  summary: >-
    <span data-ttu-id="b8a4c-109">指定された線の始点にある矢印の幅を表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-109">Represents the width of the arrowhead at the beginning of the specified line.</span></span>


    <span data-ttu-id="b8a4c-110">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: beginArrowheadWidth
  fullName: beginArrowheadWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'beginArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
    return:
      type:
      - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
- uid: excel.Excel.Line.beginConnectedShape
  summary: >-
    <span data-ttu-id="b8a4c-111">指定された線の始点が接続される図形を表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-111">Represents the shape to which the beginning of the specified line is attached.</span></span> <span data-ttu-id="b8a4c-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-112">Read-only.</span></span>


    <span data-ttu-id="b8a4c-113">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: beginConnectedShape
  fullName: beginConnectedShape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly beginConnectedShape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Line.beginConnectedSite
  summary: >-
    <span data-ttu-id="b8a4c-114">コネクタの始点が接続される接続サイトを表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-114">Represents the connection site to which the beginning of a connector is connected.</span></span> <span data-ttu-id="b8a4c-115">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-115">Read-only.</span></span> <span data-ttu-id="b8a4c-116">線の始点が図形に接続されていない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-116">Returns null when the beginning of the line is not attached to any shape.</span></span>


    <span data-ttu-id="b8a4c-117">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-117">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: beginConnectedSite
  fullName: beginConnectedSite
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly beginConnectedSite: number;'
    return:
      type:
      - number
- uid: excel.Excel.Line.connectBeginShape
  summary: >-
    <span data-ttu-id="b8a4c-118">指定されたコネクタの始点を指定された図形に接続します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-118">Attaches the beginning of the specified connector to a specified shape.</span></span>


    <span data-ttu-id="b8a4c-119">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-119">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: connectBeginShape(shape, connectionSite)
  fullName: connectBeginShape(shape, connectionSite)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'connectBeginShape(shape: Excel.Shape, connectionSite: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b8a4c-120\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"b8a4c-120\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.connectBeginShape(shapes.getItem(\"Left\"), 2);\n    line.connectEndShape(shapes.getItem(\"Right\"), 0);\n    await context.sync();\n});\n```"
    parameters:
    - id: shape
      description: <span data-ttu-id="b8a4c-121">接続する図形を示します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-121">The shape to connect.</span></span>
      type:
      - excel.Excel.Shape
    - id: connectionSite
      description: <span data-ttu-id="b8a4c-122">コネクタの始点が接続される図形の接続サイトです。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-122">The connection site on the shape to which the beginning of the connector is attached.</span></span> <span data-ttu-id="b8a4c-123">指定した図形の 0 (両端を含む) と、指定した図形の接続サイト数 (排他) の間の整数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-123">Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).</span></span>
      type:
      - number
- uid: excel.Excel.Line.connectEndShape
  summary: >-
    <span data-ttu-id="b8a4c-124">指定されたコネクタの終点を指定された図形に接続します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-124">Attaches the end of the specified connector to a specified shape.</span></span>


    <span data-ttu-id="b8a4c-125">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: connectEndShape(shape, connectionSite)
  fullName: connectEndShape(shape, connectionSite)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'connectEndShape(shape: Excel.Shape, connectionSite: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b8a4c-126\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"b8a4c-126\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.connectBeginShape(shapes.getItem(\"Left\"), 2);\n    line.connectEndShape(shapes.getItem(\"Right\"), 0);\n    await context.sync();\n});\n```"
    parameters:
    - id: shape
      description: <span data-ttu-id="b8a4c-127">接続する図形を示します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-127">The shape to connect.</span></span>
      type:
      - excel.Excel.Shape
    - id: connectionSite
      description: <span data-ttu-id="b8a4c-128">コネクタの終点が接続されている図形の接続サイトを指定します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-128">The connection site on the shape to which the end of the connector is attached.</span></span> <span data-ttu-id="b8a4c-129">指定した図形の 0 (両端を含む) と、指定した図形の接続サイト数 (排他) の間の整数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-129">Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).</span></span>
      type:
      - number
- uid: excel.Excel.Line.connectorType
  summary: >-
    <span data-ttu-id="b8a4c-130">線のコネクタの種類を表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-130">Represents the connector type for the line.</span></span>


    <span data-ttu-id="b8a4c-131">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-131">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: connectorType
  fullName: connectorType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'connectorType: Excel.ConnectorType | "Straight" | "Elbow" | "Curve";'
    return:
      type:
      - Excel.ConnectorType | "Straight" | "Elbow" | "Curve"
- uid: excel.Excel.Line.context
  summary: <span data-ttu-id="b8a4c-132">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-132">The request context associated with the object.</span></span> <span data-ttu-id="b8a4c-133">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-133">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Line.disconnectBeginShape
  summary: >-
    <span data-ttu-id="b8a4c-134">指定されたコネクタの始点を図形から切り離します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-134">Detaches the beginning of the specified connector from a shape.</span></span>


    <span data-ttu-id="b8a4c-135">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-135">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: disconnectBeginShape()
  fullName: disconnectBeginShape()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'disconnectBeginShape(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b8a4c-136\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"b8a4c-136\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.disconnectBeginShape();\n    line.disconnectEndShape();\n    await context.sync();\n});\n```"
- uid: excel.Excel.Line.disconnectEndShape
  summary: >-
    <span data-ttu-id="b8a4c-137">指定したコネクタの終点を図形から切り離します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-137">Detaches the end of the specified connector from a shape.</span></span>


    <span data-ttu-id="b8a4c-138">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-138">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: disconnectEndShape()
  fullName: disconnectEndShape()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'disconnectEndShape(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b8a4c-139\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"b8a4c-139\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.disconnectBeginShape();\n    line.disconnectEndShape();\n    await context.sync();\n});\n```"
- uid: excel.Excel.Line.endArrowheadLength
  summary: >-
    <span data-ttu-id="b8a4c-140">指定された線の終点にある矢印の長さを表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-140">Represents the length of the arrowhead at the end of the specified line.</span></span>


    <span data-ttu-id="b8a4c-141">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: endArrowheadLength
  fullName: endArrowheadLength
  langs:
  - typeScript
  type: property
  syntax:
    content: 'endArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
    return:
      type:
      - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
- uid: excel.Excel.Line.endArrowheadStyle
  summary: >-
    <span data-ttu-id="b8a4c-142">指定された線の終点にある矢印のスタイルを表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-142">Represents the style of the arrowhead at the end of the specified line.</span></span>


    <span data-ttu-id="b8a4c-143">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-143">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: endArrowheadStyle
  fullName: endArrowheadStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'endArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
    return:
      type:
      - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
- uid: excel.Excel.Line.endArrowheadWidth
  summary: >-
    <span data-ttu-id="b8a4c-144">指定された線の終点にある矢印の幅を表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-144">Represents the width of the arrowhead at the end of the specified line.</span></span>


    <span data-ttu-id="b8a4c-145">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: endArrowheadWidth
  fullName: endArrowheadWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'endArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
    return:
      type:
      - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
- uid: excel.Excel.Line.endConnectedShape
  summary: >-
    <span data-ttu-id="b8a4c-146">指定された線の終点が接続される図形を表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-146">Represents the shape to which the end of the specified line is attached.</span></span> <span data-ttu-id="b8a4c-147">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-147">Read-only.</span></span>


    <span data-ttu-id="b8a4c-148">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-148">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: endConnectedShape
  fullName: endConnectedShape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly endConnectedShape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Line.endConnectedSite
  summary: >-
    <span data-ttu-id="b8a4c-149">コネクタの終点が接続される接続サイトを表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-149">Represents the connection site to which the end of a connector is connected.</span></span> <span data-ttu-id="b8a4c-150">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-150">Read-only.</span></span> <span data-ttu-id="b8a4c-151">行の末尾が図形に接続されていない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-151">Returns null when the end of the line is not attached to any shape.</span></span>


    <span data-ttu-id="b8a4c-152">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-152">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: endConnectedSite
  fullName: endConnectedSite
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly endConnectedSite: number;'
    return:
      type:
      - number
- uid: excel.Excel.Line.id
  summary: >-
    <span data-ttu-id="b8a4c-153">図形 ID を表します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-153">Represents the shape identifier.</span></span> <span data-ttu-id="b8a4c-154">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-154">Read-only.</span></span>


    <span data-ttu-id="b8a4c-155">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-155">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Line.isBeginConnected
  summary: >-
    <span data-ttu-id="b8a4c-156">指定した線の始点が図形に接続されているかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-156">Specifies whether or not the beginning of the specified line is connected to a shape.</span></span> <span data-ttu-id="b8a4c-157">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-157">Read-only.</span></span>


    <span data-ttu-id="b8a4c-158">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-158">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: isBeginConnected
  fullName: isBeginConnected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isBeginConnected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Line.isEndConnected
  summary: >-
    <span data-ttu-id="b8a4c-159">指定した線の終点が図形に接続されているかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-159">Specifies whether or not the end of the specified line is connected to a shape.</span></span> <span data-ttu-id="b8a4c-160">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-160">Read-only.</span></span>


    <span data-ttu-id="b8a4c-161">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-161">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: isEndConnected
  fullName: isEndConnected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEndConnected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Line.load
  summary: <span data-ttu-id="b8a4c-162">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-162">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b8a4c-163">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-163">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b8a4c-164">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-164">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b8a4c-165">`load(option?: string | string[]): Excel.Line`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-165">`load(option?: string | string[]): Excel.Line` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b8a4c-166">`load(option?: { select?: string; expand?: string; }): Excel.Line`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-166">`load(option?: { select?: string; expand?: string; }): Excel.Line` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b8a4c-167">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Line`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-167">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Line` - Only available on collection types.</span></span> <span data-ttu-id="b8a4c-168">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-168">It is similar to the preceding signature.</span></span> <span data-ttu-id="b8a4c-169">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-169">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b8a4c-170">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-170">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b8a4c-171">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-171">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.LineLoadOptions): Excel.Line;'
    return:
      type:
      - excel.Excel.Line
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.LineLoadOptions
- uid: excel.Excel.Line.load_1
  summary: <span data-ttu-id="b8a4c-172">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-172">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b8a4c-173">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-173">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Line;'
    return:
      type:
      - excel.Excel.Line
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b8a4c-174">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-174">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Line.load_2
  summary: <span data-ttu-id="b8a4c-175">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-175">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b8a4c-176">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-176">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Line;'
    return:
      type:
      - excel.Excel.Line
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="b8a4c-177">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-177">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Line.set
  summary: <span data-ttu-id="b8a4c-178">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-178">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b8a4c-179">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-179">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="b8a4c-180">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-180">This method has the following additional signature:</span></span>


    `set(properties: Excel.Line): void`
  isPreview: true
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.LineUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="b8a4c-181">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-181">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.LineUpdateData
    - id: options
      description: <span data-ttu-id="b8a4c-182">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-182">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Line.set_1
  summary: <span data-ttu-id="b8a4c-183">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-183">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  isPreview: true
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Line): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Line
- uid: excel.Excel.Line.shape
  summary: >-
    <span data-ttu-id="b8a4c-184">行に関連付けられた Shape オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-184">Returns the Shape object associated with the line.</span></span> <span data-ttu-id="b8a4c-185">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-185">Read-only.</span></span>


    <span data-ttu-id="b8a4c-186">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8a4c-186">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: shape
  fullName: shape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Line.toJSON
  summary: <span data-ttu-id="b8a4c-187">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b8a4c-187">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b8a4c-188">.</span><span class="sxs-lookup"><span data-stu-id="b8a4c-188"></span></span> <span data-ttu-id="b8a4c-189">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b8a4c-189"></span></span><!-- --><span data-ttu-id="b8a4c-190">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の Line オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.LineData`</span><span class="sxs-lookup"><span data-stu-id="b8a4c-190">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Line object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.LineData`</span></span><!-- --><span data-ttu-id="b8a4c-191">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="b8a4c-191">) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.LineData;'
    return:
      type:
      - excel.Excel.Interfaces.LineData
      description: ''
