### YamlMime:UniversalReference
ms.openlocfilehash: b8bf84a27ae43ce575a06fed3bbaa04a4aa60104
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303229"
items:
- uid: excel.Excel.PageLayout
  summary: '<span data-ttu-id="01f8d-101">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-101">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
  isPreview: true
  name: Excel.PageLayout
  fullName: Excel.PageLayout
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PageLayout.blackAndWhite
  - excel.Excel.PageLayout.bottomMargin
  - excel.Excel.PageLayout.centerHorizontally
  - excel.Excel.PageLayout.centerVertically
  - excel.Excel.PageLayout.context
  - excel.Excel.PageLayout.draftMode
  - excel.Excel.PageLayout.firstPageNumber
  - excel.Excel.PageLayout.footerMargin
  - excel.Excel.PageLayout.getPrintArea
  - excel.Excel.PageLayout.getPrintAreaOrNullObject
  - excel.Excel.PageLayout.getPrintTitleColumns
  - excel.Excel.PageLayout.getPrintTitleColumnsOrNullObject
  - excel.Excel.PageLayout.getPrintTitleRows
  - excel.Excel.PageLayout.getPrintTitleRowsOrNullObject
  - excel.Excel.PageLayout.headerMargin
  - excel.Excel.PageLayout.headersFooters
  - excel.Excel.PageLayout.leftMargin
  - excel.Excel.PageLayout.load
  - excel.Excel.PageLayout.load_1
  - excel.Excel.PageLayout.load_2
  - excel.Excel.PageLayout.orientation
  - excel.Excel.PageLayout.paperSize
  - excel.Excel.PageLayout.printComments
  - excel.Excel.PageLayout.printErrors
  - excel.Excel.PageLayout.printGridlines
  - excel.Excel.PageLayout.printHeadings
  - excel.Excel.PageLayout.printOrder
  - excel.Excel.PageLayout.rightMargin
  - excel.Excel.PageLayout.set
  - excel.Excel.PageLayout.set_1
  - excel.Excel.PageLayout.setPrintArea
  - excel.Excel.PageLayout.setPrintMargins
  - excel.Excel.PageLayout.setPrintMargins_1
  - excel.Excel.PageLayout.setPrintTitleColumns
  - excel.Excel.PageLayout.setPrintTitleRows
  - excel.Excel.PageLayout.toJSON
  - excel.Excel.PageLayout.topMargin
  - excel.Excel.PageLayout.zoom
- uid: excel.Excel.PageLayout.blackAndWhite
  summary: >-
    <span data-ttu-id="01f8d-102">ワークシートの黒と白の印刷オプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-102">Gets or sets the worksheet's black and white print option.</span></span>


    <span data-ttu-id="01f8d-103">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-103">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: blackAndWhite
  fullName: blackAndWhite
  langs:
  - typeScript
  type: property
  syntax:
    content: 'blackAndWhite: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PageLayout.bottomMargin
  summary: >-
    <span data-ttu-id="01f8d-104">ポイント単位で印刷するために使用するワークシートの下部ページ余白を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-104">Gets or sets the worksheet's bottom page margin to use for printing in points.</span></span>


    <span data-ttu-id="01f8d-105">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-105">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: bottomMargin
  fullName: bottomMargin
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bottomMargin: number;'
    return:
      type:
      - number
- uid: excel.Excel.PageLayout.centerHorizontally
  summary: >-
    <span data-ttu-id="01f8d-106">ワークシートの左右の中央にあるフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-106">Gets or sets the worksheet's center horizontally flag.</span></span> <span data-ttu-id="01f8d-107">このフラグは、印刷時にワークシートを水平方向の中央に配置するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-107">This flag determines whether the worksheet will be centered horizontally when it's printed.</span></span>


    <span data-ttu-id="01f8d-108">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: centerHorizontally
  fullName: centerHorizontally
  langs:
  - typeScript
  type: property
  syntax:
    content: 'centerHorizontally: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"01f8d-109\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"01f8d-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.centerHorizontally = true;\n    farmSheet.pageLayout.centerVertically = true;\n    await context.sync();\n});\n```"
- uid: excel.Excel.PageLayout.centerVertically
  summary: >-
    <span data-ttu-id="01f8d-110">ワークシートの上下の中央にあるフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-110">Gets or sets the worksheet's center vertically flag.</span></span> <span data-ttu-id="01f8d-111">このフラグは、印刷時にワークシートを垂直方向に中央揃えにするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-111">This flag determines whether the worksheet will be centered vertically when it's printed.</span></span>


    <span data-ttu-id="01f8d-112">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: centerVertically
  fullName: centerVertically
  langs:
  - typeScript
  type: property
  syntax:
    content: 'centerVertically: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"01f8d-113\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"01f8d-113\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.centerHorizontally = true;\n    farmSheet.pageLayout.centerVertically = true;\n    await context.sync();\n});\n```"
- uid: excel.Excel.PageLayout.context
  summary: <span data-ttu-id="01f8d-114">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="01f8d-114">The request context associated with the object.</span></span> <span data-ttu-id="01f8d-115">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-115">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PageLayout.draftMode
  summary: >-
    <span data-ttu-id="01f8d-116">ワークシートの下書きモードオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-116">Gets or sets the worksheet's draft mode option.</span></span> <span data-ttu-id="01f8d-117">true の場合、シートはグラフィックスなしで印刷されます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-117">If true the sheet will be printed without graphics.</span></span>


    <span data-ttu-id="01f8d-118">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: draftMode
  fullName: draftMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'draftMode: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PageLayout.firstPageNumber
  summary: >-
    <span data-ttu-id="01f8d-119">印刷するワークシートの最初のページ番号を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-119">Gets or sets the worksheet's first page number to print.</span></span> <span data-ttu-id="01f8d-120">Null 値は、"自動" ページ番号を表します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-120">Null value represents "auto" page numbering.</span></span>


    <span data-ttu-id="01f8d-121">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: firstPageNumber
  fullName: firstPageNumber
  langs:
  - typeScript
  type: property
  syntax:
    content: 'firstPageNumber: number | "";'
    return:
      type:
      - number | ""
- uid: excel.Excel.PageLayout.footerMargin
  summary: >-
    <span data-ttu-id="01f8d-122">ワークシートのフッターの余白をポイント単位で取得または設定します。印刷時に使用されます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-122">Gets or sets the worksheet's footer margin, in points, for use when printing.</span></span>


    <span data-ttu-id="01f8d-123">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: footerMargin
  fullName: footerMargin
  langs:
  - typeScript
  type: property
  syntax:
    content: 'footerMargin: number;'
    return:
      type:
      - number
- uid: excel.Excel.PageLayout.getPrintArea
  summary: >-
    <span data-ttu-id="01f8d-124">ワークシートの印刷範囲を表す、1つまたは複数の四角形の範囲で構成される rangeareas オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-124">Gets the RangeAreas object, comprising one or more rectangular ranges, that represents the print area for the worksheet.</span></span> <span data-ttu-id="01f8d-125">印刷範囲がない場合は、ItemNotFound エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-125">If there is no print area, an ItemNotFound error will be thrown.</span></span>


    <span data-ttu-id="01f8d-126">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPrintArea()
  fullName: getPrintArea()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrintArea(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.PageLayout.getPrintAreaOrNullObject
  summary: >-
    <span data-ttu-id="01f8d-127">ワークシートの印刷範囲を表す、1つまたは複数の四角形の範囲で構成される rangeareas オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-127">Gets the RangeAreas object, comprising one or more rectangular ranges, that represents the print area for the worksheet.</span></span> <span data-ttu-id="01f8d-128">印刷範囲がない場合は、null オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-128">If there is no print area, a null object will be returned.</span></span>


    <span data-ttu-id="01f8d-129">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPrintAreaOrNullObject()
  fullName: getPrintAreaOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrintAreaOrNullObject(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: ''
- uid: excel.Excel.PageLayout.getPrintTitleColumns
  summary: >-
    <span data-ttu-id="01f8d-130">タイトル列を表す range オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-130">Gets the range object representing the title columns.</span></span>


    <span data-ttu-id="01f8d-131">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-131">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPrintTitleColumns()
  fullName: getPrintTitleColumns()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrintTitleColumns(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PageLayout.getPrintTitleColumnsOrNullObject
  summary: >-
    <span data-ttu-id="01f8d-132">タイトル列を表す range オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-132">Gets the range object representing the title columns.</span></span> <span data-ttu-id="01f8d-133">設定されていない場合は、null オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-133">If not set, this will return a null object.</span></span>


    <span data-ttu-id="01f8d-134">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-134">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPrintTitleColumnsOrNullObject()
  fullName: getPrintTitleColumnsOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrintTitleColumnsOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PageLayout.getPrintTitleRows
  summary: >-
    <span data-ttu-id="01f8d-135">タイトル行を表す range オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-135">Gets the range object representing the title rows.</span></span>


    <span data-ttu-id="01f8d-136">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-136">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPrintTitleRows()
  fullName: getPrintTitleRows()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrintTitleRows(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PageLayout.getPrintTitleRowsOrNullObject
  summary: >-
    <span data-ttu-id="01f8d-137">タイトル行を表す range オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-137">Gets the range object representing the title rows.</span></span> <span data-ttu-id="01f8d-138">設定されていない場合は、null オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-138">If not set, this will return a null object.</span></span>


    <span data-ttu-id="01f8d-139">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-139">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPrintTitleRowsOrNullObject()
  fullName: getPrintTitleRowsOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPrintTitleRowsOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PageLayout.headerMargin
  summary: >-
    <span data-ttu-id="01f8d-140">印刷時に使用するワークシートのヘッダーの余白をポイント単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-140">Gets or sets the worksheet's header margin, in points, for use when printing.</span></span>


    <span data-ttu-id="01f8d-141">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: headerMargin
  fullName: headerMargin
  langs:
  - typeScript
  type: property
  syntax:
    content: 'headerMargin: number;'
    return:
      type:
      - number
- uid: excel.Excel.PageLayout.headersFooters
  summary: >-
    <span data-ttu-id="01f8d-142">ワークシートのヘッダーとフッターの構成。</span><span class="sxs-lookup"><span data-stu-id="01f8d-142">Header and footer configuration for the worksheet.</span></span>


    <span data-ttu-id="01f8d-143">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-143">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: headersFooters
  fullName: headersFooters
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly headersFooters: Excel.HeaderFooterGroup;'
    return:
      type:
      - excel.Excel.HeaderFooterGroup
- uid: excel.Excel.PageLayout.leftMargin
  summary: >-
    <span data-ttu-id="01f8d-144">印刷するときに使用するワークシートの左余白をポイント単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-144">Gets or sets the worksheet's left margin, in points, for use when printing.</span></span>


    <span data-ttu-id="01f8d-145">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: leftMargin
  fullName: leftMargin
  langs:
  - typeScript
  type: property
  syntax:
    content: 'leftMargin: number;'
    return:
      type:
      - number
- uid: excel.Excel.PageLayout.load
  summary: <span data-ttu-id="01f8d-146">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-146">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="01f8d-147">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="01f8d-147">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="01f8d-148">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="01f8d-148">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="01f8d-149">`load(option?: string | string[]): Excel.PageLayout`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="01f8d-149">`load(option?: string | string[]): Excel.PageLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="01f8d-150">`load(option?: { select?: string; expand?: string; }): Excel.PageLayout`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="01f8d-150">`load(option?: { select?: string; expand?: string; }): Excel.PageLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="01f8d-151">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageLayout`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-151">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageLayout` - Only available on collection types.</span></span> <span data-ttu-id="01f8d-152">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="01f8d-152">It is similar to the preceding signature.</span></span> <span data-ttu-id="01f8d-153">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-153">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="01f8d-154">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-154">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="01f8d-155">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-155">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PageLayoutLoadOptions): Excel.PageLayout;'
    return:
      type:
      - excel.Excel.PageLayout
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PageLayoutLoadOptions
- uid: excel.Excel.PageLayout.load_1
  summary: <span data-ttu-id="01f8d-156">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-156">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="01f8d-157">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="01f8d-157">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PageLayout;'
    return:
      type:
      - excel.Excel.PageLayout
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="01f8d-158">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="01f8d-158">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PageLayout.load_2
  summary: <span data-ttu-id="01f8d-159">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-159">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="01f8d-160">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="01f8d-160">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PageLayout;'
    return:
      type:
      - excel.Excel.PageLayout
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="01f8d-161">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="01f8d-161">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.PageLayout.orientation
  summary: >-
    <span data-ttu-id="01f8d-162">ワークシートのページの向きを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-162">Gets or sets the worksheet's orientation of the page.</span></span>


    <span data-ttu-id="01f8d-163">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-163">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: orientation
  fullName: orientation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'orientation: Excel.PageOrientation | "Portrait" | "Landscape";'
    return:
      type:
      - Excel.PageOrientation | "Portrait" | "Landscape"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"01f8d-164\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"01f8d-164\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.orientation = Excel.PageOrientation.landscape;\n    await context.sync();\n});\n```"
- uid: excel.Excel.PageLayout.paperSize
  summary: >-
    <span data-ttu-id="01f8d-165">ワークシートの用紙サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-165">Gets or sets the worksheet's paper size of the page.</span></span>


    <span data-ttu-id="01f8d-166">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-166">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: paperSize
  fullName: paperSize
  langs:
  - typeScript
  type: property
  syntax:
    content: 'paperSize: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman";'
    return:
      type:
      - Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
- uid: excel.Excel.PageLayout.printComments
  summary: >-
    <span data-ttu-id="01f8d-167">ワークシートのコメントを印刷するときに表示するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-167">Gets or sets whether the worksheet's comments should be displayed when printing.</span></span>


    <span data-ttu-id="01f8d-168">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-168">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: printComments
  fullName: printComments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'printComments: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace";'
    return:
      type:
      - Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace"
- uid: excel.Excel.PageLayout.printErrors
  summary: >-
    <span data-ttu-id="01f8d-169">ワークシートの印刷エラーオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-169">Gets or sets the worksheet's print errors option.</span></span>


    <span data-ttu-id="01f8d-170">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-170">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: printErrors
  fullName: printErrors
  langs:
  - typeScript
  type: property
  syntax:
    content: 'printErrors: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable";'
    return:
      type:
      - Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"
- uid: excel.Excel.PageLayout.printGridlines
  summary: >-
    <span data-ttu-id="01f8d-171">ワークシートの印刷のグリッド線フラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-171">Gets or sets the worksheet's print gridlines flag.</span></span> <span data-ttu-id="01f8d-172">このフラグは、グリッド線を印刷するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-172">This flag determines whether gridlines will be printed or not.</span></span>


    <span data-ttu-id="01f8d-173">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-173">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: printGridlines
  fullName: printGridlines
  langs:
  - typeScript
  type: property
  syntax:
    content: 'printGridlines: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PageLayout.printHeadings
  summary: >-
    <span data-ttu-id="01f8d-174">ワークシートの印刷ヘッダーフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-174">Gets or sets the worksheet's print headings flag.</span></span> <span data-ttu-id="01f8d-175">このフラグは、見出しが印刷されるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-175">This flag determines whether headings will be printed or not.</span></span>


    <span data-ttu-id="01f8d-176">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-176">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: printHeadings
  fullName: printHeadings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'printHeadings: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PageLayout.printOrder
  summary: >-
    <span data-ttu-id="01f8d-177">ワークシートのページ印刷順序オプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-177">Gets or sets the worksheet's page print order option.</span></span> <span data-ttu-id="01f8d-178">印刷されるページ番号の処理に使用する順序を指定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-178">This specifies the order to use for processing the page number printed.</span></span>


    <span data-ttu-id="01f8d-179">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-179">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: printOrder
  fullName: printOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'printOrder: Excel.PrintOrder | "DownThenOver" | "OverThenDown";'
    return:
      type:
      - Excel.PrintOrder | "DownThenOver" | "OverThenDown"
- uid: excel.Excel.PageLayout.rightMargin
  summary: >-
    <span data-ttu-id="01f8d-180">印刷時に使用するワークシートの右余白をポイント単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-180">Gets or sets the worksheet's right margin, in points, for use when printing.</span></span>


    <span data-ttu-id="01f8d-181">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: rightMargin
  fullName: rightMargin
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rightMargin: number;'
    return:
      type:
      - number
- uid: excel.Excel.PageLayout.set
  summary: <span data-ttu-id="01f8d-182">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-182">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="01f8d-183">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="01f8d-183">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="01f8d-184">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="01f8d-184">This method has the following additional signature:</span></span>


    `set(properties: Excel.PageLayout): void`
  isPreview: true
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PageLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="01f8d-185">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="01f8d-185">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PageLayoutUpdateData
    - id: options
      description: <span data-ttu-id="01f8d-186">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-186">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.PageLayout.set_1
  summary: <span data-ttu-id="01f8d-187">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-187">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  isPreview: true
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PageLayout): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PageLayout
- uid: excel.Excel.PageLayout.setPrintArea
  summary: >-
    <span data-ttu-id="01f8d-188">ワークシートの印刷範囲を設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-188">Sets the worksheet's print area.</span></span>


    <span data-ttu-id="01f8d-189">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-189">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setPrintArea(printArea)
  fullName: setPrintArea(printArea)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPrintArea(printArea: Range | RangeAreas | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"01f8d-190\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"01f8d-190\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.setPrintArea(\"A1:D41\");\n    await context.sync();\n});\n```"
    parameters:
    - id: printArea
      description: <span data-ttu-id="01f8d-191">印刷するコンテンツの範囲または rangeareas。</span><span class="sxs-lookup"><span data-stu-id="01f8d-191">The range, or RangeAreas of the content to print.</span></span>
      type:
      - Range | RangeAreas | string
- uid: excel.Excel.PageLayout.setPrintMargins
  summary: >-
    <span data-ttu-id="01f8d-192">ワークシートのページ余白を単位付きに設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-192">Sets the worksheet's page margins with units.</span></span>


    <span data-ttu-id="01f8d-193">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-193">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setPrintMargins(unit, marginOptions)
  fullName: setPrintMargins(unit, marginOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPrintMargins(unit: Excel.PrintMarginUnit, marginOptions: Excel.PageLayoutMarginOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: unit
      description: <span data-ttu-id="01f8d-194">指定された余白の測定単位。</span><span class="sxs-lookup"><span data-stu-id="01f8d-194">Measurement unit for the margins provided.</span></span>
      type:
      - excel.Excel.PrintMarginUnit
    - id: marginOptions
      description: <span data-ttu-id="01f8d-195">余白の値を設定しても、余白が指定されていない場合、余白は変わりません。</span><span class="sxs-lookup"><span data-stu-id="01f8d-195">Margin values to set, margins not provided will remain unchanged.</span></span>
      type:
      - excel.Excel.PageLayoutMarginOptions
- uid: excel.Excel.PageLayout.setPrintMargins_1
  summary: >-
    <span data-ttu-id="01f8d-196">ワークシートのページ余白を単位付きに設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-196">Sets the worksheet's page margins with units.</span></span>


    <span data-ttu-id="01f8d-197">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-197">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setPrintMargins(unitString, marginOptions)
  fullName: setPrintMargins(unitString, marginOptions)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPrintMargins(unitString: "Points" | "Inches" | "Centimeters", marginOptions: Excel.PageLayoutMarginOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: unitString
      description: <span data-ttu-id="01f8d-198">指定された余白の測定単位。</span><span class="sxs-lookup"><span data-stu-id="01f8d-198">Measurement unit for the margins provided.</span></span>
      type:
      - "\"Points\" | \"Inches\" | \"Centimeters\""
    - id: marginOptions
      description: <span data-ttu-id="01f8d-199">余白の値を設定しても、余白が指定されていない場合、余白は変わりません。</span><span class="sxs-lookup"><span data-stu-id="01f8d-199">Margin values to set, margins not provided will remain unchanged.</span></span>
      type:
      - excel.Excel.PageLayoutMarginOptions
- uid: excel.Excel.PageLayout.setPrintTitleColumns
  summary: >-
    <span data-ttu-id="01f8d-200">印刷のためにワークシートの各ページの左側で繰り返されるセルを含む列を設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-200">Sets the columns that contain the cells to be repeated at the left of each page of the worksheet for printing.</span></span>


    <span data-ttu-id="01f8d-201">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-201">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setPrintTitleColumns(printTitleColumns)
  fullName: setPrintTitleColumns(printTitleColumns)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPrintTitleColumns(printTitleColumns: Range | string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: printTitleColumns
      description: <span data-ttu-id="01f8d-202">各ページの左側に繰り返す列は、列全体が有効になるように指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="01f8d-202">The columns to be repeated to the left of each page, range must span the entire column to be valid.</span></span>
      type:
      - Range | string
- uid: excel.Excel.PageLayout.setPrintTitleRows
  summary: >-
    <span data-ttu-id="01f8d-203">印刷のためにワークシートの各ページの上部で繰り返されるセルを含む行を設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-203">Sets the rows that contain the cells to be repeated at the top of each page of the worksheet for printing.</span></span>


    <span data-ttu-id="01f8d-204">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-204">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setPrintTitleRows(printTitleRows)
  fullName: setPrintTitleRows(printTitleRows)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPrintTitleRows(printTitleRows: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"01f8d-205\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"01f8d-205\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.setPrintTitleRows(\"$1:$1\");\n    await context.sync();\n});\n```"
    parameters:
    - id: printTitleRows
      description: <span data-ttu-id="01f8d-206">各ページの先頭に繰り返す行は、行全体が有効になるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="01f8d-206">The rows to be repeated at the top of each page, range must span the entire row to be valid.</span></span>
      type:
      - Range | string
- uid: excel.Excel.PageLayout.toJSON
  summary: <span data-ttu-id="01f8d-207">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="01f8d-207">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="01f8d-208">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の PageLayout オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.PageLayoutData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-208">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PageLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PageLayoutData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PageLayoutData;'
    return:
      type:
      - excel.Excel.Interfaces.PageLayoutData
      description: ''
- uid: excel.Excel.PageLayout.topMargin
  summary: >-
    <span data-ttu-id="01f8d-209">印刷するときに使用するワークシートの上余白をポイント単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-209">Gets or sets the worksheet's top margin, in points, for use when printing.</span></span>


    <span data-ttu-id="01f8d-210">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-210">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: topMargin
  fullName: topMargin
  langs:
  - typeScript
  type: property
  syntax:
    content: 'topMargin: number;'
    return:
      type:
      - number
- uid: excel.Excel.PageLayout.zoom
  summary: >-
    <span data-ttu-id="01f8d-211">ワークシートの印刷ズームオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="01f8d-211">Gets or sets the worksheet's print zoom options.</span></span>


    <span data-ttu-id="01f8d-212">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="01f8d-212">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: zoom
  fullName: zoom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'zoom: Excel.PageLayoutZoomOptions;'
    return:
      type:
      - excel.Excel.PageLayoutZoomOptions
