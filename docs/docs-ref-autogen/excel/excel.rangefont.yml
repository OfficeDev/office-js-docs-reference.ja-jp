### YamlMime:UniversalReference
ms.openlocfilehash: 692595323ba4d0331d90a6612854a0ea5777f3dd
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 11/30/2018
ms.locfileid: "26994941"
items:
- uid: excel.Excel.RangeFont
  summary: >-
    このオブジェクトは、オブジェクトのフォントの属性 (フォント名、フォント サイズ、色など) を表します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.RangeFont
  fullName: Excel.RangeFont
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFont.bold
  - excel.Excel.RangeFont.color
  - excel.Excel.RangeFont.italic
  - excel.Excel.RangeFont.load
  - excel.Excel.RangeFont.name
  - excel.Excel.RangeFont.size
  - excel.Excel.RangeFont.toJSON
  - excel.Excel.RangeFont.underline
- uid: excel.Excel.RangeFont.bold
  summary: >-
    フォントの太字の状態を表します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: bold
  fullName: bold
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bold: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.color
  summary: >-
    色コード形式を HTML テキストの色。 例: \#Ff0000 は赤です。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.italic
  summary: >-
    フォントの斜体の状態を表します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: italic
  fullName: italic
  langs:
  - typeScript
  type: property
  syntax:
    content: 'italic: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: "だけでなく、この署名は、このメソッドは、次の署名をします。\n\n`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFont = range.format.font;\n    rangeFont.load('name');\n    return ctx.sync().then(function() {\n        console.log(rangeFont.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.font.name = 'Times New Roman';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.RangeFont.name
  summary: >-
    フォント名 (例: "Calibri")


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.size
  summary: >-
    フォント サイズ


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: size
  fullName: size
  langs:
  - typeScript
  type: property
  syntax:
    content: 'size: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFont.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFontData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFontData
      description: ''
- uid: excel.Excel.RangeFont.underline
  summary: >-
    フォントに適用する下線の種類です。 詳細については Excel.RangeUnderlineStyle を参照してください。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: underline
  fullName: underline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
    return:
      type:
      - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
