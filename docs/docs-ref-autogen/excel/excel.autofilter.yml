### YamlMime:UniversalReference
items:
  - uid: excel.Excel.AutoFilter
    summary: |-
      <span data-ttu-id="26de7-101">オートフィルターオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="26de7-101">Represents the AutoFilter object.</span></span> <span data-ttu-id="26de7-102">オートフィルターは、Excel の列の値を、セルの内容に基づいて特定のフィルターに変換します。</span><span class="sxs-lookup"><span data-stu-id="26de7-102">AutoFilter turns the values in Excel column into specific filters based on the cell contents.</span></span>

      <span data-ttu-id="26de7-103">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-103">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.AutoFilter
    fullName: Excel.AutoFilter
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.AutoFilter.apply
      - excel.Excel.AutoFilter.clearCriteria
      - excel.Excel.AutoFilter.context
      - excel.Excel.AutoFilter.criteria
      - excel.Excel.AutoFilter.enabled
      - excel.Excel.AutoFilter.getRange
      - excel.Excel.AutoFilter.getRangeOrNullObject
      - excel.Excel.AutoFilter.isDataFiltered
      - excel.Excel.AutoFilter.load
      - excel.Excel.AutoFilter.load_1
      - excel.Excel.AutoFilter.load_2
      - excel.Excel.AutoFilter.reapply
      - excel.Excel.AutoFilter.remove
      - excel.Excel.AutoFilter.toJSON
  - uid: excel.Excel.AutoFilter.apply
    summary: |-
      <span data-ttu-id="26de7-104">指定範囲にオートフィルターを適用します。</span><span class="sxs-lookup"><span data-stu-id="26de7-104">Applies the AutoFilter to a range.</span></span> <span data-ttu-id="26de7-105">列インデックスおよびフィルター条件が指定されている場合は、列をフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="26de7-105">This filters the column if column index and filter criteria are specified.</span></span>

      <span data-ttu-id="26de7-106">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'apply(range, columnIndex, criteria)'
    fullName: 'apply(range, columnIndex, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(range: Range | string, columnIndex?: number, criteria?: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="26de7-107">例</span><span class="sxs-lookup"><span data-stu-id="26de7-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
      parameters:
        - id: range
          description: <span data-ttu-id="26de7-108">オートフィルターが適用される範囲を指定します。</span><span class="sxs-lookup"><span data-stu-id="26de7-108">The range over which the AutoFilter will apply on.</span></span>
          type:
            - Range | string
        - id: columnIndex
          description: <span data-ttu-id="26de7-109">オートフィルターが適用される0から始まる列インデックス。</span><span class="sxs-lookup"><span data-stu-id="26de7-109">The zero-based column index to which the AutoFilter is applied.</span></span>
          type:
            - number
        - id: criteria
          description: <span data-ttu-id="26de7-110">フィルター条件を選択します。</span><span class="sxs-lookup"><span data-stu-id="26de7-110">The filter criteria.</span></span>
          type:
            - excel.Excel.FilterCriteria
  - uid: excel.Excel.AutoFilter.clearCriteria
    summary: |-
      <span data-ttu-id="26de7-111">オートフィルターのフィルター条件をクリアします。</span><span class="sxs-lookup"><span data-stu-id="26de7-111">Clears the filter criteria of the AutoFilter.</span></span>

      <span data-ttu-id="26de7-112">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearCriteria()
    fullName: clearCriteria()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearCriteria(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.context
    summary: <span data-ttu-id="26de7-113">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="26de7-113">The request context associated with the object.</span></span> <span data-ttu-id="26de7-114">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="26de7-114">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.AutoFilter.criteria
    summary: |-
      <span data-ttu-id="26de7-115">オートフィルター範囲のすべてのフィルター条件を含む配列を指定します。</span><span class="sxs-lookup"><span data-stu-id="26de7-115">An array that holds all the filter criteria in the autofiltered range.</span></span> <span data-ttu-id="26de7-116">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="26de7-116">Read-Only.</span></span>

      <span data-ttu-id="26de7-117">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-117">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria[];'
      return:
        type:
          - 'Excel.FilterCriteria[]'
  - uid: excel.Excel.AutoFilter.enabled
    summary: |-
      <span data-ttu-id="26de7-118">AutoFilter が有効かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="26de7-118">Indicates if the AutoFilter is enabled or not.</span></span> <span data-ttu-id="26de7-119">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="26de7-119">Read-Only.</span></span>

      <span data-ttu-id="26de7-120">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly enabled: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.getRange
    summary: |-
      <span data-ttu-id="26de7-121">AutoFilter が適用される範囲を表す Range オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="26de7-121">Returns the Range object that represents the range to which the AutoFilter applies.</span></span>

      <span data-ttu-id="26de7-122">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="26de7-123">AutoFilter が適用される範囲を表す Range オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="26de7-123">Returns the Range object that represents the range to which the AutoFilter applies.</span></span> <span data-ttu-id="26de7-124">オートフィルターに関連付けられた Range オブジェクトがない場合、このメソッドは null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="26de7-124">If there is no Range object associated with the AutoFilter, this method returns a null object.</span></span>

      <span data-ttu-id="26de7-125">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.isDataFiltered
    summary: |-
      <span data-ttu-id="26de7-126">AutoFilter にフィルター条件が与えられているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="26de7-126">Indicates if the AutoFilter has filter criteria.</span></span> <span data-ttu-id="26de7-127">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="26de7-127">Read-Only.</span></span>

      <span data-ttu-id="26de7-128">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isDataFiltered
    fullName: isDataFiltered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isDataFiltered: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.load
    summary: <span data-ttu-id="26de7-129">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="26de7-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="26de7-130">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="26de7-130">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="26de7-131">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="26de7-131">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="26de7-132">`load(option?: string | string[]): Excel.AutoFilter`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="26de7-132">`load(option?: string | string[]): Excel.AutoFilter` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="26de7-133">`load(option?: { select?: string; expand?: string; }): Excel.AutoFilter`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="26de7-133">`load(option?: { select?: string; expand?: string; }): Excel.AutoFilter` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="26de7-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="26de7-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter` - Only available on collection types.</span></span> <span data-ttu-id="26de7-135">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="26de7-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="26de7-136">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="26de7-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="26de7-137">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="26de7-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="26de7-138">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="26de7-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.AutoFilterLoadOptions): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.AutoFilterLoadOptions
  - uid: excel.Excel.AutoFilter.load_1
    summary: <span data-ttu-id="26de7-139">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="26de7-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="26de7-140">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="26de7-140">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="26de7-141">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="26de7-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.AutoFilter.load_2
    summary: <span data-ttu-id="26de7-142">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="26de7-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="26de7-143">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="26de7-143">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="26de7-144">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="26de7-144">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.AutoFilter.reapply
    summary: |-
      <span data-ttu-id="26de7-145">その範囲で現在指定されている Autofilter オブジェクトを適用します。</span><span class="sxs-lookup"><span data-stu-id="26de7-145">Applies the specified Autofilter object currently on the range.</span></span>

      <span data-ttu-id="26de7-146">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.remove
    summary: |-
      <span data-ttu-id="26de7-147">範囲の AutoFilter を削除します。</span><span class="sxs-lookup"><span data-stu-id="26de7-147">Removes the AutoFilter for the range.</span></span>

      <span data-ttu-id="26de7-148">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="26de7-148">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: remove()
    fullName: remove()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.toJSON
    summary: '<span data-ttu-id="26de7-149">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="26de7-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="26de7-150">.</span><span class="sxs-lookup"><span data-stu-id="26de7-150"></span></span> <span data-ttu-id="26de7-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="26de7-151"></span></span><!-- --><span data-ttu-id="26de7-152">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel のオートフィルターオブジェクトは API オブジェクトですが、 `toJSON`このメソッドは、プレーンな JavaScript オブジェクト (として型指定されます) を返します。`Excel.Interfaces.AutoFilterData`</span><span class="sxs-lookup"><span data-stu-id="26de7-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.AutoFilter object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.AutoFilterData`</span></span><!-- --><span data-ttu-id="26de7-153">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="26de7-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.AutoFilterData;'
      return:
        type:
          - excel.Excel.Interfaces.AutoFilterData
        description: ''