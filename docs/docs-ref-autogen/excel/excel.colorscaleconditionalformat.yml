### YamlMime:UniversalReference
ms.openlocfilehash: e5b105e7ca96311635d77d4d9777756e936a9795
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979835"
items:
- uid: excel.Excel.ColorScaleConditionalFormat
  summary: >-
    <span data-ttu-id="d9f91-101">条件付き書式の IconSet 条件を表します。</span><span class="sxs-lookup"><span data-stu-id="d9f91-101">Represents an IconSet criteria for conditional formatting.</span></span>


    <span data-ttu-id="d9f91-102">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9f91-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ColorScaleConditionalFormat
  fullName: Excel.ColorScaleConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ColorScaleConditionalFormat.context
  - excel.Excel.ColorScaleConditionalFormat.criteria
  - excel.Excel.ColorScaleConditionalFormat.load
  - excel.Excel.ColorScaleConditionalFormat.load_1
  - excel.Excel.ColorScaleConditionalFormat.load_2
  - excel.Excel.ColorScaleConditionalFormat.set
  - excel.Excel.ColorScaleConditionalFormat.set_1
  - excel.Excel.ColorScaleConditionalFormat.threeColorScale
  - excel.Excel.ColorScaleConditionalFormat.toJSON
- uid: excel.Excel.ColorScaleConditionalFormat.context
  summary: <span data-ttu-id="d9f91-103">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d9f91-103">The request context associated with the object.</span></span> <span data-ttu-id="d9f91-104">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="d9f91-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ColorScaleConditionalFormat.criteria
  summary: >-
    <span data-ttu-id="d9f91-p102">カラー スケールの条件。2 ポイントのカラー スケールを使用する場合、中間値はオプションです。</span><span class="sxs-lookup"><span data-stu-id="d9f91-p102">The criteria of the color scale. Midpoint is optional when using a two point color scale.</span></span>


    <span data-ttu-id="d9f91-107">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9f91-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalColorScaleCriteria;'
    return:
      type:
      - excel.Excel.ConditionalColorScaleCriteria
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d9f91-108\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d9f91-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ColorScaleConditionalFormat.load
  summary: <span data-ttu-id="d9f91-109">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="d9f91-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d9f91-110">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d9f91-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d9f91-111">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="d9f91-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d9f91-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat`-ここで、オプションは、コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="d9f91-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d9f91-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="d9f91-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d9f91-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d9f91-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="d9f91-115">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="d9f91-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="d9f91-116">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9f91-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d9f91-117">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d9f91-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d9f91-118">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="d9f91-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
- uid: excel.Excel.ColorScaleConditionalFormat.load_1
  summary: <span data-ttu-id="d9f91-119">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="d9f91-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d9f91-120">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="d9f91-120">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d9f91-121">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d9f91-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ColorScaleConditionalFormat.load_2
  summary: <span data-ttu-id="d9f91-122">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="d9f91-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d9f91-123">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="d9f91-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="d9f91-124">読み込むには、プロパティを指定するコンマ区切りの文字列は、propertyNamesAndPaths.select、propertyNamesAndPaths.expand は、読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="d9f91-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ColorScaleConditionalFormat.set
  summary: <span data-ttu-id="d9f91-125">同時に複数のオブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d9f91-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d9f91-126">適切なプロパティで、普通のオブジェクトまたは同じ種類の別の API のオブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="d9f91-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="d9f91-127">このメソッドには、次の追加の署名があります。</span><span class="sxs-lookup"><span data-stu-id="d9f91-127">This method has the following additional signature:</span></span>


    `set(properties: Excel.ColorScaleConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="d9f91-128">Isomorphically メソッドが呼び出されますオブジェクトのプロパティを構造化されているプロパティを使用して JavaScript オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d9f91-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ColorScaleConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="d9f91-129">プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを非表示にするオプションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="d9f91-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ColorScaleConditionalFormat.set_1
  summary: <span data-ttu-id="d9f91-130">オブジェクトに読み込まれている既存のオブジェクトに基づいて、同時に複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d9f91-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ColorScaleConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ColorScaleConditionalFormat
- uid: excel.Excel.ColorScaleConditionalFormat.threeColorScale
  summary: >-
    <span data-ttu-id="d9f91-131">True カラー スケールが 3 つある (最小値、中間値、最大)、それ以外の場合が 2 つ (最小、最大)。</span><span class="sxs-lookup"><span data-stu-id="d9f91-131">If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).</span></span>


    <span data-ttu-id="d9f91-132">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d9f91-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: threeColorScale
  fullName: threeColorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly threeColorScale: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ColorScaleConditionalFormat.toJSON
  summary: <span data-ttu-id="d9f91-133">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="d9f91-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d9f91-134">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.ColorScaleConditionalFormat オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.ColorScaleConditionalFormatData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d9f91-134">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatData
      description: ''
