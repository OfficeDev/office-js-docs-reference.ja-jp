### YamlMime:UniversalReference
ms.openlocfilehash: 08cf3e10faa5c7d8a3b99929b563c9e01b7b4005
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29982595"
items:
- uid: excel.Excel.TableCollection
  summary: >-
    <span data-ttu-id="1b548-101">ブックまたはワークシートの一部として含まれる、すべてのテーブルのコレクションを、到達方法に応じて表します。</span><span class="sxs-lookup"><span data-stu-id="1b548-101">Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.</span></span>


    <span data-ttu-id="1b548-102">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableCollection
  fullName: Excel.TableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableCollection.add
  - excel.Excel.TableCollection.context
  - excel.Excel.TableCollection.count
  - excel.Excel.TableCollection.getCount
  - excel.Excel.TableCollection.getItem
  - excel.Excel.TableCollection.getItemAt
  - excel.Excel.TableCollection.getItemOrNullObject
  - excel.Excel.TableCollection.items
  - excel.Excel.TableCollection.load
  - excel.Excel.TableCollection.load_1
  - excel.Excel.TableCollection.load_2
  - excel.Excel.TableCollection.onChanged
  - excel.Excel.TableCollection.toJSON
- uid: excel.Excel.TableCollection.add
  summary: >-
    <span data-ttu-id="1b548-p101">新しいテーブルを作成します。範囲オブジェクトまたはソース アドレスにより、テーブルが追加されるワークシートが判断されます。テーブルが追加できない場合 (たとえば、アドレスが無効な場合や、テーブルが別のテーブルと重複している場合) は、エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="1b548-p101">Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.</span></span>


    <span data-ttu-id="1b548-106">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(address, hasHeaders)
  fullName: add(address, hasHeaders)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(address: Range | string, hasHeaders: boolean): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1b548-107\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1b548-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.add('Sheet1!A1:E7', true);\n    table.load('name');\n    return ctx.sync().then(function() {\n        console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: address
      description: '<span data-ttu-id="1b548-108">Range オブジェクト、または文字列のアドレスまたはデータ ソースを表すセル範囲の名前。</span><span class="sxs-lookup"><span data-stu-id="1b548-108">A Range object, or a string address or name of the range representing the data source.</span></span> <span data-ttu-id="1b548-109">アドレスにシート名が含まれていない場合は、現在アクティブなシートが使用されます。</span><span class="sxs-lookup"><span data-stu-id="1b548-109">If the address does not contain a sheet name, the currently-active sheet is used.</span></span> <span data-ttu-id="1b548-110">\[Api セット: ExcelApi 1.1 1.3 とします。</span><span class="sxs-lookup"><span data-stu-id="1b548-110">\[Api set: ExcelApi 1.1 / 1.3.</span></span> <span data-ttu-id="1b548-111">ExcelApi 1.3 では、前にこのパラメーター文字列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b548-111">Prior to ExcelApi 1.3, this parameter must be a string.</span></span> <span data-ttu-id="1b548-112">Excel Api 1.3 以降では、Range オブジェクト、または文字列パラメーターをこの可能性があります。\]</span><span class="sxs-lookup"><span data-stu-id="1b548-112">Starting with Excel Api 1.3, this parameter may be a Range object or a string.\]</span></span>'
      type:
      - Range | string
    - id: hasHeaders
      description: <span data-ttu-id="1b548-p103">インポートされたデータに列ラベルがあるかどうかを示すブール値。ソースにヘッダーが含まれていない場合 (このプロパティが false に設定されている場合)、Excel はデータを下方向に 1 行シフトして、自動的にヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="1b548-p103">Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.</span></span>
      type:
      - boolean
- uid: excel.Excel.TableCollection.context
  summary: <span data-ttu-id="1b548-116">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="1b548-116">The request context associated with the object.</span></span> <span data-ttu-id="1b548-117">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="1b548-117">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableCollection.count
  summary: >-
    <span data-ttu-id="1b548-p105">ブックに含まれるテーブルの数を返します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1b548-p105">Returns the number of tables in the workbook. Read-only.</span></span>


    <span data-ttu-id="1b548-120">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableCollection.getCount
  summary: >-
    <span data-ttu-id="1b548-121">コレクションに含まれるテーブルの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b548-121">Gets the number of tables in the collection.</span></span>


    <span data-ttu-id="1b548-122">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-122">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableCollection.getItem
  summary: >-
    <span data-ttu-id="1b548-123">名前または ID でテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="1b548-123">Gets a table by Name or ID.</span></span>


    <span data-ttu-id="1b548-124">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1b548-125\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1b548-125\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="1b548-126">取得するテーブルの名前または ID。</span><span class="sxs-lookup"><span data-stu-id="1b548-126">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.TableCollection.getItemAt
  summary: >-
    <span data-ttu-id="1b548-127">コレクション内の位置に基づいてテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="1b548-127">Gets a table based on its position in the collection.</span></span>


    <span data-ttu-id="1b548-128">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1b548-129\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1b548-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItemAt(0);\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="1b548-p106">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="1b548-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="1b548-p107">名前または ID に基づいてテーブルを取得します。テーブルが存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1b548-p107">Gets a table by Name or ID. If the table does not exist, will return a null object.</span></span>


    <span data-ttu-id="1b548-134">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="1b548-135">取得するテーブルの名前または ID。</span><span class="sxs-lookup"><span data-stu-id="1b548-135">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.TableCollection.items
  summary: <span data-ttu-id="1b548-136">このコレクションに読み込まれている子項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b548-136">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Table[];'
    return:
      type:
      - Excel.Table[]
- uid: excel.Excel.TableCollection.load
  summary: <span data-ttu-id="1b548-137">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="1b548-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1b548-138">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b548-138">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1b548-139">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="1b548-139">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1b548-140">`load(option?: string | string[]): Excel.TableCollection`-ここで、オプションは、コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="1b548-140">`load(option?: string | string[]): Excel.TableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1b548-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="1b548-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1b548-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="1b548-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection` - Only available on collection types.</span></span> <span data-ttu-id="1b548-143">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="1b548-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="1b548-144">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="1b548-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1b548-145">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="1b548-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1b548-146">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="1b548-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.TableCollection.load_1
  summary: <span data-ttu-id="1b548-147">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="1b548-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1b548-148">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="1b548-148">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1b548-149\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1b548-149\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    tables.load();\n    return ctx.sync().then(function() {\n        console.log(\"tables Count: \" + tables.count);\n        for (var i = 0; i < tables.items.length; i++)\n        {\n            console.log(tables.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of tables\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    tables.load('count');\n    return ctx.sync().then(function() {\n        console.log(tables.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1b548-150">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="1b548-150">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.TableCollection.onChanged
  summary: >-
    <span data-ttu-id="1b548-151">ブックまたはワークシート内の任意のテーブルにデータが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="1b548-151">Occurs when data changes on any table in a workbook, or a worksheet.</span></span>


    <span data-ttu-id="1b548-152">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b548-152">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onChanged
  fullName: onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1b548-153\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1b548-153\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let tables = context.workbook.tables;\n    tables.onChanged.add(onChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for the table collection onChanged event\");\n});\n```"
- uid: excel.Excel.TableCollection.toJSON
  summary: <span data-ttu-id="1b548-154">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="1b548-154">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="1b548-155">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。元の`Excel.TableCollection`オブジェクトは、API のオブジェクト、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.TableCollectionData` <!-- -->) コレクションのアイテムから読み込まれているプロパティのシャロー コピーを [アイテム] の配列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="1b548-155">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableCollectionData
      description: ''
