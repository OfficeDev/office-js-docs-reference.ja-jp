### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotTable
    summary: |-
      <span data-ttu-id="c3034-101">Excel のピボットテーブルを表します。</span><span class="sxs-lookup"><span data-stu-id="c3034-101">Represents an Excel PivotTable.</span></span>

      <span data-ttu-id="c3034-102">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.PivotTable.columnHierarchies
      - excel.Excel.PivotTable.context
      - excel.Excel.PivotTable.dataHierarchies
      - excel.Excel.PivotTable.delete
      - excel.Excel.PivotTable.enableDataValueEditing
      - excel.Excel.PivotTable.filterHierarchies
      - excel.Excel.PivotTable.hierarchies
      - excel.Excel.PivotTable.id
      - excel.Excel.PivotTable.layout
      - excel.Excel.PivotTable.load
      - excel.Excel.PivotTable.load_1
      - excel.Excel.PivotTable.load_2
      - excel.Excel.PivotTable.name
      - excel.Excel.PivotTable.refresh
      - excel.Excel.PivotTable.rowHierarchies
      - excel.Excel.PivotTable.set
      - excel.Excel.PivotTable.set_1
      - excel.Excel.PivotTable.toJSON
      - excel.Excel.PivotTable.useCustomSortLists
      - excel.Excel.PivotTable.worksheet
  - uid: excel.Excel.PivotTable.columnHierarchies
    summary: |-
      <span data-ttu-id="c3034-103">ピボットテーブルの列ピボット階層。</span><span class="sxs-lookup"><span data-stu-id="c3034-103">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="c3034-104">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
        description: |-

          #### <a name="examples"></a><span data-ttu-id="c3034-105">例</span><span class="sxs-lookup"><span data-stu-id="c3034-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.context
    summary: <span data-ttu-id="c3034-106">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="c3034-106">The request context associated with the object.</span></span> <span data-ttu-id="c3034-107">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="c3034-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.PivotTable.dataHierarchies
    summary: |-
      <span data-ttu-id="c3034-108">ピボットテーブルのデータ ピボット階層。</span><span class="sxs-lookup"><span data-stu-id="c3034-108">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="c3034-109">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.DataPivotHierarchyCollection
        description: |-

          #### <a name="examples"></a><span data-ttu-id="c3034-110">例</span><span class="sxs-lookup"><span data-stu-id="c3034-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.delete
    summary: |-
      <span data-ttu-id="c3034-111">ピボットテーブルを削除します。</span><span class="sxs-lookup"><span data-stu-id="c3034-111">Deletes the PivotTable.</span></span>

      <span data-ttu-id="c3034-112">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-

          #### <a name="examples"></a><span data-ttu-id="c3034-113">例</span><span class="sxs-lookup"><span data-stu-id="c3034-113">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotTable.enableDataValueEditing
    summary: |-
      <span data-ttu-id="c3034-114">ピボットテーブルで、ユーザーがデータ本文の値を編集できるようにするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="c3034-114">Specifies whether the PivotTable allows values in the data body to be edited by the user.</span></span>

      <span data-ttu-id="c3034-115">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enableDataValueEditing
    fullName: enableDataValueEditing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableDataValueEditing: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotTable.filterHierarchies
    summary: |-
      <span data-ttu-id="c3034-116">ピボットテーブルのフィルター ピボット階層。</span><span class="sxs-lookup"><span data-stu-id="c3034-116">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="c3034-117">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.FilterPivotHierarchyCollection
        description: |-

          #### <a name="examples"></a><span data-ttu-id="c3034-118">例</span><span class="sxs-lookup"><span data-stu-id="c3034-118">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: excel.Excel.PivotTable.hierarchies
    summary: |-
      <span data-ttu-id="c3034-119">ピボットテーブルのピボット階層。</span><span class="sxs-lookup"><span data-stu-id="c3034-119">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="c3034-120">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.PivotHierarchyCollection
  - uid: excel.Excel.PivotTable.id
    summary: |-
      <span data-ttu-id="c3034-121">ピボットテーブルの ID。</span><span class="sxs-lookup"><span data-stu-id="c3034-121">Id of the PivotTable.</span></span> <span data-ttu-id="c3034-122">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c3034-122">Read-only.</span></span>

      <span data-ttu-id="c3034-123">\[[API セット: excelapi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-123">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.layout
    summary: |-
      <span data-ttu-id="c3034-124">ピボットテーブルのレイアウトとビジュアル構造を記述する PivotLayout。</span><span class="sxs-lookup"><span data-stu-id="c3034-124">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="c3034-125">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: |-

          #### <a name="examples"></a><span data-ttu-id="c3034-126">例</span><span class="sxs-lookup"><span data-stu-id="c3034-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: excel.Excel.PivotTable.load
    summary: <span data-ttu-id="c3034-127">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c3034-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c3034-128">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3034-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c3034-129">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="c3034-129">In addition to this signature, this method has the following signatures:</span></span>

      `load(option?: string | string[]): Excel.PivotTable` <span data-ttu-id="c3034-130">-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="c3034-130">- Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      `load(option?: { select?: string; expand?: string; }): Excel.PivotTable` <span data-ttu-id="c3034-131">-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c3034-131">- Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` <span data-ttu-id="c3034-132">-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c3034-132">- Only available on collection types.</span></span> <span data-ttu-id="c3034-133">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="c3034-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="c3034-134">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c3034-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c3034-135">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c3034-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c3034-136">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="c3034-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotTableLoadOptions
  - uid: excel.Excel.PivotTable.load_1
    summary: <span data-ttu-id="c3034-137">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c3034-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c3034-138">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3034-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c3034-139">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="c3034-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotTable.load_2
    summary: <span data-ttu-id="c3034-140">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c3034-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c3034-141">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c3034-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c3034-142">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c3034-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PivotTable.name
    summary: |-
      <span data-ttu-id="c3034-143">ピボットテーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="c3034-143">Name of the PivotTable.</span></span>

      <span data-ttu-id="c3034-144">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.PivotTable.refresh
    summary: |-
      <span data-ttu-id="c3034-145">ピボットテーブルを更新します。</span><span class="sxs-lookup"><span data-stu-id="c3034-145">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="c3034-146">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-146">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.PivotTable.rowHierarchies
    summary: |-
      <span data-ttu-id="c3034-147">ピボットテーブルの行ピボット階層。</span><span class="sxs-lookup"><span data-stu-id="c3034-147">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="c3034-148">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-148">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
  - uid: excel.Excel.PivotTable.set
    summary: '<span data-ttu-id="c3034-149">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c3034-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c3034-150">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c3034-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c3034-151">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="c3034-151">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="c3034-152">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c3034-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.PivotTableUpdateData
        - id: options
          description: <span data-ttu-id="c3034-153">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="c3034-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.PivotTable.set_1
    summary: '<span data-ttu-id="c3034-154">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c3034-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotTable
  - uid: excel.Excel.PivotTable.toJSON
    summary: '<span data-ttu-id="c3034-155">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c3034-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to</span></span> `JSON.stringify()`<!-- --><span data-ttu-id="c3034-156">.</span><span class="sxs-lookup"><span data-stu-id="c3034-156"></span></span> <span data-ttu-id="c3034-157">(</span><span class="sxs-lookup"><span data-stu-id="c3034-157"></span></span>`JSON.stringify`<!-- --><span data-ttu-id="c3034-158">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel PivotTable オブジェクトは API オブジェクトですが、このメソッド`toJSON`はプレーンな JavaScript オブジェクト (として型指定されます) を返します。</span><span class="sxs-lookup"><span data-stu-id="c3034-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as</span></span> `Excel.Interfaces.PivotTableData`<!-- --><span data-ttu-id="c3034-159">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="c3034-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableData
        description: ''
  - uid: excel.Excel.PivotTable.useCustomSortLists
    summary: |-
      <span data-ttu-id="c3034-160">並べ替えの際に、ピボットテーブルでカスタムリストを使用するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="c3034-160">Specifies whether the PivotTable uses custom lists when sorting.</span></span>

      <span data-ttu-id="c3034-161">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-161">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: useCustomSortLists
    fullName: useCustomSortLists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useCustomSortLists: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotTable.worksheet
    summary: |-
      <span data-ttu-id="c3034-162">現在のピボットテーブルを含んでいるワークシート。</span><span class="sxs-lookup"><span data-stu-id="c3034-162">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="c3034-163">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c3034-163">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet