### YamlMime:UniversalReference
ms.openlocfilehash: 5af5993e965b8fea44b1f052b002f417ee016b2c
ms.sourcegitcommit: a68606173477c7fb4069880eea941766c7d8c50d
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/01/2019
ms.locfileid: "29704465"
items:
- uid: excel.Excel.Runtime
  summary: >-
    Excel のランタイム クラスを表します。


    \[[API セット: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Runtime
  fullName: Excel.Runtime
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Runtime.context
  - excel.Excel.Runtime.enableEvents
  - excel.Excel.Runtime.load
  - excel.Excel.Runtime.toJSON
- uid: excel.Excel.Runtime.context
  summary: オブジェクトに関連付けられた要求コンテキスト。 これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Runtime.enableEvents
  summary: >-
    現在の作業ウィンドウまたはコンテンツの追加の JavaScript イベントを切り替えます。


    \[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: enableEvents
  fullName: enableEvents
  langs:
  - typeScript
  type: property
  syntax:
    content: 'enableEvents: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    context.runtime.load(\"enableEvents\");\n    await context.sync();\n\n    // check if events are enabled and toggle accordingly\n    const eventBoolean = !context.runtime.enableEvents\n    context.runtime.enableEvents = eventBoolean;\n    if (eventBoolean) {\n        console.log(\"Events are currently on.\");\n    } else {\n        console.log(\"Events are currently off.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Runtime.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: >-
    だけでなく、この署名は、このメソッドは、次の署名をします。


    `load(option?: { select?: string; expand?: string; }): Excel.Runtime`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Runtime`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Runtime;'
    return:
      type:
      - excel.Excel.Runtime
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.Runtime.toJSON
  summary: JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。 (`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.Runtime オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.RuntimeData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RuntimeData;'
    return:
      type:
      - excel.Excel.Interfaces.RuntimeData
      description: ''
