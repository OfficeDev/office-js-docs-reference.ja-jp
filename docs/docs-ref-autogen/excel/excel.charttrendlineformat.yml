### YamlMime:UniversalReference
ms.openlocfilehash: 7863e8a96035a5311843d6d7e000d4503c3ac662
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24049653"
items:
- uid: excel.Excel.ChartTrendlineFormat
  summary: >-
    グラフの近似曲線の書式プロパティを表します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ChartTrendlineFormat
  fullName: excel.Excel.ChartTrendlineFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartTrendlineFormat.line
  - excel.Excel.ChartTrendlineFormat.load
  - excel.Excel.ChartTrendlineFormat.toJSON
- uid: excel.Excel.ChartTrendlineFormat.line
  summary: >-
    グラフの線の書式設定を表します。値の取得のみ可能です。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: line
  fullName: excel.Excel.ChartTrendlineFormat.line
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly line: Excel.ChartLineFormat;'
    return:
      type:
      - excel.Excel.ChartLineFormat
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series; \n\n    // Get the color of the chart trendline. \n    // In this example, it's #4472c4 which is blue.\n    let trendline = seriesCollection.getItemAt(0).trendlines.getItem(0);\n    let line = trendline.format.line;\n    line.load(\"color\");\n\n    await context.sync();\n\n    console.log(\"The trendline color is:\" + line.color);\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let seriesCollection = sheet.charts.getItemAt(0).series; \n    let trendline = seriesCollection.getItemAt(0).trendlines.getItem(0);\n\n    // Set format of the trendline to a solid, red line.\n    let line = trendline.format.line;\n    line.color = '#FF0000';\n\n    await context.sync();\n\n    console.log(\"The trendline color has been set to:\" + line.color);\n});\n```"
- uid: excel.Excel.ChartTrendlineFormat.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: >-
    だけでなく、この署名は、このメソッドは、次の署名をします。


    `load(option?: { select?: string; expand?: string; }): Excel.ChartTrendlineFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartTrendlineFormat`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。
  name: load(option)
  fullName: excel.Excel.ChartTrendlineFormat.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartTrendlineFormat;'
    return:
      type:
      - excel.Excel.ChartTrendlineFormat
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.ChartTrendlineFormat.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartTrendlineFormat.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartTrendlineFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartTrendlineFormatData
      description: ''
