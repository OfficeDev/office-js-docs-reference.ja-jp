### YamlMime:UniversalReference
ms.openlocfilehash: 557671cc8c50a868ae0e7d5a79aeebf8b0f788d3
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 11/09/2018
ms.locfileid: "26226366"
items:
- uid: excel.Excel.TableRowCollection
  summary: >-
    <span data-ttu-id="9c71c-101">表の一部であるすべての行のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="9c71c-101">Represents a collection of all the rows that are part of the table.</span></span>


    <span data-ttu-id="9c71c-102">範囲や、その前に新しい行や列を追加する場合の調整は、列とは異なり、TableRow オブジェクトを表すテーブルの行がデータではなく物理的な場所をメモします。</span><span class="sxs-lookup"><span data-stu-id="9c71c-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="9c71c-103">データが並べ替えられている場合、または新しい行を追加する場合は、テーブルの行は引き続き作成されたインデックス位置にします。</span><span class="sxs-lookup"><span data-stu-id="9c71c-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="9c71c-104">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c71c-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRowCollection
  fullName: Excel.TableRowCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableRowCollection.add
  - excel.Excel.TableRowCollection.count
  - excel.Excel.TableRowCollection.getCount
  - excel.Excel.TableRowCollection.getItemAt
  - excel.Excel.TableRowCollection.items
  - excel.Excel.TableRowCollection.load
  - excel.Excel.TableRowCollection.toJSON
- uid: excel.Excel.TableRowCollection.add
  summary: >-
    <span data-ttu-id="9c71c-p102">テーブルに 1 つ以上の行を追加します。戻りオブジェクトは新しく追加された行の先頭になります。</span><span class="sxs-lookup"><span data-stu-id="9c71c-p102">Adds one or more rows to the table. The return object will be the top of the newly added row(s).</span></span>


    <span data-ttu-id="9c71c-107">範囲や、その前に新しい行や列を追加する場合の調整は、列とは異なり、TableRow オブジェクトを表すテーブルの行がデータではなく物理的な場所をメモします。</span><span class="sxs-lookup"><span data-stu-id="9c71c-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="9c71c-108">データが並べ替えられている場合、または新しい行を追加する場合は、テーブルの行は引き続き作成されたインデックス位置にします。</span><span class="sxs-lookup"><span data-stu-id="9c71c-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="9c71c-109">\[[API セット: 1 つの行を追加するための ExcelApi 1.1 1.4 では、複数の行を追加することができます](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)。</span><span class="sxs-lookup"><span data-stu-id="9c71c-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="9c71c-110">\]</span><span class="sxs-lookup"><span data-stu-id="9c71c-110"></span></span>
  name: add(index, values)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9c71c-111\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-111\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var row = tables.getItem(\"Table1\").rows.add(null, values);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="9c71c-p105">省略可能。新しい行の相対位置を指定します。null または -1 の場合、最後に追加が行われます。挿入した行の下のすべての行が下方向にシフトします。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="9c71c-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="9c71c-p106">省略可能。テーブルの行の書式設定されていない値の 2 次元の配列。</span><span class="sxs-lookup"><span data-stu-id="9c71c-p106">Optional. A 2-dimensional array of unformatted values of the table row.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
- uid: excel.Excel.TableRowCollection.count
  summary: >-
    <span data-ttu-id="9c71c-p107">テーブルの行数を返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="9c71c-p107">Returns the number of rows in the table. Read-only.</span></span>


    <span data-ttu-id="9c71c-121">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c71c-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableRowCollection.getCount
  summary: >-
    <span data-ttu-id="9c71c-122">表の行数を取得します。</span><span class="sxs-lookup"><span data-stu-id="9c71c-122">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="9c71c-123">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c71c-123">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableRowCollection.getItemAt
  summary: >-
    <span data-ttu-id="9c71c-124">コレクション内の位置を基に行を取得します。</span><span class="sxs-lookup"><span data-stu-id="9c71c-124">Gets a row based on its position in the collection.</span></span>


    <span data-ttu-id="9c71c-125">範囲や、その前に新しい行や列を追加する場合の調整は、列とは異なり、TableRow オブジェクトを表すテーブルの行がデータではなく物理的な場所をメモします。</span><span class="sxs-lookup"><span data-stu-id="9c71c-125">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="9c71c-126">データが並べ替えられている場合、または新しい行を追加する場合は、テーブルの行は引き続き作成されたインデックス位置にします。</span><span class="sxs-lookup"><span data-stu-id="9c71c-126">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="9c71c-127">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c71c-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9c71c-128\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);\n    tablerow.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablerow.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="9c71c-p109">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="9c71c-p109">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableRowCollection.items
  summary: <span data-ttu-id="9c71c-131">このコレクションに読み込まれている子項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="9c71c-131">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableRow[];'
    return:
      type:
      - Excel.TableRow[]
- uid: excel.Excel.TableRowCollection.load
  summary: <span data-ttu-id="9c71c-132">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="9c71c-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9c71c-133">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9c71c-133">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"9c71c-134\">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-134\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"9c71c-135\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-135\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"9c71c-136\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`でコレクション型のみ使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-136\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"9c71c-137\">前の署名に似ていますが。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-137\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"9c71c-138\">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-138\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"9c71c-139\">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-139\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"9c71c-140\">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-140\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"9c71c-141\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c71c-141\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerows = ctx.workbook.tables.getItem('Table1').rows;\n    tablerows.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablerows Count: \" + tablerows.count);\n        for (var i = 0; i < tablerows.items.length; i++)\n        {\n            console.log(tablerows.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// In the example, we'll select the top 100 rows of the table.\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItem(\"Table1\");\n    var tableRows = table.rows.load({\"select\" : \"index, values\",\"top\": 100, \"skip\": 0 })\n    return ctx.sync().then(function() {\n        for (var i = 0; i < tableRows.items.length; i++)\n        {\n            console.log(tableRows.items[i].index);\n            console.log(tableRows.items[i].values);\n        }\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="9c71c-142">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="9c71c-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableRowCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowCollectionData
      description: ''
