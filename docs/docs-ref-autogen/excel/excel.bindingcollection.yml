### YamlMime:UniversalReference
ms.openlocfilehash: e6cd660ab22ab25dce1d16dd79c8ff28ef93c168
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24047986"
items:
- uid: excel.Excel.BindingCollection
  summary: >-
    <span data-ttu-id="0c8ff-101">ブックの一部であるすべてのバインド オブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>


    <span data-ttu-id="0c8ff-102">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.BindingCollection
  fullName: excel.Excel.BindingCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.BindingCollection.add
  - excel.Excel.BindingCollection.addFromNamedItem
  - excel.Excel.BindingCollection.addFromSelection
  - excel.Excel.BindingCollection.count
  - excel.Excel.BindingCollection.getCount
  - excel.Excel.BindingCollection.getItem
  - excel.Excel.BindingCollection.getItemAt
  - excel.Excel.BindingCollection.getItemOrNullObject
  - excel.Excel.BindingCollection.items
  - excel.Excel.BindingCollection.load
  - excel.Excel.BindingCollection.toJSON
- uid: excel.Excel.BindingCollection.add
  summary: >-
    <span data-ttu-id="0c8ff-103">特定の範囲に新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-103">Add a new binding to a particular Range.</span></span>


    <span data-ttu-id="0c8ff-104">\[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-104">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(range, bindingType, id)
  fullName: excel.Excel.BindingCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: <span data-ttu-id="0c8ff-p101">バインドをバインドする範囲です。Excel Range オブジェクト、または文字列である場合があります。文字列の場合は、シート名を含む完全なアドレスが含まれている必要があります</span><span class="sxs-lookup"><span data-stu-id="0c8ff-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: bindingType
      description: <span data-ttu-id="0c8ff-108">バインドの種類です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-108">Type of binding.</span></span> <span data-ttu-id="0c8ff-109">Excel.BindingType を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-109">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="0c8ff-110">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-110">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromNamedItem
  summary: >-
    <span data-ttu-id="0c8ff-111">ブック内の名前付きアイテムに基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-111">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="0c8ff-112">名前付きアイテムは、複数の領域を参照する場合は、"InvalidReference"のエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-112">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="0c8ff-113">\[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-113">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromNamedItem(name, bindingType, id)
  fullName: excel.Excel.BindingCollection.addFromNamedItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="0c8ff-114">バインドの作成元の名前です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-114">Name from which to create binding.</span></span>
      type:
      - string
    - id: bindingType
      description: <span data-ttu-id="0c8ff-115">バインドの種類です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-115">Type of binding.</span></span> <span data-ttu-id="0c8ff-116">Excel.BindingType を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-116">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="0c8ff-117">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-117">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.addFromSelection
  summary: >-
    <span data-ttu-id="0c8ff-118">現在の選択範囲に基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-118">Add a new binding based on the current selection.</span></span> <span data-ttu-id="0c8ff-119">選択範囲に複数の領域がある場合は、"InvalidReference"のエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-119">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="0c8ff-120">\[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-120">\[ [API set: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromSelection(bindingType, id)
  fullName: excel.Excel.BindingCollection.addFromSelection
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingType
      description: <span data-ttu-id="0c8ff-121">バインドの種類です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-121">Type of binding.</span></span> <span data-ttu-id="0c8ff-122">Excel.BindingType を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-122">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="0c8ff-123">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-123">Name of binding.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.count
  summary: >-
    <span data-ttu-id="0c8ff-p107">コレクション内にあるバインドの数を取得します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-p107">Returns the number of bindings in the collection. Read-only.</span></span>


    <span data-ttu-id="0c8ff-126">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-126">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: excel.Excel.BindingCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.BindingCollection.getCount
  summary: >-
    <span data-ttu-id="0c8ff-127">コレクション内にあるバインドの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-127">Gets the number of bindings in the collection.</span></span>


    <span data-ttu-id="0c8ff-128">\[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-128">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: excel.Excel.BindingCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.BindingCollection.getItem
  summary: >-
    <span data-ttu-id="0c8ff-129">ID によってバインド オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-129">Gets a binding object by ID.</span></span>


    <span data-ttu-id="0c8ff-130">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-130">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(id)
  fullName: excel.Excel.BindingCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0c8ff-131\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-131\">Examples</span></span>\n\n```javascript\n// Create a table binding to monitor data changes in the table. \n// When data is changed, the background color of the table will be changed to orange.\nfunction addEventHandler() {\n    //Create Table1\nExcel.run(function (ctx) { \n    ctx.workbook.tables.add(\"Sheet1!A1:C4\", true);\n    return ctx.sync().then(function() {\n             console.log(\"My Diet Data Inserted!\");\n    })\n    .catch(function (error) {\n             console.log(JSON.stringify(error));\n    });\n});\n    //Create a new table binding for Table1\nOffice.context.document.bindings.addFromNamedItemAsync(\n    \"Table1\", Office.CoercionType.Table, { id: \"myBinding\" }, function (asyncResult) {\n    if (asyncResult.status == \"failed\") {\n        console.log(\"Action failed with error: \" + asyncResult.error.message);\n    }\n    else {\n        // If succeeded, then add event handler to the table binding.\n        Office.select(\"bindings#myBinding\").addHandlerAsync(\n            Office.EventType.BindingDataChanged, onBindingDataChanged);\n    }\n});\n}\n    \n// when data in the table is changed, this event will be triggered.\nfunction onBindingDataChanged(eventArgs) {\nExcel.run(function (ctx) { \n    // highlight the table in orange to indicate data has been changed.\n    ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = \"Orange\";\n    return ctx.sync().then(function() {\n            console.log(\"The value in this table got changed!\");\n    })\n    .catch(function (error) {\n            console.log(JSON.stringify(error));\n    });\n});\n}\n```\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="0c8ff-132">取得するバインド オブジェクトの ID。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-132">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.getItemAt
  summary: >-
    <span data-ttu-id="0c8ff-133">項目の配列内の位置に基づいて、バインド オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-133">Gets a binding object based on its position in the items array.</span></span>


    <span data-ttu-id="0c8ff-134">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-134">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: excel.Excel.BindingCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0c8ff-135\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="0c8ff-p108">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-p108">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.BindingCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="0c8ff-p109">ID によってバインド オブジェクトを取得します。バインディング オブジェクトが存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-p109">Gets a binding object by ID. If the binding object does not exist, will return a null object.</span></span>


    <span data-ttu-id="0c8ff-140">\[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c8ff-140">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(id)
  fullName: excel.Excel.BindingCollection.getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="0c8ff-141">取得するバインド オブジェクトの ID。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-141">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.BindingCollection.items
  summary: <span data-ttu-id="0c8ff-142">このコレクションに読み込まれている子項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-142">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: excel.Excel.BindingCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Binding[];'
    return:
      type:
      - Excel.Binding[]
- uid: excel.Excel.BindingCollection.load
  summary: <span data-ttu-id="0c8ff-143">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0c8ff-144">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-144">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"0c8ff-145\">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-145\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"0c8ff-146\">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-146\">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"0c8ff-147\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`でコレクション型のみ使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-147\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"0c8ff-148\">前の署名に似ていますが。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-148\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"0c8ff-149\">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-149\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"0c8ff-150\">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-150\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"0c8ff-151\">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-151\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"0c8ff-152\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c8ff-152\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < bindings.items.length; i++)\n        {\n            console.log(bindings.items[i].id);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of bindings\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"Bindings: Count= \" + bindings.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.BindingCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="0c8ff-153">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="0c8ff-153">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.BindingCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.BindingCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingCollectionData
      description: ''
