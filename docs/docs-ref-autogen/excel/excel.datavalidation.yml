### YamlMime:UniversalReference
ms.openlocfilehash: 3f33e2da9e2254df50cc3801dd7fcc86056d7d22
ms.sourcegitcommit: 9034a7d2fb2934046178915d4305b0f0cf8f7934
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/26/2018
ms.locfileid: "25798179"
items:
- uid: excel.Excel.DataValidation
  summary: >-
    <span data-ttu-id="39e05-101">現在の範囲に適用されるデータの入力規則を表します。</span><span class="sxs-lookup"><span data-stu-id="39e05-101">Represents the data validation applied to the current range.</span></span>


    <span data-ttu-id="39e05-102">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidation
  fullName: excel.Excel.DataValidation
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.DataValidation.clear
  - excel.Excel.DataValidation.errorAlert
  - excel.Excel.DataValidation.ignoreBlanks
  - excel.Excel.DataValidation.load
  - excel.Excel.DataValidation.prompt
  - excel.Excel.DataValidation.rule
  - excel.Excel.DataValidation.toJSON
  - excel.Excel.DataValidation.type
  - excel.Excel.DataValidation.valid
- uid: excel.Excel.DataValidation.clear
  summary: >-
    <span data-ttu-id="39e05-103">現在の範囲からのデータの入力規則を削除します。</span><span class="sxs-lookup"><span data-stu-id="39e05-103">Clears the data validation from the current range.</span></span>


    <span data-ttu-id="39e05-104">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: excel.Excel.DataValidation.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.DataValidation.errorAlert
  summary: >-
    <span data-ttu-id="39e05-105">無効なデータが入力されたときに警告をエラーします。</span><span class="sxs-lookup"><span data-stu-id="39e05-105">Error alert when user enters invalid data.</span></span>


    <span data-ttu-id="39e05-106">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: errorAlert
  fullName: excel.Excel.DataValidation.errorAlert
  langs:
  - typeScript
  type: property
  syntax:
    content: 'errorAlert: Excel.DataValidationErrorAlert;'
    return:
      type:
      - excel.Excel.DataValidationErrorAlert
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"39e05-107\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"39e05-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const commentsRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Comments\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    commentsRange.dataValidation.clear();   \n\n    // If the value of A2 is contained in the value of C2, then \n    // SEARCH(A2,C2) returns the number where it begins. Otherwise,\n    // it does not return a number.\n    let redundantStringRule = {\n        custom: {\n            formula: \"=NOT(ISNUMBER(SEARCH(A2,C2)))\"\n        }\n    };\n    commentsRange.dataValidation.rule = redundantStringRule;\n    commentsRange.dataValidation.errorAlert = {\n        message: \"It is redundant to include the baby name in the comment.\",\n        showAlert: true,\n        style: \"Information\",\n        title: \"Baby Name in Comment\"\n    };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.DataValidation.ignoreBlanks
  summary: >-
    <span data-ttu-id="39e05-108">空白を無視する: 空白のセルにデータ検証は実行されません、既定で true に設定します。</span><span class="sxs-lookup"><span data-stu-id="39e05-108">Ignore blanks: no data validation will be performed on blank cells, it defaults to true.</span></span>


    <span data-ttu-id="39e05-109">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: ignoreBlanks
  fullName: excel.Excel.DataValidation.ignoreBlanks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreBlanks: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.DataValidation.load
  summary: <span data-ttu-id="39e05-110">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="39e05-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="39e05-111">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="39e05-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="39e05-112">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="39e05-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="39e05-113">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="39e05-113">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="39e05-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="39e05-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation` - Only available on collection types.</span></span> <span data-ttu-id="39e05-115">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="39e05-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="39e05-116">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="39e05-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="39e05-117">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="39e05-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="39e05-118">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="39e05-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: excel.Excel.DataValidation.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="39e05-119">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="39e05-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.DataValidation.prompt
  summary: >-
    <span data-ttu-id="39e05-120">ユーザーがセルを選択するとメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="39e05-120">Prompt when users select a cell.</span></span>


    <span data-ttu-id="39e05-121">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-121">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: prompt
  fullName: excel.Excel.DataValidation.prompt
  langs:
  - typeScript
  type: property
  syntax:
    content: 'prompt: Excel.DataValidationPrompt;'
    return:
      type:
      - excel.Excel.DataValidationPrompt
- uid: excel.Excel.DataValidation.rule
  summary: >-
    <span data-ttu-id="39e05-122">別の種類データ入力規則の条件にはが含まれているデータの入力規則です。</span><span class="sxs-lookup"><span data-stu-id="39e05-122">Data Validation rule that contains different type of data validation criteria.</span></span>


    <span data-ttu-id="39e05-123">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: excel.Excel.DataValidation.rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.DataValidationRule;'
    return:
      type:
      - excel.Excel.DataValidationRule
- uid: excel.Excel.DataValidation.toJSON
  name: toJSON()
  fullName: excel.Excel.DataValidation.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataValidationData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationData
      description: ''
- uid: excel.Excel.DataValidation.type
  summary: >-
    <span data-ttu-id="39e05-124">データの入力規則の種類、詳細については Excel.DataValidationType を参照してください。</span><span class="sxs-lookup"><span data-stu-id="39e05-124">Type of the data validation, see Excel.DataValidationType for details.</span></span>


    <span data-ttu-id="39e05-125">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: excel.Excel.DataValidation.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
    return:
      type:
      - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
- uid: excel.Excel.DataValidation.valid
  summary: >-
    <span data-ttu-id="39e05-126">すべてのセル値は、データの入力規則に従った有効な場合を表します。</span><span class="sxs-lookup"><span data-stu-id="39e05-126">Represents if all cell values are valid according to the data validation rules.</span></span> <span data-ttu-id="39e05-127">すべてのセルの値が無効な場合すべてのセルの値が無効な場合、または false の場合は、true を返します。</span><span class="sxs-lookup"><span data-stu-id="39e05-127">Returns true if all cell values are valid, or false if all cell values are invalid.</span></span> <span data-ttu-id="39e05-128">両方の有効および無効なセル値の範囲内である場合は null を返します。</span><span class="sxs-lookup"><span data-stu-id="39e05-128">Returns null if there are both valid and invalid cell values within the range.</span></span>


    <span data-ttu-id="39e05-129">\[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39e05-129">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valid
  fullName: excel.Excel.DataValidation.valid
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valid: boolean;'
    return:
      type:
      - boolean
