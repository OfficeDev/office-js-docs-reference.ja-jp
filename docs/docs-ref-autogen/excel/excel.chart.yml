### YamlMime:UniversalReference
ms.openlocfilehash: 70be953abd49688ce477065405cc980150f88d42
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/20/2018
ms.locfileid: "24047809"
items:
- uid: excel.Excel.Chart
  summary: >-
    <span data-ttu-id="45a23-101">ブック内のグラフ オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-101">Represents a chart object in a workbook.</span></span>


    <span data-ttu-id="45a23-102">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  remarks: <span data-ttu-id="45a23-103">チュートリアル、イメージ、およびサンプル コードの詳細な[グラフでの操作の方法を紹介します](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts)。</span><span class="sxs-lookup"><span data-stu-id="45a23-103">Our [how-to guide on working with charts](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts) has detailed walkthroughs, images, and code samples.</span></span>
  name: Excel.Chart
  fullName: excel.Excel.Chart
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Chart.axes
  - excel.Excel.Chart.chartType
  - excel.Excel.Chart.dataLabels
  - excel.Excel.Chart.delete
  - excel.Excel.Chart.format
  - excel.Excel.Chart.getImage
  - excel.Excel.Chart.height
  - excel.Excel.Chart.id
  - excel.Excel.Chart.left
  - excel.Excel.Chart.legend
  - excel.Excel.Chart.load
  - excel.Excel.Chart.name
  - excel.Excel.Chart.series
  - excel.Excel.Chart.setData
  - excel.Excel.Chart.setPosition
  - excel.Excel.Chart.showAllFieldButtons
  - excel.Excel.Chart.title
  - excel.Excel.Chart.toJSON
  - excel.Excel.Chart.top
  - excel.Excel.Chart.width
  - excel.Excel.Chart.worksheet
- uid: excel.Excel.Chart.axes
  summary: >-
    <span data-ttu-id="45a23-p101">グラフの軸を表します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="45a23-p101">Represents chart axes. Read-only.</span></span>


    <span data-ttu-id="45a23-106">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-106">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: axes
  fullName: excel.Excel.Chart.axes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly axes: Excel.ChartAxes;'
    return:
      type:
      - excel.Excel.ChartAxes
- uid: excel.Excel.Chart.chartType
  summary: >-
    <span data-ttu-id="45a23-107">グラフの種類を表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-107">Represents the type of the chart.</span></span> <span data-ttu-id="45a23-108">詳細については Excel.ChartType を参照してください。</span><span class="sxs-lookup"><span data-stu-id="45a23-108">See Excel.ChartType for details.</span></span>


    <span data-ttu-id="45a23-109">\[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-109">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: chartType
  fullName: excel.Excel.Chart.chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.Chart.dataLabels
  summary: >-
    <span data-ttu-id="45a23-p103">グラフのデータラベルを表します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="45a23-p103">Represents the datalabels on the chart. Read-only.</span></span>


    <span data-ttu-id="45a23-112">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-112">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataLabels
  fullName: excel.Excel.Chart.dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel.Excel.Chart.delete
  summary: >-
    <span data-ttu-id="45a23-113">グラフ オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="45a23-113">Deletes the chart object.</span></span>


    <span data-ttu-id="45a23-114">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-114">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: excel.Excel.Chart.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"45a23-115\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-115\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.format
  summary: >-
    <span data-ttu-id="45a23-p104">グラフ領域の書式設定プロパティをカプセル化します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="45a23-p104">Encapsulates the format properties for the chart area. Read-only.</span></span>


    <span data-ttu-id="45a23-118">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-118">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: excel.Excel.Chart.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartAreaFormat;'
    return:
      type:
      - excel.Excel.ChartAreaFormat
- uid: excel.Excel.Chart.getImage
  summary: >-
    <span data-ttu-id="45a23-119">指定したサイズに合わせてグラフを拡大、縮小することで、グラフを Base64 でエンコードされた画像としてレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="45a23-119">Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.</span></span> <span data-ttu-id="45a23-120">縦横比は、サイズ変更の一部として保持されます。</span><span class="sxs-lookup"><span data-stu-id="45a23-120">The aspect ratio is preserved as part of the resizing.</span></span>


    <span data-ttu-id="45a23-121">\[[API セット: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-121">\[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getImage(width, height, fittingMode)
  fullName: excel.Excel.Chart.getImage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"45a23-122\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var image = chart.getImage();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: width
      description: <span data-ttu-id="45a23-123">(省略可能)結果のイメージの幅。</span><span class="sxs-lookup"><span data-stu-id="45a23-123">(Optional) The desired width of the resulting image.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="45a23-124">(省略可能)結果のイメージの高さ。</span><span class="sxs-lookup"><span data-stu-id="45a23-124">(Optional) The desired height of the resulting image.</span></span>
      type:
      - number
    - id: fittingMode
      description: <span data-ttu-id="45a23-125">(省略可能)(高さと幅の両方が設定されている) 場合は、指定した寸法を指定したグラフを拡大または縮小するために使用するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="45a23-125">(Optional) The method used to scale the chart to the specified to the specified dimensions (if both height and width are set).</span></span>
      type:
      - excel.Excel.ImageFittingMode
- uid: excel.Excel.Chart.height
  summary: >-
    <span data-ttu-id="45a23-126">グラフ オブジェクトの高さをポイント単位で表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-126">Represents the height, in points, of the chart object.</span></span>


    <span data-ttu-id="45a23-127">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-127">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: height
  fullName: excel.Excel.Chart.height
  langs:
  - typeScript
  type: property
  syntax:
    content: 'height: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.id
  summary: >-
    <span data-ttu-id="45a23-128">グラフの一意の id です。</span><span class="sxs-lookup"><span data-stu-id="45a23-128">The unique id of chart.</span></span> <span data-ttu-id="45a23-129">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="45a23-129">Read-only.</span></span>


    <span data-ttu-id="45a23-130">\[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-130">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: excel.Excel.Chart.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Chart.left
  summary: >-
    <span data-ttu-id="45a23-131">グラフの左側からワークシートの原点までの距離 (ポイント単位)。</span><span class="sxs-lookup"><span data-stu-id="45a23-131">The distance, in points, from the left side of the chart to the worksheet origin.</span></span>


    <span data-ttu-id="45a23-132">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-132">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: left
  fullName: excel.Excel.Chart.left
  langs:
  - typeScript
  type: property
  syntax:
    content: 'left: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.legend
  summary: >-
    <span data-ttu-id="45a23-p107">グラフの凡例を表します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="45a23-p107">Represents the legend for the chart. Read-only.</span></span>


    <span data-ttu-id="45a23-135">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-135">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: legend
  fullName: excel.Excel.Chart.legend
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legend: Excel.ChartLegend;'
    return:
      type:
      - excel.Excel.ChartLegend
- uid: excel.Excel.Chart.load
  summary: <span data-ttu-id="45a23-136">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="45a23-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45a23-137">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="45a23-137">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"45a23-138\">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-138\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"45a23-139\">`load(option?: { select?: string; expand?: string; }): Excel.Chart`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-139\">`load(option?: { select?: string; expand?: string; }): Excel.Chart` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"45a23-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart`でコレクション型のみ使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart` - Only available on collection types.</span></span> <span data-ttu-id=\"45a23-141\">前の署名に似ていますが。</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-141\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"45a23-142\">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-142\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"45a23-143\">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-143\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"45a23-144\">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-144\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"45a23-145\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-145\">Examples</span></span>\n\n```javascript\n// Get a chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.load('name');\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.Chart.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="45a23-146">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="45a23-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Chart.name
  summary: >-
    <span data-ttu-id="45a23-147"> グラフ オブジェクトの名前を表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-147">Represents the name of a chart object.</span></span>


    <span data-ttu-id="45a23-148">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-148">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: excel.Excel.Chart.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"45a23-149\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-149\">Examples</span></span>\n\n```javascript\n// Rename the chart to new name, resize the chart to 200 points in both height and weight. \n// Move Chart1 to 100 points to the top and left. \nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.name = \"New Name\";\n    chart.top = 100;\n    chart.left = 100;\n    chart.height = 200;\n    chart.width = 200;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.series
  summary: >-
    <span data-ttu-id="45a23-p110">グラフの 1 つのデータ系列またはデータ系列のコレクションを表します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="45a23-p110">Represents either a single series or collection of series in the chart. Read-only.</span></span>


    <span data-ttu-id="45a23-152">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-152">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: series
  fullName: excel.Excel.Chart.series
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly series: Excel.ChartSeriesCollection;'
    return:
      type:
      - excel.Excel.ChartSeriesCollection
- uid: excel.Excel.Chart.setData
  summary: >-
    <span data-ttu-id="45a23-153">グラフのソース データをリセットします。</span><span class="sxs-lookup"><span data-stu-id="45a23-153">Resets the source data for the chart.</span></span>


    <span data-ttu-id="45a23-154">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-154">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setData(sourceData, seriesBy)
  fullName: excel.Excel.Chart.setData
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"45a23-155\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-155\">Examples</span></span>\n\n```javascript\n// Set the sourceData to be \"A1:B4\" and seriesBy to be \"Columns\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var sourceData = \"A1:B4\";\n    chart.setData(sourceData, \"Columns\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: sourceData
      description: <span data-ttu-id="45a23-156">データ ソースに対応する range オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="45a23-156">The range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: '<span data-ttu-id="45a23-157">方法の列または行がグラフのデータ系列として使用されるかを指定します。</span><span class="sxs-lookup"><span data-stu-id="45a23-157">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="45a23-158">次のいずれか: 自動 (既定)、行、および列です。</span><span class="sxs-lookup"><span data-stu-id="45a23-158">Can be one of the following: Auto (default), Rows, and Columns.</span></span> <span data-ttu-id="45a23-159">詳細については Excel.ChartSeriesBy を参照してください。</span><span class="sxs-lookup"><span data-stu-id="45a23-159">See Excel.ChartSeriesBy for details.</span></span>'
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.Chart.setPosition
  summary: >-
    <span data-ttu-id="45a23-160">ワークシート上のセルを基準にしてグラフを配置します。</span><span class="sxs-lookup"><span data-stu-id="45a23-160">Positions the chart relative to cells on the worksheet.</span></span>


    <span data-ttu-id="45a23-161">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-161">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setPosition(startCell, endCell)
  fullName: excel.Excel.Chart.setPosition
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"45a23-162\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"45a23-162\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Charts\";\n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);\n    var sourceData = sheetName + \"!\" + \"A1:B4\";\n    var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add(\"pie\", range, \"auto\");\n    chart.width = 500;\n    chart.height = 300;\n    chart.setPosition(\"C2\", null);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: startCell
      description: <span data-ttu-id="45a23-p112">開始セル。これは、グラフの移動先です。開始セルは、ユーザーの右から左への表示の設定に応じて、左上のセルか、右上のセルとなります。</span><span class="sxs-lookup"><span data-stu-id="45a23-p112">The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings.</span></span>
      type:
      - Range | string
    - id: endCell
      description: <span data-ttu-id="45a23-166">(省略可能)最後にあるセルです。</span><span class="sxs-lookup"><span data-stu-id="45a23-166">(Optional) The end cell.</span></span> <span data-ttu-id="45a23-167">指定されている場合、グラフの幅と高さは、この範囲を完全にカバーする設定されます。</span><span class="sxs-lookup"><span data-stu-id="45a23-167">If specified, the chart's width and height will be set to fully cover up this cell/range.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Chart.showAllFieldButtons
  summary: >-
    <span data-ttu-id="45a23-168">ピボット グラフですべてのフィールド ボタンを表示するかどうかを表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-168">Represents whether to display all field buttons on a PivotChart.</span></span>


    <span data-ttu-id="45a23-169">\[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-169">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showAllFieldButtons
  fullName: excel.Excel.Chart.showAllFieldButtons
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllFieldButtons: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.title
  summary: >-
    <span data-ttu-id="45a23-170">テキスト、表示/非表示、位置、およびタイトルの書式設定を含む、指定したグラフのタイトルを表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-170">Represents the title of the specified chart, including the text, visibility, position, and formating of the title.</span></span> <span data-ttu-id="45a23-171">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="45a23-171">Read-only.</span></span>


    <span data-ttu-id="45a23-172">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-172">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: title
  fullName: excel.Excel.Chart.title
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly title: Excel.ChartTitle;'
    return:
      type:
      - excel.Excel.ChartTitle
- uid: excel.Excel.Chart.toJSON
  name: toJSON()
  fullName: excel.Excel.Chart.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartData
      description: ''
- uid: excel.Excel.Chart.top
  summary: >-
    <span data-ttu-id="45a23-173">オブジェクトの上端から (ワークシートの) 1 行目の上部または (グラフの) グラフ領域の上部までの距離をポイント単位で表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-173">Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span></span>


    <span data-ttu-id="45a23-174">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-174">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: top
  fullName: excel.Excel.Chart.top
  langs:
  - typeScript
  type: property
  syntax:
    content: 'top: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.width
  summary: >-
    <span data-ttu-id="45a23-175">グラフ オブジェクトの幅をポイント単位で表します。</span><span class="sxs-lookup"><span data-stu-id="45a23-175">Represents the width, in points, of the chart object.</span></span>


    <span data-ttu-id="45a23-176">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-176">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: width
  fullName: excel.Excel.Chart.width
  langs:
  - typeScript
  type: property
  syntax:
    content: 'width: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.worksheet
  summary: >-
    <span data-ttu-id="45a23-p115">現在のグラフを含んでいるワークシート。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="45a23-p115">The worksheet containing the current chart. Read-only.</span></span>


    <span data-ttu-id="45a23-179">\[[API セット: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45a23-179">\[ [API set: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: excel.Excel.Chart.worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
