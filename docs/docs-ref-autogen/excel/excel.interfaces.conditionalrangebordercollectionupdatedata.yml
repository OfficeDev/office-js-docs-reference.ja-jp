### YamlMime:UniversalReference
ms.openlocfilehash: ffd449f6b10ecf9dd878c07b8bbfca58671fc577
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/20/2018
ms.locfileid: "24048012"
items:
- uid: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData
  summary: 「ConditionalRangeBorderCollection.set ({...})」で使用するため、ConditionalRangeBorderCollection オブジェクトのデータを更新するためのインターフェイスです。
  name: Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData
  fullName: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData
  langs:
  - typeScript
  type: interface
  package: excel
  children:
  - excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.bottom
  - excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.items
  - excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.left
  - excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.right
  - excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.top
- uid: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.bottom
  summary: >-
    下側の枠線を取得します。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: bottom
  fullName: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.bottom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bottom?: Excel.Interfaces.ConditionalRangeBorderUpdateData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderUpdateData
- uid: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.items
  name: items
  fullName: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'items?: Excel.Interfaces.ConditionalRangeBorderData[];'
    return:
      type:
      - Excel.Interfaces.ConditionalRangeBorderData[]
- uid: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.left
  summary: >-
    左の枠線を取得します。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: left
  fullName: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.left
  langs:
  - typeScript
  type: property
  syntax:
    content: 'left?: Excel.Interfaces.ConditionalRangeBorderUpdateData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderUpdateData
- uid: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.right
  summary: >-
    右側の境界線を取得します。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: right
  fullName: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.right
  langs:
  - typeScript
  type: property
  syntax:
    content: 'right?: Excel.Interfaces.ConditionalRangeBorderUpdateData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderUpdateData
- uid: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.top
  summary: >-
    上罫線を取得します。


    \[[API セット: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: top
  fullName: excel.Excel.Interfaces.ConditionalRangeBorderCollectionUpdateData.top
  langs:
  - typeScript
  type: property
  syntax:
    content: 'top?: Excel.Interfaces.ConditionalRangeBorderUpdateData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeBorderUpdateData
