### YamlMime:UniversalReference
ms.openlocfilehash: e87c660e1b41ad1a0112dc93abc1df6a29de8925
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976132"
items:
- uid: excel.Excel.NamedItem
  summary: >-
    <span data-ttu-id="131cf-101">セルまたは値の範囲の定義済みの名前を表します。</span><span class="sxs-lookup"><span data-stu-id="131cf-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="131cf-102">名プリミティブ (に示すように以下の種類) の名前付きオブジェクト、オブジェクト、または範囲への参照の範囲します。</span><span class="sxs-lookup"><span data-stu-id="131cf-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="131cf-103">名に関連付けられている range オブジェクトを取得するのには、このオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="131cf-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="131cf-104">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItem.arrayValues
  - excel.Excel.NamedItem.comment
  - excel.Excel.NamedItem.context
  - excel.Excel.NamedItem.delete
  - excel.Excel.NamedItem.formula
  - excel.Excel.NamedItem.getRange
  - excel.Excel.NamedItem.getRangeOrNullObject
  - excel.Excel.NamedItem.load
  - excel.Excel.NamedItem.load_1
  - excel.Excel.NamedItem.load_2
  - excel.Excel.NamedItem.name
  - excel.Excel.NamedItem.scope
  - excel.Excel.NamedItem.set
  - excel.Excel.NamedItem.set_1
  - excel.Excel.NamedItem.toJSON
  - excel.Excel.NamedItem.type
  - excel.Excel.NamedItem.value
  - excel.Excel.NamedItem.visible
  - excel.Excel.NamedItem.worksheet
  - excel.Excel.NamedItem.worksheetOrNullObject
- uid: excel.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="131cf-105">名前付きアイテムの値と型を含むオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="131cf-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="131cf-106">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="131cf-106">Read-only.</span></span>


    <span data-ttu-id="131cf-107">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="131cf-108">この名前に関連付けられているコメントを表します。</span><span class="sxs-lookup"><span data-stu-id="131cf-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="131cf-109">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.context
  summary: <span data-ttu-id="131cf-110">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="131cf-110">The request context associated with the object.</span></span> <span data-ttu-id="131cf-111">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="131cf-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="131cf-112">指定された名前を削除します。</span><span class="sxs-lookup"><span data-stu-id="131cf-112">Deletes the given name.</span></span>


    <span data-ttu-id="131cf-113">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"131cf-114\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"131cf-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="131cf-115">名前付きのアイテムの数式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="131cf-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="131cf-116">数式は常に '=' 記号で始まります。</span><span class="sxs-lookup"><span data-stu-id="131cf-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="131cf-117">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"131cf-118\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"131cf-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        OfficeHelpers.UI.notify(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="131cf-p105">名前に関連付けられている範囲オブジェクトを返します。名前付きアイテムの型が範囲でない場合、エラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="131cf-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="131cf-121">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"131cf-122\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"131cf-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="131cf-p106">名前に関連付けられている range オブジェクトを返します。名前付きアイテムの型が範囲でない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="131cf-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="131cf-125">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.NamedItem.load
  summary: <span data-ttu-id="131cf-126">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="131cf-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="131cf-127">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="131cf-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="131cf-128">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="131cf-128">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="131cf-129">`load(option?: string | string[]): Excel.NamedItem`-ここで、オプションは、コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="131cf-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="131cf-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="131cf-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="131cf-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="131cf-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="131cf-132">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="131cf-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="131cf-133">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="131cf-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="131cf-134">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="131cf-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="131cf-135">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="131cf-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.NamedItemLoadOptions
- uid: excel.Excel.NamedItem.load_1
  summary: <span data-ttu-id="131cf-136">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="131cf-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="131cf-137">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="131cf-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"131cf-138\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"131cf-138\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="131cf-139">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="131cf-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItem.load_2
  summary: <span data-ttu-id="131cf-140">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="131cf-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="131cf-141">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="131cf-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="131cf-142">読み込むには、プロパティを指定するコンマ区切りの文字列は、propertyNamesAndPaths.select、propertyNamesAndPaths.expand は、読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="131cf-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="131cf-p111">オブジェクトの名前。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="131cf-p111">The name of the object. Read-only.</span></span>


    <span data-ttu-id="131cf-145">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="131cf-146">ブック全体または特定のワークシートを名前のスコープはあるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="131cf-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="131cf-147">使用可能な値: ワークシート、ブックです。</span><span class="sxs-lookup"><span data-stu-id="131cf-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="131cf-148">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="131cf-148">Read-only.</span></span>


    <span data-ttu-id="131cf-149">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel.Excel.NamedItem.set
  summary: <span data-ttu-id="131cf-150">同時に複数のオブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="131cf-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="131cf-151">適切なプロパティで、普通のオブジェクトまたは同じ種類の別の API のオブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="131cf-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="131cf-152">このメソッドには、次の追加の署名があります。</span><span class="sxs-lookup"><span data-stu-id="131cf-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.NamedItem): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="131cf-153">Isomorphically メソッドが呼び出されますオブジェクトのプロパティを構造化されているプロパティを使用して JavaScript オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="131cf-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.NamedItemUpdateData
    - id: options
      description: <span data-ttu-id="131cf-154">プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを非表示にするオプションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="131cf-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.NamedItem.set_1
  summary: <span data-ttu-id="131cf-155">オブジェクトに読み込まれている既存のオブジェクトに基づいて、同時に複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="131cf-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.NamedItem): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.NamedItem
- uid: excel.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="131cf-156">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="131cf-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="131cf-157">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.NamedItem オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.NamedItemData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="131cf-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="131cf-158">名前の数式によって返される値の型を示します。</span><span class="sxs-lookup"><span data-stu-id="131cf-158">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="131cf-159">詳細については Excel.NamedItemType を参照してください。</span><span class="sxs-lookup"><span data-stu-id="131cf-159">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="131cf-160">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="131cf-160">Read-only.</span></span>


    <span data-ttu-id="131cf-161">\[[API セット: 文字列、整数、ExcelApi 1.1 倍、ブール値、範囲、エラー; 配列の 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-161">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="131cf-p116">名前の数式で計算された値を表します。名前付き範囲の場合は範囲のアドレスを返します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="131cf-p116">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="131cf-165">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="131cf-166">オブジェクトを表示するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="131cf-166">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="131cf-167">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-167">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="131cf-168">名前付きの項目のスコープになるワークシートを返します。</span><span class="sxs-lookup"><span data-stu-id="131cf-168">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="131cf-169">項目のスコープは、ブックを代わりにする場合は、エラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="131cf-169">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="131cf-170">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-170">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="131cf-171">名前付きの項目のスコープになるワークシートを返します。</span><span class="sxs-lookup"><span data-stu-id="131cf-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="131cf-172">項目のスコープは、ブックを代わりにする場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="131cf-172">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="131cf-173">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="131cf-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
