### YamlMime:UniversalReference
ms.openlocfilehash: b82dcf3b749602dd51e1a9e944eaebcecc9e2f96
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/20/2018
ms.locfileid: "24049204"
items:
- uid: excel.Excel.ChartLineFormat
  summary: >-
    <span data-ttu-id="a3153-101">行要素の書式設定オプションをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="a3153-101">Encapsulates the formatting options for line elements.</span></span>


    <span data-ttu-id="a3153-102">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a3153-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartLineFormat
  fullName: excel.Excel.ChartLineFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartLineFormat.clear
  - excel.Excel.ChartLineFormat.color
  - excel.Excel.ChartLineFormat.lineStyle
  - excel.Excel.ChartLineFormat.load
  - excel.Excel.ChartLineFormat.toJSON
  - excel.Excel.ChartLineFormat.weight
- uid: excel.Excel.ChartLineFormat.clear
  summary: >-
    <span data-ttu-id="a3153-103">グラフ要素の線の書式をクリアします。</span><span class="sxs-lookup"><span data-stu-id="a3153-103">Clear the line format of a chart element.</span></span>


    <span data-ttu-id="a3153-104">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a3153-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: excel.Excel.ChartLineFormat.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a3153-105\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"a3153-105\">Examples</span></span>\n\n```javascript\n// Set to show legend of Chart1 and make it on top of the chart.\nExcel.run(function (ctx) { \n    var gridlines = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").axes.valueAxis.majorGridlines;\n    gridlines.format.line.clear();\n    return ctx.sync().then(function() {\n            console.log(\"Chart Major Gridlines Format Cleared\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.ChartLineFormat.color
  summary: >-
    <span data-ttu-id="a3153-106">グラフの線の色を表す HTML カラー コード。</span><span class="sxs-lookup"><span data-stu-id="a3153-106">HTML color code representing the color of lines in the chart.</span></span>


    <span data-ttu-id="a3153-107">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a3153-107">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: excel.Excel.ChartLineFormat.color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.ChartLineFormat.lineStyle
  summary: >-
    <span data-ttu-id="a3153-108">線のスタイルを表します。</span><span class="sxs-lookup"><span data-stu-id="a3153-108">Represents the line style.</span></span> <span data-ttu-id="a3153-109">詳細については Excel.ChartLineStyle を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a3153-109">See Excel.ChartLineStyle for details.</span></span>


    <span data-ttu-id="a3153-110">\[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a3153-110">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: lineStyle
  fullName: excel.Excel.ChartLineFormat.lineStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'lineStyle: Excel.ChartLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Grey25" | "Grey50" | "Grey75" | "Automatic" | "RoundDot";'
    return:
      type:
      - Excel.ChartLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot" | "Grey25" | "Grey50" | "Grey75" | "Automatic" | "RoundDot"
- uid: excel.Excel.ChartLineFormat.load
  summary: <span data-ttu-id="a3153-111">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="a3153-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a3153-112">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a3153-112">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a3153-113">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="a3153-113">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a3153-114">`load(option?: { select?: string; expand?: string; }): Excel.ChartLineFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="a3153-114">`load(option?: { select?: string; expand?: string; }): Excel.ChartLineFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a3153-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLineFormat`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="a3153-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLineFormat` - Only available on collection types.</span></span> <span data-ttu-id="a3153-116">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="a3153-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="a3153-117">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a3153-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a3153-118">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="a3153-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a3153-119">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="a3153-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="a3153-120">例</span><span class="sxs-lookup"><span data-stu-id="a3153-120">Examples</span></span>


    ```javascript

    // Set chart major gridlines on value axis to be red.

    Excel.run(function (ctx) {
        var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
        gridlines.format.line.color = "#FF0000";
        return ctx.sync().then(function () {
            console.log("Chart Gridlines Color Updated");
        });
    }).catch(function (error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: excel.Excel.ChartLineFormat.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartLineFormat;'
    return:
      type:
      - excel.Excel.ChartLineFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="a3153-121">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="a3153-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartLineFormat.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartLineFormat.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartLineFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartLineFormatData
      description: ''
- uid: excel.Excel.ChartLineFormat.weight
  summary: >-
    <span data-ttu-id="a3153-122">ポイント単位で、線の太さを表します。</span><span class="sxs-lookup"><span data-stu-id="a3153-122">Represents weight of the line, in points.</span></span>


    <span data-ttu-id="a3153-123">\[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a3153-123">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: weight
  fullName: excel.Excel.ChartLineFormat.weight
  langs:
  - typeScript
  type: property
  syntax:
    content: 'weight: number;'
    return:
      type:
      - number
