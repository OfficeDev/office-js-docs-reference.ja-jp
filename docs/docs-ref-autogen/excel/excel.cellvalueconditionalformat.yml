### YamlMime:UniversalReference
ms.openlocfilehash: b8c00be14a2f096490abcb0afdb13f24c60fac65
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769989"
items:
- uid: excel.Excel.CellValueConditionalFormat
  summary: >-
    <span data-ttu-id="79ae3-101">セルの値の条件付き書式を表します。</span><span class="sxs-lookup"><span data-stu-id="79ae3-101">Represents a cell value conditional format.</span></span>


    <span data-ttu-id="79ae3-102">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79ae3-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.CellValueConditionalFormat
  fullName: Excel.CellValueConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.CellValueConditionalFormat.context
  - excel.Excel.CellValueConditionalFormat.format
  - excel.Excel.CellValueConditionalFormat.load
  - excel.Excel.CellValueConditionalFormat.rule
  - excel.Excel.CellValueConditionalFormat.set
  - excel.Excel.CellValueConditionalFormat.toJSON
- uid: excel.Excel.CellValueConditionalFormat.context
  summary: <span data-ttu-id="79ae3-103">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="79ae3-103">The request context associated with the object.</span></span> <span data-ttu-id="79ae3-104">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="79ae3-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.CellValueConditionalFormat.format
  summary: >-
    <span data-ttu-id="79ae3-105">条件付き書式のフォント、塗りつぶし、罫線、およびその他のプロパティをカプセル化する、書式設定オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="79ae3-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span>


    <span data-ttu-id="79ae3-106">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79ae3-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"79ae3-107\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ae3-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CellValueConditionalFormat.load
  summary: <span data-ttu-id="79ae3-108">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="79ae3-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="79ae3-109">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="79ae3-109">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="79ae3-110">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="79ae3-110">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="79ae3-111">`load(option?: { select?: string; expand?: string; }): Excel.CellValueConditionalFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="79ae3-111">`load(option?: { select?: string; expand?: string; }): Excel.CellValueConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="79ae3-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CellValueConditionalFormat`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="79ae3-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CellValueConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="79ae3-113">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="79ae3-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="79ae3-114">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="79ae3-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="79ae3-115">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="79ae3-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="79ae3-116">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="79ae3-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="79ae3-117">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="79ae3-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.CellValueConditionalFormat.rule
  summary: >-
    <span data-ttu-id="79ae3-118">この条件付き書式の Rule オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="79ae3-118">Represents the Rule object on this conditional format.</span></span>


    <span data-ttu-id="79ae3-119">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="79ae3-119">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.ConditionalCellValueRule;'
    return:
      type:
      - excel.Excel.ConditionalCellValueRule
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"79ae3-120\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ae3-120\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CellValueConditionalFormat.set
  summary: <span data-ttu-id="79ae3-121">同時に複数のオブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="79ae3-121">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="79ae3-122">適切なプロパティで、普通のオブジェクトまたは同じ種類の別の API のオブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="79ae3-122">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="79ae3-123">このメソッドには、次の追加の署名があります。</span><span class="sxs-lookup"><span data-stu-id="79ae3-123">This method has the following additional signature:</span></span>


    `set(properties: Excel.CellValueConditionalFormat): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.CellValueConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="79ae3-124">Isomorphically メソッドが呼び出されますオブジェクトのプロパティを構造化されているプロパティを使用して JavaScript オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="79ae3-124">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.CellValueConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="79ae3-125">プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを非表示にするオプションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="79ae3-125">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.CellValueConditionalFormat.toJSON
  summary: <span data-ttu-id="79ae3-126">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="79ae3-126">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="79ae3-127">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.CellValueConditionalFormat オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.CellValueConditionalFormatData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="79ae3-127">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CellValueConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CellValueConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.CellValueConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.CellValueConditionalFormatData
      description: ''
