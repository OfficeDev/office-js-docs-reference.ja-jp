### YamlMime:UniversalReference
ms.openlocfilehash: 03b77d5315bd854e9f1766c69a92758779337b39
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30095822"
items:
- uid: excel.Excel.StyleCollection
  summary: >-
    <span data-ttu-id="de0a7-101">すべてのスタイルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-101">Represents a collection of all the styles.</span></span>


    <span data-ttu-id="de0a7-102">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de0a7-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.StyleCollection
  fullName: Excel.StyleCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.StyleCollection.add
  - excel.Excel.StyleCollection.context
  - excel.Excel.StyleCollection.getCount
  - excel.Excel.StyleCollection.getItem
  - excel.Excel.StyleCollection.getItemAt
  - excel.Excel.StyleCollection.items
  - excel.Excel.StyleCollection.load
  - excel.Excel.StyleCollection.load_1
  - excel.Excel.StyleCollection.load_2
  - excel.Excel.StyleCollection.toJSON
- uid: excel.Excel.StyleCollection.add
  summary: >-
    <span data-ttu-id="de0a7-103">コレクションに新しいスタイルを追加します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-103">Adds a new style to the collection.</span></span>


    <span data-ttu-id="de0a7-104">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de0a7-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name)
  fullName: add(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"de0a7-105\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"de0a7-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="de0a7-106">追加するスタイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-106">Name of the style to be added.</span></span>
      type:
      - string
- uid: excel.Excel.StyleCollection.context
  summary: <span data-ttu-id="de0a7-107">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="de0a7-107">The request context associated with the object.</span></span> <span data-ttu-id="de0a7-108">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="de0a7-108">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.StyleCollection.getCount
  summary: >-
    <span data-ttu-id="de0a7-109">コレクション内のスタイルの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-109">Gets the number of styles in the collection.</span></span>


    <span data-ttu-id="de0a7-110">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de0a7-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.StyleCollection.getItem
  summary: >-
    <span data-ttu-id="de0a7-111">名前に基づいてスタイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-111">Gets a style by name.</span></span>


    <span data-ttu-id="de0a7-112">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de0a7-112">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"de0a7-113\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"de0a7-113\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="de0a7-114">取得するスタイルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-114">Name of the style to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.StyleCollection.getItemAt
  summary: >-
    <span data-ttu-id="de0a7-115">コレクション内の位置に基づいてスタイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-115">Gets a style based on its position in the collection.</span></span>


    <span data-ttu-id="de0a7-116">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="de0a7-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="de0a7-p102">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="de0a7-p102">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.StyleCollection.items
  summary: <span data-ttu-id="de0a7-119">このコレクション内の読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-119">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Style[];'
    return:
      type:
      - Excel.Style[]
- uid: excel.Excel.StyleCollection.load
  summary: <span data-ttu-id="de0a7-120">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="de0a7-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="de0a7-121">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="de0a7-121">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="de0a7-122">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="de0a7-122">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="de0a7-123">`load(option?: string | string[]): Excel.StyleCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="de0a7-123">`load(option?: string | string[]): Excel.StyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="de0a7-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="de0a7-124">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="de0a7-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="de0a7-125">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="de0a7-126">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="de0a7-126">It is similar to the preceding signature.</span></span> <span data-ttu-id="de0a7-127">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-127">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="de0a7-128">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-128">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="de0a7-129">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="de0a7-129">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.StyleCollection.load_1
  summary: <span data-ttu-id="de0a7-130">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="de0a7-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="de0a7-131">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="de0a7-131">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="de0a7-132">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="de0a7-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.StyleCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.StyleCollection.toJSON
  summary: <span data-ttu-id="de0a7-133">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="de0a7-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="de0a7-134">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。`Excel.StyleCollection`元のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、コレクションのアイテムから`Excel.Interfaces.StyleCollectionData` <!-- -->読み込まれたプロパティの浅いコピーを持つ "items" 配列を含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="de0a7-134">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.StyleCollectionData
      description: ''
