### YamlMime:UniversalReference
ms.openlocfilehash: 772c5560ce09199152087836ca8022b36272e3f9
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 11/30/2018
ms.locfileid: "26994262"
items:
- uid: excel.Excel.StyleCollection
  summary: >-
    <span data-ttu-id="9891a-101">すべてのスタイルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="9891a-101">Represents a collection of all the styles.</span></span>


    <span data-ttu-id="9891a-102">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9891a-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.StyleCollection
  fullName: Excel.StyleCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.StyleCollection.add
  - excel.Excel.StyleCollection.getItem
  - excel.Excel.StyleCollection.items
  - excel.Excel.StyleCollection.load
  - excel.Excel.StyleCollection.toJSON
- uid: excel.Excel.StyleCollection.add
  summary: >-
    <span data-ttu-id="9891a-103">新しいスタイルをコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="9891a-103">Adds a new style to the collection.</span></span>


    <span data-ttu-id="9891a-104">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9891a-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9891a-105\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9891a-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="9891a-106">追加するスタイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="9891a-106">Name of the style to be added.</span></span>
      type:
      - string
- uid: excel.Excel.StyleCollection.getItem
  summary: >-
    <span data-ttu-id="9891a-107">名前でスタイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="9891a-107">Gets a style by name.</span></span>


    <span data-ttu-id="9891a-108">\[[API セット: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9891a-108">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9891a-109\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9891a-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="9891a-110">取得するスタイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="9891a-110">Name of the style to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.StyleCollection.items
  summary: <span data-ttu-id="9891a-111">このコレクションに読み込まれている子項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="9891a-111">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Style[];'
    return:
      type:
      - Excel.Style[]
- uid: excel.Excel.StyleCollection.load
  summary: <span data-ttu-id="9891a-112">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="9891a-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9891a-113">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9891a-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="9891a-114">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="9891a-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="9891a-115">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="9891a-115">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="9891a-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="9891a-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="9891a-117">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="9891a-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="9891a-118">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9891a-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9891a-119">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9891a-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9891a-120">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="9891a-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="9891a-121">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="9891a-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.StyleCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.StyleCollectionData
      description: ''
