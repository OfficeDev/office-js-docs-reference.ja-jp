### YamlMime:UniversalReference
ms.openlocfilehash: ce9a8d5db3e7c4b05465916ee6d496b3f777ece2
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725047"
items:
- uid: excel.Excel.WorksheetProtection
  summary: >-
    <span data-ttu-id="d8f4e-101">シート オブジェクトの保護を表します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-101">Represents the protection of a sheet object.</span></span>


    <span data-ttu-id="d8f4e-102">\[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8f4e-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorksheetProtection
  fullName: Excel.WorksheetProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorksheetProtection.context
  - excel.Excel.WorksheetProtection.load
  - excel.Excel.WorksheetProtection.options
  - excel.Excel.WorksheetProtection.protect
  - excel.Excel.WorksheetProtection.protected
  - excel.Excel.WorksheetProtection.toJSON
  - excel.Excel.WorksheetProtection.unprotect
- uid: excel.Excel.WorksheetProtection.context
  summary: <span data-ttu-id="d8f4e-103">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-103">The request context associated with the object.</span></span> <span data-ttu-id="d8f4e-104">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorksheetProtection.load
  summary: <span data-ttu-id="d8f4e-105">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d8f4e-106">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d8f4e-107">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d8f4e-108">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-108">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d8f4e-109">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-109">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="d8f4e-110">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-110">It is similar to the preceding signature.</span></span> <span data-ttu-id="d8f4e-111">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-111">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d8f4e-112">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-112">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d8f4e-113">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-113">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="d8f4e-114">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.WorksheetProtection.options
  summary: >-
    <span data-ttu-id="d8f4e-p104">シートの保護のオプション。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-p104">Sheet protection options. Read-only.</span></span>


    <span data-ttu-id="d8f4e-117">\[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8f4e-117">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: options
  fullName: options
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly options: Excel.WorksheetProtectionOptions;'
    return:
      type:
      - excel.Excel.WorksheetProtectionOptions
- uid: excel.Excel.WorksheetProtection.protect
  summary: >-
    <span data-ttu-id="d8f4e-118">ワークシートを保護します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-118">Protects a worksheet.</span></span> <span data-ttu-id="d8f4e-119">ワークシートが保護されているがされている場合は失敗します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-119">Fails if the worksheet has already been protected.</span></span>


    <span data-ttu-id="d8f4e-120">\[[API セット: オプションの ExcelApi 1.2 1.7 パスワードを](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8f4e-120">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(options, password)
  fullName: protect
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d8f4e-121\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d8f4e-121\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Protect inserting or deleting rows in Sheet1\n  sheet.protection.protect({\n    allowInsertRows: false,\n    allowDeleteRows: false\n  });\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect(null, password);\n    }\n});\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="d8f4e-122">省略可能。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-122">Optional.</span></span> <span data-ttu-id="d8f4e-123">シート保護のオプションです。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-123">Sheet protection options.</span></span>
      type:
      - excel.Excel.WorksheetProtectionOptions
    - id: password
      description: <span data-ttu-id="d8f4e-124">省略可能。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-124">Optional.</span></span> <span data-ttu-id="d8f4e-125">シート保護のパスワードです。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-125">Sheet protection password.</span></span>
      type:
      - string
- uid: excel.Excel.WorksheetProtection.protected
  summary: >-
    <span data-ttu-id="d8f4e-126">ワークシートが保護されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-126">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="d8f4e-127">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-127">Read-only.</span></span>


    <span data-ttu-id="d8f4e-128">\[[API セット: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8f4e-128">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.WorksheetProtection.toJSON
  summary: <span data-ttu-id="d8f4e-129">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d8f4e-130">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.WorksheetProtection オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.WorksheetProtectionData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorksheetProtectionData
      description: ''
- uid: excel.Excel.WorksheetProtection.unprotect
  summary: >-
    <span data-ttu-id="d8f4e-131">ワークシートの保護を解除します。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-131">Unprotects a worksheet.</span></span>


    <span data-ttu-id="d8f4e-132">\[[API セット: パスワードを ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8f4e-132">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d8f4e-133\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d8f4e-133\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Remove all protects applied to Sheet1\n  sheet.protection.unprotect();\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Unprotecting a worksheet with unprotect() will remove all \n// WorksheetProtectionOptions options applied to a worksheet.\n// To remove only a subset of WorksheetProtectionOptions use the \n// protect() method and set the options you wish to remove to true.\nExcel.run(function(ctx) {\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n  sheet.protection.protect({\n    allowInsertRows: false, // Protect row insertion\n    allowDeleteRows: true // Unprotect row deletion\n  });\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="d8f4e-134">シート保護のパスワードです。</span><span class="sxs-lookup"><span data-stu-id="d8f4e-134">sheet protection password.</span></span>
      type:
      - string
