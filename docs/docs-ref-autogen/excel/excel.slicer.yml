### YamlMime:UniversalReference
ms.openlocfilehash: 7de05b7d5b6f41c531521501a21a3f4daf7f5bb1
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105413"
items:
- uid: excel.Excel.Slicer
  summary: >-
    <span data-ttu-id="19485-101">ブック内のスライサーオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="19485-101">Represents a slicer object in the workbook.</span></span>


    <span data-ttu-id="19485-102">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.Slicer
  fullName: Excel.Slicer
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Slicer.caption
  - excel.Excel.Slicer.clearFilters
  - excel.Excel.Slicer.context
  - excel.Excel.Slicer.delete
  - excel.Excel.Slicer.getSelectedItems
  - excel.Excel.Slicer.height
  - excel.Excel.Slicer.id
  - excel.Excel.Slicer.isFilterCleared
  - excel.Excel.Slicer.left
  - excel.Excel.Slicer.load
  - excel.Excel.Slicer.load_1
  - excel.Excel.Slicer.load_2
  - excel.Excel.Slicer.name
  - excel.Excel.Slicer.nameInFormula
  - excel.Excel.Slicer.selectItems
  - excel.Excel.Slicer.set
  - excel.Excel.Slicer.set_1
  - excel.Excel.Slicer.slicerItems
  - excel.Excel.Slicer.sortBy
  - excel.Excel.Slicer.style
  - excel.Excel.Slicer.toJSON
  - excel.Excel.Slicer.top
  - excel.Excel.Slicer.width
  - excel.Excel.Slicer.worksheet
- uid: excel.Excel.Slicer.caption
  summary: >-
    <span data-ttu-id="19485-103">スライサーのキャプションを表します。</span><span class="sxs-lookup"><span data-stu-id="19485-103">Represents the caption of slicer.</span></span>


    <span data-ttu-id="19485-104">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: caption
  fullName: caption
  langs:
  - typeScript
  type: property
  syntax:
    content: 'caption: string;'
    return:
      type:
      - string
- uid: excel.Excel.Slicer.clearFilters
  summary: >-
    <span data-ttu-id="19485-105">スライサーに現在適用されているすべてのフィルターをクリアします。</span><span class="sxs-lookup"><span data-stu-id="19485-105">Clears all the filters currently applied on the slicer.</span></span>


    <span data-ttu-id="19485-106">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: clearFilters()
  fullName: clearFilters()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Slicer.context
  summary: <span data-ttu-id="19485-107">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="19485-107">The request context associated with the object.</span></span> <span data-ttu-id="19485-108">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="19485-108">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Slicer.delete
  summary: >-
    <span data-ttu-id="19485-109">スライサーを削除します。</span><span class="sxs-lookup"><span data-stu-id="19485-109">Deletes the slicer.</span></span>


    <span data-ttu-id="19485-110">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Slicer.getSelectedItems
  summary: >-
    <span data-ttu-id="19485-111">選択された項目の名前の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="19485-111">Returns an array of selected items' names.</span></span> <span data-ttu-id="19485-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="19485-112">Read-only.</span></span>


    <span data-ttu-id="19485-113">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSelectedItems()
  fullName: getSelectedItems()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<string[]>
      description: ''
- uid: excel.Excel.Slicer.height
  summary: >-
    <span data-ttu-id="19485-114">スライサーの高さをポイント単位で表します。</span><span class="sxs-lookup"><span data-stu-id="19485-114">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="19485-115">負の値で設定した場合、または入力に0を指定した場合、無効な引数の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="19485-115">Throws an invalid argument exception when set with negative value or zero as input.</span></span>


    <span data-ttu-id="19485-116">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: height
  fullName: height
  langs:
  - typeScript
  type: property
  syntax:
    content: 'height: number;'
    return:
      type:
      - number
- uid: excel.Excel.Slicer.id
  summary: >-
    <span data-ttu-id="19485-117">スライサーの一意の id を表します。</span><span class="sxs-lookup"><span data-stu-id="19485-117">Represents the unique id of slicer.</span></span> <span data-ttu-id="19485-118">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="19485-118">Read-only.</span></span>


    <span data-ttu-id="19485-119">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-119">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Slicer.isFilterCleared
  summary: >-
    <span data-ttu-id="19485-120">True の場合は、スライサーに現在適用されているすべてのフィルターがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="19485-120">True if all filters currently applied on the slicer is cleared.</span></span>


    <span data-ttu-id="19485-121">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: isFilterCleared
  fullName: isFilterCleared
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isFilterCleared: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Slicer.left
  summary: >-
    <span data-ttu-id="19485-122">スライサーの左側からワークシートの左側までの距離をポイント単位で表します。</span><span class="sxs-lookup"><span data-stu-id="19485-122">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="19485-123">入力に負の値を設定すると、無効な引数の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="19485-123">Throws an invalid argument exception when set with negative value as input.</span></span>


    <span data-ttu-id="19485-124">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-124">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: left
  fullName: left
  langs:
  - typeScript
  type: property
  syntax:
    content: 'left: number;'
    return:
      type:
      - number
- uid: excel.Excel.Slicer.load
  summary: <span data-ttu-id="19485-125">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="19485-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19485-126">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="19485-126">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="19485-127">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="19485-127">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="19485-128">`load(option?: string | string[]): Excel.Slicer`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="19485-128">`load(option?: string | string[]): Excel.Slicer` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="19485-129">`load(option?: { select?: string; expand?: string; }): Excel.Slicer`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="19485-129">`load(option?: { select?: string; expand?: string; }): Excel.Slicer` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="19485-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="19485-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer` - Only available on collection types.</span></span> <span data-ttu-id="19485-131">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="19485-131">It is similar to the preceding signature.</span></span> <span data-ttu-id="19485-132">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="19485-132">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="19485-133">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="19485-133">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="19485-134">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="19485-134">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.SlicerLoadOptions
- uid: excel.Excel.Slicer.load_1
  summary: <span data-ttu-id="19485-135">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="19485-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19485-136">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="19485-136">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="19485-137">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="19485-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Slicer.load_2
  summary: <span data-ttu-id="19485-138">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="19485-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19485-139">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="19485-139">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="19485-140">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="19485-140">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Slicer.name
  summary: >-
    <span data-ttu-id="19485-141">スライサーの名前を表します。</span><span class="sxs-lookup"><span data-stu-id="19485-141">Represents the name of slicer.</span></span>


    <span data-ttu-id="19485-142">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-142">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Slicer.nameInFormula
  summary: >-
    <span data-ttu-id="19485-143">数式で使用される名前を表します。</span><span class="sxs-lookup"><span data-stu-id="19485-143">Represents the name used in the formula.</span></span>


    <span data-ttu-id="19485-144">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: nameInFormula
  fullName: nameInFormula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nameInFormula: string;'
    return:
      type:
      - string
- uid: excel.Excel.Slicer.selectItems
  summary: >-
    <span data-ttu-id="19485-145">名前に基づいてスライサーアイテムを選択します。</span><span class="sxs-lookup"><span data-stu-id="19485-145">Select slicer items based on their names.</span></span> <span data-ttu-id="19485-146">前の選択はクリアされます。</span><span class="sxs-lookup"><span data-stu-id="19485-146">Previous selection will be cleared.</span></span> <span data-ttu-id="19485-147">配列が空の場合、すべてのアイテムは選択解除されます。</span><span class="sxs-lookup"><span data-stu-id="19485-147">All items will be deselected if the array is empty.</span></span>


    <span data-ttu-id="19485-148">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-148">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: selectItems(items)
  fullName: selectItems(items)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'selectItems(items?: string[]): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: items
      description: <span data-ttu-id="19485-149">省略可能。</span><span class="sxs-lookup"><span data-stu-id="19485-149">Optional.</span></span> <span data-ttu-id="19485-150">選択するスライサーアイテムの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="19485-150">The specified slicer item names to be selected.</span></span>
      type:
      - string[]
- uid: excel.Excel.Slicer.set
  summary: <span data-ttu-id="19485-151">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="19485-151">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="19485-152">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="19485-152">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="19485-153">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="19485-153">This method has the following additional signature:</span></span>


    `set(properties: Excel.Slicer): void`
  isPreview: true
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="19485-154">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="19485-154">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.SlicerUpdateData
    - id: options
      description: <span data-ttu-id="19485-155">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="19485-155">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Slicer.set_1
  summary: <span data-ttu-id="19485-156">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="19485-156">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  isPreview: true
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Slicer): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Slicer
- uid: excel.Excel.Slicer.slicerItems
  summary: >-
    <span data-ttu-id="19485-157">スライサーの一部である SlicerItems のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="19485-157">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="19485-158">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="19485-158">Read-only.</span></span>


    <span data-ttu-id="19485-159">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-159">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: slicerItems
  fullName: slicerItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly slicerItems: Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
- uid: excel.Excel.Slicer.sortBy
  summary: >-
    <span data-ttu-id="19485-160">スライサー内のアイテムの並べ替え順序を表します。</span><span class="sxs-lookup"><span data-stu-id="19485-160">Represents the sort order of the items in the slicer.</span></span>


    <span data-ttu-id="19485-161">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-161">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: sortBy
  fullName: sortBy
  langs:
  - typeScript
  type: property
  syntax:
    content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
    return:
      type:
      - Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
- uid: excel.Excel.Slicer.style
  summary: >-
    <span data-ttu-id="19485-162">スライサースタイルを表す定数値。</span><span class="sxs-lookup"><span data-stu-id="19485-162">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="19485-163">使用可能な値は次のとおりです。 SlicerStyleLight1 スルー SlicerStyleLight6、TableStyleOther1 スルー TableStyleOther2、SlicerStyleDark1 スルー SlicerStyleDark6。</span><span class="sxs-lookup"><span data-stu-id="19485-163">Possible values are: SlicerStyleLight1 thru SlicerStyleLight6, TableStyleOther1 thru TableStyleOther2, SlicerStyleDark1 thru SlicerStyleDark6.</span></span> <span data-ttu-id="19485-164">ブックに存在するカスタムのユーザー定義スタイルも指定できます。</span><span class="sxs-lookup"><span data-stu-id="19485-164">A custom user-defined style present in the workbook can also be specified.</span></span>


    <span data-ttu-id="19485-165">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-165">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: excel.Excel.Slicer.toJSON
  summary: <span data-ttu-id="19485-166">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="19485-166">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="19485-167">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元のスライサーオブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.SlicerData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="19485-167">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerData
      description: ''
- uid: excel.Excel.Slicer.top
  summary: >-
    <span data-ttu-id="19485-168">スライサーの上端からワークシートの右側までの距離をポイント単位で表します。</span><span class="sxs-lookup"><span data-stu-id="19485-168">Represents the distance, in points, from the top edge of the slicer to the right of the worksheet.</span></span> <span data-ttu-id="19485-169">入力に負の値を設定すると、無効な引数の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="19485-169">Throws an invalid argument exception when set with negative value as input.</span></span>


    <span data-ttu-id="19485-170">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-170">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: top
  fullName: top
  langs:
  - typeScript
  type: property
  syntax:
    content: 'top: number;'
    return:
      type:
      - number
- uid: excel.Excel.Slicer.width
  summary: >-
    <span data-ttu-id="19485-171">スライサーの幅をポイント単位で表します。</span><span class="sxs-lookup"><span data-stu-id="19485-171">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="19485-172">負の値で設定した場合、または入力に0を指定した場合、無効な引数の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="19485-172">Throws an invalid argument exception when set with negative value or zero as input.</span></span>


    <span data-ttu-id="19485-173">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-173">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: width
  fullName: width
  langs:
  - typeScript
  type: property
  syntax:
    content: 'width: number;'
    return:
      type:
      - number
- uid: excel.Excel.Slicer.worksheet
  summary: >-
    <span data-ttu-id="19485-174">スライサーを含むワークシートを表します。</span><span class="sxs-lookup"><span data-stu-id="19485-174">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="19485-175">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="19485-175">Read-only.</span></span>


    <span data-ttu-id="19485-176">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19485-176">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
