### YamlMime:UniversalReference
items:
  - uid: excel.Excel.CommentReply
    summary: |-
      <span data-ttu-id="6406c-101">ブック内のセルのコメント reply オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="6406c-101">Represents a cell comment reply object in the workbook.</span></span>

      <span data-ttu-id="6406c-102">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.CommentReply
    fullName: Excel.CommentReply
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.CommentReply.authorEmail
      - excel.Excel.CommentReply.authorName
      - excel.Excel.CommentReply.content
      - excel.Excel.CommentReply.context
      - excel.Excel.CommentReply.creationDate
      - excel.Excel.CommentReply.delete
      - excel.Excel.CommentReply.getLocation
      - excel.Excel.CommentReply.getParentComment
      - excel.Excel.CommentReply.id
      - excel.Excel.CommentReply.load
      - excel.Excel.CommentReply.load_1
      - excel.Excel.CommentReply.load_2
      - excel.Excel.CommentReply.set
      - excel.Excel.CommentReply.set_1
      - excel.Excel.CommentReply.toJSON
  - uid: excel.Excel.CommentReply.authorEmail
    summary: |-
      <span data-ttu-id="6406c-103">コメント返信作成者のメール アドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="6406c-103">Gets the email of the comment reply's author.</span></span>

      <span data-ttu-id="6406c-104">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: authorEmail
    fullName: authorEmail
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type:
          - string
  - uid: excel.Excel.CommentReply.authorName
    summary: |-
      <span data-ttu-id="6406c-105">コメント返信作成者の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="6406c-105">Gets the name of the comment reply's author.</span></span>

      <span data-ttu-id="6406c-106">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: authorName
    fullName: authorName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorName: string;'
      return:
        type:
          - string
  - uid: excel.Excel.CommentReply.content
    summary: |-
      <span data-ttu-id="6406c-107">コメントの内容を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6406c-107">Gets or sets the comment's content.</span></span>

      <span data-ttu-id="6406c-108">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6406c-109">例</span><span class="sxs-lookup"><span data-stu-id="6406c-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const comment = context.workbook.comments.getItemAt(0);
              comment.content = "PLEASE add headers here.";
              await context.sync();
          });
          ```
  - uid: excel.Excel.CommentReply.context
    summary: <span data-ttu-id="6406c-110">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="6406c-110">The request context associated with the object.</span></span> <span data-ttu-id="6406c-111">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="6406c-111">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.CommentReply.creationDate
    summary: |-
      <span data-ttu-id="6406c-112">コメント返信の作成日時を取得します。</span><span class="sxs-lookup"><span data-stu-id="6406c-112">Gets the creation time of the comment reply.</span></span>

      <span data-ttu-id="6406c-113">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: creationDate
    fullName: creationDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type:
          - Date
  - uid: excel.Excel.CommentReply.delete
    summary: |-
      <span data-ttu-id="6406c-114">コメント返信を削除します。</span><span class="sxs-lookup"><span data-stu-id="6406c-114">Deletes the comment reply.</span></span>

      <span data-ttu-id="6406c-115">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6406c-116">例</span><span class="sxs-lookup"><span data-stu-id="6406c-116">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              var comment = context.workbook.comments.getItemAt(0);
              comment.load("replies");
              await context.sync();

              comment.replies.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: excel.Excel.CommentReply.getLocation
    summary: |-
      <span data-ttu-id="6406c-117">このコメントの返信があるセルを取得します。</span><span class="sxs-lookup"><span data-stu-id="6406c-117">Gets the cell where this comment reply is located.</span></span>

      <span data-ttu-id="6406c-118">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.CommentReply.getParentComment
    summary: |-
      <span data-ttu-id="6406c-119">この返信の親コメントを取得します。</span><span class="sxs-lookup"><span data-stu-id="6406c-119">Gets the parent comment of this reply.</span></span>

      <span data-ttu-id="6406c-120">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getParentComment()
    fullName: getParentComment()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParentComment(): Excel.Comment;'
      return:
        type:
          - excel.Excel.Comment
        description: ''
  - uid: excel.Excel.CommentReply.id
    summary: |-
      <span data-ttu-id="6406c-121">コメント返信 ID を表します。</span><span class="sxs-lookup"><span data-stu-id="6406c-121">Represents the comment reply identifier.</span></span> <span data-ttu-id="6406c-122">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6406c-122">Read-only.</span></span>

      <span data-ttu-id="6406c-123">\[[API セット: EXCELAPI BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6406c-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.CommentReply.load
    summary: <span data-ttu-id="6406c-124">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6406c-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6406c-125">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6406c-125">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="6406c-126">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="6406c-126">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6406c-127">`load(option?: string | string[]): Excel.CommentReply`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="6406c-127">`load(option?: string | string[]): Excel.CommentReply` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6406c-128">`load(option?: { select?: string; expand?: string; }): Excel.CommentReply`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6406c-128">`load(option?: { select?: string; expand?: string; }): Excel.CommentReply` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6406c-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentReply`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6406c-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentReply` - Only available on collection types.</span></span> <span data-ttu-id="6406c-130">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="6406c-130">It is similar to the preceding signature.</span></span> <span data-ttu-id="6406c-131">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6406c-131">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6406c-132">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6406c-132">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6406c-133">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="6406c-133">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CommentReplyLoadOptions): Excel.CommentReply;'
      return:
        type:
          - excel.Excel.CommentReply
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.CommentReplyLoadOptions
  - uid: excel.Excel.CommentReply.load_1
    summary: <span data-ttu-id="6406c-134">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6406c-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6406c-135">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6406c-135">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentReply;'
      return:
        type:
          - excel.Excel.CommentReply
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="6406c-136">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="6406c-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.CommentReply.load_2
    summary: <span data-ttu-id="6406c-137">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6406c-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6406c-138">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6406c-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.CommentReply;'
      return:
        type:
          - excel.Excel.CommentReply
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6406c-139">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6406c-139">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.CommentReply.set
    summary: '<span data-ttu-id="6406c-140">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6406c-140">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6406c-141">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="6406c-141">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6406c-142">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="6406c-142">This method has the following additional signature:</span></span>

      `set(properties: Excel.CommentReply): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CommentReplyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="6406c-143">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6406c-143">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.CommentReplyUpdateData
        - id: options
          description: <span data-ttu-id="6406c-144">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="6406c-144">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.CommentReply.set_1
    summary: '<span data-ttu-id="6406c-145">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6406c-145">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.CommentReply): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.CommentReply
  - uid: excel.Excel.CommentReply.toJSON
    summary: '<span data-ttu-id="6406c-146">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6406c-146">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6406c-147">.</span><span class="sxs-lookup"><span data-stu-id="6406c-147"></span></span> <span data-ttu-id="6406c-148">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6406c-148"></span></span><!-- --><span data-ttu-id="6406c-149">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel のコメントの返信オブジェクトは API オブジェクトであるの`toJSON`に対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.CommentReplyData`</span><span class="sxs-lookup"><span data-stu-id="6406c-149">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CommentReply object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CommentReplyData`</span></span><!-- --><span data-ttu-id="6406c-150">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="6406c-150">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentReplyData;'
      return:
        type:
          - excel.Excel.Interfaces.CommentReplyData
        description: ''