### YamlMime:UniversalReference
ms.openlocfilehash: 26ef8282797ab126196e120828cdd928b7cebdde
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303334"
items:
- uid: excel.Excel.SlicerItem
  summary: >-
    <span data-ttu-id="2c280-101">スライサーのスライサーアイテムを表します。</span><span class="sxs-lookup"><span data-stu-id="2c280-101">Represents a slicer item in a slicer.</span></span>


    <span data-ttu-id="2c280-102">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c280-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerItem
  fullName: Excel.SlicerItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerItem.context
  - excel.Excel.SlicerItem.hasData
  - excel.Excel.SlicerItem.isSelected
  - excel.Excel.SlicerItem.key
  - excel.Excel.SlicerItem.load
  - excel.Excel.SlicerItem.load_1
  - excel.Excel.SlicerItem.load_2
  - excel.Excel.SlicerItem.name
  - excel.Excel.SlicerItem.set
  - excel.Excel.SlicerItem.set_1
  - excel.Excel.SlicerItem.toJSON
- uid: excel.Excel.SlicerItem.context
  summary: <span data-ttu-id="2c280-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="2c280-103">The request context associated with the object.</span></span> <span data-ttu-id="2c280-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="2c280-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerItem.hasData
  summary: >-
    <span data-ttu-id="2c280-105">スライサーアイテムにデータが含まれている場合は True。</span><span class="sxs-lookup"><span data-stu-id="2c280-105">True if the slicer item has data.</span></span>


    <span data-ttu-id="2c280-106">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c280-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: hasData
  fullName: hasData
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hasData: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.SlicerItem.isSelected
  summary: >-
    <span data-ttu-id="2c280-107">True の場合は、スライサーアイテムが選択されています。</span><span class="sxs-lookup"><span data-stu-id="2c280-107">True if the slicer item is selected.</span></span> <span data-ttu-id="2c280-108">この値を設定すると、他の SlicerItems の選択状態がクリアされることはありません。</span><span class="sxs-lookup"><span data-stu-id="2c280-108">Setting this value will not clear other SlicerItems' selected state.</span></span> <span data-ttu-id="2c280-109">既定では、スライサーアイテムが選択されているのが1つだけの場合、選択を解除すると、すべてのアイテムが選択されます。</span><span class="sxs-lookup"><span data-stu-id="2c280-109">By default, if the slicer item is the only one selected, when it is deselected, all items will be selected.</span></span>


    <span data-ttu-id="2c280-110">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c280-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: isSelected
  fullName: isSelected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'isSelected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.SlicerItem.key
  summary: >-
    <span data-ttu-id="2c280-111">スライサーアイテムを表す一意の値を表します。</span><span class="sxs-lookup"><span data-stu-id="2c280-111">Represents the unique value representing the slicer item.</span></span>


    <span data-ttu-id="2c280-112">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c280-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: key
  fullName: key
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly key: string;'
    return:
      type:
      - string
- uid: excel.Excel.SlicerItem.load
  summary: <span data-ttu-id="2c280-113">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="2c280-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2c280-114">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2c280-114">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="2c280-115">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="2c280-115">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="2c280-116">`load(option?: string | string[]): Excel.SlicerItem`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="2c280-116">`load(option?: string | string[]): Excel.SlicerItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="2c280-117">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItem`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="2c280-117">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="2c280-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItem`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="2c280-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItem` - Only available on collection types.</span></span> <span data-ttu-id="2c280-119">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="2c280-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="2c280-120">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2c280-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2c280-121">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2c280-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2c280-122">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="2c280-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerItemLoadOptions): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.SlicerItemLoadOptions
- uid: excel.Excel.SlicerItem.load_1
  summary: <span data-ttu-id="2c280-123">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="2c280-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2c280-124">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2c280-124">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="2c280-125">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="2c280-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerItem.load_2
  summary: <span data-ttu-id="2c280-126">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="2c280-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2c280-127">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2c280-127">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="2c280-128">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="2c280-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.SlicerItem.name
  summary: >-
    <span data-ttu-id="2c280-129">UI に表示される値を表します。</span><span class="sxs-lookup"><span data-stu-id="2c280-129">Represents the value displayed on UI.</span></span>


    <span data-ttu-id="2c280-130">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2c280-130">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.SlicerItem.set
  summary: <span data-ttu-id="2c280-131">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2c280-131">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="2c280-132">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="2c280-132">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="2c280-133">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="2c280-133">This method has the following additional signature:</span></span>


    `set(properties: Excel.SlicerItem): void`
  isPreview: true
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.SlicerItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="2c280-134">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2c280-134">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.SlicerItemUpdateData
    - id: options
      description: <span data-ttu-id="2c280-135">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="2c280-135">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.SlicerItem.set_1
  summary: <span data-ttu-id="2c280-136">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="2c280-136">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  isPreview: true
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.SlicerItem): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.SlicerItem
- uid: excel.Excel.SlicerItem.toJSON
  summary: <span data-ttu-id="2c280-137">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="2c280-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="2c280-138">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の SlicerItem オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.SlicerItemData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="2c280-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.SlicerItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerItemData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerItemData
      description: ''
