### YamlMime:UniversalReference
items:
  - uid: excel.Excel.IterativeCalculation
    summary: |-
      <span data-ttu-id="f357e-101">反復計算の設定を表します。</span><span class="sxs-lookup"><span data-stu-id="f357e-101">Represents the Iterative Calculation settings.</span></span>

      <span data-ttu-id="f357e-102">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f357e-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.IterativeCalculation
    fullName: Excel.IterativeCalculation
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.IterativeCalculation.context
      - excel.Excel.IterativeCalculation.enabled
      - excel.Excel.IterativeCalculation.load
      - excel.Excel.IterativeCalculation.load_1
      - excel.Excel.IterativeCalculation.load_2
      - excel.Excel.IterativeCalculation.maxChange
      - excel.Excel.IterativeCalculation.maxIteration
      - excel.Excel.IterativeCalculation.set
      - excel.Excel.IterativeCalculation.set_1
      - excel.Excel.IterativeCalculation.toJSON
  - uid: excel.Excel.IterativeCalculation.context
    summary: <span data-ttu-id="f357e-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f357e-103">The request context associated with the object.</span></span> <span data-ttu-id="f357e-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="f357e-104">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.IterativeCalculation.enabled
    summary: |-
      <span data-ttu-id="f357e-105">Excel で反復計算を使用して循環参照を解決する場合、true となります。</span><span class="sxs-lookup"><span data-stu-id="f357e-105">True if Excel will use iteration to resolve circular references.</span></span>

      <span data-ttu-id="f357e-106">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f357e-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enabled: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.IterativeCalculation.load
    summary: <span data-ttu-id="f357e-107">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f357e-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f357e-108">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f357e-108">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="f357e-109">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f357e-109">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="f357e-110">`load(option?: string | string[]): Excel.IterativeCalculation`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="f357e-110">`load(option?: string | string[]): Excel.IterativeCalculation` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="f357e-111">`load(option?: { select?: string; expand?: string; }): Excel.IterativeCalculation`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="f357e-111">`load(option?: { select?: string; expand?: string; }): Excel.IterativeCalculation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="f357e-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IterativeCalculation`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="f357e-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IterativeCalculation` - Only available on collection types.</span></span> <span data-ttu-id="f357e-113">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="f357e-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="f357e-114">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="f357e-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f357e-115">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="f357e-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f357e-116">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="f357e-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.IterativeCalculationLoadOptions): Excel.IterativeCalculation;'
      return:
        type:
          - excel.Excel.IterativeCalculation
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.IterativeCalculationLoadOptions
  - uid: excel.Excel.IterativeCalculation.load_1
    summary: <span data-ttu-id="f357e-117">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f357e-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f357e-118">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f357e-118">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.IterativeCalculation;'
      return:
        type:
          - excel.Excel.IterativeCalculation
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f357e-119">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="f357e-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.IterativeCalculation.load_2
    summary: <span data-ttu-id="f357e-120">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f357e-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f357e-121">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f357e-121">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.IterativeCalculation;'
      return:
        type:
          - excel.Excel.IterativeCalculation
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="f357e-122">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="f357e-122">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.IterativeCalculation.maxChange
    summary: |-
      <span data-ttu-id="f357e-123">循環参照は Excel の反復計算によって解決されます。その反復計算間の変化の最大値を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="f357e-123">Returns or sets the maximum amount of change between each iteration as Excel resolves circular references.</span></span>

      <span data-ttu-id="f357e-124">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f357e-124">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: maxChange
    fullName: maxChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxChange: number;'
      return:
        type:
          - number
  - uid: excel.Excel.IterativeCalculation.maxIteration
    summary: |-
      <span data-ttu-id="f357e-125">Excel で循環参照の解決に使用できる、最大反復回数を設定または返します。</span><span class="sxs-lookup"><span data-stu-id="f357e-125">Returns or sets the maximum number of iterations that Excel can use to resolve a circular reference.</span></span>

      <span data-ttu-id="f357e-126">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f357e-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: maxIteration
    fullName: maxIteration
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxIteration: number;'
      return:
        type:
          - number
  - uid: excel.Excel.IterativeCalculation.set
    summary: '<span data-ttu-id="f357e-127">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f357e-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="f357e-128">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="f357e-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="f357e-129">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="f357e-129">This method has the following additional signature:</span></span>

      `set(properties: Excel.IterativeCalculation): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.IterativeCalculationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="f357e-130">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f357e-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.IterativeCalculationUpdateData
        - id: options
          description: <span data-ttu-id="f357e-131">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="f357e-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.IterativeCalculation.set_1
    summary: '<span data-ttu-id="f357e-132">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f357e-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.IterativeCalculation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.IterativeCalculation
  - uid: excel.Excel.IterativeCalculation.toJSON
    summary: '<span data-ttu-id="f357e-133">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f357e-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f357e-134">.</span><span class="sxs-lookup"><span data-stu-id="f357e-134"></span></span> <span data-ttu-id="f357e-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f357e-135"></span></span><!-- --><span data-ttu-id="f357e-136">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の IterativeCalculation オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.IterativeCalculationData`</span><span class="sxs-lookup"><span data-stu-id="f357e-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.IterativeCalculation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.IterativeCalculationData`</span></span><!-- --><span data-ttu-id="f357e-137">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="f357e-137">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.IterativeCalculationData;'
      return:
        type:
          - excel.Excel.Interfaces.IterativeCalculationData
        description: ''