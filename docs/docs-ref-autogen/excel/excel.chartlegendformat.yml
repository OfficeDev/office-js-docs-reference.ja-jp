### YamlMime:UniversalReference
ms.openlocfilehash: 42251003917b7ee2cf8a671028e8009499c8599b
ms.sourcegitcommit: a68606173477c7fb4069880eea941766c7d8c50d
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/01/2019
ms.locfileid: "29703541"
items:
- uid: excel.Excel.ChartLegendFormat
  summary: >-
    グラフの凡例の書式設定プロパティをカプセル化します。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ChartLegendFormat
  fullName: Excel.ChartLegendFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartLegendFormat.border
  - excel.Excel.ChartLegendFormat.context
  - excel.Excel.ChartLegendFormat.fill
  - excel.Excel.ChartLegendFormat.font
  - excel.Excel.ChartLegendFormat.load
  - excel.Excel.ChartLegendFormat.toJSON
- uid: excel.Excel.ChartLegendFormat.border
  summary: >-
    グラフの罫線の書式設定 (色、線のスタイル、線の太さなど) を表します。 読み取り専用です。


    \[[API セット: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: border
  fullName: border
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly border: Excel.ChartBorder;'
    return:
      type:
      - excel.Excel.ChartBorder
- uid: excel.Excel.ChartLegendFormat.context
  summary: オブジェクトに関連付けられた要求コンテキスト。 これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartLegendFormat.fill
  summary: >-
    背景の書式設定情報を含む、オブジェクトの塗りつぶしの書式を表します。読み取り専用。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: fill
  fullName: fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.ChartFill;'
    return:
      type:
      - excel.Excel.ChartFill
- uid: excel.Excel.ChartLegendFormat.font
  summary: >-
    グラフの凡例のフォント属性 (フォント名、フォント サイズ、色など) を表します。値の取得のみ可能です。


    \[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.ChartFont;'
    return:
      type:
      - excel.Excel.ChartFont
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let chart = sheet.charts.getItemAt(0);\n    chart.legend.visible = true;\n\n    // Format the legend font.\n    let font = chart.legend.format.font;\n    font.bold = true;\n    font.color = \"red\";\n    font.italic = true;\n    font.size = 15;\n    font.name = \"Calibri\";\n    font.underline = \"Single\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ChartLegendFormat.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: >-
    だけでなく、この署名は、このメソッドは、次の署名をします。


    `load(option?: { select?: string; expand?: string; }): Excel.ChartLegendFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLegendFormat`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartLegendFormat;'
    return:
      type:
      - excel.Excel.ChartLegendFormat
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.ChartLegendFormat.toJSON
  summary: JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。 (`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.ChartLegendFormat オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.ChartLegendFormatData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartLegendFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartLegendFormatData
      description: ''
