### YamlMime:UniversalReference
ms.openlocfilehash: c162479d51f372778b3f51d41ba64f70fd90f83f
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 11/30/2018
ms.locfileid: "26996789"
items:
- uid: excel.Excel.TableColumnCollection
  summary: >-
    <span data-ttu-id="36d15-101">表の一部であるすべての列のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="36d15-101">Represents a collection of all the columns that are part of the table.</span></span>


    <span data-ttu-id="36d15-102">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36d15-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumnCollection
  fullName: Excel.TableColumnCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableColumnCollection.add
  - excel.Excel.TableColumnCollection.count
  - excel.Excel.TableColumnCollection.getCount
  - excel.Excel.TableColumnCollection.getItem
  - excel.Excel.TableColumnCollection.getItemAt
  - excel.Excel.TableColumnCollection.getItemOrNullObject
  - excel.Excel.TableColumnCollection.items
  - excel.Excel.TableColumnCollection.load
  - excel.Excel.TableColumnCollection.toJSON
- uid: excel.Excel.TableColumnCollection.add
  summary: >-
    <span data-ttu-id="36d15-103">テーブルに新しい列を追加します。</span><span class="sxs-lookup"><span data-stu-id="36d15-103">Adds a new column to the table.</span></span>


    <span data-ttu-id="36d15-104">\[[API セット: ExcelApi 1.1 には、列の合計数よりも小さいインデックスが必要です; 1.4 では、インデックスにある省略可能な (null または-1) と末尾の列が追加されます;、1.4 は、作成時に name パラメーターを使用します](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)。</span><span class="sxs-lookup"><span data-stu-id="36d15-104">\[ [API set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="36d15-105">\]</span><span class="sxs-lookup"><span data-stu-id="36d15-105"></span></span>
  name: add(index, values, name)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"36d15-106\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-106\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = tables.getItem(\"Table1\").columns.add(null, values);\n    column.load('name');\n    return ctx.sync().then(function() {\n        console.log(column.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="36d15-p102">省略可能。新しい列の相対位置を指定します。null または -1 の場合、最後に追加が行われます。上位のインデックスを持つ列は横にシフトされます。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="36d15-p102">Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="36d15-p103">省略可能。テーブルの列の、書式設定されていない値の 2 次元の配列。</span><span class="sxs-lookup"><span data-stu-id="36d15-p103">Optional. A 2-dimensional array of unformatted values of the table column.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
    - id: name
      description: <span data-ttu-id="36d15-p104">省略可能。新しい列の名前を指定します。null の場合は既定の名前が使用されます。</span><span class="sxs-lookup"><span data-stu-id="36d15-p104">Optional. Specifies the name of the new column. If null, the default name will be used.</span></span>
      type:
      - string
- uid: excel.Excel.TableColumnCollection.count
  summary: >-
    <span data-ttu-id="36d15-p105">テーブルの列数を返します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="36d15-p105">Returns the number of columns in the table. Read-only.</span></span>


    <span data-ttu-id="36d15-119">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36d15-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getCount
  summary: >-
    <span data-ttu-id="36d15-120">表の列数を取得します。</span><span class="sxs-lookup"><span data-stu-id="36d15-120">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="36d15-121">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36d15-121">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableColumnCollection.getItem
  summary: >-
    <span data-ttu-id="36d15-122">名前または ID を使用して列オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="36d15-122">Gets a column object by Name or ID.</span></span>


    <span data-ttu-id="36d15-123">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36d15-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"36d15-124\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-124\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="36d15-125">列名または ID。</span><span class="sxs-lookup"><span data-stu-id="36d15-125">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.getItemAt
  summary: >-
    <span data-ttu-id="36d15-126">コレクション内の位置に基づいて列を取得します。</span><span class="sxs-lookup"><span data-stu-id="36d15-126">Gets a column based on its position in the collection.</span></span>


    <span data-ttu-id="36d15-127">\[[API セット: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36d15-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"36d15-128\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="36d15-p106">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="36d15-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="36d15-p107">名前または ID によって、列オブジェクトを取得します。列が存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="36d15-p107">Gets a column object by Name or ID. If the column does not exist, will return a null object.</span></span>


    <span data-ttu-id="36d15-133">\[[API セット: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="36d15-133">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="36d15-134">列名または ID。</span><span class="sxs-lookup"><span data-stu-id="36d15-134">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.items
  summary: <span data-ttu-id="36d15-135">このコレクションに読み込まれている子項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="36d15-135">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableColumn[];'
    return:
      type:
      - Excel.TableColumn[]
- uid: excel.Excel.TableColumnCollection.load
  summary: <span data-ttu-id="36d15-136">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="36d15-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="36d15-137">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="36d15-137">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"36d15-138\">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-138\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"36d15-139\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-139\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"36d15-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection`でコレクション型のみ使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-140\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"36d15-141\">前の署名に似ていますが。</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-141\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"36d15-142\">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-142\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"36d15-143\">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-143\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"36d15-144\">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-144\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"36d15-145\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"36d15-145\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumns = ctx.workbook.tables.getItem('Table1').columns;\n    tablecolumns.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablecolumns Count: \" + tablecolumns.count);\n        for (var i = 0; i < tablecolumns.items.length; i++)\n        {\n            console.log(tablecolumns.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="36d15-146">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="36d15-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableColumnCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnCollectionData
      description: ''
