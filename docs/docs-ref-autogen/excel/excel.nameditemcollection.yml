### YamlMime:UniversalReference
ms.openlocfilehash: a7c0c486d36061167d60cf520714b1cce33ef801
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24048638"
items:
- uid: excel.Excel.NamedItemCollection
  summary: >-
    <span data-ttu-id="06213-101">到達した方法によって、ワークシートまたはブックの一部であるすべての NamedItem オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="06213-101">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>


    <span data-ttu-id="06213-102">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06213-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItemCollection
  fullName: excel.Excel.NamedItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItemCollection.add
  - excel.Excel.NamedItemCollection.addFormulaLocal
  - excel.Excel.NamedItemCollection.getCount
  - excel.Excel.NamedItemCollection.getItem
  - excel.Excel.NamedItemCollection.getItemOrNullObject
  - excel.Excel.NamedItemCollection.items
  - excel.Excel.NamedItemCollection.load
  - excel.Excel.NamedItemCollection.toJSON
- uid: excel.Excel.NamedItemCollection.add
  summary: >-
    <span data-ttu-id="06213-103">新しい名前を指定したスコープのコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="06213-103">Adds a new name to the collection of the given scope.</span></span>


    <span data-ttu-id="06213-104">\[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06213-104">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, reference, comment)
  fullName: excel.Excel.NamedItemCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, reference: Range | string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"06213-105\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const headerRange = sheet.getRange(\"A1:E1\");\n    sheet.names.add(\"ExpensesHeader\", headerRange);\n    const namedItems = sheet.names.load(\"name, type\");\n\n    await context.sync();\n\n    let namedItemsList = `This workbook contains ${namedItems.items.length} named item(s):`;\n    for (let i = 0; i < namedItems.items.length; i++) {\n        namedItemsList += JSON.stringify(namedItems.items[i]);\n    }\n    OfficeHelpers.UI.notify(namedItemsList);\n\n    await context.sync();\n});\n```\n```typescript\ntry {\n    await Excel.run(async (context) => {\n\n        await OfficeHelpers.ExcelUtilities.forceCreateSheet(context.workbook, \"Sample\");\n\n        const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n        let expensesTable = sheet.tables.add(\"A1:D1\", true);\n        expensesTable.name = \"ExpensesTable\";\n\n        expensesTable.getHeaderRowRange().values = [[\"DATE\", \"MERCHANT\", \"CATEGORY\", \"AMOUNT\"]];\n\n        let newData = transactions.map(item =>\n            [item.DATE, item.MERCHANT, item.CATEGORY, item.AMOUNT]);\n\n        expensesTable.rows.add(null, newData);\n\n        sheet.names.add(\"TotalAmount\", \"=SUM(ExpensesTable[AMOUNT])\");\n\n        sheet.getRange(\"D11\").values = [[\"=TotalAmount\"]];\n\n        if (Office.context.requirements.isSetSupported(\"ExcelApi\", 1.2)) {\n            sheet.getUsedRange().format.autofitColumns();\n            sheet.getUsedRange().format.autofitRows();\n        }\n\n        sheet.activate();\n\n        await context.sync();\n    });\n}\ncatch (error) {\n    OfficeHelpers.UI.notify(error);\n    OfficeHelpers.Utilities.log(error);\n}\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="06213-106">名前付きの項目の名前。</span><span class="sxs-lookup"><span data-stu-id="06213-106">The name of the named item.</span></span>
      type:
      - string
    - id: reference
      description: <span data-ttu-id="06213-107">名前が参照する数式または範囲。</span><span class="sxs-lookup"><span data-stu-id="06213-107">The formula or the range that the name will refer to.</span></span>
      type:
      - Range | string
    - id: comment
      description: <span data-ttu-id="06213-108">省略可能。</span><span class="sxs-lookup"><span data-stu-id="06213-108">Optional.</span></span> <span data-ttu-id="06213-109">名前付きアイテムに関連付けられたコメント。</span><span class="sxs-lookup"><span data-stu-id="06213-109">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.addFormulaLocal
  summary: >-
    <span data-ttu-id="06213-110">ユーザーのロケールを数式に使用して、新しい名前を指定したスコープのコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="06213-110">Adds a new name to the collection of the given scope using the user's locale for the formula.</span></span>


    <span data-ttu-id="06213-111">\[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06213-111">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFormulaLocal(name, formula, comment)
  fullName: excel.Excel.NamedItemCollection.addFormulaLocal
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="06213-112">名前付きアイテムの "名前"。</span><span class="sxs-lookup"><span data-stu-id="06213-112">The "name" of the named item.</span></span>
      type:
      - string
    - id: formula
      description: <span data-ttu-id="06213-113">名前が参照するユーザーのロケールの数式。</span><span class="sxs-lookup"><span data-stu-id="06213-113">The formula in the user's locale that the name will refer to.</span></span>
      type:
      - string
    - id: comment
      description: <span data-ttu-id="06213-114">省略可能。</span><span class="sxs-lookup"><span data-stu-id="06213-114">Optional.</span></span> <span data-ttu-id="06213-115">名前付きアイテムに関連付けられたコメント。</span><span class="sxs-lookup"><span data-stu-id="06213-115">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.getCount
  summary: >-
    <span data-ttu-id="06213-116">コレクション内の名前付きアイテムの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="06213-116">Gets the number of named items in the collection.</span></span>


    <span data-ttu-id="06213-117">\[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06213-117">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: excel.Excel.NamedItemCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.NamedItemCollection.getItem
  summary: >-
    <span data-ttu-id="06213-118">名を使用して、NamedItem オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="06213-118">Gets a NamedItem object using its name.</span></span>


    <span data-ttu-id="06213-119">\[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06213-119">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: excel.Excel.NamedItemCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"06213-120\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-120\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = 'Sheet1';\n    var nameditem = ctx.workbook.names.getItem(sheetName);\n    nameditem.load('type');\n    return ctx.sync().then(function() {\n            console.log(nameditem.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="06213-121">Nameditem の名前です。</span><span class="sxs-lookup"><span data-stu-id="06213-121">Nameditem name.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="06213-122">名を使用して、NamedItem オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="06213-122">Gets a NamedItem object using its name.</span></span> <span data-ttu-id="06213-123">Nameditem オブジェクトが存在しない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="06213-123">If the nameditem object does not exist, will return a null object.</span></span>


    <span data-ttu-id="06213-124">\[[API セット: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06213-124">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: excel.Excel.NamedItemCollection.getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="06213-125">Nameditem の名前です。</span><span class="sxs-lookup"><span data-stu-id="06213-125">Nameditem name.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.items
  summary: <span data-ttu-id="06213-126">このコレクションに読み込まれている子項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="06213-126">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: excel.Excel.NamedItemCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.NamedItem[];'
    return:
      type:
      - Excel.NamedItem[]
- uid: excel.Excel.NamedItemCollection.load
  summary: <span data-ttu-id="06213-127">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="06213-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="06213-128">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="06213-128">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"06213-129\">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-129\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"06213-130\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-130\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"06213-131\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection`でコレクション型のみ使用できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-131\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"06213-132\">前の署名に似ていますが。</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-132\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"06213-133\">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-133\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"06213-134\">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-134\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"06213-135\">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-135\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"06213-136\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"06213-136\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var nameditems = ctx.workbook.names;\n    nameditems.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < nameditems.items.length; i++)\n        {\n            console.log(nameditems.items[i].name);\n            console.log(nameditems.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.NamedItemCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="06213-137">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="06213-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItemCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.NamedItemCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemCollectionData
      description: ''
