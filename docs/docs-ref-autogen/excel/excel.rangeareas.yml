### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeAreas
    summary: |-
      RangeAreas は、同じワークシート内の1つまたは複数の四角形の範囲のコレクションを表します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeAreas
    fullName: Excel.RangeAreas
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.RangeAreas.address
      - excel.Excel.RangeAreas.addressLocal
      - excel.Excel.RangeAreas.areaCount
      - excel.Excel.RangeAreas.areas
      - excel.Excel.RangeAreas.calculate
      - excel.Excel.RangeAreas.cellCount
      - excel.Excel.RangeAreas.clear
      - excel.Excel.RangeAreas.clear_1
      - excel.Excel.RangeAreas.conditionalFormats
      - excel.Excel.RangeAreas.context
      - excel.Excel.RangeAreas.convertDataTypeToText
      - excel.Excel.RangeAreas.convertToLinkedDataType
      - excel.Excel.RangeAreas.copyFrom
      - excel.Excel.RangeAreas.copyFrom_1
      - excel.Excel.RangeAreas.dataValidation
      - excel.Excel.RangeAreas.format
      - excel.Excel.RangeAreas.getEntireColumn
      - excel.Excel.RangeAreas.getEntireRow
      - excel.Excel.RangeAreas.getIntersection
      - excel.Excel.RangeAreas.getIntersectionOrNullObject
      - excel.Excel.RangeAreas.getOffsetRangeAreas
      - excel.Excel.RangeAreas.getSpecialCells
      - excel.Excel.RangeAreas.getSpecialCells_1
      - excel.Excel.RangeAreas.getSpecialCellsOrNullObject
      - excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
      - excel.Excel.RangeAreas.getTables
      - excel.Excel.RangeAreas.getUsedRangeAreas
      - excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
      - excel.Excel.RangeAreas.isEntireColumn
      - excel.Excel.RangeAreas.isEntireRow
      - excel.Excel.RangeAreas.load
      - excel.Excel.RangeAreas.load_1
      - excel.Excel.RangeAreas.load_2
      - excel.Excel.RangeAreas.set
      - excel.Excel.RangeAreas.set_1
      - excel.Excel.RangeAreas.setDirty
      - excel.Excel.RangeAreas.style
      - excel.Excel.RangeAreas.toJSON
      - excel.Excel.RangeAreas.track
      - excel.Excel.RangeAreas.untrack
      - excel.Excel.RangeAreas.worksheet
  - uid: excel.Excel.RangeAreas.address
    summary: |-
      A1 スタイルで RageAreas 参照を返します。 address 値にはセルの各長方形ブロックのワークシート名が含まれます ("Sheet1!A1:B4, Sheet1!D1:D4" など)。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeAreas.addressLocal
    summary: |-
      ユーザー ロケールで RageAreas 参照を返します。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: addressLocal
    fullName: addressLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly addressLocal: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeAreas.areaCount
    summary: |-
      この RangeAreas オブジェクトを構成する長方形範囲の数を返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: areaCount
    fullName: areaCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areaCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeAreas.areas
    summary: |-
      この RangeAreas オブジェクトを構成する長方形範囲の集まりを返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: areas
    fullName: areas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areas: Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
  - uid: excel.Excel.RangeAreas.calculate
    summary: |-
      RangeAreas のすべてのセルを計算します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: calculate()
    fullName: calculate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.RangeAreas.cellCount
    summary: |-
      RangeAreas オブジェクトのセル数を返します。すべての個別長方形範囲のセル数が合計されます。 セル数が 2^31-1 (2,147,483,647) を超える場合、-1 を返します。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeAreas.clear
    summary: |-
      この RangeAreas オブジェクトを構成する各領域で値、フォーマット、塗りつぶし、罫線などを消去します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear(applyTo)
    fullName: clear(applyTo)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyTo
          description: 省略可能。 クリア操作の種類を決定します。 詳細については、「Excel. ClearApplyTo」を参照してください。 既定値は "すべて" です。
          type:
            - excel.Excel.ClearApplyTo
  - uid: excel.Excel.RangeAreas.clear_1
    summary: |-
      この RangeAreas オブジェクトを構成する各領域で値、フォーマット、塗りつぶし、罫線などを消去します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear(applyToString)
    fullName: clear(applyToString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyToString
          description: 省略可能。 クリア操作の種類を決定します。 詳細については、「Excel. ClearApplyTo」を参照してください。 既定値は "すべて" です。
          type:
            - '"All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"'
  - uid: excel.Excel.RangeAreas.conditionalFormats
    summary: |-
      この RangeAreas オブジェクトのセルと交差する ConditionalFormats の集まりを返します。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: conditionalFormats
    fullName: conditionalFormats
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
      return:
        type:
          - excel.Excel.ConditionalFormatCollection
  - uid: excel.Excel.RangeAreas.context
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.RangeAreas.convertDataTypeToText
    summary: |-
      RangeAreas 内でデータ型を含むすべてのセルをテキストに変換します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: convertDataTypeToText()
    fullName: convertDataTypeToText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertDataTypeToText(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.RangeAreas.convertToLinkedDataType
    summary: |-
      RangeAreas 内のすべてのセルをリンク付きデータ型に変換します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'convertToLinkedDataType(serviceID, languageCulture)'
    fullName: 'convertToLinkedDataType(serviceID, languageCulture)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToLinkedDataType(serviceID: number, languageCulture: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: serviceID
          description: データのクエリに使用されるサービス ID。
          type:
            - number
        - id: languageCulture
          description: サービスを照会する言語カルチャ。
          type:
            - string
  - uid: excel.Excel.RangeAreas.copyFrom
    summary: |-
      ソース範囲または RangeAreas から現在の RangeAreas にセル データまたは書式設定をコピーします。 コピー先の rangeAreas のサイズは、元の範囲または RangeAreas とは異なる場合があります。 転送先は、ソースよりも小さい場合は自動的に展開されます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    fullName: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyType?: Excel.RangeCopyType, skipBlanks?: boolean, transpose?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceRange
          description: コピー元の範囲または RangeAreas を指定します。 ソース範囲に複数の範囲がある場合は、四角形の範囲から完全な行または列を削除することによって作成できるアウトライン形式である必要があります。
          type:
            - Range | RangeAreas | string
        - id: copyType
          description: コピーするセルのデータまたは書式の種類を指定します。 既定値は "すべて" です。
          type:
            - excel.Excel.RangeCopyType
        - id: skipBlanks
          description: True の場合は、元の範囲または RangeAreas の空白セルをスキップします。 既定値は false です。
          type:
            - boolean
        - id: transpose
          description: True を指定すると、移動先の範囲内のセルが転置されます。 既定値は false です。
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.copyFrom_1
    summary: |-
      ソース範囲または RangeAreas から現在の RangeAreas にセル データまたは書式設定をコピーします。 コピー先の rangeAreas のサイズは、元の範囲または RangeAreas とは異なる場合があります。 転送先は、ソースよりも小さい場合は自動的に展開されます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)'
    fullName: 'copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyTypeString?: "All" | "Formulas" | "Values" | "Formats", skipBlanks?: boolean, transpose?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceRange
          description: コピー元の範囲または RangeAreas を指定します。 ソース範囲に複数の範囲がある場合は、四角形の範囲から完全な行または列を削除することによって作成できるアウトライン形式である必要があります。
          type:
            - Range | RangeAreas | string
        - id: copyTypeString
          description: コピーするセルのデータまたは書式の種類を指定します。 既定値は "すべて" です。
          type:
            - '"All" | "Formulas" | "Values" | "Formats"'
        - id: skipBlanks
          description: True の場合は、元の範囲または RangeAreas の空白セルをスキップします。 既定値は false です。
          type:
            - boolean
        - id: transpose
          description: True を指定すると、移動先の範囲内のセルが転置されます。 既定値は false です。
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.dataValidation
    summary: |-
      RangeAreas の全範囲に対して dataValidation オブジェクトを返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: dataValidation
    fullName: dataValidation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataValidation: Excel.DataValidation;'
      return:
        type:
          - excel.Excel.DataValidation
  - uid: excel.Excel.RangeAreas.format
    summary: |-
      rangeFormat オブジェクトを返します。RangeAreas オブジェクトの全範囲を対象にフォント、塗りつぶし、罫線、配置などのプロパティをカプセル化します。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          await Excel.run(async (context) => {

              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const usedRange = sheet.getUsedRange();

              // Find the ranges with formulas.
              const formulaRanges = usedRange.getSpecialCells("Formulas");
              formulaRanges.format.fill.color = "lightgreen";

              await context.sync();
          });
          ```
  - uid: excel.Excel.RangeAreas.getEntireColumn
    summary: |-
      RangeAreas の列全体を表す RangeAreas オブジェクトを返します (たとえば、現在の RangeAreas がセル "B4:E11, H2" を表す場合、列 "B:E, H:H" を表す RangeAreas が返されます)。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getEntireColumn()
    fullName: getEntireColumn()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireColumn(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.getEntireRow
    summary: |-
      RangeAreas の行全体を表す RangeAreas オブジェクトを返します (たとえば、現在の RangeAreas がセル "B4:E11" を表す場合、行 "4:11" を表す RangeAreas が返されます)。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getEntireRow()
    fullName: getEntireRow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireRow(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.getIntersection
    summary: |-
      指定した範囲または RangeAreas の交差を表す RangeAreas オブジェクトを返します。 交差が見つからない場合、ItemNotFound エラーがスローされます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getIntersection(anotherRange)
    fullName: getIntersection(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersection(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: anotherRange
          description: 積集合を決定するために使用される範囲、RangeAreas オブジェクト、または範囲アドレス。
          type:
            - Range | RangeAreas | string
  - uid: excel.Excel.RangeAreas.getIntersectionOrNullObject
    summary: |-
      指定した範囲または RangeAreas の交差を表す RangeAreas オブジェクトを返します。 交差が見つからない場合、null オブジェクトが返されます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getIntersectionOrNullObject(anotherRange)
    fullName: getIntersectionOrNullObject(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersectionOrNullObject(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: anotherRange
          description: 積集合を決定するために使用される範囲、RangeAreas、または address。
          type:
            - Range | RangeAreas | string
  - uid: excel.Excel.RangeAreas.getOffsetRangeAreas
    summary: |-
      特定の行と列のオフセットによってシフトされる RangeAreas オブジェクトを返します。 返される RangeAreas のディメンションは元のオブジェクトと一致します。 結果の RangeAreas がワークシート グリッドの境界線の外にはみ出る場合、エラーがスローされます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    fullName: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOffsetRangeAreas(rowOffset: number, columnOffset: number): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: rowOffset
          description: RangeAreas がオフセットされる行の数 (正、負、または 0)。 正の値は下方向、負の値は上方向のオフセットを表します。
          type:
            - number
        - id: columnOffset
          description: RangeAreas がオフセットされる列の数 (正、負、または 0)。 正の値は右方向、負の値は左方向のオフセットを表します。
          type:
            - number
  - uid: excel.Excel.RangeAreas.getSpecialCells
    summary: |-
      指定された型と値に一致するすべてのセルを表す RangeAreas オブジェクトを返します。 条件に一致する特別なセルが見つからない場合、エラーがスローされます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCells(cellType, cellValueType)'
    fullName: 'getSpecialCells(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCells(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellType
          description: 含めるセルの種類を指定します。
          type:
            - excel.Excel.SpecialCellType
        - id: cellValueType
          description: CellType が定数または数式の場合は、この引数を使用して、結果に含めるセルの種類を決定します。 これらの値は、組み合わせて複数の型を返すことができます。 この引数を省略すると、すべての定数および数式が対象になります。
          type:
            - excel.Excel.SpecialCellValueType
  - uid: excel.Excel.RangeAreas.getSpecialCells_1
    summary: |-
      指定された型と値に一致するすべてのセルを表す RangeAreas オブジェクトを返します。 条件に一致する特別なセルが見つからない場合、エラーがスローされます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCells(cellTypeString, cellValueType)'
    fullName: 'getSpecialCells(cellTypeString, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCells(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellTypeString
          description: 含めるセルの種類を指定します。
          type:
            - '"ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible"'
        - id: cellValueType
          description: CellType が定数または数式の場合は、この引数を使用して、結果に含めるセルの種類を決定します。 これらの値は、組み合わせて複数の型を返すことができます。 この引数を省略すると、すべての定数および数式が対象になります。
          type:
            - '"All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"'
  - uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject
    summary: |-
      指定された型と値に一致するすべてのセルを表す RangeAreas オブジェクトを返します。 条件に一致する特別なセルが見つからない場合、null オブジェクトを返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    fullName: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCellsOrNullObject(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellType
          description: 含めるセルの種類を指定します。
          type:
            - excel.Excel.SpecialCellType
        - id: cellValueType
          description: CellType が定数または数式の場合は、この引数を使用して、結果に含めるセルの種類を決定します。 これらの値は、組み合わせて複数の型を返すことができます。 この引数を省略すると、すべての定数および数式が対象になります。
          type:
            - excel.Excel.SpecialCellValueType
  - uid: excel.Excel.RangeAreas.getSpecialCellsOrNullObject_1
    summary: |-
      指定された型と値に一致するすべてのセルを表す RangeAreas オブジェクトを返します。 条件に一致する特別なセルが見つからない場合、null オブジェクトを返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCellsOrNullObject(cellTypeString, cellValueType)'
    fullName: 'getSpecialCellsOrNullObject(cellTypeString, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCellsOrNullObject(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellTypeString
          description: 含めるセルの種類を指定します。
          type:
            - '"ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible"'
        - id: cellValueType
          description: CellType が定数または数式の場合は、この引数を使用して、結果に含めるセルの種類を決定します。 これらの値は、組み合わせて複数の型を返すことができます。 この引数を省略すると、すべての定数および数式が対象になります。
          type:
            - '"All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"'
  - uid: excel.Excel.RangeAreas.getTables
    summary: |-
      この RangeAreas オブジェクトの範囲と重なるテーブルの集まりを範囲限定で返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getTables(fullyContained)
    fullName: getTables(fullyContained)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTables(fullyContained?: boolean): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: fullyContained
          description: True の場合は、範囲範囲内に完全に含まれるテーブルのみを返します。 既定値は false です。
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.getUsedRangeAreas
    summary: |-
      RangeAreas オブジェクトの個別の長方形範囲の全使用済み領域を構成する使用済み RangeAreas を返します。 RangeAreas 内に使用されているセルがない場合は、ItemNotFound エラーがスローされます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getUsedRangeAreas(valuesOnly)
    fullName: getUsedRangeAreas(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreas(valuesOnly?: boolean): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: valuesOnly
          description: 値が指定されたセルのみを使用しているセルとしてのみを考慮するかどうか。 既定値は false です。
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.getUsedRangeAreasOrNullObject
    summary: |-
      RangeAreas オブジェクトの個別の長方形範囲の全使用済み領域を構成する使用済み RangeAreas を返します。 RangeAreas 内に使用されているセルがない場合は、null オブジェクトが返されます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getUsedRangeAreasOrNullObject(valuesOnly)
    fullName: getUsedRangeAreasOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: valuesOnly
          description: 値が指定されたセルのみを使用しているセルとしてのみを考慮するかどうか。
          type:
            - boolean
  - uid: excel.Excel.RangeAreas.isEntireColumn
    summary: |-
      この RangeAreas オブジェクトの全範囲が列全体を表すかどうかを示します ("A:C, Q:Z" など)。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isEntireColumn
    fullName: isEntireColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireColumn: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeAreas.isEntireRow
    summary: |-
      この RangeAreas オブジェクトの全範囲が行全体を表すかどうかを示します ("1:3, 5:7" など)。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isEntireRow
    fullName: isEntireRow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireRow: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.RangeAreas.load
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): Excel.RangeAreas`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): Excel.RangeAreas`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeAreas`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeAreasLoadOptions): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeAreasLoadOptions
  - uid: excel.Excel.RangeAreas.load_1
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeAreas.load_2
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.RangeAreas.set
    summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
    remarks: |-
      このメソッドには、次の追加のシグネチャがあります。

      `set(properties: Excel.RangeAreas): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeAreasUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
          type:
            - Interfaces.RangeAreasUpdateData
        - id: options
          description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.RangeAreas.set_1
    summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeAreas): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeAreas
  - uid: excel.Excel.RangeAreas.setDirty
    summary: |-
      次の再計算が発生したときに再計算する RangeAreas を設定します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setDirty()
    fullName: setDirty()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDirty(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.RangeAreas.style
    summary: |-
      この RangeAreas オブジェクトの全範囲のスタイルを表します。 セルのスタイルに不整合がある場合は、null が返されます。 ユーザー設定のスタイルの場合は、スタイル名が返されます。 組み込みのスタイルの場合、BuiltInStyle 列挙内の値を表す文字列が返されます。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: excel.Excel.RangeAreas.toJSON
    summary: API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の RangeAreas オブジェクトは API オブジェクトであるのに対して`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Excel.Interfaces.RangeAreasData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeAreasData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeAreasData
        description: ''
  - uid: excel.Excel.RangeAreas.track
    summary: ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。 これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。 ".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.untrack
    summary: 前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。 これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。 追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。 メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.RangeAreas.worksheet
    summary: |-
      現在の RangeAreas のワークシートを返します。 読み取り専用です。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet