### YamlMime:UniversalReference
ms.openlocfilehash: c453a37f5018849fc54cce9b2a647b1db6fedeb1
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/20/2018
ms.locfileid: "24049558"
items:
- uid: excel.Excel.Table
  summary: >-
    Excel の表を表します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  remarks: チュートリアル、イメージ、およびサンプル コードの詳細な[テーブルの操作の方法を紹介します](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)。
  name: Excel.Table
  fullName: excel.Excel.Table
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Table.clearFilters
  - excel.Excel.Table.columns
  - excel.Excel.Table.convertToRange
  - excel.Excel.Table.delete
  - excel.Excel.Table.getDataBodyRange
  - excel.Excel.Table.getHeaderRowRange
  - excel.Excel.Table.getRange
  - excel.Excel.Table.getTotalRowRange
  - excel.Excel.Table.highlightFirstColumn
  - excel.Excel.Table.highlightLastColumn
  - excel.Excel.Table.id
  - excel.Excel.Table.load
  - excel.Excel.Table.name
  - excel.Excel.Table.onChanged
  - excel.Excel.Table.onSelectionChanged
  - excel.Excel.Table.reapplyFilters
  - excel.Excel.Table.rows
  - excel.Excel.Table.showBandedColumns
  - excel.Excel.Table.showBandedRows
  - excel.Excel.Table.showFilterButton
  - excel.Excel.Table.showHeaders
  - excel.Excel.Table.showTotals
  - excel.Excel.Table.sort
  - excel.Excel.Table.style
  - excel.Excel.Table.toJSON
  - excel.Excel.Table.worksheet
- uid: excel.Excel.Table.clearFilters
  summary: >-
    現在テーブルに適用されているすべてのフィルターをクリアします。


    \[[API セット: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: clearFilters()
  fullName: excel.Excel.Table.clearFilters
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.columns
  summary: >-
    テーブルに含まれるすべての列のコレクションを表します。読み取り専用です。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: columns
  fullName: excel.Excel.Table.columns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columns: Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
- uid: excel.Excel.Table.convertToRange
  summary: >-
    テーブルを通常の範囲のセルに変換します。すべてのデータが保持されます。


    \[[API セット: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: convertToRange()
  fullName: excel.Excel.Table.convertToRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.convertToRange();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.delete
  summary: >-
    テーブルを削除します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: excel.Excel.Table.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getDataBodyRange
  summary: >-
    テーブルのデータ本体に関連付けられた範囲オブジェクトを取得します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getDataBodyRange()
  fullName: excel.Excel.Table.getDataBodyRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableDataRange = table.getDataBodyRange();\n    tableDataRange.load('address')\n    return ctx.sync().then(function() {\n            console.log(tableDataRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getHeaderRowRange
  summary: >-
    テーブルのヘッダー行に関連付けられた範囲オブジェクトを取得します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getHeaderRowRange()
  fullName: excel.Excel.Table.getHeaderRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableHeaderRange = table.getHeaderRowRange();\n    tableHeaderRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(tableHeaderRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getRange
  summary: >-
    テーブル全体に関連付けられた範囲オブジェクトを取得します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getRange()
  fullName: excel.Excel.Table.getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableRange = table.getRange();\n    tableRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getTotalRowRange
  summary: >-
    テーブルの集計行に関連付けられた範囲オブジェクトを取得します。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: getTotalRowRange()
  fullName: excel.Excel.Table.getTotalRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableTotalsRange = table.getTotalRowRange();\n    tableTotalsRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableTotalsRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.highlightFirstColumn
  summary: >-
    最初の列に特別な書式設定が含まれているかどうかを示します。


    \[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: highlightFirstColumn
  fullName: excel.Excel.Table.highlightFirstColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightFirstColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.highlightLastColumn
  summary: >-
    最後の列に特別な書式設定が含まれているかどうかを示します。


    \[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: highlightLastColumn
  fullName: excel.Excel.Table.highlightLastColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightLastColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.id
  summary: >-
    指定されたブックのテーブルを一意に識別する値を返します。識別子の値は、テーブルの名前が変更された場合も変わりません。読み取り専用です。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: id
  fullName: excel.Excel.Table.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.load
  summary: オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。 "Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。
  remarks: "だけでなく、この署名は、このメソッドは、次の署名をします。\n\n`load(option?: { select?: string; expand?: string; }): Excel.Table`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table`でコレクション型のみ使用できます。 前の署名に似ていますが。 Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。 Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。 Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Get a table by name. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.load('index')\n    return ctx.sync().then(function() {\n            console.log(table.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get a table by index.\nExcel.run(function (ctx) { \n    var index = 0;\n    var table = ctx.workbook.tables.getItemAt(0);\n    table.load('id')\n    return ctx.sync().then(function() {\n            console.log(table.id);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set table style. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.name = 'Table1-Renamed';\n    table.showTotals = false;\n    table.style = 'TableStyleMedium2';\n    table.load('tableStyle');\n    return ctx.sync().then(function() {\n            console.log(table.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.Table.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: option
      description: コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。
      type:
      - string | string[]
- uid: excel.Excel.Table.name
  summary: >-
    テーブルの名前。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: excel.Excel.Table.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.onChanged
  summary: >-
    特定のテーブルのセル内のデータが変更されたときに発生します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: onChanged
  fullName: excel.Excel.Table.onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onChanged.add(onChange);\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"A handler has been registered for the onChanged event\",\n        \"Try changing a cell value in the table, and watch the console output.\");\n});\n```"
- uid: excel.Excel.Table.onSelectionChanged
  summary: >-
    特定のテーブルの選択範囲が変更されたときに発生します。


    \[[API セット: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: onSelectionChanged
  fullName: excel.Excel.Table.onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onSelectionChanged.add(onSelectionChange);\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"A handler has been registered for table onSelectionChanged event\",\n        \"Try changing a range selection in the table, and watch the console output.\");\n});\n```"
- uid: excel.Excel.Table.reapplyFilters
  summary: >-
    現在テーブルにあるすべてのフィルターを再適用します。


    \[[API セット: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: reapplyFilters()
  fullName: excel.Excel.Table.reapplyFilters
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapplyFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.rows
  summary: >-
    テーブルに含まれるすべての行のコレクションを表します。読み取り専用です。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: rows
  fullName: excel.Excel.Table.rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
- uid: excel.Excel.Table.showBandedColumns
  summary: >-
    テーブルを見やすくするため、奇数列を偶数列とは異なる方法で強調表示する書式設定にして、列を縞模様で表示するかどうかを示します。


    \[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showBandedColumns
  fullName: excel.Excel.Table.showBandedColumns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedColumns: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showBandedRows
  summary: >-
    テーブルを見やすくするため、奇数行を偶数行とは異なる方法で強調表示する書式設定にして、行を縞模様で表示するかどうかを示します。


    \[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showBandedRows
  fullName: excel.Excel.Table.showBandedRows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedRows: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showFilterButton
  summary: >-
    フィルター ボタンを各列のヘッダーの上部に表示するかどうかを示します。これは、テーブルにヘッダー行が含まれている場合のみ設定できます。


    \[[API セット: ExcelApi 1.3](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showFilterButton
  fullName: excel.Excel.Table.showFilterButton
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showFilterButton: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showHeaders
  summary: >-
    ヘッダー行を表示するかどうかを示します。この値によって、ヘッダー行の表示または削除を設定できます。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showHeaders
  fullName: excel.Excel.Table.showHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showHeaders: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showTotals
  summary: >-
    集計行を表示するかどうかを示します。この値によって、集計行の表示または削除を設定できます。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: showTotals
  fullName: excel.Excel.Table.showTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.sort
  summary: >-
    テーブル内の並べ替えを表します。読み取り専用。


    \[[API セット: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: sort
  fullName: excel.Excel.Table.sort
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sort: Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
- uid: excel.Excel.Table.style
  summary: >-
    テーブル スタイルを表す定数値。使用可能な値は次のとおりです。TableStyleLight1 から TableStyleLight21、TableStyleMedium1 から TableStyleMedium28、TableStyleStyleDark1 から TableStyleStyleDark11。ブックに存在するカスタムのユーザー定義スタイルも指定できます。


    \[[API セット: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: style
  fullName: excel.Excel.Table.style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.toJSON
  name: toJSON()
  fullName: excel.Excel.Table.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableData;'
    return:
      type:
      - excel.Excel.Interfaces.TableData
      description: ''
- uid: excel.Excel.Table.worksheet
  summary: >-
    現在のテーブルを含んでいるワークシート。読み取り専用です。


    \[[API セット: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: worksheet
  fullName: excel.Excel.Table.worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
