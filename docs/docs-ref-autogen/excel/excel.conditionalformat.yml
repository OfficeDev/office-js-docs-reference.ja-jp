### YamlMime:UniversalReference
ms.openlocfilehash: 9e7758795081c8a15536292bd568fc244f3fb953
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979933"
items:
- uid: excel.Excel.ConditionalFormat
  summary: >-
    <span data-ttu-id="127c6-101">条件付き書式の範囲、形式、ルール、その他のプロパティをカプセル化するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="127c6-101">An object encapsulating a conditional format's range, format, rule, and other properties.</span></span>


    <span data-ttu-id="127c6-102">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalFormat
  fullName: Excel.ConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalFormat.cellValue
  - excel.Excel.ConditionalFormat.cellValueOrNullObject
  - excel.Excel.ConditionalFormat.colorScale
  - excel.Excel.ConditionalFormat.colorScaleOrNullObject
  - excel.Excel.ConditionalFormat.context
  - excel.Excel.ConditionalFormat.custom
  - excel.Excel.ConditionalFormat.customOrNullObject
  - excel.Excel.ConditionalFormat.dataBar
  - excel.Excel.ConditionalFormat.dataBarOrNullObject
  - excel.Excel.ConditionalFormat.delete
  - excel.Excel.ConditionalFormat.getRange
  - excel.Excel.ConditionalFormat.getRangeOrNullObject
  - excel.Excel.ConditionalFormat.iconSet
  - excel.Excel.ConditionalFormat.iconSetOrNullObject
  - excel.Excel.ConditionalFormat.id
  - excel.Excel.ConditionalFormat.load
  - excel.Excel.ConditionalFormat.load_1
  - excel.Excel.ConditionalFormat.load_2
  - excel.Excel.ConditionalFormat.preset
  - excel.Excel.ConditionalFormat.presetOrNullObject
  - excel.Excel.ConditionalFormat.priority
  - excel.Excel.ConditionalFormat.set
  - excel.Excel.ConditionalFormat.set_1
  - excel.Excel.ConditionalFormat.stopIfTrue
  - excel.Excel.ConditionalFormat.textComparison
  - excel.Excel.ConditionalFormat.textComparisonOrNullObject
  - excel.Excel.ConditionalFormat.toJSON
  - excel.Excel.ConditionalFormat.topBottom
  - excel.Excel.ConditionalFormat.topBottomOrNullObject
  - excel.Excel.ConditionalFormat.type
- uid: excel.Excel.ConditionalFormat.cellValue
  summary: >-
    <span data-ttu-id="127c6-103">現在の条件付き書式が CellValue 型の場合の条件付き書式プロパティの値のセルを返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-103">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="127c6-104">たとえば 5 と 10 の間のすべてのセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="127c6-104">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="127c6-105">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-105">Read-only.</span></span>


    <span data-ttu-id="127c6-106">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValue
  fullName: cellValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-107\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.cellValueOrNullObject
  summary: >-
    <span data-ttu-id="127c6-108">現在の条件付き書式が CellValue 型の場合の条件付き書式プロパティの値のセルを返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-108">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="127c6-109">たとえば 5 と 10 の間のすべてのセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="127c6-109">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="127c6-110">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-110">Read-only.</span></span>


    <span data-ttu-id="127c6-111">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValueOrNullObject
  fullName: cellValueOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
- uid: excel.Excel.ConditionalFormat.colorScale
  summary: >-
    <span data-ttu-id="127c6-p103">現在の条件付き書式が ColorScale 型の場合、ColorScale の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p103">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="127c6-114">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-114">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScale
  fullName: colorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-115\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.colorScaleOrNullObject
  summary: >-
    <span data-ttu-id="127c6-p104">現在の条件付き書式が ColorScale 型の場合、ColorScale の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p104">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="127c6-118">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-118">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScaleOrNullObject
  fullName: colorScaleOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
- uid: excel.Excel.ConditionalFormat.context
  summary: <span data-ttu-id="127c6-119">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="127c6-119">The request context associated with the object.</span></span> <span data-ttu-id="127c6-120">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="127c6-120">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalFormat.custom
  summary: >-
    <span data-ttu-id="127c6-p106">現在の条件付き書式がカスタム型の場合、カスタムの条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p106">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="127c6-123">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-123">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: custom
  fullName: custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly custom: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-124\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.customOrNullObject
  summary: >-
    <span data-ttu-id="127c6-p107">現在の条件付き書式がカスタム型の場合、カスタムの条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p107">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="127c6-127">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: customOrNullObject
  fullName: customOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
- uid: excel.Excel.ConditionalFormat.dataBar
  summary: >-
    <span data-ttu-id="127c6-p108">現在の条件付き書式がデータ バーの場合、データ バーのプロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p108">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="127c6-130">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-130">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBar
  fullName: dataBar
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-131\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-131\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.dataBarOrNullObject
  summary: >-
    <span data-ttu-id="127c6-p109">現在の条件付き書式がデータ バーの場合、データ バーのプロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p109">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="127c6-134">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-134">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBarOrNullObject
  fullName: dataBarOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
- uid: excel.Excel.ConditionalFormat.delete
  summary: >-
    <span data-ttu-id="127c6-135">この条件付き書式を削除します。</span><span class="sxs-lookup"><span data-stu-id="127c6-135">Deletes this conditional format.</span></span>


    <span data-ttu-id="127c6-136">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-136">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.ConditionalFormat.getRange
  summary: >-
    <span data-ttu-id="127c6-137">条件付き書式が適用された範囲を返す。</span><span class="sxs-lookup"><span data-stu-id="127c6-137">Returns the range the conditonal format is applied to.</span></span> <span data-ttu-id="127c6-138">複数のセル範囲に条件付き書式が適用されている場合は、エラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="127c6-138">Throws an error if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="127c6-139">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-139">Read-only.</span></span>


    <span data-ttu-id="127c6-140">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-140">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-141\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
- uid: excel.Excel.ConditionalFormat.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="127c6-142">複数のセル範囲に条件付き書式が適用されている場合に、conditonal の形式が適用される範囲、または null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-142">Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="127c6-143">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-143">Read-only.</span></span>


    <span data-ttu-id="127c6-144">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-144">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.ConditionalFormat.iconSet
  summary: >-
    <span data-ttu-id="127c6-p112">現在の条件付き書式が IconSet 型の場合、IconSet の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p112">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="127c6-147">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-147">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSet
  fullName: iconSet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-148\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-148\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.iconSetOrNullObject
  summary: >-
    <span data-ttu-id="127c6-p113">現在の条件付き書式が IconSet 型の場合、IconSet の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="127c6-p113">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="127c6-151">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-151">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSetOrNullObject
  fullName: iconSetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
- uid: excel.Excel.ConditionalFormat.id
  summary: >-
    <span data-ttu-id="127c6-152">現在の ConditionalFormatCollection 内での条件付き書式の優先順位。</span><span class="sxs-lookup"><span data-stu-id="127c6-152">The Priority of the Conditional Format within the current ConditionalFormatCollection.</span></span> <span data-ttu-id="127c6-153">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-153">Read-only.</span></span>


    <span data-ttu-id="127c6-154">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-154">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormat.load
  summary: <span data-ttu-id="127c6-155">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="127c6-155">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="127c6-156">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="127c6-156">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="127c6-157">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="127c6-157">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="127c6-158">`load(option?: string | string[]): Excel.ConditionalFormat`-ここで、オプションは、コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="127c6-158">`load(option?: string | string[]): Excel.ConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="127c6-159">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="127c6-159">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="127c6-160">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="127c6-160">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="127c6-161">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="127c6-161">It is similar to the preceding signature.</span></span> <span data-ttu-id="127c6-162">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="127c6-162">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="127c6-163">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="127c6-163">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="127c6-164">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="127c6-164">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalFormatLoadOptions): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalFormatLoadOptions
- uid: excel.Excel.ConditionalFormat.load_1
  summary: <span data-ttu-id="127c6-165">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="127c6-165">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="127c6-166">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="127c6-166">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="127c6-167">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="127c6-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalFormat.load_2
  summary: <span data-ttu-id="127c6-168">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="127c6-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="127c6-169">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="127c6-169">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="127c6-170">読み込むには、プロパティを指定するコンマ区切りの文字列は、propertyNamesAndPaths.select、propertyNamesAndPaths.expand は、読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="127c6-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ConditionalFormat.preset
  summary: >-
    <span data-ttu-id="127c6-171">条件を事前に設定された条件付き書式を返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-171">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="127c6-172">詳細については Excel.PresetCriteriaConditionalFormat を参照してください。</span><span class="sxs-lookup"><span data-stu-id="127c6-172">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="127c6-173">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-173">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: preset
  fullName: preset
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-174\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-174\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.presetCriteria);\n    conditionalFormat.preset.format.font.color = \"white\";\n    conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.presetOrNullObject
  summary: >-
    <span data-ttu-id="127c6-175">条件を事前に設定された条件付き書式を返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-175">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="127c6-176">詳細については Excel.PresetCriteriaConditionalFormat を参照してください。</span><span class="sxs-lookup"><span data-stu-id="127c6-176">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="127c6-177">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-177">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: presetOrNullObject
  fullName: presetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
- uid: excel.Excel.ConditionalFormat.priority
  summary: >-
    <span data-ttu-id="127c6-178">この条件付きの書式を設定されている条件付き書式のコレクション内の優先順位 (またはインデックス) に存在します。</span><span class="sxs-lookup"><span data-stu-id="127c6-178">The priority (or index) within the conditional format collection that this conditional format currently exists in.</span></span> <span data-ttu-id="127c6-179">名前を変更すると、連続する優先順位を許可する、他の条件付き書式の優先順位も変更されます。</span><span class="sxs-lookup"><span data-stu-id="127c6-179">Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order.</span></span> <span data-ttu-id="127c6-180">背面から開始するには、負の優先順位を使用します。</span><span class="sxs-lookup"><span data-stu-id="127c6-180">Use a negative priority to begin from the back.</span></span> <span data-ttu-id="127c6-181">優先順位よりも範囲を超えるは取得し、優先順位の最大値 (または最小の負の値) に設定します。</span><span class="sxs-lookup"><span data-stu-id="127c6-181">Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority.</span></span> <span data-ttu-id="127c6-182">優先順位を変更する場合があるそれ以上にする場合、その新しい優先度の位置にオブジェクトの新しいコピーを再フェッチするのには注意に変更します。</span><span class="sxs-lookup"><span data-stu-id="127c6-182">Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.</span></span> <span data-ttu-id="127c6-183">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-183">Read-only.</span></span>


    <span data-ttu-id="127c6-184">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-184">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: priority
  fullName: priority
  langs:
  - typeScript
  type: property
  syntax:
    content: 'priority: number;'
    return:
      type:
      - number
- uid: excel.Excel.ConditionalFormat.set
  summary: <span data-ttu-id="127c6-185">同時に複数のオブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="127c6-185">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="127c6-186">適切なプロパティで、普通のオブジェクトまたは同じ種類の別の API のオブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="127c6-186">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="127c6-187">このメソッドには、次の追加の署名があります。</span><span class="sxs-lookup"><span data-stu-id="127c6-187">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="127c6-188">Isomorphically メソッドが呼び出されますオブジェクトのプロパティを構造化されているプロパティを使用して JavaScript オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="127c6-188">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="127c6-189">プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを非表示にするオプションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="127c6-189">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalFormat.set_1
  summary: <span data-ttu-id="127c6-190">オブジェクトに読み込まれている既存のオブジェクトに基づいて、同時に複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="127c6-190">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalFormat
- uid: excel.Excel.ConditionalFormat.stopIfTrue
  summary: >-
    <span data-ttu-id="127c6-191">この条件付き書式の条件が満たされた場合、優先順位の低い書式はそのセルに影響を及ぼしません。</span><span class="sxs-lookup"><span data-stu-id="127c6-191">If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.</span></span> <span data-ttu-id="127c6-192">これらの StopIfTrue の概念がないために、databars、アイコン セット、および colorscales に null します。</span><span class="sxs-lookup"><span data-stu-id="127c6-192">Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these</span></span>


    <span data-ttu-id="127c6-193">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-193">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: stopIfTrue
  fullName: stopIfTrue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'stopIfTrue: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ConditionalFormat.textComparison
  summary: >-
    <span data-ttu-id="127c6-194">現在の条件付き書式がテキスト型の場合の条件付き書式のプロパティ固有のテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-194">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="127c6-195">例ではセルの書式を設定するには、単語"Text"を照合します。</span><span class="sxs-lookup"><span data-stu-id="127c6-195">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="127c6-196">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-196">Read-only.</span></span>


    <span data-ttu-id="127c6-197">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-197">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparison
  fullName: textComparison
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparison: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-198\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-198\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.textComparisonOrNullObject
  summary: >-
    <span data-ttu-id="127c6-199">現在の条件付き書式がテキスト型の場合の条件付き書式のプロパティ固有のテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-199">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="127c6-200">例ではセルの書式を設定するには、単語"Text"を照合します。</span><span class="sxs-lookup"><span data-stu-id="127c6-200">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="127c6-201">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-201">Read-only.</span></span>


    <span data-ttu-id="127c6-202">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-202">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparisonOrNullObject
  fullName: textComparisonOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
- uid: excel.Excel.ConditionalFormat.toJSON
  summary: <span data-ttu-id="127c6-203">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="127c6-203">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="127c6-204">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の Excel.ConditionalFormat オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`Excel.Interfaces.ConditionalFormatData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="127c6-204">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatData
      description: ''
- uid: excel.Excel.ConditionalFormat.topBottom
  summary: >-
    <span data-ttu-id="127c6-205">現在の条件付き書式が TopBottom 型の場合は、上位/下位の条件付き書式のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-205">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="127c6-206">上位 10% または下位 10 項目の書式を設定する例です。</span><span class="sxs-lookup"><span data-stu-id="127c6-206">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="127c6-207">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-207">Read-only.</span></span>


    <span data-ttu-id="127c6-208">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-208">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottom
  fullName: topBottom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel.Excel.ConditionalFormat.topBottomOrNullObject
  summary: >-
    <span data-ttu-id="127c6-209">現在の条件付き書式が TopBottom 型の場合は、上位/下位の条件付き書式のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="127c6-209">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="127c6-210">上位 10% または下位 10 項目の書式を設定する例です。</span><span class="sxs-lookup"><span data-stu-id="127c6-210">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="127c6-211">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-211">Read-only.</span></span>


    <span data-ttu-id="127c6-212">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-212">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottomOrNullObject
  fullName: topBottomOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel.Excel.ConditionalFormat.type
  summary: >-
    <span data-ttu-id="127c6-213">条件付き書式の種類。</span><span class="sxs-lookup"><span data-stu-id="127c6-213">A type of conditional format.</span></span> <span data-ttu-id="127c6-214">一度に 1 つだけを設定できます。</span><span class="sxs-lookup"><span data-stu-id="127c6-214">Only one can be set at a time.</span></span> <span data-ttu-id="127c6-215">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="127c6-215">Read-only.</span></span>


    <span data-ttu-id="127c6-216">\[[API セット: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="127c6-216">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
    return:
      type:
      - Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"127c6-217\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"127c6-217\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
