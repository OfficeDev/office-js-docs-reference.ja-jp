### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalFormat
    summary: |-
      <span data-ttu-id="6eac0-101">条件付き書式の範囲、形式、ルール、およびその他のプロパティをカプセル化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6eac0-101">An object encapsulating a conditional format's range, format, rule, and other properties.</span></span>

      <span data-ttu-id="6eac0-102">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalFormat
    fullName: Excel.ConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ConditionalFormat.cellValue
      - excel.Excel.ConditionalFormat.cellValueOrNullObject
      - excel.Excel.ConditionalFormat.colorScale
      - excel.Excel.ConditionalFormat.colorScaleOrNullObject
      - excel.Excel.ConditionalFormat.context
      - excel.Excel.ConditionalFormat.custom
      - excel.Excel.ConditionalFormat.customOrNullObject
      - excel.Excel.ConditionalFormat.dataBar
      - excel.Excel.ConditionalFormat.dataBarOrNullObject
      - excel.Excel.ConditionalFormat.delete
      - excel.Excel.ConditionalFormat.getRange
      - excel.Excel.ConditionalFormat.getRangeOrNullObject
      - excel.Excel.ConditionalFormat.getRanges
      - excel.Excel.ConditionalFormat.iconSet
      - excel.Excel.ConditionalFormat.iconSetOrNullObject
      - excel.Excel.ConditionalFormat.id
      - excel.Excel.ConditionalFormat.load
      - excel.Excel.ConditionalFormat.load_1
      - excel.Excel.ConditionalFormat.load_2
      - excel.Excel.ConditionalFormat.preset
      - excel.Excel.ConditionalFormat.presetOrNullObject
      - excel.Excel.ConditionalFormat.priority
      - excel.Excel.ConditionalFormat.set
      - excel.Excel.ConditionalFormat.set_1
      - excel.Excel.ConditionalFormat.stopIfTrue
      - excel.Excel.ConditionalFormat.textComparison
      - excel.Excel.ConditionalFormat.textComparisonOrNullObject
      - excel.Excel.ConditionalFormat.toJSON
      - excel.Excel.ConditionalFormat.topBottom
      - excel.Excel.ConditionalFormat.topBottomOrNullObject
      - excel.Excel.ConditionalFormat.type
  - uid: excel.Excel.ConditionalFormat.cellValue
    summary: |-
      <span data-ttu-id="6eac0-103">現在の条件付き書式が cellvalue 型の場合は、セル値の条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-103">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="6eac0-104">たとえば、5 ~ 10 の範囲のすべてのセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-104">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="6eac0-105">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-105">Read-only.</span></span>

      <span data-ttu-id="6eac0-106">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: cellValue
    fullName: cellValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
      return:
        type:
          - excel.Excel.CellValueConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-107">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B21:E23");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormat.cellValueOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-108">現在の条件付き書式が cellvalue 型の場合は、セル値の条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-108">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="6eac0-109">たとえば、5 ~ 10 の範囲のすべてのセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-109">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="6eac0-110">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-110">Read-only.</span></span>

      <span data-ttu-id="6eac0-111">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: cellValueOrNullObject
    fullName: cellValueOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
      return:
        type:
          - excel.Excel.CellValueConditionalFormat
  - uid: excel.Excel.ConditionalFormat.colorScale
    summary: |-
      <span data-ttu-id="6eac0-112">現在の条件付き書式が ColorScale 型の場合は、ColorScale 条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-112">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.</span></span> <span data-ttu-id="6eac0-113">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-113">Read-only.</span></span>

      <span data-ttu-id="6eac0-114">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-114">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: colorScale
    fullName: colorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-115">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              const criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormat.colorScaleOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-116">現在の条件付き書式が ColorScale 型の場合は、ColorScale 条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-116">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type.</span></span> <span data-ttu-id="6eac0-117">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-117">Read-only.</span></span>

      <span data-ttu-id="6eac0-118">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-118">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: colorScaleOrNullObject
    fullName: colorScaleOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
  - uid: excel.Excel.ConditionalFormat.context
    summary: <span data-ttu-id="6eac0-119">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="6eac0-119">The request context associated with the object.</span></span> <span data-ttu-id="6eac0-120">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-120">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.ConditionalFormat.custom
    summary: |-
      <span data-ttu-id="6eac0-121">現在の条件付き書式がカスタム型の場合は、カスタムの条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-121">Returns the custom conditional format properties if the current conditional format is a custom type.</span></span> <span data-ttu-id="6eac0-122">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-122">Read-only.</span></span>

      <span data-ttu-id="6eac0-123">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-123">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: custom
    fullName: custom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly custom: Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-124">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormat.customOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-125">現在の条件付き書式がカスタム型の場合は、カスタムの条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-125">Returns the custom conditional format properties if the current conditional format is a custom type.</span></span> <span data-ttu-id="6eac0-126">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-126">Read-only.</span></span>

      <span data-ttu-id="6eac0-127">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: customOrNullObject
    fullName: customOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
  - uid: excel.Excel.ConditionalFormat.dataBar
    summary: |-
      <span data-ttu-id="6eac0-128">現在の条件付き書式がデータバーの場合、データバーのプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-128">Returns the data bar properties if the current conditional format is a data bar.</span></span> <span data-ttu-id="6eac0-129">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-129">Read-only.</span></span>

      <span data-ttu-id="6eac0-130">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-130">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataBar
    fullName: dataBar
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-131">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-131">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.dataBar);
              conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormat.dataBarOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-132">現在の条件付き書式がデータバーの場合、データバーのプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-132">Returns the data bar properties if the current conditional format is a data bar.</span></span> <span data-ttu-id="6eac0-133">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-133">Read-only.</span></span>

      <span data-ttu-id="6eac0-134">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-134">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataBarOrNullObject
    fullName: dataBarOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
      return:
        type:
          - excel.Excel.DataBarConditionalFormat
  - uid: excel.Excel.ConditionalFormat.delete
    summary: |-
      <span data-ttu-id="6eac0-135">この条件付き書式を削除します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-135">Deletes this conditional format.</span></span>

      <span data-ttu-id="6eac0-136">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-136">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.ConditionalFormat.getRange
    summary: |-
      <span data-ttu-id="6eac0-137">条件付き書式が適用された範囲を返す。</span><span class="sxs-lookup"><span data-stu-id="6eac0-137">Returns the range the conditonal format is applied to.</span></span> <span data-ttu-id="6eac0-138">複数の範囲に条件付き書式を適用すると、エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-138">Throws an error if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="6eac0-139">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-139">Read-only.</span></span>

      <span data-ttu-id="6eac0-140">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-140">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-141">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-141">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          });
          ```
  - uid: excel.Excel.ConditionalFormat.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-142">conditonal 書式が適用される範囲を返します。または、複数の範囲に条件付き書式が適用されている場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-142">Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="6eac0-143">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-143">Read-only.</span></span>

      <span data-ttu-id="6eac0-144">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-144">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.ConditionalFormat.getRanges
    summary: |-
      <span data-ttu-id="6eac0-145">1 つまたは複数の長方形範囲で構成され、条件付き書式が適用された RangeAreas を返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-145">Returns the RangeAreas, comprising one or more rectangular ranges, the conditonal format is applied to.</span></span> <span data-ttu-id="6eac0-146">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-146">Read-only.</span></span>

      <span data-ttu-id="6eac0-147">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-147">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRanges()
    fullName: getRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.ConditionalFormat.iconSet
    summary: |-
      <span data-ttu-id="6eac0-148">現在の条件付き書式が IconSet 型の場合は、IconSet 条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-148">Returns the IconSet conditional format properties if the current conditional format is an IconSet type.</span></span> <span data-ttu-id="6eac0-149">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-149">Read-only.</span></span>

      <span data-ttu-id="6eac0-150">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-150">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: iconSet
    fullName: iconSet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
      return:
        type:
          - excel.Excel.IconSetConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-151">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-151">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.iconSet);
              const iconSetCF = conditionalFormat.iconSet;
              iconSetCF.style = Excel.IconSet.threeTriangles;

              /*
                  The iconSetCF.criteria array is automatically prepopulated with
                  criterion elements whose properties have been given default settings.
                  You can't write to each property of a criterion directly. Instead,
                  replace the whole criteria object.

                  With a "three*" icon set style, such as "threeTriangles", the third
                  element in the criteria array (criteria[2]) defines the "top" icon;
                  e.g., a green triangle. The second (criteria[1]) defines the "middle"
                  icon, The first (criteria[0]) defines the "low" icon, but it
                  can often be left empty as this method does below, because every
                  cell that does not match the other two criteria always gets the low
                  icon.            
              */
              iconSetCF.criteria = [
                  {} as any,
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=700"
                  },
                  {
                      type: Excel.ConditionalFormatIconRuleType.number,
                      operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,
                      formula: "=1000",
                  }
              ];

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormat.iconSetOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-152">現在の条件付き書式が IconSet 型の場合は、IconSet 条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-152">Returns the IconSet conditional format properties if the current conditional format is an IconSet type.</span></span> <span data-ttu-id="6eac0-153">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-153">Read-only.</span></span>

      <span data-ttu-id="6eac0-154">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-154">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: iconSetOrNullObject
    fullName: iconSetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
      return:
        type:
          - excel.Excel.IconSetConditionalFormat
  - uid: excel.Excel.ConditionalFormat.id
    summary: |-
      <span data-ttu-id="6eac0-155">現在の ConditionalFormatCollection 内での条件付き書式の優先順位。</span><span class="sxs-lookup"><span data-stu-id="6eac0-155">The Priority of the Conditional Format within the current ConditionalFormatCollection.</span></span> <span data-ttu-id="6eac0-156">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-156">Read-only.</span></span>

      <span data-ttu-id="6eac0-157">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-157">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalFormat.load
    summary: <span data-ttu-id="6eac0-158">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6eac0-159">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6eac0-159">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="6eac0-160">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="6eac0-160">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6eac0-161">`load(option?: string | string[]): Excel.ConditionalFormat`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-161">`load(option?: string | string[]): Excel.ConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6eac0-162">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-162">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6eac0-163">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-163">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="6eac0-164">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="6eac0-164">It is similar to the preceding signature.</span></span> <span data-ttu-id="6eac0-165">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-165">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6eac0-166">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-166">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6eac0-167">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-167">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalFormatLoadOptions): Excel.ConditionalFormat;'
      return:
        type:
          - excel.Excel.ConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ConditionalFormatLoadOptions
  - uid: excel.Excel.ConditionalFormat.load_1
    summary: <span data-ttu-id="6eac0-168">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6eac0-169">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6eac0-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormat;'
      return:
        type:
          - excel.Excel.ConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="6eac0-170">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="6eac0-170">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ConditionalFormat.load_2
    summary: <span data-ttu-id="6eac0-171">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-171">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6eac0-172">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6eac0-172">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormat;'
      return:
        type:
          - excel.Excel.ConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6eac0-173">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-173">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ConditionalFormat.preset
    summary: |-
      <span data-ttu-id="6eac0-174">事前設定の条件の条件付き書式を返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-174">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="6eac0-175">詳細については、「PresetCriteriaConditionalFormat」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6eac0-175">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>

      <span data-ttu-id="6eac0-176">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-176">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preset
    fullName: preset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - excel.Excel.PresetCriteriaConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-177">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-177">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.presetCriteria);
              conditionalFormat.preset.format.font.color = "white";
              conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormat.presetOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-178">事前設定の条件の条件付き書式を返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-178">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="6eac0-179">詳細については、「PresetCriteriaConditionalFormat」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6eac0-179">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>

      <span data-ttu-id="6eac0-180">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-180">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: presetOrNullObject
    fullName: presetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
      return:
        type:
          - excel.Excel.PresetCriteriaConditionalFormat
  - uid: excel.Excel.ConditionalFormat.priority
    summary: |-
      <span data-ttu-id="6eac0-181">この条件付き書式が現在存在している条件付き書式コレクション内の優先度 (またはインデックス)。</span><span class="sxs-lookup"><span data-stu-id="6eac0-181">The priority (or index) within the conditional format collection that this conditional format currently exists in.</span></span> <span data-ttu-id="6eac0-182">これを変更すると、他の条件付き書式の優先度も変更され、連続した優先順位を使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="6eac0-182">Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order.</span></span> <span data-ttu-id="6eac0-183">最背面から開始するには、負の優先順位を使用します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-183">Use a negative priority to begin from the back.</span></span> <span data-ttu-id="6eac0-184">範囲よりも大きい優先度が取得され、最大値 (負の場合は負の値) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-184">Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority.</span></span> <span data-ttu-id="6eac0-185">また、優先度を変更する場合は、変更を加える必要がある場合は、新しい優先度の場所でオブジェクトの新しいコピーを取得し直す必要があることにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="6eac0-185">Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.</span></span> <span data-ttu-id="6eac0-186">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-186">Read-only.</span></span>

      <span data-ttu-id="6eac0-187">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-187">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: priority
    fullName: priority
    langs:
      - typeScript
    type: property
    syntax:
      content: 'priority: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ConditionalFormat.set
    summary: '<span data-ttu-id="6eac0-188">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-188">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6eac0-189">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="6eac0-189">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6eac0-190">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="6eac0-190">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="6eac0-191">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6eac0-191">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ConditionalFormatUpdateData
        - id: options
          description: <span data-ttu-id="6eac0-192">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-192">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.ConditionalFormat.set_1
    summary: '<span data-ttu-id="6eac0-193">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-193">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ConditionalFormat
  - uid: excel.Excel.ConditionalFormat.stopIfTrue
    summary: |-
      <span data-ttu-id="6eac0-194">この条件付き書式の条件が満たされた場合、優先順位の低い書式はそのセルに影響を及ぼしません。</span><span class="sxs-lookup"><span data-stu-id="6eac0-194">If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.</span></span> <span data-ttu-id="6eac0-195">このような stop iftrue の概念が存在しないため、(a) を使用する場合は、(a)</span><span class="sxs-lookup"><span data-stu-id="6eac0-195">Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these</span></span>

      <span data-ttu-id="6eac0-196">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-196">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: stopIfTrue
    fullName: stopIfTrue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'stopIfTrue: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ConditionalFormat.textComparison
    summary: |-
      <span data-ttu-id="6eac0-197">現在の条件付き書式がテキスト型の場合、特定のテキスト条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-197">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="6eac0-198">たとえば、"Text" という単語に一致するセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-198">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="6eac0-199">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-199">Read-only.</span></span>

      <span data-ttu-id="6eac0-200">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-200">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: textComparison
    fullName: textComparison
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparison: Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-201">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-201">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B16:D18");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.containsText);
              conditionalFormat.textComparison.format.font.color = "red";
              conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: "Delayed" };

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalFormat.textComparisonOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-202">現在の条件付き書式がテキスト型の場合、特定のテキスト条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-202">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="6eac0-203">たとえば、"Text" という単語に一致するセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-203">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="6eac0-204">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-204">Read-only.</span></span>

      <span data-ttu-id="6eac0-205">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-205">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: textComparisonOrNullObject
    fullName: textComparisonOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
      return:
        type:
          - excel.Excel.TextConditionalFormat
  - uid: excel.Excel.ConditionalFormat.toJSON
    summary: '<span data-ttu-id="6eac0-206">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6eac0-206">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6eac0-207">.</span><span class="sxs-lookup"><span data-stu-id="6eac0-207"></span></span> <span data-ttu-id="6eac0-208">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6eac0-208"></span></span><!-- --><span data-ttu-id="6eac0-209">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の conditionalformat オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="6eac0-209">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatData`</span></span><!-- --><span data-ttu-id="6eac0-210">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-210">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalFormatData
        description: ''
  - uid: excel.Excel.ConditionalFormat.topBottom
    summary: |-
      <span data-ttu-id="6eac0-211">現在の条件付き書式が topbottom 型の場合、上位/下位条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-211">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="6eac0-212">たとえば、上位 10% または下位10個のアイテムを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-212">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="6eac0-213">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-213">Read-only.</span></span>

      <span data-ttu-id="6eac0-214">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-214">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: topBottom
    fullName: topBottom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
      return:
        type:
          - excel.Excel.TopBottomConditionalFormat
  - uid: excel.Excel.ConditionalFormat.topBottomOrNullObject
    summary: |-
      <span data-ttu-id="6eac0-215">現在の条件付き書式が topbottom 型の場合、上位/下位条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-215">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="6eac0-216">たとえば、上位 10% または下位10個のアイテムを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-216">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="6eac0-217">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-217">Read-only.</span></span>

      <span data-ttu-id="6eac0-218">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-218">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: topBottomOrNullObject
    fullName: topBottomOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
      return:
        type:
          - excel.Excel.TopBottomConditionalFormat
  - uid: excel.Excel.ConditionalFormat.type
    summary: |-
      <span data-ttu-id="6eac0-219">条件付き書式の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="6eac0-219">A type of conditional format.</span></span> <span data-ttu-id="6eac0-220">一度に設定できるのは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="6eac0-220">Only one can be set at a time.</span></span> <span data-ttu-id="6eac0-221">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6eac0-221">Read-only.</span></span>

      <span data-ttu-id="6eac0-222">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6eac0-222">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
      return:
        type:
          - Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6eac0-223">例</span><span class="sxs-lookup"><span data-stu-id="6eac0-223">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const worksheetRange = sheet.getRange();
              worksheetRange.conditionalFormats.load("type");

              await context.sync();

              let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];
              worksheetRange.conditionalFormats.items.forEach(item => {
                  cfRangePairs.push({
                      cf: item,
                      range: item.getRange().load("address")
                  });
              });

              await context.sync();

              if (cfRangePairs.length > 0) {
                  cfRangePairs.forEach(item => {
                      console.log(item.cf.type);
                  });
              } else {
                  console.log("No conditional formats applied.");
              }
          });
          ```