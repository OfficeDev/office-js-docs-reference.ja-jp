### YamlMime:UniversalReference
ms.openlocfilehash: 81eb4cb2aeddc0bd92ad7e7900eb9482b0f2a02c
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303250"
items:
- uid: excel.Excel.Workbook
  summary: >-
    <span data-ttu-id="9d80c-101">Workbook は、ワークシート、テーブル、範囲などの関連するブック オブジェクトを含む最上位オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="9d80c-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc.</span></span>


    <span data-ttu-id="9d80c-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Workbook
  fullName: Excel.Workbook
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Workbook.application
  - excel.Excel.Workbook.autoSave
  - excel.Excel.Workbook.bindings
  - excel.Excel.Workbook.calculationEngineVersion
  - excel.Excel.Workbook.chartDataPointTrack
  - excel.Excel.Workbook.close
  - excel.Excel.Workbook.close_1
  - excel.Excel.Workbook.comments
  - excel.Excel.Workbook.context
  - excel.Excel.Workbook.customXmlParts
  - excel.Excel.Workbook.dataConnections
  - excel.Excel.Workbook.functions
  - excel.Excel.Workbook.getActiveCell
  - excel.Excel.Workbook.getActiveChart
  - excel.Excel.Workbook.getActiveChartOrNullObject
  - excel.Excel.Workbook.getActiveSlicer
  - excel.Excel.Workbook.getActiveSlicerOrNullObject
  - excel.Excel.Workbook.getIsActiveCollabSession
  - excel.Excel.Workbook.getSelectedRange
  - excel.Excel.Workbook.getSelectedRanges
  - excel.Excel.Workbook.isDirty
  - excel.Excel.Workbook.load
  - excel.Excel.Workbook.load_1
  - excel.Excel.Workbook.load_2
  - excel.Excel.Workbook.name
  - excel.Excel.Workbook.names
  - excel.Excel.Workbook.onAutoSaveSettingChanged
  - excel.Excel.Workbook.onSelectionChanged
  - excel.Excel.Workbook.pivotTables
  - excel.Excel.Workbook.previouslySaved
  - excel.Excel.Workbook.properties
  - excel.Excel.Workbook.protection
  - excel.Excel.Workbook.readOnly
  - excel.Excel.Workbook.save
  - excel.Excel.Workbook.save_1
  - excel.Excel.Workbook.set
  - excel.Excel.Workbook.set_1
  - excel.Excel.Workbook.settings
  - excel.Excel.Workbook.slicers
  - excel.Excel.Workbook.styles
  - excel.Excel.Workbook.tables
  - excel.Excel.Workbook.toJSON
  - excel.Excel.Workbook.use1904DateSystem
  - excel.Excel.Workbook.usePrecisionAsDisplayed
  - excel.Excel.Workbook.worksheets
- uid: excel.Excel.Workbook.application
  summary: >-
    <span data-ttu-id="9d80c-103">このブックを含む Excel アプリケーションインスタンスを表します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-103">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="9d80c-104">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-104">Read-only.</span></span>


    <span data-ttu-id="9d80c-105">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: application
  fullName: application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type:
      - excel.Excel.Application
- uid: excel.Excel.Workbook.autoSave
  summary: >-
    <span data-ttu-id="9d80c-106">ブックが自動保存モードの場合は True。</span><span class="sxs-lookup"><span data-stu-id="9d80c-106">True if the workbook is in auto save mode.</span></span>


    <span data-ttu-id="9d80c-107">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: autoSave
  fullName: autoSave
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly autoSave: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.bindings
  summary: >-
    <span data-ttu-id="9d80c-p102">ブックの一部であるバインドのコレクションを表します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-p102">Represents a collection of bindings that are part of the workbook. Read-only.</span></span>


    <span data-ttu-id="9d80c-110">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-110">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: bindings
  fullName: bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
- uid: excel.Excel.Workbook.calculationEngineVersion
  summary: >-
    <span data-ttu-id="9d80c-111">Excel 計算エンジンのバージョンに関する番号を返します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-111">Returns a number about the version of Excel Calculation Engine.</span></span> <span data-ttu-id="9d80c-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-112">Read-Only.</span></span>


    <span data-ttu-id="9d80c-113">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: calculationEngineVersion
  fullName: calculationEngineVersion
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type:
      - number
- uid: excel.Excel.Workbook.chartDataPointTrack
  summary: >-
    <span data-ttu-id="9d80c-114">True の場合は、ブック内のすべてのグラフで、添付されている実際のデータ要素が追跡されています。</span><span class="sxs-lookup"><span data-stu-id="9d80c-114">True if all charts in the workbook are tracking the actual data points to which they are attached.</span></span> <span data-ttu-id="9d80c-115">False の場合、グラフはデータポイントのインデックスを追跡します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-115">False if the charts track the index of the data points.</span></span>


    <span data-ttu-id="9d80c-116">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: chartDataPointTrack
  fullName: chartDataPointTrack
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartDataPointTrack: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.close
  summary: >-
    <span data-ttu-id="9d80c-117">現在のブックを閉じます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-117">Close current workbook.</span></span>


    <span data-ttu-id="9d80c-118">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: close(closeBehavior)
  fullName: close(closeBehavior)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(closeBehavior?: Excel.CloseBehavior): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9d80c-119\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d80c-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.close(Excel.CloseBehavior.save);\n});\n```"
    parameters:
    - id: closeBehavior
      description: <span data-ttu-id="9d80c-120">ブックのクローズの動作</span><span class="sxs-lookup"><span data-stu-id="9d80c-120">workbook close behavior.</span></span>
      type:
      - excel.Excel.CloseBehavior
- uid: excel.Excel.Workbook.close_1
  summary: >-
    <span data-ttu-id="9d80c-121">現在のブックを閉じます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-121">Close current workbook.</span></span>


    <span data-ttu-id="9d80c-122">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: close(closeBehaviorString)
  fullName: close(closeBehaviorString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(closeBehaviorString?: "Save" | "SkipSave"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: closeBehaviorString
      description: <span data-ttu-id="9d80c-123">ブックのクローズの動作</span><span class="sxs-lookup"><span data-stu-id="9d80c-123">workbook close behavior.</span></span>
      type:
      - "\"Save\" | \"SkipSave\""
- uid: excel.Excel.Workbook.comments
  summary: >-
    <span data-ttu-id="9d80c-124">ブックに関連付けられているコメントのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-124">Represents a collection of Comments associated with the workbook.</span></span> <span data-ttu-id="9d80c-125">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-125">Read-only.</span></span>


    <span data-ttu-id="9d80c-126">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: comments
  fullName: comments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly comments: Excel.CommentCollection;'
    return:
      type:
      - excel.Excel.CommentCollection
- uid: excel.Excel.Workbook.context
  summary: <span data-ttu-id="9d80c-127">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="9d80c-127">The request context associated with the object.</span></span> <span data-ttu-id="9d80c-128">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-128">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Workbook.customXmlParts
  summary: >-
    <span data-ttu-id="9d80c-p107">このブックに含まれる、カスタム XML パーツのコレクションを表します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="9d80c-p107">Represents the collection of custom XML parts contained by this workbook. Read-only.</span></span>


    <span data-ttu-id="9d80c-131">\[[API セット: excelapi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-131">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: customXmlParts
  fullName: customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type:
      - excel.Excel.CustomXmlPartCollection
- uid: excel.Excel.Workbook.dataConnections
  summary: >-
    <span data-ttu-id="9d80c-132">ブック内のすべてのデータ接続を表します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-132">Represents all data connections in the workbook.</span></span> <span data-ttu-id="9d80c-133">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-133">Read-only.</span></span>


    <span data-ttu-id="9d80c-134">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-134">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataConnections
  fullName: dataConnections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type:
      - excel.Excel.DataConnectionCollection
- uid: excel.Excel.Workbook.functions
  summary: >-
    <span data-ttu-id="9d80c-135">計算に使用できるワークシート関数のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-135">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="9d80c-136">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-136">Read-only.</span></span>


    <span data-ttu-id="9d80c-137">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-137">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: functions
  fullName: functions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type:
      - excel.Excel.Functions
- uid: excel.Excel.Workbook.getActiveCell
  summary: >-
    <span data-ttu-id="9d80c-138">ブックで現在アクティブなセルを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-138">Gets the currently active cell from the workbook.</span></span>


    <span data-ttu-id="9d80c-139">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-139">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getActiveCell()
  fullName: getActiveCell()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9d80c-140\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d80c-140\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- uid: excel.Excel.Workbook.getActiveChart
  summary: >-
    <span data-ttu-id="9d80c-141">ブック内の現在アクティブなグラフを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-141">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="9d80c-142">アクティブなグラフが存在しない場合、このステートメントを呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-142">If there is no active chart, will throw exception when invoke this statement</span></span>


    <span data-ttu-id="9d80c-143">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-143">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveChart()
  fullName: getActiveChart()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveChart(): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
- uid: excel.Excel.Workbook.getActiveChartOrNullObject
  summary: >-
    <span data-ttu-id="9d80c-144">ブック内の現在アクティブなグラフを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-144">Gets the currently active chart in the workbook.</span></span> <span data-ttu-id="9d80c-145">アクティブなグラフが存在しない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-145">If there is no active chart, will return null object</span></span>


    <span data-ttu-id="9d80c-146">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveChartOrNullObject()
  fullName: getActiveChartOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveChartOrNullObject(): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
- uid: excel.Excel.Workbook.getActiveSlicer
  summary: >-
    <span data-ttu-id="9d80c-147">ブック内の現在アクティブなスライサーを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-147">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="9d80c-148">アクティブなスライサーがない場合は、このステートメントを呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-148">If there is no active slicer, will throw exception when invoke this statement.</span></span>


    <span data-ttu-id="9d80c-149">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-149">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveSlicer()
  fullName: getActiveSlicer()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSlicer(): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
- uid: excel.Excel.Workbook.getActiveSlicerOrNullObject
  summary: >-
    <span data-ttu-id="9d80c-150">ブック内の現在アクティブなスライサーを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-150">Gets the currently active slicer in the workbook.</span></span> <span data-ttu-id="9d80c-151">アクティブなスライサーが存在しない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-151">If there is no active slicer, will return null object</span></span>


    <span data-ttu-id="9d80c-152">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-152">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getActiveSlicerOrNullObject()
  fullName: getActiveSlicerOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSlicerOrNullObject(): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
- uid: excel.Excel.Workbook.getIsActiveCollabSession
  summary: >-
    <span data-ttu-id="9d80c-153">ブックが複数のユーザーによって編集されている場合は True (共同編集)。</span><span class="sxs-lookup"><span data-stu-id="9d80c-153">True if the workbook is being edited by multiple users (co-authoring).</span></span> <span data-ttu-id="9d80c-154">ブックの状態が変更されたときと、メソッドの結果に変更が反映されるまでには、多少の時間がかかる場合があるのでご注意ください。</span><span class="sxs-lookup"><span data-stu-id="9d80c-154">Please be aware there might be some delay between when the workbook status changes and when the changes are reflected on the result of the method.</span></span>


    <span data-ttu-id="9d80c-155">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-155">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getIsActiveCollabSession()
  fullName: getIsActiveCollabSession()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
- uid: excel.Excel.Workbook.getSelectedRange
  summary: >-
    <span data-ttu-id="9d80c-156">ブックから現在選択されている1つのセル範囲を取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-156">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="9d80c-157">複数の範囲が選択されている場合、このメソッドはエラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="9d80c-157">If there are multiple ranges selected, this method will throw an error.</span></span>


    <span data-ttu-id="9d80c-158">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getSelectedRange()
  fullName: getSelectedRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9d80c-159\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d80c-159\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Workbook.getSelectedRanges
  summary: >-
    <span data-ttu-id="9d80c-160">ブックから現在選択されている1つ以上の範囲を取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-160">Gets the currently selected one or more ranges from the workbook.</span></span> <span data-ttu-id="9d80c-161">getselectedrange () とは異なり、このメソッドは、選択されているすべての範囲を表す rangeareas オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-161">Unlike getSelectedRange(), this method returns a RangeAreas object that represents all the selected ranges.</span></span>


    <span data-ttu-id="9d80c-162">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getSelectedRanges()
  fullName: getSelectedRanges()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRanges(): Excel.RangeAreas;'
    return:
      type:
      - excel.Excel.RangeAreas
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9d80c-163\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d80c-163\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    const selectedRanges = context.workbook.getSelectedRanges();\n    selectedRanges.format.fill.color = \"lightblue\";\n\n    await context.sync();\n})\n```"
- uid: excel.Excel.Workbook.isDirty
  summary: >-
    <span data-ttu-id="9d80c-164">指定されたブックが最終保存から変更されていない場合は True を指定します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-164">True if no changes have been made to the specified workbook since it was last saved.</span></span> <span data-ttu-id="9d80c-165">変更したブックを保存しない、または保存するかどうかを確認するダイアログボックスを非表示にして閉じる場合は、このプロパティを True に設定しておくことができます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-165">You can set this property to True if you want to close a modified workbook without either saving it or being prompted to save it.</span></span>


    <span data-ttu-id="9d80c-166">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-166">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: isDirty
  fullName: isDirty
  langs:
  - typeScript
  type: property
  syntax:
    content: 'isDirty: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.load
  summary: <span data-ttu-id="9d80c-167">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-167">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9d80c-168">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9d80c-168">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="9d80c-169">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="9d80c-169">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="9d80c-170">`load(option?: string | string[]): Excel.Workbook`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-170">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="9d80c-171">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-171">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="9d80c-172">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-172">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="9d80c-173">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="9d80c-173">It is similar to the preceding signature.</span></span> <span data-ttu-id="9d80c-174">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-174">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9d80c-175">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-175">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9d80c-176">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-176">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookLoadOptions
- uid: excel.Excel.Workbook.load_1
  summary: <span data-ttu-id="9d80c-177">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-177">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9d80c-178">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9d80c-178">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="9d80c-179">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="9d80c-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Workbook.load_2
  summary: <span data-ttu-id="9d80c-180">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-180">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9d80c-181">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9d80c-181">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="9d80c-182">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-182">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Workbook.name
  summary: >-
    <span data-ttu-id="9d80c-183">ブックの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-183">Gets the workbook name.</span></span> <span data-ttu-id="9d80c-184">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-184">Read-only.</span></span>


    <span data-ttu-id="9d80c-185">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-185">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Workbook.names
  summary: >-
    <span data-ttu-id="9d80c-p123">ブック スコープの名前付き項目 (名前付き範囲と名前付き定数) のコレクションを表します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="9d80c-p123">Represents a collection of workbook scoped named items (named ranges and constants). Read-only.</span></span>


    <span data-ttu-id="9d80c-188">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-188">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: names
  fullName: names
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
- uid: excel.Excel.Workbook.onAutoSaveSettingChanged
  summary: >-
    <span data-ttu-id="9d80c-189">ブックの自動保存の設定が変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-189">Occurs when AutoSave setting is changed on the workbook.</span></span>


    <span data-ttu-id="9d80c-190">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-190">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: onAutoSaveSettingChanged
  fullName: onAutoSaveSettingChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAutoSaveSettingChanged: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>
- uid: excel.Excel.Workbook.onSelectionChanged
  summary: >-
    <span data-ttu-id="9d80c-191">ドキュメント内で選択が変更されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-191">Occurs when the selection in the document is changed.</span></span>


    <span data-ttu-id="9d80c-192">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-192">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
- uid: excel.Excel.Workbook.pivotTables
  summary: >-
    <span data-ttu-id="9d80c-p124">ブックに関連付けられているピボットテーブルのコレクションを表します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="9d80c-p124">Represents a collection of PivotTables associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="9d80c-195">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-195">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: pivotTables
  fullName: pivotTables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
- uid: excel.Excel.Workbook.previouslySaved
  summary: >-
    <span data-ttu-id="9d80c-196">ブックがローカルまたはオンラインで保存されたことがある場合は True。</span><span class="sxs-lookup"><span data-stu-id="9d80c-196">True if the workbook has ever been saved locally or online.</span></span>


    <span data-ttu-id="9d80c-197">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-197">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: previouslySaved
  fullName: previouslySaved
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly previouslySaved: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.properties
  summary: >-
    <span data-ttu-id="9d80c-198">ブックのプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-198">Gets the workbook properties.</span></span> <span data-ttu-id="9d80c-199">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-199">Read-only.</span></span>


    <span data-ttu-id="9d80c-200">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-200">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: properties
  fullName: properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type:
      - excel.Excel.DocumentProperties
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9d80c-201\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d80c-201\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- uid: excel.Excel.Workbook.protection
  summary: >-
    <span data-ttu-id="9d80c-202">ブックの workbookProtection オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-202">Returns workbook protection object for a workbook.</span></span> <span data-ttu-id="9d80c-203">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-203">Read-only.</span></span>


    <span data-ttu-id="9d80c-204">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-204">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protection
  fullName: protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
- uid: excel.Excel.Workbook.readOnly
  summary: >-
    <span data-ttu-id="9d80c-205">true の場合、ブックが読み取り専用モードで開かれます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-205">True if the workbook is open in Read-only mode.</span></span> <span data-ttu-id="9d80c-206">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-206">Read-only.</span></span>


    <span data-ttu-id="9d80c-207">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-207">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: readOnly
  fullName: readOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.save
  summary: >-
    <span data-ttu-id="9d80c-208">現在のブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-208">Save current workbook.</span></span>


    <span data-ttu-id="9d80c-209">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-209">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: save(saveBehavior)
  fullName: save(saveBehavior)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'save(saveBehavior?: Excel.SaveBehavior): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9d80c-210\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9d80c-210\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.save(Excel.SaveBehavior.save);\n});\n```"
    parameters:
    - id: saveBehavior
      description: <span data-ttu-id="9d80c-211">ブックの保存動作。</span><span class="sxs-lookup"><span data-stu-id="9d80c-211">workbook save behavior.</span></span>
      type:
      - excel.Excel.SaveBehavior
- uid: excel.Excel.Workbook.save_1
  summary: >-
    <span data-ttu-id="9d80c-212">現在のブックを保存します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-212">Save current workbook.</span></span>


    <span data-ttu-id="9d80c-213">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-213">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: save(saveBehaviorString)
  fullName: save(saveBehaviorString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'save(saveBehaviorString?: "Save" | "Prompt"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: saveBehaviorString
      description: <span data-ttu-id="9d80c-214">ブックの保存動作。</span><span class="sxs-lookup"><span data-stu-id="9d80c-214">workbook save behavior.</span></span>
      type:
      - "\"Save\" | \"Prompt\""
- uid: excel.Excel.Workbook.set
  summary: <span data-ttu-id="9d80c-215">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-215">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="9d80c-216">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-216">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="9d80c-217">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="9d80c-217">This method has the following additional signature:</span></span>


    `set(properties: Excel.Workbook): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="9d80c-218">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9d80c-218">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.WorkbookUpdateData
    - id: options
      description: <span data-ttu-id="9d80c-219">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-219">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Workbook.set_1
  summary: <span data-ttu-id="9d80c-220">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-220">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Workbook
- uid: excel.Excel.Workbook.settings
  summary: >-
    <span data-ttu-id="9d80c-p129">ブックに関連付けられている Setting のコレクションを表します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="9d80c-p129">Represents a collection of Settings associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="9d80c-223">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-223">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: settings
  fullName: settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
- uid: excel.Excel.Workbook.slicers
  summary: >-
    <span data-ttu-id="9d80c-224">ブックに関連付けられているスライサーのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-224">Represents a collection of Slicers associated with the workbook.</span></span> <span data-ttu-id="9d80c-225">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-225">Read-only.</span></span>


    <span data-ttu-id="9d80c-226">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-226">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: slicers
  fullName: slicers
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly slicers: Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
- uid: excel.Excel.Workbook.styles
  summary: >-
    <span data-ttu-id="9d80c-227">ブックに関連付けられているスタイルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-227">Represents a collection of styles associated with the workbook.</span></span> <span data-ttu-id="9d80c-228">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9d80c-228">Read-only.</span></span>


    <span data-ttu-id="9d80c-229">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-229">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: styles
  fullName: styles
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
- uid: excel.Excel.Workbook.tables
  summary: >-
    <span data-ttu-id="9d80c-p132">ブックに関連付けられているテーブルのコレクションを表します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="9d80c-p132">Represents a collection of tables associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="9d80c-232">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-232">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
- uid: excel.Excel.Workbook.toJSON
  summary: <span data-ttu-id="9d80c-233">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9d80c-233">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="9d80c-234">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の Workbook オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.WorkbookData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-234">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookData
      description: ''
- uid: excel.Excel.Workbook.use1904DateSystem
  summary: >-
    <span data-ttu-id="9d80c-235">ブックが 1904 年からの計算を使用する場合は True を指定します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-235">True if the workbook uses the 1904 date system.</span></span>


    <span data-ttu-id="9d80c-236">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-236">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: use1904DateSystem
  fullName: use1904DateSystem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'use1904DateSystem: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.usePrecisionAsDisplayed
  summary: >-
    <span data-ttu-id="9d80c-237">ブックを表示桁数でのみ計算する場合、True を指定します。</span><span class="sxs-lookup"><span data-stu-id="9d80c-237">True if calculations in this workbook will be done using only the precision of the numbers as they're displayed.</span></span> <span data-ttu-id="9d80c-238">このプロパティを false から true に切り替えた場合、データは完全に正確に失われます。</span><span class="sxs-lookup"><span data-stu-id="9d80c-238">Data will permanently lose accuracy when switching this property from false to true.</span></span>


    <span data-ttu-id="9d80c-239">\[[API セット: excelapi BETA (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-239">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: usePrecisionAsDisplayed
  fullName: usePrecisionAsDisplayed
  langs:
  - typeScript
  type: property
  syntax:
    content: 'usePrecisionAsDisplayed: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Workbook.worksheets
  summary: >-
    <span data-ttu-id="9d80c-p135">ブックに関連付けられているワークシートのコレクションを表します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="9d80c-p135">Represents a collection of worksheets associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="9d80c-242">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9d80c-242">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheets
  fullName: worksheets
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type:
      - excel.Excel.WorksheetCollection
