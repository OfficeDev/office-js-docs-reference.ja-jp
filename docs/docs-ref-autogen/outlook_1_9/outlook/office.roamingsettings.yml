### YamlMime:TSType
name: Office.RoamingSettings
uid: outlook!Office.RoamingSettings:interface
package: outlook!
fullName: Office.RoamingSettings
summary: >-
  オブジェクトのメソッドを使用して作成された設定は、 `RoamingSettings` アドインとユーザーごとに保存されます。 つまり、これらのユーザーは、それらを作成したアドインのみが利用でき、また、それらが保存されているユーザーのメールボックスからのみ利用できます。


  Outlook アドイン API は、これらの設定へのアクセスを、それを作成したアドインのみに制限しますが、これらの設定はセキュリティで保護されたストレージとは見なさないようにする必要があります。 これらの設定は、Exchange Web サービスや拡張 MAPI からアクセスできます。 それらに、ユーザー資格情報やセキュリティ トークンなどの機密情報を格納しないでください。


  設定の名前は String ですが、値は String、Number、Boolean、null、Object、Array のいずれかになります。


  `RoamingSettings`オブジェクトには、 `roamingSettings` 名前空間のプロパティを介してアクセスでき `Office.context` ます。


  **重要**:


  - オブジェクトは、 `RoamingSettings` アドインが最初に読み込まれたときにのみ、永続化されたストレージから初期化されます。 これは、作業ウィンドウでは、作業ウィンドウが最初に開いたときにのみ初期化されることを意味します。 作業ウィンドウが別のページに移動したり、現在のページを再読み込みしたりすると、アドインで変更が保持されている場合でも、メモリ内オブジェクトは初期値にリセットされます。 保存された変更は、作業ウィンドウ (または、UI を使用しないアドインの場合はアイテム) が閉じられ、再度開かれるまでは使用できません。


  - Windows または Mac 上の Outlook を使用して設定して保存した場合、これらの設定はブラウザーの更新後に web 上の Outlook にのみ反映されます。
remarks: >-
  **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


  **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 新規作成または読み取り
isPreview: false
isDeprecated: false
type: interface
methods:
- name: get(name)
  uid: outlook!Office.RoamingSettings#get:member(1)
  package: outlook!
  fullName: get(name)
  summary: 指定された設定を取得します。
  remarks: >-
    **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 新規作成または読み取り


    #### <a name="examples"></a>例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = Office.context.roamingSettings.get(settingName);

    $("#settingValue").val(settingValue);

    console.log(`The value of setting "${settingName}" is "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'get(name: string): any;'
    parameters:
    - id: name
      description: The case-sensitive name of the setting to retrieve.
      type: string
    return:
      type: any
      description: '型: String \| Number \| Boolean \| オブジェクト \| 配列'
- name: remove(name)
  uid: outlook!Office.RoamingSettings#remove:member(1)
  package: outlook!
  fullName: remove(name)
  summary: 指定された設定を削除します
  remarks: >-
    **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 新規作成または読み取り
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'remove(name: string): void;'
    parameters:
    - id: name
      description: The case-sensitive name of the setting to remove.
      type: string
    return:
      type: void
      description: ''
- name: saveAsync(callback)
  uid: outlook!Office.RoamingSettings#saveAsync:member(1)
  package: outlook!
  fullName: saveAsync(callback)
  summary: >-
    設定を保存します。


    アドインによって以前に保存された設定は、初期化時に読み込まれるため、セッションの有効期間中は、設定プロパティバッグのメモリ内コピーを操作するために set メソッドと get メソッドを使用するだけでかまいません。 設定を保持して、次回アドインを使用するときに使用できるようにするには、saveAsync メソッドを使用します。
  remarks: >-
    **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 新規作成または読み取り


    #### <a name="examples"></a>例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    // Save settings in the mailbox to make it available in future sessions.

    Office.context.roamingSettings.saveAsync(function(result) {
      if (result.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Action failed with message ${result.error.message}`);
      } else {
        console.log(`Settings saved with status: ${result.status}`);
      }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'saveAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: 省略可能。 メソッドが完了すると、パラメーターに渡された関数 `callback` が、型の1つのパラメーターで呼び出されます。 `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: set(name, value)
  uid: outlook!Office.RoamingSettings#set:member(1)
  package: outlook!
  fullName: set(name, value)
  summary: >-
    指定された設定を行うかまたは作成します。


    `set`このメソッドは、指定された名前の新しい設定を作成します (存在しない場合)。または、指定した名前の既存の設定を設定します。 値は、そのデータ型のシリアル化された JSON 表現としてドキュメントに格納されます。


    各アドインの設定では、最大32KB を使用できます。


    Set 関数を使用して設定に加えた変更は、関数が呼び出されるまでサーバーに保存されません `saveAsync` 。
  remarks: >-
    **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 新規作成または読み取り


    #### <a name="examples"></a>例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = $("#settingValue").val();

    Office.context.roamingSettings.set(settingName, settingValue);

    console.log(`Setting "${settingName}" set to value "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(name: string, value: any): void;'
    parameters:
    - id: name
      description: The case-sensitive name of the setting to set or create.
      type: string
    - id: value
      description: Specifies the value to be stored.
      type: any
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: f6136a4f9143de97fa15166ec887e0ab878564c0
  ms.sourcegitcommit: a6ecbc9abca2ab5c82af4c869e3e2d72c999a4c1
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 12/02/2020
  ms.locfileid: "49538485"
