### YamlMime:UniversalReference
ms.openlocfilehash: 66d6f21e9d98fd2d00cbcbead47157b80dfb2bca
ms.sourcegitcommit: a68606173477c7fb4069880eea941766c7d8c50d
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/01/2019
ms.locfileid: "29708660"
items:
- uid: custom-functions-runtime.CustomFunctions.CancelableInvocation
  summary: >-
    <span data-ttu-id="1834e-101">キャンセル可能なユーザー定義関数の呼び出しに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="1834e-101">Provides information about the invocation of a cancelable custom function.</span></span> <span data-ttu-id="1834e-102">キャンセル可能なユーザー定義関数は、onCanceled イベントのハンドラーを提供することができます。</span><span class="sxs-lookup"><span data-stu-id="1834e-102">A cancelable custom function can provide a handler for the onCanceled event.</span></span>


    <span data-ttu-id="1834e-103">JSON のメタデータ ファイルに関数がキャンセル可能なことを示す、機能のオプションを指定する必要があります。`{ "cancelable": true }`</span><span class="sxs-lookup"><span data-stu-id="1834e-103">To indicate that a function is cancelable, in the metadata JSON file, the function options should specify: `{ "cancelable": true }`</span></span>


    <span data-ttu-id="1834e-104">JSDoc のコメントからメタデータの JSON ファイルが生成される場合は、タグを含める`@cancelable` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="1834e-104">If the metadata JSON file is being generated from JSDoc comments, include the tag `@cancelable`<!-- -->.</span></span>
  isPreview: true
  name: CustomFunctions.CancelableInvocation
  fullName: CustomFunctions.CancelableInvocation
  langs:
  - typeScript
  type: interface
  extends:
  - custom-functions-runtime.CustomFunctions.Invocation
  package: custom-functions-runtime
  children:
  - custom-functions-runtime.CustomFunctions.CancelableInvocation.onCanceled
- uid: custom-functions-runtime.CustomFunctions.CancelableInvocation.onCanceled
  summary: <span data-ttu-id="1834e-105">ユーザー定義関数がキャンセルされた場合、イベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1834e-105">Event handler called when the custom function is canceled.</span></span>
  isPreview: true
  name: onCanceled
  fullName: onCanceled
  langs:
  - typeScript
  type: property
  syntax:
    content: 'onCanceled: () => void;'
    return:
      type:
      - () => void
