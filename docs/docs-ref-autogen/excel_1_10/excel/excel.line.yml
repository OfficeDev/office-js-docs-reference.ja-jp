### YamlMime:TSType
name: Excel.Line
uid: excel!Excel.Line:class
package: excel!
fullName: Excel.Line
summary: >-
  ワークシート内の行を表します。 対応する Shape オブジェクトを取得するには、 `Line.shape`<!-- -->.


  \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: beginArrowheadLength
  uid: excel!Excel.Line#beginArrowheadLength:member
  package: excel!
  fullName: beginArrowheadLength
  summary: >-
    指定された線の始点の矢印の長さを表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'beginArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
    return:
      type: <xref uid="excel!Excel.ArrowheadLength:enum" /> | "Short" | "Medium" | "Long"
- name: beginArrowheadStyle
  uid: excel!Excel.Line#beginArrowheadStyle:member
  package: excel!
  fullName: beginArrowheadStyle
  summary: >-
    指定された線の始点の矢印のスタイルを表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'beginArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
    return:
      type: <xref uid="excel!Excel.ArrowheadStyle:enum" /> | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
- name: beginArrowheadWidth
  uid: excel!Excel.Line#beginArrowheadWidth:member
  package: excel!
  fullName: beginArrowheadWidth
  summary: >-
    指定された線の始点の矢印の幅を表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'beginArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
    return:
      type: <xref uid="excel!Excel.ArrowheadWidth:enum" /> | "Narrow" | "Medium" | "Wide"
- name: beginConnectedShape
  uid: excel!Excel.Line#beginConnectedShape:member
  package: excel!
  fullName: beginConnectedShape
  summary: >-
    指定された線の始点が接続されている図形を表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly beginConnectedShape: Excel.Shape;'
    return:
      type: <xref uid="excel!Excel.Shape:class" />
- name: beginConnectedSite
  uid: excel!Excel.Line#beginConnectedSite:member
  package: excel!
  fullName: beginConnectedSite
  summary: >-
    コネクタの始点が接続されている結合点を表します。 線の始点がどの図形にも接続されていない場合は、null を返します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly beginConnectedSite: number;'
    return:
      type: number
- name: connectorType
  uid: excel!Excel.Line#connectorType:member
  package: excel!
  fullName: connectorType
  summary: >-
    線のコネクタの種類を表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'connectorType: Excel.ConnectorType | "Straight" | "Elbow" | "Curve";'
    return:
      type: <xref uid="excel!Excel.ConnectorType:enum" /> | "Straight" | "Elbow" | "Curve"
- name: context
  uid: excel!Excel.Line#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: endArrowheadLength
  uid: excel!Excel.Line#endArrowheadLength:member
  package: excel!
  fullName: endArrowheadLength
  summary: >-
    指定された線の終点の矢印の長さを表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'endArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
    return:
      type: <xref uid="excel!Excel.ArrowheadLength:enum" /> | "Short" | "Medium" | "Long"
- name: endArrowheadStyle
  uid: excel!Excel.Line#endArrowheadStyle:member
  package: excel!
  fullName: endArrowheadStyle
  summary: >-
    指定された線の終点の矢印のスタイルを表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'endArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
    return:
      type: <xref uid="excel!Excel.ArrowheadStyle:enum" /> | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
- name: endArrowheadWidth
  uid: excel!Excel.Line#endArrowheadWidth:member
  package: excel!
  fullName: endArrowheadWidth
  summary: >-
    指定された線の終点の矢印の幅を表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'endArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
    return:
      type: <xref uid="excel!Excel.ArrowheadWidth:enum" /> | "Narrow" | "Medium" | "Wide"
- name: endConnectedShape
  uid: excel!Excel.Line#endConnectedShape:member
  package: excel!
  fullName: endConnectedShape
  summary: >-
    指定された線の終点が接続されている図形を表します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly endConnectedShape: Excel.Shape;'
    return:
      type: <xref uid="excel!Excel.Shape:class" />
- name: endConnectedSite
  uid: excel!Excel.Line#endConnectedSite:member
  package: excel!
  fullName: endConnectedSite
  summary: >-
    コネクタの終点が接続されている結合点を表します。 線の終点がどの図形にも接続されていない場合は、null を返します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly endConnectedSite: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Line#id:member
  package: excel!
  fullName: id
  summary: >-
    図形の識別子を指定します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: isBeginConnected
  uid: excel!Excel.Line#isBeginConnected:member
  package: excel!
  fullName: isBeginConnected
  summary: >-
    指定した線の始点が図形に接続されているかどうかを指定します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isBeginConnected: boolean;'
    return:
      type: boolean
- name: isEndConnected
  uid: excel!Excel.Line#isEndConnected:member
  package: excel!
  fullName: isEndConnected
  summary: >-
    指定した線の終点が図形に接続されているかどうかを指定します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEndConnected: boolean;'
    return:
      type: boolean
- name: shape
  uid: excel!Excel.Line#shape:member
  package: excel!
  fullName: shape
  summary: >-
    線に関連付けられた Shape オブジェクトを返します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type: <xref uid="excel!Excel.Shape:class" />
methods:
- name: connectBeginShape(shape, connectionSite)
  uid: excel!Excel.Line#connectBeginShape:member(1)
  package: excel!
  fullName: connectBeginShape(shape, connectionSite)
  summary: >-
    指定されたコネクタの始点を指定された図形に接続します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'connectBeginShape(shape: Excel.Shape, connectionSite: number): void;'
    parameters:
    - id: shape
      description: 接続する図形を示します。
      type: <xref uid="excel!Excel.Shape:class" />
    - id: connectionSite
      description: コネクタの始点が接続される図形の接続サイトです。 指定した図形の 0 (両端を含む) と、指定した図形の接続サイト数 (排他) の間の整数である必要があります。
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/44-shape/shape-lines.yaml\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.connectBeginShape(shapes.getItem(\"Left\"), 2);\n    line.connectEndShape(shapes.getItem(\"Right\"), 0);\n    await context.sync();\n});\n```"
- name: connectEndShape(shape, connectionSite)
  uid: excel!Excel.Line#connectEndShape:member(1)
  package: excel!
  fullName: connectEndShape(shape, connectionSite)
  summary: >-
    指定されたコネクタの終点を指定された図形に接続します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'connectEndShape(shape: Excel.Shape, connectionSite: number): void;'
    parameters:
    - id: shape
      description: 接続する図形を示します。
      type: <xref uid="excel!Excel.Shape:class" />
    - id: connectionSite
      description: コネクタの終点が接続されている図形の接続サイトを指定します。 指定した図形の 0 (両端を含む) と、指定した図形の接続サイト数 (排他) の間の整数である必要があります。
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/44-shape/shape-lines.yaml\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.connectBeginShape(shapes.getItem(\"Left\"), 2);\n    line.connectEndShape(shapes.getItem(\"Right\"), 0);\n    await context.sync();\n});\n```"
- name: disconnectBeginShape()
  uid: excel!Excel.Line#disconnectBeginShape:member(1)
  package: excel!
  fullName: disconnectBeginShape()
  summary: >-
    指定されたコネクタの始点を図形から切り離します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'disconnectBeginShape(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/44-shape/shape-lines.yaml\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.disconnectBeginShape();\n    line.disconnectEndShape();\n    await context.sync();\n});\n```"
- name: disconnectEndShape()
  uid: excel!Excel.Line#disconnectEndShape:member(1)
  package: excel!
  fullName: disconnectEndShape()
  summary: >-
    指定されたコネクタの終点を図形から切り離します。


    \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'disconnectEndShape(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/44-shape/shape-lines.yaml\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.disconnectBeginShape();\n    line.disconnectEndShape();\n    await context.sync();\n});\n```"
- name: load(options)
  uid: excel!Excel.Line#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.LineLoadOptions): Excel.Line;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.LineLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Line:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Line#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Line;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Line:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Line#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Line;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Line:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Line#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Excel.Line): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.LineUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="excel!Excel.Interfaces.LineUpdateData:interface" />
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Line#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Line): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Line:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Line#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の Excel の Line オブジェクトは API オブジェクトであるのに対して、 `toJSON` メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.LineData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.LineData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.LineData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 6236922a79428fb1b9cae3c064a04a613f4e800f
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49233160"
