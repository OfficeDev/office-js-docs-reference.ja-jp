### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.RoamingSettings:interface'
    summary: |-
      `RoamingSettings` オブジェクトのメソッドを使用して作成された設定は、アドインごと、およびユーザーごとに保存されます。つまり、設定を作成したアドインでのみ利用できます。また、設定を保存したユーザーのメール ボックスからのみ利用できます。

      Outlook アドイン API では、それらの設定を作成したアドインのみが設定にアクセスできますが、これらの設定がセキュアなストレージであると見なすことはできません。これらの設定は、Exchange Web サービスや拡張 MAPI からアクセスできます。それらに、ユーザー資格情報やセキュリティ トークンなどの機密情報を格納しないでください。

      設定の名前は String ですが、値は String、Number、Boolean、null、Object、Array のいずれかになります。

      `RoamingSettings`オブジェクトには、 `Office.context`名前空間のプロパティを`roamingSettings`介してアクセスできます。

      **重要**: `RoamingSettings`オブジェクトは、アドインが最初に読み込まれたときにのみ、永続化ストレージから初期化されます。 これは、作業ウィンドウでは、作業ウィンドウが最初に開いたときにのみ初期化されることを意味します。 作業ウィンドウが別のページに移動したり、現在のページを再読み込みしたりすると、アドインで変更が保持されている場合でも、メモリ内オブジェクトは初期値にリセットされます。 保存された変更は、作業ウィンドウ (または、UI を使用しないアドインの場合はアイテム) が閉じられ、再度開かれるまでは使用できません。
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`Restricted`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り
    name: Office.RoamingSettings
    fullName: Office.RoamingSettings
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.RoamingSettings#get:member(1)'
      - 'outlook!Office.RoamingSettings#remove:member(1)'
      - 'outlook!Office.RoamingSettings#saveAsync:member(1)'
      - 'outlook!Office.RoamingSettings#set:member(1)'
  - uid: 'outlook!Office.RoamingSettings#get:member(1)'
    summary: 指定された設定を取得します。
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`Restricted`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      var settingName = $("#settingName").val();
      var settingValue = Office.context.roamingSettings.get(settingName);
      $("#settingValue").val(settingValue);
      console.log(`The value of setting "${settingName}" is "${settingValue}".`);
      ```
    name: get(name)
    fullName: get(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'get(name: string): any;'
      return:
        type:
          - any
        description: '型: String \| Number \| Boolean \|オブジェクト\|配列'
      parameters:
        - id: name
          description: The case-sensitive name of the setting to retrieve.
          type:
            - string
  - uid: 'outlook!Office.RoamingSettings#remove:member(1)'
    summary: 指定された設定を削除します
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`Restricted`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り
    name: remove(name)
    fullName: remove(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: The case-sensitive name of the setting to remove.
          type:
            - string
  - uid: 'outlook!Office.RoamingSettings#saveAsync:member(1)'
    summary: |-
      設定を保存します。

      アドインによって以前に保存された設定は、初期化時に読み込まれるため、セッションの有効期間中は、設定プロパティバッグのメモリ内コピーを操作するために set メソッドと get メソッドを使用するだけでかまいません。 設定を保持して、次回アドインを使用するときに使用できるようにするには、saveAsync メソッドを使用します。
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`Restricted`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // Save settings in the mailbox to make it available in future sessions.
      Office.context.roamingSettings.saveAsync(function(result) {
        if (result.status !== Office.AsyncResultStatus.Succeeded) {
          console.error(`Action failed with message ${result.error.message}`);
        } else {
          console.log(`Settings saved with status: ${result.status}`);
        }
      });
      ```
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: オプション。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.RoamingSettings#saveAsync~0:complex'
  - uid: 'outlook!Office.RoamingSettings#set:member(1)'
    summary: |-
      指定された設定を行うかまたは作成します。

      この`set`メソッドは、指定された名前の新しい設定を作成します (存在しない場合)。または、指定した名前の既存の設定を設定します。 値は、そのデータ型のシリアル化された JSON 表現としてドキュメントに格納されます。

      各アドインの設定では、最大32KB を使用できます。

      Set 関数を使用して設定に加えた変更は、 `saveAsync`関数が呼び出されるまでサーバーに保存されません。
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`Restricted`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // Get the current value of the 'myKey' setting.
      var value = Office.context.roamingSettings.get('myKey');
      // Update the value of the 'myKey' setting.
      Office.context.roamingSettings.set('myKey', 'Hello World!');
      // Persist the change.
      Office.context.roamingSettings.saveAsync();
      ```
      ```javascript
      var settingName = $("#settingName").val();
      var settingValue = $("#settingValue").val();
      Office.context.roamingSettings.set(settingName, settingValue);
      console.log(`Setting "${settingName}" set to value "${settingValue}".`);
      ```
    name: 'set(name, value)'
    fullName: 'set(name, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(name: string, value: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: The case-sensitive name of the setting to set or create.
          type:
            - string
        - id: value
          description: Specifies the value to be stored.
          type:
            - any
references:
  - uid: 'outlook!Office.RoamingSettings#saveAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void