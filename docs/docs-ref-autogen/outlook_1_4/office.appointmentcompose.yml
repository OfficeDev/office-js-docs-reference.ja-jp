### YamlMime:UniversalReference
ms.openlocfilehash: cea97cf57bed71e951c8faded45adc4de40424ba
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/15/2019
ms.locfileid: "30056201"
items:
- uid: Outlook_1_4.Office.AppointmentCompose
  summary: >-
    [Office](xref:Outlook_1_4.Office.Item)<!-- -->の予定の開催者モード。


    **重要**: これは、内部の Outlook オブジェクトであり、既存のインターフェイスを使用して直接公開されるものではありません。 これは、Office の1つのモードとして扱う必要があります。 詳細については、「[オブジェクトモデル](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.4/office.context.mailbox.item)」ページを参照してください。
  name: Office.AppointmentCompose
  fullName: Office.AppointmentCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Appointment
  - 'ItemCompose '
  package: Outlook_1_4
  children:
  - Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync
  - Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync_1
  - Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync_2
  - Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync_3
  - Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync
  - Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync_1
  - Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync_2
  - Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync_3
  - Outlook_1_4.Office.AppointmentCompose.close
  - Outlook_1_4.Office.AppointmentCompose.getSelectedDataAsync
  - Outlook_1_4.Office.AppointmentCompose.getSelectedDataAsync_1
  - Outlook_1_4.Office.AppointmentCompose.loadCustomPropertiesAsync
  - Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync
  - Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync_1
  - Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync_2
  - Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync_3
  - Outlook_1_4.Office.AppointmentCompose.saveAsync
  - Outlook_1_4.Office.AppointmentCompose.saveAsync_1
  - Outlook_1_4.Office.AppointmentCompose.saveAsync_2
  - Outlook_1_4.Office.AppointmentCompose.saveAsync_3
  - Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync
  - Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync_1
  - Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync_2
  - Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync_3
  - Outlook_1_4.Office.AppointmentCompose.body
  - Outlook_1_4.Office.AppointmentCompose.end
  - Outlook_1_4.Office.AppointmentCompose.itemType
  - Outlook_1_4.Office.AppointmentCompose.location
  - Outlook_1_4.Office.AppointmentCompose.notificationMessages
  - Outlook_1_4.Office.AppointmentCompose.optionalAttendees
  - Outlook_1_4.Office.AppointmentCompose.requiredAttendees
  - Outlook_1_4.Office.AppointmentCompose.start
  - Outlook_1_4.Office.AppointmentCompose.subject
- uid: Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync
  summary: >-
    ファイルを添付ファイルとしてメッセージまたは予定に追加します。


    addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</td></tr><tr><td></td><td>filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>


    このシグネチャに加えて、メソッドには次のシグネチャもあります。


    `addFileAttachmentAsync(uri: string, attachmentName: string): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>例


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。
      type:
      - string
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 isinline: true の場合は、添付ファイルがインラインでメッセージ本文に表示され、添付ファイル一覧に表示されないことを示します。'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。 添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトにはエラーについて説明する Error オブジェクトが入ります。
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync_1
  summary: >-
    ファイルを添付ファイルとしてメッセージまたは予定に追加します。


    addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</td></tr><tr><td></td><td>filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName)
  fullName: addFileAttachmentAsync(uri, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。
      type:
      - string
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
- uid: Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync_2
  summary: >-
    ファイルを添付ファイルとしてメッセージまたは予定に追加します。


    addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</td></tr><tr><td></td><td>filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, options)
  fullName: addFileAttachmentAsync(uri, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。
      type:
      - string
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 isinline: true の場合は、添付ファイルがインラインでメッセージ本文に表示され、添付ファイル一覧に表示されないことを示します。'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_4.Office.AppointmentCompose.addFileAttachmentAsync_3
  summary: >-
    ファイルを添付ファイルとしてメッセージまたは予定に追加します。


    addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</td></tr><tr><td></td><td>filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。
      type:
      - string
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
    - id: callback
      description: メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。 添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトにはエラーについて説明する Error オブジェクトが入ります。
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync
  summary: >-
    メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。


    addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>


    このシグネチャに加えて、このメソッドには次のシグネチャもあります。


    `addItemAttachmentAsync(itemId: any, attachmentName: string): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a>例


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: 添付するアイテムの Exchange 識別子。最大長は 100 文字です。
      type:
      - any
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
    - id: options
      description: '次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。 添付ファイルの追加が失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync_1
  summary: >-
    メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。


    addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName)
  fullName: addItemAttachmentAsync(itemId, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: 添付するアイテムの Exchange 識別子。最大長は 100 文字です。
      type:
      - any
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
- uid: Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync_2
  summary: >-
    メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。


    addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, options)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: 添付するアイテムの Exchange 識別子。最大長は 100 文字です。
      type:
      - any
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
    - id: options
      description: '次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_4.Office.AppointmentCompose.addItemAttachmentAsync_3
  summary: >-
    メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。


    addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。


    その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。


    Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: 添付するアイテムの Exchange 識別子。最大長は 100 文字です。
      type:
      - any
    - id: attachmentName
      description: 添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。
      type:
      - string
    - id: callback
      description: メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。 添付ファイルの追加が失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.close
  summary: >-
    構成されている現在のアイテムを閉じます。


    close メソッドの動作は、構成されているアイテムの現在の状態によって異なります。 アイテムに保存されていない変更がある場合、クライアントはユーザーに対して、操作を保存、破棄、または閉じることを求めるメッセージを表示します。


    Outlook デスクトップ クライアントでは、メッセージがインライン返信の場合、close メソッドは無効になります。


    **注**: web 上の Outlook では、アイテムが予定であり、以前に saveAsync を使用して保存されている場合、アイテムが最後に保存されてから変更が行われていない場合でも、ユーザーに対して保存、破棄、またはキャンセルを求めるメッセージが表示されます。


    \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>制限あり</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>
  name: close()
  fullName: close()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_4.Office.AppointmentCompose.getSelectedDataAsync
  summary: >-
    メッセージの件名または本文から非同期的に選択したデータを返します。


    本文または件名で選択範囲がカーソルのみの場合、メソッドは選択されたデータに対して null を返します。本文または件名以外のフィールドを選択した場合、メソッドは InvalidSelection エラーを返します。


    コールバック メソッドから選択されたデータにアクセスするには、asyncResult.value.data を呼び出します。選択が行われたソース プロパティにアクセスするには、asyncResult.value.sourceProperty を呼び出します。この場合、body、または subject のいずれかになります。


    \[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    // Get selected data.

    Office.initialize = function () {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
    };


    function getCallback(asyncResult) {
        var text = asyncResult.value.data;
        var prop = asyncResult.value.sourceProperty;

        Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
    }


    function setCallback(asyncResult) {
        // Check for errors.
    }

    ```
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync(coercionType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (result: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: 選択されたデータ (coercionType で決定された形式の文字列として)。
    parameters:
    - id: coercionType
      description: データの形式を要求します。テキストの場合、メソッドは文字列としてプレーン テキストを返し、存在する HTML タグはすべて削除されます。HTMLの場合、メソッドは、プレーンテキストまたは HTML のいずれの場合も選択されたテキストを返します。
      type:
      - Office.CoercionType
    - id: options
      description: '次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
      type:
      - '(result: Office.AsyncResult<any>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.getSelectedDataAsync_1
  summary: >-
    メッセージの件名または本文から非同期的に選択したデータを返します。


    本文または件名で選択範囲がカーソルのみの場合、メソッドは選択されたデータに対して null を返します。本文または件名以外のフィールドを選択した場合、メソッドは InvalidSelection エラーを返します。


    コールバック メソッドから選択されたデータにアクセスするには、asyncResult.value.data を呼び出します。選択が行われたソース プロパティにアクセスするには、asyncResult.value.sourceProperty を呼び出します。この場合、body、または subject のいずれかになります。


    \[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>
  name: getSelectedDataAsync(coercionType, callback)
  fullName: getSelectedDataAsync(coercionType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: 選択されたデータ (coercionType で決定された形式の文字列として)。
    parameters:
    - id: coercionType
      description: データの形式を要求します。テキストの場合、メソッドは文字列としてプレーン テキストを返し、存在する HTML タグはすべて削除されます。HTMLの場合、メソッドは、プレーンテキストまたは HTML のいずれの場合も選択されたテキストを返します。
      type:
      - Office.CoercionType
    - id: callback
      description: メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.loadCustomPropertiesAsync
  summary: >-
    選択されたアイテムのこのアドインのカスタム プロパティを非同期に読み込みます。


    カスタム プロパティは、アプリケーションごと、アイテムごとのキーと値のペアとして格納されます。このメソッドは、コールバックで CustomProperties オブジェクトを返します。このオブジェクトは、現在のアイテムおよび現在のアドインに固有のカスタム プロパティにアクセスするためのメソッドを提供します。カスタム プロパティは、アイテム上では暗号化されません。そのため、セキュリティ保護記憶域として使用するべきではありません。


    カスタム プロパティは asyncResult.value プロパティの CustomProperties オブジェクトとして指定されます。このオブジェクトは、アイテムからカスタム プロパティを取得、設定、および削除し、カスタム プロパティに対する変更をサーバーに設定し直すために使用できます。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: 省略可能。 開発者は、コールバック関数でアクセスする任意のオブジェクトを指定できます。 このオブジェクトには、コールバック関数の asyncResult コンテキストプロパティによってアクセスできます。
      type:
      - any
- uid: Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync
  summary: >-
    メッセージまたは予定から添付ファイルを削除します。


    removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。 ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。 Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。 ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>


    このシグネチャに加えて、メソッドには次のシグネチャもあります。


    `removeAttachmentAsync(attachmentId: string): void;`


    `removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;`


    `removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>例


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: 削除する添付ファイルの識別子。
      type:
      - string
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 添付ファイルの削除が失敗した場合、エラーコードにはエラーの理由と共にエラーコードが含まれます。
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync_1
  summary: >-
    メッセージまたは予定から添付ファイルを削除します。


    removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。 ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。 Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。 ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>
  name: removeAttachmentAsync(attachmentId)
  fullName: removeAttachmentAsync(attachmentId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: 削除する添付ファイルの識別子。
      type:
      - string
- uid: Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync_2
  summary: >-
    メッセージまたは予定から添付ファイルを削除します。


    removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。 ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。 Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。 ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>
  name: removeAttachmentAsync(attachmentId, options)
  fullName: removeAttachmentAsync(attachmentId, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: 削除する添付ファイルの識別子。
      type:
      - string
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_4.Office.AppointmentCompose.removeAttachmentAsync_3
  summary: >-
    メッセージまたは予定から添付ファイルを削除します。


    removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。 ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。 Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。 ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: 削除する添付ファイルの識別子。
      type:
      - string
    - id: callback
      description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 添付ファイルの削除が失敗した場合、エラーコードにはエラーの理由と共にエラーコードが含まれます。
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.saveAsync
  summary: >-
    項目を非同期的に保存します。


    呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。


    予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。 以前に保存されていない新しい予定の場合、招待状は送信されません。 既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。


    **注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。 アイテムが同期されるまで、itemId を使用するとエラーが返されます。


    **注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。


    - Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。 Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。


    - Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。


    \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>


    このシグネチャに加えて、メソッドには次のシグネチャもあります。


    `saveAsync(): void;`


    `saveAsync(options: Office.AsyncContextOptions): void;`


    `saveAsync(callback: (result: Office.AsyncResult<string>) => void): void;`
  name: saveAsync(options, callback)
  fullName: saveAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.saveAsync_1
  summary: >-
    項目を非同期的に保存します。


    呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。


    予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。 以前に保存されていない新しい予定の場合、招待状は送信されません。 既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。


    **注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。 アイテムが同期されるまで、itemId を使用するとエラーが返されます。


    **注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。


    - Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。 Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。


    - Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。


    \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>
  name: saveAsync()
  fullName: saveAsync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_4.Office.AppointmentCompose.saveAsync_2
  summary: >-
    項目を非同期的に保存します。


    呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。


    予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。 以前に保存されていない新しい予定の場合、招待状は送信されません。 既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。


    **注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。 アイテムが同期されるまで、itemId を使用するとエラーが返されます。


    **注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。


    - Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。 Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。


    - Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。


    \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>
  name: saveAsync(options)
  fullName: saveAsync(options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_4.Office.AppointmentCompose.saveAsync_3
  summary: >-
    項目を非同期的に保存します。


    呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。


    予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。 以前に保存されていない新しい予定の場合、招待状は送信されません。 既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。


    **注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。 アイテムが同期されるまで、itemId を使用するとエラーが返されます。


    **注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。


    - Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。 Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。


    - Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。


    \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>

    ####例えば


    ```javascript

    Office.context.mailbox.item.saveAsync(
        function callback(result) {
            // Process the result.
        });

    // The following is an example of the

    // `result` parameter passed to the

    // callback function. The `value`

    // property contains the item ID of

    // the item.

    {
        "value": "AAMkADI5...AAA=",
        "status": "succeeded"
    }

    ```
  name: saveAsync(callback)
  fullName: saveAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync
  summary: >-
    メッセージの本文または件名に非同期的にデータを挿入します。


    setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。 カーソルが本文または件名フィールドにない場合は、エラーが返されます。 挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。


    \[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>


    このシグネチャに加えて、メソッドには次のシグネチャもあります。


    `setSelectedDataAsync(data: string): void;`


    `setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions): void;`


    `setSelectedDataAsync(data: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a>例


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("Hello World!");

    ```
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: 挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。
      type:
      - string
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 coercionType: テキストの場合、現在のスタイルが outlook Web App および outlook で適用されます。 フィールドが HTML エディターの場合、データが HTML の場合でも、テキスト データのみが挿入されます。 html とフィールドが html をサポートしている場合 (件名は含まれません)、現在のスタイルが outlook Web App で適用され、既定のスタイルが outlook で適用されます。 フィールドがテキストフィールドの場合は、InvalidDataFormat エラーが返されます。 coercionType が設定されていない場合、結果はフィールドに依存します。フィールドが HTML フィールドであれば HTML が使用され、フィールドがテキスト フィールドであればプレーン テキストが使用されます。'
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync_1
  summary: >-
    メッセージの本文または件名に非同期的にデータを挿入します。


    setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。 カーソルが本文または件名フィールドにない場合は、エラーが返されます。 挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。


    \[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>
  name: setSelectedDataAsync(data)
  fullName: setSelectedDataAsync(data)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: 挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。
      type:
      - string
- uid: Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync_2
  summary: >-
    メッセージの本文または件名に非同期的にデータを挿入します。


    setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。 カーソルが本文または件名フィールドにない場合は、エラーが返されます。 挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。


    \[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>

    ####例えば


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });

    ```
  name: setSelectedDataAsync(data, options)
  fullName: setSelectedDataAsync(data, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: 挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。
      type:
      - string
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 coercionType: テキストの場合、現在のスタイルが outlook Web App および outlook で適用されます。 フィールドが HTML エディターの場合、データが HTML の場合でも、テキスト データのみが挿入されます。 html とフィールドが html をサポートしている場合 (件名は含まれません)、現在のスタイルが outlook Web App で適用され、既定のスタイルが outlook で適用されます。 フィールドがテキストフィールドの場合は、InvalidDataFormat エラーが返されます。 coercionType が設定されていない場合、結果はフィールドに依存します。フィールドが HTML フィールドであれば HTML が使用され、フィールドがテキスト フィールドであればプレーン テキストが使用されます。'
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
- uid: Outlook_1_4.Office.AppointmentCompose.setSelectedDataAsync_3
  summary: >-
    メッセージの本文または件名に非同期的にデータを挿入します。


    setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。 カーソルが本文または件名フィールドにない場合は、エラーが返されます。 挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。


    \[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr>


    <tr><td>エラー</td><td>InvalidAttachmentId-添付ファイル識別子が存在しません。</td></tr></table>
  name: setSelectedDataAsync(data, callback)
  fullName: setSelectedDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: 挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。
      type:
      - string
    - id: callback
      description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.AppointmentCompose.body
  summary: >-
    アイテムの本文を操作するメソッドを提供するオブジェクトを取得します。


    \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    // This example gets the body of the message as plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of an object that is passed as the result parameter to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_4.Office.AppointmentCompose.end
  summary: >-
    予定が終了する日時を取得または設定します。


    end プロパティは、協定世界時 (UTC) の日付と時刻の値として表される、 [Office. time](xref:Outlook_1_4.Office.Time)オブジェクトです。 converttolocalclienttime メソッドを使用すると、end プロパティの値をクライアントのローカルの日付と時刻に変換できます。


    Time.setAsync メソッドを使用して終了時刻を設定する場合、convertToUtcClientTime メソッドを使用して、クライアント上のローカルの時刻をサーバーの UTC に変換する必要があります。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    // The following example sets the end time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var endTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.end.setAsync(endTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("End Time " + result.asyncContext.verb);
        }
    });

    ```
  name: end
  fullName: end
  langs:
  - typeScript
  type: property
  syntax:
    content: 'end: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_4.Office.AppointmentCompose.itemType
  summary: >-
    インスタンスが表しているアイテムの種類を取得します。


    itemType プロパティは、ItemType 列挙値の 1 つを返します。これは item オブジェクト インスタンスがメッセージと予定のどちらであるかを示すものです。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Appointment) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_4.Office.AppointmentCompose.location
  summary: >-
    予定のオフィスの[場所](xref:Outlook_1_4.Office.Location)を取得または設定します。 location プロパティは予定の場所を取得または設定するために使用するメソッドを提供する Location オブジェクトを返します。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    var userContext = { value : 1 };

    Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var location = asyncResult.value;
    }

    ```
  name: location
  fullName: location
  langs:
  - typeScript
  type: property
  syntax:
    content: 'location: Location;'
    return:
      type:
      - Location
- uid: Outlook_1_4.Office.AppointmentCompose.notificationMessages
  summary: >-
    アイテムの通知メッセージを取得します。


    \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_4.Office.AppointmentCompose.optionalAttendees
  summary: >-
    イベントの任意出席者へのアクセスを提供します。 オブジェクトの種類とアクセスのレベルは、現在のアイテムのモードによって異なります。 オプションの出席者プロパティは、会議の任意出席者を取得または更新するメソッドを提供する[Office の Recipients](xref:Outlook_1_4.Office.Recipients)オブジェクトを返します。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    Office.context.mailbox.item.optionalAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfOptionalAttendeesRecipients = asyncResult.value;
    }

    ```
  name: optionalAttendees
  fullName: optionalAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'optionalAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_4.Office.AppointmentCompose.requiredAttendees
  summary: >-
    イベントの必須出席者へのアクセスを提供します。 オブジェクトの種類とアクセスのレベルは、現在のアイテムのモードによって異なります。 requiredattendees プロパティは、会議の必須出席者を取得または更新するためのメソッドを提供する[Office の Recipients](xref:Outlook_1_4.Office.Recipients)オブジェクトを返します。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    Office.context.mailbox.item.requiredAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfRequiredAttendeesRecipients = asyncResult.value;
        console.log(JSON.stringify(arrayOfRequiredAttendeesRecipients));
    }

    ```
  name: requiredAttendees
  fullName: requiredAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requiredAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_4.Office.AppointmentCompose.start
  summary: >-
    予定を開始する日時を取得または設定します。


    start プロパティは、協定世界時 (UTC) の日付と時刻の値として表される、 [Office. time](xref:Outlook_1_4.Office.Time)オブジェクトです。 converttolocalclienttime メソッドを使用すると、値をクライアントのローカルの日付と時刻に変換できます。


    Time.setAsync メソッドを使用して開始時刻を設定する場合、convertToUtcClientTime メソッドを使用して、クライアント上のローカルの時刻をサーバーの UTC に変換する必要があります。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    // The following example sets the start time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: start
  fullName: start
  langs:
  - typeScript
  type: property
  syntax:
    content: 'start: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_4.Office.AppointmentCompose.subject
  summary: >-
    アイテムの件名フィールドに示される説明を取得または設定します。


    subject プロパティは、電子メール サーバーによって送信されたアイテムの件名全体を取得または設定します。


    subject プロパティは件名を取得および設定するためのメソッドを提供する Subject オブジェクトを返します。


    \[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最小限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[適用可能な Outlook のモード](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>予定の開催者</td></tr></table>

    ####例えば


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
