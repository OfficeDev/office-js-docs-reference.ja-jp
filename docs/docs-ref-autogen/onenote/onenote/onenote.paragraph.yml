### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Paragraph
    summary: |-
      <span data-ttu-id="c902f-101">ページに表示されるコンテンツのコンテナー。</span><span class="sxs-lookup"><span data-stu-id="c902f-101">A container for the visible content on a page.</span></span> <span data-ttu-id="c902f-102">Paragraph に含めることができるのは、コンテンツの ParagraphType の種類のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="c902f-102">A Paragraph can contain any one ParagraphType type of content.</span></span>

      <span data-ttu-id="c902f-103">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Paragraph
    fullName: OneNote.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: onenote
    children:
      - onenote.OneNote.Paragraph.addNoteTag
      - onenote.OneNote.Paragraph.addNoteTag_1
      - onenote.OneNote.Paragraph.context
      - onenote.OneNote.Paragraph.delete
      - onenote.OneNote.Paragraph.getParagraphInfo
      - onenote.OneNote.Paragraph.id
      - onenote.OneNote.Paragraph.image
      - onenote.OneNote.Paragraph.inkWords
      - onenote.OneNote.Paragraph.insertHtmlAsSibling
      - onenote.OneNote.Paragraph.insertHtmlAsSibling_1
      - onenote.OneNote.Paragraph.insertImageAsSibling
      - onenote.OneNote.Paragraph.insertImageAsSibling_1
      - onenote.OneNote.Paragraph.insertRichTextAsSibling
      - onenote.OneNote.Paragraph.insertRichTextAsSibling_1
      - onenote.OneNote.Paragraph.insertTableAsSibling
      - onenote.OneNote.Paragraph.insertTableAsSibling_1
      - onenote.OneNote.Paragraph.load
      - onenote.OneNote.Paragraph.load_1
      - onenote.OneNote.Paragraph.load_2
      - onenote.OneNote.Paragraph.outline
      - onenote.OneNote.Paragraph.paragraphs
      - onenote.OneNote.Paragraph.parentParagraph
      - onenote.OneNote.Paragraph.parentParagraphOrNull
      - onenote.OneNote.Paragraph.parentTableCell
      - onenote.OneNote.Paragraph.parentTableCellOrNull
      - onenote.OneNote.Paragraph.richText
      - onenote.OneNote.Paragraph.set
      - onenote.OneNote.Paragraph.set_1
      - onenote.OneNote.Paragraph.table
      - onenote.OneNote.Paragraph.toJSON
      - onenote.OneNote.Paragraph.track
      - onenote.OneNote.Paragraph.type
      - onenote.OneNote.Paragraph.untrack
  - uid: onenote.OneNote.Paragraph.addNoteTag
    summary: |-
      <span data-ttu-id="c902f-104">段落に [メモ] タグを追加します。</span><span class="sxs-lookup"><span data-stu-id="c902f-104">Add NoteTag to the paragraph.</span></span>

      <span data-ttu-id="c902f-105">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'addNoteTag(type, status)'
    fullName: 'addNoteTag(type, status)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
      return:
        type:
          - onenote.OneNote.NoteTag
        description: ''
      parameters:
        - id: type
          description: <span data-ttu-id="c902f-106">メモタグの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="c902f-106">The type of the NoteTag.</span></span>
          type:
            - onenote.OneNote.NoteTagType
        - id: status
          description: <span data-ttu-id="c902f-107">メモシールの状態。</span><span class="sxs-lookup"><span data-stu-id="c902f-107">The status of the NoteTag.</span></span>
          type:
            - onenote.OneNote.NoteTagStatus
  - uid: onenote.OneNote.Paragraph.addNoteTag_1
    summary: |-
      <span data-ttu-id="c902f-108">段落に [メモ] タグを追加します。</span><span class="sxs-lookup"><span data-stu-id="c902f-108">Add NoteTag to the paragraph.</span></span>

      <span data-ttu-id="c902f-109">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'addNoteTag(typeString, status)'
    fullName: 'addNoteTag(typeString, status)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
      return:
        type:
          - onenote.OneNote.NoteTag
        description: ''
      parameters:
        - id: typeString
          description: <span data-ttu-id="c902f-110">メモタグの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="c902f-110">The type of the NoteTag.</span></span>
          type:
            - '"Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2"'
        - id: status
          description: <span data-ttu-id="c902f-111">メモシールの状態。</span><span class="sxs-lookup"><span data-stu-id="c902f-111">The status of the NoteTag.</span></span>
          type:
            - '"Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"'
  - uid: onenote.OneNote.Paragraph.context
    summary: <span data-ttu-id="c902f-112">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="c902f-112">The request context associated with the object.</span></span> <span data-ttu-id="c902f-113">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-113">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - onenote.OneNote.RequestContext
  - uid: onenote.OneNote.Paragraph.delete
    summary: |-
      <span data-ttu-id="c902f-114">段落を削除します。</span><span class="sxs-lookup"><span data-stu-id="c902f-114">Deletes the paragraph</span></span>

      <span data-ttu-id="c902f-115">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c902f-116">例</span><span class="sxs-lookup"><span data-stu-id="c902f-116">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              
              var paragraphs = pageContent.outline.paragraphs;
              
              var firstParagraph = paragraphs.getItemAt(0);
              
              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Queue a command to delete the first paragraph                 
                      firstParagraph.delete();
                      
                      // Run the command to delete it
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Paragraph.getParagraphInfo
    summary: |-
      <span data-ttu-id="c902f-117">段落のリスト情報を取得する</span><span class="sxs-lookup"><span data-stu-id="c902f-117">Get list information of paragraph</span></span>

      <span data-ttu-id="c902f-118">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getParagraphInfo()
    fullName: getParagraphInfo()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
      return:
        type:
          - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
        description: ''
  - uid: onenote.OneNote.Paragraph.id
    summary: |-
      <span data-ttu-id="c902f-119">Paragraph オブジェクトの ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-119">Gets the ID of the Paragraph object.</span></span> <span data-ttu-id="c902f-120">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-120">Read-only.</span></span>

      <span data-ttu-id="c902f-121">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.Paragraph.image
    summary: |-
      <span data-ttu-id="c902f-122">Paragraph 内の Image オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-122">Gets the Image object in the Paragraph.</span></span> <span data-ttu-id="c902f-123">ParagraphType が Image ではない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="c902f-123">Throws an exception if ParagraphType is not Image.</span></span> <span data-ttu-id="c902f-124">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-124">Read-only.</span></span>

      <span data-ttu-id="c902f-125">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: image
    fullName: image
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly image: OneNote.Image;'
      return:
        type:
          - onenote.OneNote.Image
  - uid: onenote.OneNote.Paragraph.inkWords
    summary: |-
      <span data-ttu-id="c902f-126">Paragraph 内のインク コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-126">Gets the Ink collection in the Paragraph.</span></span> <span data-ttu-id="c902f-127">ParagraphType が Ink ではない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="c902f-127">Throws an exception if ParagraphType is not Ink.</span></span> <span data-ttu-id="c902f-128">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-128">Read-only.</span></span>

      <span data-ttu-id="c902f-129">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: inkWords
    fullName: inkWords
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inkWords: OneNote.InkWordCollection;'
      return:
        type:
          - onenote.OneNote.InkWordCollection
  - uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
    summary: |-
      <span data-ttu-id="c902f-130">指定された HTML コンテンツを挿入します。</span><span class="sxs-lookup"><span data-stu-id="c902f-130">Inserts the specified HTML content</span></span>

      <span data-ttu-id="c902f-131">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertHtmlAsSibling(insertLocation, html)'
    fullName: 'insertHtmlAsSibling(insertLocation, html)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c902f-132">例</span><span class="sxs-lookup"><span data-stu-id="c902f-132">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertHtmlAsSibling("Before", "<p>ContentBeforeFirstParagraph</p>");
                      firstParagraph.insertHtmlAsSibling("After", "<p>ContentAfterFirstParagraph</p>");
                      
                      // Run the command to run inserts
                      return context.sync();
                  });
          ))
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c902f-133">現在の Paragraph を基準にした新しいコンテンツの場所です。</span><span class="sxs-lookup"><span data-stu-id="c902f-133">The location of new contents relative to the current Paragraph.</span></span>
          type:
            - onenote.OneNote.InsertLocation
        - id: html
          description: '<span data-ttu-id="c902f-134">コンテンツの視覚表示を記述する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-134">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="c902f-135">OneNote アドインの JavaScript API については、「[サポートされている HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) 」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c902f-135">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>'
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertHtmlAsSibling_1
    summary: |-
      <span data-ttu-id="c902f-136">指定された HTML コンテンツを挿入します。</span><span class="sxs-lookup"><span data-stu-id="c902f-136">Inserts the specified HTML content</span></span>

      <span data-ttu-id="c902f-137">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertHtmlAsSibling(insertLocationString, html)'
    fullName: 'insertHtmlAsSibling(insertLocationString, html)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c902f-138">現在の Paragraph を基準にした新しいコンテンツの場所です。</span><span class="sxs-lookup"><span data-stu-id="c902f-138">The location of new contents relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: html
          description: '<span data-ttu-id="c902f-139">コンテンツの視覚表示を記述する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-139">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="c902f-140">OneNote アドインの JavaScript API については、「[サポートされている HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) 」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c902f-140">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>'
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertImageAsSibling
    summary: |-
      <span data-ttu-id="c902f-141">指定された挿入位置にイメージを挿入します。</span><span class="sxs-lookup"><span data-stu-id="c902f-141">Inserts the image at the specified insert location..</span></span>

      <span data-ttu-id="c902f-142">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertImageAsSibling(insertLocation, base64EncodedImage, width, height)'
    fullName: 'insertImageAsSibling(insertLocation, base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - onenote.OneNote.Image
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c902f-143">例</span><span class="sxs-lookup"><span data-stu-id="c902f-143">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertImageAsSibling("Before", "R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==");
                      firstParagraph.insertImageAsSibling("After", "R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==");
                      
                      // Run the command to insert images
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c902f-144">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="c902f-144">The location of the table relative to the current Paragraph.</span></span>
          type:
            - onenote.OneNote.InsertLocation
        - id: base64EncodedImage
          description: <span data-ttu-id="c902f-145">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-145">HTML string to append.</span></span>
          type:
            - string
        - id: width
          description: <span data-ttu-id="c902f-146">省略可能。</span><span class="sxs-lookup"><span data-stu-id="c902f-146">Optional.</span></span> <span data-ttu-id="c902f-147">ポイント単位の幅。</span><span class="sxs-lookup"><span data-stu-id="c902f-147">Width in the unit of Points.</span></span> <span data-ttu-id="c902f-148">既定値は null で、イメージの幅が使用されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-148">The default value is null and image width will be respected.</span></span>
          type:
            - number
        - id: height
          description: <span data-ttu-id="c902f-149">省略可能。</span><span class="sxs-lookup"><span data-stu-id="c902f-149">Optional.</span></span> <span data-ttu-id="c902f-150">ポイント単位の高さ。</span><span class="sxs-lookup"><span data-stu-id="c902f-150">Height in the unit of Points.</span></span> <span data-ttu-id="c902f-151">既定値は null で、イメージの高さが使用されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-151">The default value is null and image height will be respected.</span></span>
          type:
            - number
  - uid: onenote.OneNote.Paragraph.insertImageAsSibling_1
    summary: |-
      <span data-ttu-id="c902f-152">指定された挿入位置にイメージを挿入します。</span><span class="sxs-lookup"><span data-stu-id="c902f-152">Inserts the image at the specified insert location..</span></span>

      <span data-ttu-id="c902f-153">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-153">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)'
    fullName: 'insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - onenote.OneNote.Image
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c902f-154">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="c902f-154">The location of the table relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: base64EncodedImage
          description: <span data-ttu-id="c902f-155">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-155">HTML string to append.</span></span>
          type:
            - string
        - id: width
          description: <span data-ttu-id="c902f-156">省略可能。</span><span class="sxs-lookup"><span data-stu-id="c902f-156">Optional.</span></span> <span data-ttu-id="c902f-157">ポイント単位の幅。</span><span class="sxs-lookup"><span data-stu-id="c902f-157">Width in the unit of Points.</span></span> <span data-ttu-id="c902f-158">既定値は null で、イメージの幅が使用されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-158">The default value is null and image width will be respected.</span></span>
          type:
            - number
        - id: height
          description: <span data-ttu-id="c902f-159">省略可能。</span><span class="sxs-lookup"><span data-stu-id="c902f-159">Optional.</span></span> <span data-ttu-id="c902f-160">ポイント単位の高さ。</span><span class="sxs-lookup"><span data-stu-id="c902f-160">Height in the unit of Points.</span></span> <span data-ttu-id="c902f-161">既定値は null で、イメージの高さが使用されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-161">The default value is null and image height will be respected.</span></span>
          type:
            - number
  - uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
    summary: |-
      <span data-ttu-id="c902f-162">指定された挿入位置に段落テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="c902f-162">Inserts the paragraph text at the specifiec insert location.</span></span>

      <span data-ttu-id="c902f-163">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-163">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRichTextAsSibling(insertLocation, paragraphText)'
    fullName: 'insertRichTextAsSibling(insertLocation, paragraphText)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c902f-164">例</span><span class="sxs-lookup"><span data-stu-id="c902f-164">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertRichTextAsSibling("Before", "Text Appears Before Paragraph");
                      firstParagraph.insertRichTextAsSibling("After", "Text Appears After Paragraph");
                      
                      // Run the command to insert text contents
                      return context.sync();
                  });
          })    
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c902f-165">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="c902f-165">The location of the table relative to the current Paragraph.</span></span>
          type:
            - onenote.OneNote.InsertLocation
        - id: paragraphText
          description: <span data-ttu-id="c902f-166">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-166">HTML string to append.</span></span>
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertRichTextAsSibling_1
    summary: |-
      <span data-ttu-id="c902f-167">指定された挿入位置に段落テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="c902f-167">Inserts the paragraph text at the specifiec insert location.</span></span>

      <span data-ttu-id="c902f-168">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-168">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRichTextAsSibling(insertLocationString, paragraphText)'
    fullName: 'insertRichTextAsSibling(insertLocationString, paragraphText)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c902f-169">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="c902f-169">The location of the table relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: paragraphText
          description: <span data-ttu-id="c902f-170">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-170">HTML string to append.</span></span>
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertTableAsSibling
    summary: |-
      <span data-ttu-id="c902f-171">指定された数の行と列を含む表を現在の段落の前または後に追加します。</span><span class="sxs-lookup"><span data-stu-id="c902f-171">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>

      <span data-ttu-id="c902f-172">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertTableAsSibling(insertLocation, rowCount, columnCount, values)'
    fullName: 'insertTableAsSibling(insertLocation, rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="c902f-173">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="c902f-173">The location of the table relative to the current Paragraph.</span></span>
          type:
            - onenote.OneNote.InsertLocation
        - id: rowCount
          description: <span data-ttu-id="c902f-174">表の行数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-174">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="c902f-175">表の列数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-175">The number of columns in the table.</span></span>
          type:
            - number
        - id: values
          description: <span data-ttu-id="c902f-176">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="c902f-176">Optional 2D array.</span></span> <span data-ttu-id="c902f-177">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-177">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: onenote.OneNote.Paragraph.insertTableAsSibling_1
    summary: |-
      <span data-ttu-id="c902f-178">指定された数の行と列を含む表を現在の段落の前または後に追加します。</span><span class="sxs-lookup"><span data-stu-id="c902f-178">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>

      <span data-ttu-id="c902f-179">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-179">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertTableAsSibling(insertLocationString, rowCount, columnCount, values)'
    fullName: 'insertTableAsSibling(insertLocationString, rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="c902f-180">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="c902f-180">The location of the table relative to the current Paragraph.</span></span>
          type:
            - '"Before" | "After"'
        - id: rowCount
          description: <span data-ttu-id="c902f-181">表の行数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-181">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="c902f-182">表の列数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-182">The number of columns in the table.</span></span>
          type:
            - number
        - id: values
          description: <span data-ttu-id="c902f-183">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="c902f-183">Optional 2D array.</span></span> <span data-ttu-id="c902f-184">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-184">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: onenote.OneNote.Paragraph.load
    summary: <span data-ttu-id="c902f-185">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c902f-185">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c902f-186">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c902f-186">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c902f-187">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="c902f-187">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c902f-188">`load(option?: string | string[]): OneNote.Paragraph`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-188">`load(option?: string | string[]): OneNote.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c902f-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c902f-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c902f-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="c902f-191">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="c902f-191">It is similar to the preceding signature.</span></span> <span data-ttu-id="c902f-192">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-192">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c902f-193">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-193">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c902f-194">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="c902f-194">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.ParagraphLoadOptions
  - uid: onenote.OneNote.Paragraph.load_1
    summary: <span data-ttu-id="c902f-195">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c902f-195">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c902f-196">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c902f-196">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c902f-197">例</span><span class="sxs-lookup"><span data-stu-id="c902f-197">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;
              
              // Queue a command to load the outline property of each pageContent.
              pageContents.load("outline");
                  
              // Get the first PageContent on the page, and then get its Outline.
              var pageContent = pageContents._GetItem(0);
              var paragraphs = pageContent.outline.paragraphs;
                      
              // Queue a command to load the id and type of each paragraph.
              paragraphs.load("id,type");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Write the text.                  
                      $.each(paragraphs.items, function(index, paragraph) {
                          console.log("Paragraph type: " + paragraph.type);
                          console.log("Paragraph ID: " + paragraph.id);
                      });
                  });
          })        
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
          ```javascript
          OneNote.run(function(context) {
              var app = context.application;
              
              // Gets the active outline
              var outline = app.getActiveOutline();
              
              // load nested paragraphs and their types.
              outline.load("paragraphs/type");
              
              return context.sync().then(function () {
                  var paragraphs = outline.paragraphs.items;
                  
                  var promise;
                  // for each nested paragraphs, load tables only
                  for (var i = 0; i < paragraphs.length; i++) {
                      var paragraph = paragraphs[i];
                      if (paragraph.type == "Table") {
                          paragraph.load("table/id");
                          promise =  context.sync().then(function() {
                              console.log(paragraph.table.id);
                          });
                      }
                  }
                  return promise;
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c902f-198">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="c902f-198">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Paragraph.load_2
    summary: <span data-ttu-id="c902f-199">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c902f-199">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c902f-200">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c902f-200">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c902f-201">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c902f-201">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Paragraph.outline
    summary: |-
      <span data-ttu-id="c902f-202">Paragraph を含む Outline オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-202">Gets the Outline object that contains the Paragraph.</span></span> <span data-ttu-id="c902f-203">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-203">Read-only.</span></span>

      <span data-ttu-id="c902f-204">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-204">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: outline
    fullName: outline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly outline: OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
  - uid: onenote.OneNote.Paragraph.paragraphs
    summary: |-
      <span data-ttu-id="c902f-205">この段落の下にある段落のコレクション。</span><span class="sxs-lookup"><span data-stu-id="c902f-205">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="c902f-206">読み取りのみ</span><span class="sxs-lookup"><span data-stu-id="c902f-206">Read only</span></span>

      <span data-ttu-id="c902f-207">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-207">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: OneNote.ParagraphCollection;'
      return:
        type:
          - onenote.OneNote.ParagraphCollection
  - uid: onenote.OneNote.Paragraph.parentParagraph
    summary: |-
      <span data-ttu-id="c902f-208">親の Paragraph オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-208">Gets the parent paragraph object.</span></span> <span data-ttu-id="c902f-209">親の Paragraph が存在しない場合はスローします。</span><span class="sxs-lookup"><span data-stu-id="c902f-209">Throws if a parent paragraph does not exist.</span></span> <span data-ttu-id="c902f-210">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-210">Read-only.</span></span>

      <span data-ttu-id="c902f-211">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-211">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentParagraph
    fullName: parentParagraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentParagraph: OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Paragraph.parentParagraphOrNull
    summary: |-
      <span data-ttu-id="c902f-212">親の Paragraph オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-212">Gets the parent paragraph object.</span></span> <span data-ttu-id="c902f-213">親の Paragraph が存在しない場合は null を返します。</span><span class="sxs-lookup"><span data-stu-id="c902f-213">Returns null if a parent paragraph does not exist.</span></span> <span data-ttu-id="c902f-214">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-214">Read-only.</span></span>

      <span data-ttu-id="c902f-215">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-215">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentParagraphOrNull
    fullName: parentParagraphOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Paragraph.parentTableCell
    summary: |-
      <span data-ttu-id="c902f-216">Paragraph を含む TableCell オブジェクトを取得します (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="c902f-216">Gets the TableCell object that contains the Paragraph if one exists.</span></span> <span data-ttu-id="c902f-217">親が TableCell でない場合は ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="c902f-217">If parent is not a TableCell, throws ItemNotFound.</span></span> <span data-ttu-id="c902f-218">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-218">Read-only.</span></span>

      <span data-ttu-id="c902f-219">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-219">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: OneNote.TableCell;'
      return:
        type:
          - onenote.OneNote.TableCell
  - uid: onenote.OneNote.Paragraph.parentTableCellOrNull
    summary: |-
      <span data-ttu-id="c902f-220">Paragraph を含む TableCell オブジェクトを取得します (存在する場合)。</span><span class="sxs-lookup"><span data-stu-id="c902f-220">Gets the TableCell object that contains the Paragraph if one exists.</span></span> <span data-ttu-id="c902f-221">親が TableCell でない場合は null を返します。</span><span class="sxs-lookup"><span data-stu-id="c902f-221">If parent is not a TableCell, returns null.</span></span> <span data-ttu-id="c902f-222">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-222">Read-only.</span></span>

      <span data-ttu-id="c902f-223">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-223">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNull
    fullName: parentTableCellOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
      return:
        type:
          - onenote.OneNote.TableCell
  - uid: onenote.OneNote.Paragraph.richText
    summary: |-
      <span data-ttu-id="c902f-224">Paragraph 内の RichText オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-224">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="c902f-225">ParagraphType が RichText ではない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="c902f-225">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="c902f-226">読み取り専用</span><span class="sxs-lookup"><span data-stu-id="c902f-226">Read-only</span></span>

      <span data-ttu-id="c902f-227">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-227">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: richText
    fullName: richText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richText: OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
  - uid: onenote.OneNote.Paragraph.set
    summary: '<span data-ttu-id="c902f-228">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-228">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c902f-229">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c902f-229">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c902f-230">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="c902f-230">This method has the following additional signature:</span></span>

      `set(properties: OneNote.Paragraph): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="c902f-231">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c902f-231">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ParagraphUpdateData
        - id: options
          description: <span data-ttu-id="c902f-232">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="c902f-232">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: onenote.OneNote.Paragraph.set_1
    summary: '<span data-ttu-id="c902f-233">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c902f-233">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Paragraph.table
    summary: |-
      <span data-ttu-id="c902f-234">Paragraph 内の Table オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-234">Gets the Table object in the Paragraph.</span></span> <span data-ttu-id="c902f-235">ParagraphType が Table ではない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="c902f-235">Throws an exception if ParagraphType is not Table.</span></span> <span data-ttu-id="c902f-236">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-236">Read-only.</span></span>

      <span data-ttu-id="c902f-237">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-237">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: table
    fullName: table
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly table: OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
  - uid: onenote.OneNote.Paragraph.toJSON
    summary: '<span data-ttu-id="c902f-238">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c902f-238">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c902f-239">.</span><span class="sxs-lookup"><span data-stu-id="c902f-239"></span></span> <span data-ttu-id="c902f-240">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c902f-240"></span></span><!-- --><span data-ttu-id="c902f-241">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の OneNote の Paragraph オブジェクトは API オブジェクトですが、メソッド`toJSON`はプレーンな JavaScript オブジェクト (として型指定されます) を返します。`OneNote.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="c902f-241">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="c902f-242">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="c902f-242">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
      return:
        type:
          - onenote.OneNote.Interfaces.ParagraphData
        description: ''
  - uid: onenote.OneNote.Paragraph.track
    summary: '<span data-ttu-id="c902f-243">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="c902f-243">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="c902f-244">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="c902f-244">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="c902f-245">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="c902f-245">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
  - uid: onenote.OneNote.Paragraph.type
    summary: |-
      <span data-ttu-id="c902f-246">Paragraph オブジェクトの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="c902f-246">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="c902f-247">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c902f-247">Read-only.</span></span>

      <span data-ttu-id="c902f-248">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c902f-248">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
      return:
        type:
          - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
  - uid: onenote.OneNote.Paragraph.untrack
    summary: '<span data-ttu-id="c902f-249">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="c902f-249">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="c902f-250">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="c902f-250">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="c902f-251">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="c902f-251">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="c902f-252">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c902f-252">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''