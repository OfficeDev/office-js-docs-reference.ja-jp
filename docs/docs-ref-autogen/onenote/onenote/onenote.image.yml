### YamlMime:UniversalReference
items:
  - uid: 'onenote!OneNote.Image:class'
    summary: |-
      イメージを表します。 Image は、PageContent オブジェクトまたは Paragraph オブジェクトの直接の子にすることができます。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.Image
    fullName: OneNote.Image
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: onenote!
    children:
      - 'onenote!OneNote.Image#context:member'
      - 'onenote!OneNote.Image#description:member'
      - 'onenote!OneNote.Image#getBase64Image:member(1)'
      - 'onenote!OneNote.Image#height:member'
      - 'onenote!OneNote.Image#hyperlink:member'
      - 'onenote!OneNote.Image#id:member'
      - 'onenote!OneNote.Image#load:member(1)'
      - 'onenote!OneNote.Image#load:member(2)'
      - 'onenote!OneNote.Image#load:member(3)'
      - 'onenote!OneNote.Image#ocrData:member'
      - 'onenote!OneNote.Image#pageContent:member'
      - 'onenote!OneNote.Image#paragraph:member'
      - 'onenote!OneNote.Image#set:member(1)'
      - 'onenote!OneNote.Image#set:member(2)'
      - 'onenote!OneNote.Image#toJSON:member(1)'
      - 'onenote!OneNote.Image#track:member(1)'
      - 'onenote!OneNote.Image#untrack:member(1)'
      - 'onenote!OneNote.Image#width:member'
  - uid: 'onenote!OneNote.Image#context:member'
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'onenote!OneNote.RequestContext:class'
  - uid: 'onenote!OneNote.Image#description:member'
    summary: |-
      Image の説明を取得するか設定します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: description
    fullName: description
    langs:
      - typeScript
    type: property
    syntax:
      content: 'description: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Image#getBase64Image:member(1)'
    summary: |-
      Image の Base64 エンコードのバイナリ形式を取得します。 例: data: image/png; base64, iVBORw0KGgoAAAANSUhEUgAAADIA...

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getBase64Image()
    fullName: getBase64Image()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBase64Image(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'onenote!OneNote.Image#getBase64Image~0:complex'
        description: |-


          #### <a name="examples"></a>例

          ```javascript

          var image = null;
          var imageString;

          OneNote.run(function(ctx){
              // Get the current outline.         
              var outline = ctx.application.getActiveOutline();
              
              // Queue a command to load paragraphs and their types. 
              outline.load("paragraphs/type")
              return ctx.sync().
                  then(function(){
                      for (var i=0; i < outline.paragraphs.items.length; i++)
                      {
                          var paragraph = outline.paragraphs.items[i];
                          if (paragraph.type == "Image")
                          {
                              image = paragraph.image;
                          }
                      }
                  })
                  .then(function(){
                      if (image != null)
                      {
                          imageString = image.getBase64Image();
                          return ctx.sync();
                      }
                  })
                  .then(function(){
                      console.log(imageString);
                  });
          });
          ```
  - uid: 'onenote!OneNote.Image#height:member'
    summary: |-
      Image レイアウトの高さを取得するか設定します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'onenote!OneNote.Image#hyperlink:member'
    summary: |-
      Image のハイパーリンクを取得するか設定します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: hyperlink
    fullName: hyperlink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyperlink: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Image#id:member'
    summary: |-
      Image オブジェクトの ID を取得します。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'onenote!OneNote.Image#load:member(1)'
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): OneNote.Image`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): OneNote.Image`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Image`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.ImageLoadOptions): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'onenote!OneNote.Interfaces.ImageLoadOptions:interface'
  - uid: 'onenote!OneNote.Image#load:member(2)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          OneNote.run(function(ctx){
              // Get the current outline.         
              var outline = ctx.application.getActiveOutline();
              var image = null;
              
              // Queue a command to load paragraphs and their types. 
              outline.load("paragraphs/type")
              return ctx.sync().
                  then(function(){
                      for (var i=0; i < outline.paragraphs.items.length; i++)
                      {
                          var paragraph = outline.paragraphs.items[i];
                          if (paragraph.type == "Image")
                          {
                              image = paragraph.image;
                          }
                      }
                  })
                  .then(function(){
                      if (image != null)
                      {
                          // load every properties and relationships
                          ctx.load(image);
                          return ctx.sync();
                      }
                  })
                  .then(function(){
                      if (image != null)
                      {                   
                          console.log("image " + image.id + " width is " + image.width + " height is " + image.height);
                          console.log("description: " + image.description);                   
                          console.log("hyperlink: " + image.hyperlink);
                      }
                  });
          });
          ```
          ```javascript
          var image = null;

          OneNote.run(function(ctx){
              // Get the current outline.
              var outline = ctx.application.getActiveOutline();

              // Queue a command to load paragraphs and their types.
              outline.load("paragraphs")
              return ctx.sync().
                  then(function(){
                      for (var i=0; i < outline.paragraphs.items.length; i++)
                      {
                          var paragraph = outline.paragraphs.items[i];
                          if (paragraph.type == "Image")
                          {
                              image = paragraph.image;
                          }
                      }
                      if (image != null)
                      {
                         image.load("ocrData");
                      }
                      return ctx.sync();
                  })
                  .then(function(){
                      console.log(image.ocrData);
                  });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx){
              // Get the current outline.         
              var outline = ctx.application.getActiveOutline();
              var searchedParagraph = null;
              
              // Queue a command to load paragraphs and their types. 
              outline.load("paragraphs/type")
              return ctx.sync().
                  then(function() {
                      for (var i=0; i < outline.paragraphs.items.length; i++)
                      {
                          var paragraph = outline.paragraphs.items[i];
                          if (paragraph.type == "Image")
                          {
                              searchedParagraph = paragraph;
                              break;
                          }
                      }
                  })
                  .then(function() {
                      if (searchedParagraph != null)
                      {
                          // load every properties and relationships
                          searchedParagraph.image.load('paragraph');
                          return ctx.sync();
                      }
                  })
                  .then(function() {
                      if (searchedParagraph != null)
                      {                   
                          if (searchedParagraph.id != searchedParagraph.image.paragraph.id)
                          {
                              console.log("id must match");
                          }
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'onenote!OneNote.Image#load:member(3)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'onenote!OneNote.Image#ocrData:member'
    summary: |-
      OCR テキストや言語など、OCR (光学式文字認識) で取得されたこの画像のデータを取得します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: ocrData
    fullName: ocrData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly ocrData: OneNote.ImageOcrData;'
      return:
        type:
          - 'onenote!OneNote.ImageOcrData:interface'
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          var image = null;

          OneNote.run(function(ctx){
              // Get the current outline.
              var outline = ctx.application.getActiveOutline();

              // Queue a command to load paragraphs and their types.
              outline.load("paragraphs")
              return ctx.sync().
                  then(function(){
                      for (var i=0; i < outline.paragraphs.items.length; i++)
                      {
                          var paragraph = outline.paragraphs.items[i];
                          if (paragraph.type == "Image")
                          {
                              image = paragraph.image;
                          }
                      }
                      if (image != null)
                      {
                         image.load("ocrData");
                      }
                      return ctx.sync();
                  })
                  .then(function(){
                      
                      // Log ocrText and ocrLanguageId
                      console.log(image.ocrData.ocrText);
                      console.log(image.ocrData.ocrLanguageId);
                  });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'onenote!OneNote.Image#pageContent:member'
    summary: |-
      Image を含む PageContent オブジェクトを取得します。 Image が PageContent の直接の子ではない場合はスローします。 このオブジェクトは、ページの Image の位置を定義します。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: pageContent
    fullName: pageContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pageContent: OneNote.PageContent;'
      return:
        type:
          - 'onenote!OneNote.PageContent:class'
  - uid: 'onenote!OneNote.Image#paragraph:member'
    summary: |-
      Image を含む Paragraph オブジェクトを取得します。 Image が Paragraph の直接の子ではない場合はスローします。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - 'onenote!OneNote.Paragraph:class'
  - uid: 'onenote!OneNote.Image#set:member(1)'
    summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
    remarks: |-
      このメソッドには、次の追加のシグネチャがあります。

      `set(properties: OneNote.Image): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ImageUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
          type:
            - 'onenote!OneNote.Interfaces.ImageUpdateData:interface'
        - id: options
          description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'onenote!OneNote.Image#set:member(2)'
    summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Image): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'onenote!OneNote.Image:class'
  - uid: 'onenote!OneNote.Image#toJSON:member(1)'
    summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の OneNote の画像オブジェクトは API オブジェクトであり、 `toJSON` メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`OneNote.Interfaces.ImageData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ImageData;'
      return:
        type:
          - 'onenote!OneNote.Interfaces.ImageData:interface'
        description: ''
  - uid: 'onenote!OneNote.Image#track:member(1)'
    summary: ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。 これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。 ".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: ''
  - uid: 'onenote!OneNote.Image#untrack:member(1)'
    summary: 前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。 これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。 追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。 メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Image;'
      return:
        type:
          - 'onenote!OneNote.Image:class'
        description: ''
  - uid: 'onenote!OneNote.Image#width:member'
    summary: |-
      Image レイアウトの幅を取得するか設定します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'onenote!OneNote.RequestContext:class'
    name: RequestContext
  - uid: 'onenote!OneNote.Image#getBase64Image~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'onenote!OneNote.Image:class'
    name: OneNote.Image
  - uid: 'onenote!OneNote.Interfaces.ImageLoadOptions:interface'
    name: OneNote.Interfaces.ImageLoadOptions
  - uid: 'onenote!OneNote.ImageOcrData:interface'
    name: OneNote.ImageOcrData
  - uid: 'onenote!OneNote.PageContent:class'
    name: OneNote.PageContent
  - uid: 'onenote!OneNote.Paragraph:class'
    name: OneNote.Paragraph
  - uid: 'onenote!OneNote.Interfaces.ImageUpdateData:interface'
    name: Interfaces.ImageUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'onenote!OneNote.Interfaces.ImageData:interface'
    name: OneNote.Interfaces.ImageData