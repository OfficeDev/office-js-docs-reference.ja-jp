### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.SectionGroup
    summary: |-
      OneNote セクション グループを表します。 セクション グループに含めることができるのは、セクションとその他のセクション グループです。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.SectionGroup
    fullName: OneNote.SectionGroup
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.SectionGroup.addSection
      - onenote.OneNote.SectionGroup.addSectionGroup
      - onenote.OneNote.SectionGroup.clientUrl
      - onenote.OneNote.SectionGroup.context
      - onenote.OneNote.SectionGroup.getRestApiId
      - onenote.OneNote.SectionGroup.id
      - onenote.OneNote.SectionGroup.load
      - onenote.OneNote.SectionGroup.load_1
      - onenote.OneNote.SectionGroup.load_2
      - onenote.OneNote.SectionGroup.name
      - onenote.OneNote.SectionGroup.notebook
      - onenote.OneNote.SectionGroup.parentSectionGroup
      - onenote.OneNote.SectionGroup.parentSectionGroupOrNull
      - onenote.OneNote.SectionGroup.sectionGroups
      - onenote.OneNote.SectionGroup.sections
      - onenote.OneNote.SectionGroup.toJSON
      - onenote.OneNote.SectionGroup.track
      - onenote.OneNote.SectionGroup.untrack
  - uid: onenote.OneNote.SectionGroup.addSection
    summary: |-
      セクション グループの末尾に新しいセクションを追加します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: addSection(title)
    fullName: addSection(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSection(title: string): OneNote.Section;'
      return:
        type:
          - onenote.OneNote.Section
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          OneNote.run(function (context) {

              // Get the section groups that are direct children of the current notebook.
              var sectionGroups = context.application.getActiveNotebook().sectionGroups;
              
              // Queue a command to load the section groups.
              // For best performance, request specific properties.
              sectionGroups.load("id");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      
                      // Add a section to each section group.
                      $.each(sectionGroups.items, function(index, sectionGroup) {
                          sectionGroup.addSection("Agenda");
                      });
                      
                      // Run the queued commands.
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: title
          description: 新しいセクションの名前を指定します。
          type:
            - string
  - uid: onenote.OneNote.SectionGroup.addSectionGroup
    summary: |-
      この sectionGroup の末尾に新しいセクション グループを追加します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: addSectionGroup(name)
    fullName: addSectionGroup(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSectionGroup(name: string): OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          OneNote.run(function (context) {
              var sectionGroup;
              var nestedSectionGroup;

              // Gets the active notebook.
              var notebook = context.application.getActiveNotebook();

              // Queue a command to add a new section group.
              var sectionGroups = notebook.sectionGroups;

              // Queue a command to load the new section group.
              sectionGroups.load();

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function(){
                      sectionGroup = sectionGroups.items[0];
                      sectionGroup.load();
                      return context.sync();
                  })
                  .then(function(){
                      nestedSectionGroup = sectionGroup.addSectionGroup("Sample nested section group");
                      nestedSectionGroup.load();
                      return context.sync();
                  })
                  .then(function() {
                      console.log("New nested section group name is " + nestedSectionGroup.name);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: name
          description: 新しいセクションの名前を指定します。
          type:
            - string
  - uid: onenote.OneNote.SectionGroup.clientUrl
    summary: |-
      セクション グループのクライアント url です。 読み取りのみ

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: clientUrl
    fullName: clientUrl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly clientUrl: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.SectionGroup.context
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.SectionGroup.getRestApiId
    summary: |-
      REST API ID を取得します。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getRestApiId()
    fullName: getRestApiId()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
  - uid: onenote.OneNote.SectionGroup.id
    summary: |-
      セクション グループの ID を取得します。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.SectionGroup.load
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): OneNote.SectionGroup`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): OneNote.SectionGroup`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.SectionGroup`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.SectionGroupLoadOptions): OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.SectionGroupLoadOptions
  - uid: onenote.OneNote.SectionGroup.load_1
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the parent section group that contains the current section.
              var sectionGroup = context.application.getActiveSection().parentSectionGroup;
                      
              // Queue a command to load the section group. 
              // For best performance, request specific properties.           
              sectionGroup.load("id,name");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Write the properties.
                      console.log("Section group name: " + sectionGroup.name);
                      console.log("Section group ID: " + sectionGroup.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {
                  
              // Get the parent section group that contains the current section.
              var sectionGroup = context.application.getActiveSection().parentSectionGroup;
                      
              // Queue a command to load the section group with the specified properties.           
              sectionGroup.load("name,notebook/name"); 
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Write the properties.
                      console.log("Section group name: " + sectionGroup.name);
                      console.log("Parent notebook name: " + sectionGroup.notebook.name);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {

              // Get the section groups that are direct children of the current notebook.
              var sectionGroups = context.application.getActiveNotebook().sectionGroups;

              // Queue a command to load the section groups.
              // For best performance, request specific properties.
              sectionGroups.load("name");
              
              // Get the child section groups of the first section group in the notebook.
              var nestedSectionGroups = sectionGroups._GetItem(0).sectionGroups;
              
              // Queue a command to load the ID and name properties of the child section groups.
              nestedSectionGroups.load("id,name");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      
                      // Write the properties for each child section group.
                      $.each(nestedSectionGroups.items, function(index, sectionGroup) {
                          console.log("Section group name: " + sectionGroup.name);  
                          console.log("Section group ID: " + sectionGroup.id);  
                      });
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function (context) {

              // Get the sections that are siblings of the current section.
              var sections = context.application.getActiveSection().parentSectionGroup.sections;

              // Queue a command to load the section groups.
              // For best performance, request specific properties.
              sections.load("id,name");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function() {
                      
                      // Write the properties for each section.
                      $.each(sections.items, function(index, section) {
                          console.log("Section name: " + section.name);  
                          console.log("Section ID: " + section.id);  
                      });
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.SectionGroup.load_2
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.SectionGroup.name
    summary: |-
      セクション グループの名前を取得します。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.SectionGroup.notebook
    summary: |-
      セクション グループを含むノートブックを取得します。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: notebook
    fullName: notebook
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly notebook: OneNote.Notebook;'
      return:
        type:
          - onenote.OneNote.Notebook
  - uid: onenote.OneNote.SectionGroup.parentSectionGroup
    summary: |-
      セクション グループを含むセクション グループを取得します。 セクション グループがノートブックの直接の子である場合は ItemNotFound をスローします。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentSectionGroup
    fullName: parentSectionGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroup: OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
  - uid: onenote.OneNote.SectionGroup.parentSectionGroupOrNull
    summary: |-
      セクション グループを含むセクション グループを取得します。 セクション グループがノートブックの直接の子である場合は null を返します。 読み取り専用です。

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentSectionGroupOrNull
    fullName: parentSectionGroupOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionGroupOrNull: OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
  - uid: onenote.OneNote.SectionGroup.sectionGroups
    summary: |-
      セクション グループ内のセクション グループのコレクションです。 読み取りのみ

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: sectionGroups
    fullName: sectionGroups
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sectionGroups: OneNote.SectionGroupCollection;'
      return:
        type:
          - onenote.OneNote.SectionGroupCollection
  - uid: onenote.OneNote.SectionGroup.sections
    summary: |-
      セクション グループ内のセクションのコレクションです。 読み取りのみ

      \[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: sections
    fullName: sections
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sections: OneNote.SectionCollection;'
      return:
        type:
          - onenote.OneNote.SectionCollection
  - uid: onenote.OneNote.SectionGroup.toJSON
    summary: API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の OneNote の SectionGroup オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`OneNote.Interfaces.SectionGroupData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.SectionGroupData;'
      return:
        type:
          - onenote.OneNote.Interfaces.SectionGroupData
        description: ''
  - uid: onenote.OneNote.SectionGroup.track
    summary: ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。 これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。 ".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
        description: ''
  - uid: onenote.OneNote.SectionGroup.untrack
    summary: 前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。 これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。 追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。 メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.SectionGroup;'
      return:
        type:
          - onenote.OneNote.SectionGroup
        description: ''