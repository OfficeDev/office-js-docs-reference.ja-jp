### YamlMime:UniversalReference
ms.openlocfilehash: 9a6e59603f2a27f3b0b9f35931fe253c07c89d3a
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30093274"
items:
- uid: onenote.OneNote.Paragraph
  summary: >-
    <span data-ttu-id="d8e8f-p101">ページに表示されるコンテンツのコンテナー。Paragraph に含めることができるのは、コンテンツの ParagraphType の種類のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p101">A container for the visible content on a page. A Paragraph can contain any one ParagraphType type of content.</span></span>


    <span data-ttu-id="d8e8f-103">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-103">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Paragraph
  fullName: OneNote.Paragraph
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Paragraph.addNoteTag
  - onenote.OneNote.Paragraph.addNoteTag_1
  - onenote.OneNote.Paragraph.context
  - onenote.OneNote.Paragraph.delete
  - onenote.OneNote.Paragraph.getParagraphInfo
  - onenote.OneNote.Paragraph.id
  - onenote.OneNote.Paragraph.image
  - onenote.OneNote.Paragraph.inkWords
  - onenote.OneNote.Paragraph.insertHtmlAsSibling
  - onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  - onenote.OneNote.Paragraph.insertImageAsSibling
  - onenote.OneNote.Paragraph.insertImageAsSibling_1
  - onenote.OneNote.Paragraph.insertRichTextAsSibling
  - onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  - onenote.OneNote.Paragraph.insertTableAsSibling
  - onenote.OneNote.Paragraph.insertTableAsSibling_1
  - onenote.OneNote.Paragraph.load
  - onenote.OneNote.Paragraph.load_1
  - onenote.OneNote.Paragraph.load_2
  - onenote.OneNote.Paragraph.outline
  - onenote.OneNote.Paragraph.paragraphs
  - onenote.OneNote.Paragraph.parentParagraph
  - onenote.OneNote.Paragraph.parentParagraphOrNull
  - onenote.OneNote.Paragraph.parentTableCell
  - onenote.OneNote.Paragraph.parentTableCellOrNull
  - onenote.OneNote.Paragraph.richText
  - onenote.OneNote.Paragraph.set
  - onenote.OneNote.Paragraph.set_1
  - onenote.OneNote.Paragraph.table
  - onenote.OneNote.Paragraph.toJSON
  - onenote.OneNote.Paragraph.track
  - onenote.OneNote.Paragraph.type
  - onenote.OneNote.Paragraph.untrack
- uid: onenote.OneNote.Paragraph.addNoteTag
  summary: >-
    <span data-ttu-id="d8e8f-104">段落に [メモ] タグを追加します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-104">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="d8e8f-105">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(type, status)
  fullName: addNoteTag(type, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: type
      description: <span data-ttu-id="d8e8f-106">メモタグの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-106">The type of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagType
    - id: status
      description: <span data-ttu-id="d8e8f-107">メモシールの状態。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-107">The status of the NoteTag.</span></span>
      type:
      - onenote.OneNote.NoteTagStatus
- uid: onenote.OneNote.Paragraph.addNoteTag_1
  summary: >-
    <span data-ttu-id="d8e8f-108">段落に [メモ] タグを追加します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-108">Add NoteTag to the paragraph.</span></span>


    <span data-ttu-id="d8e8f-109">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-109">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: addNoteTag(typeString, status)
  fullName: addNoteTag(typeString, status)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
    return:
      type:
      - onenote.OneNote.NoteTag
      description: ''
    parameters:
    - id: typeString
      description: <span data-ttu-id="d8e8f-110">メモタグの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-110">The type of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"ToDo\" | \"Important\" | \"Question\" | \"Contact\" | \"Address\" | \"PhoneNumber\" | \"Website\" | \"Idea\" | \"Critical\" | \"ToDoPriority1\" | \"ToDoPriority2\""
    - id: status
      description: <span data-ttu-id="d8e8f-111">メモシールの状態。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-111">The status of the NoteTag.</span></span>
      type:
      - "\"Unknown\" | \"Normal\" | \"Completed\" | \"Disabled\" | \"OutlookTask\" | \"TaskNotSyncedYet\" | \"TaskRemoved\""
- uid: onenote.OneNote.Paragraph.context
  summary: <span data-ttu-id="d8e8f-112">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-112">The request context associated with the object.</span></span> <span data-ttu-id="d8e8f-113">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-113">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Paragraph.delete
  summary: >-
    <span data-ttu-id="d8e8f-114">段落を削除します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-114">Deletes the paragraph</span></span>


    <span data-ttu-id="d8e8f-115">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d8e8f-116\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d8e8f-116\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Paragraph.getParagraphInfo
  summary: >-
    <span data-ttu-id="d8e8f-117">段落のリスト情報を取得する</span><span class="sxs-lookup"><span data-stu-id="d8e8f-117">Get list information of paragraph</span></span>


    <span data-ttu-id="d8e8f-118">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-118">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getParagraphInfo()
  fullName: getParagraphInfo()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type:
      - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
      description: ''
- uid: onenote.OneNote.Paragraph.id
  summary: >-
    <span data-ttu-id="d8e8f-p103">Paragraph オブジェクトの ID を取得します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p103">Gets the ID of the Paragraph object. Read-only.</span></span>


    <span data-ttu-id="d8e8f-121">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Paragraph.image
  summary: >-
    <span data-ttu-id="d8e8f-p104">Paragraph 内の Image オブジェクトを取得します。ParagraphType が Image ではない場合は例外をスローします。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p104">Gets the Image object in the Paragraph. Throws an exception if ParagraphType is not Image. Read-only.</span></span>


    <span data-ttu-id="d8e8f-125">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: image
  fullName: image
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type:
      - OneNote.Image
- uid: onenote.OneNote.Paragraph.inkWords
  summary: >-
    <span data-ttu-id="d8e8f-p105">Paragraph 内のインク コレクションを取得します。ParagraphType が Ink ではない場合は例外をスローします。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p105">Gets the Ink collection in the Paragraph. Throws an exception if ParagraphType is not Ink. Read-only.</span></span>


    <span data-ttu-id="d8e8f-129">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: inkWords
  fullName: inkWords
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type:
      - onenote.OneNote.InkWordCollection
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
  summary: >-
    <span data-ttu-id="d8e8f-130">指定された HTML コンテンツを挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-130">Inserts the specified HTML content</span></span>


    <span data-ttu-id="d8e8f-131">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-131">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocation, html)
  fullName: insertHtmlAsSibling(insertLocation, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d8e8f-132\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d8e8f-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="d8e8f-133">現在の Paragraph を基準にした新しいコンテンツの場所です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-133">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: html
      description: <span data-ttu-id="d8e8f-134">コンテンツの視覚表示を記述する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-134">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="d8e8f-135">OneNote アドインの JavaScript API については、「[サポートされている HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) 」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-135">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertHtmlAsSibling_1
  summary: >-
    <span data-ttu-id="d8e8f-136">指定された HTML コンテンツを挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-136">Inserts the specified HTML content</span></span>


    <span data-ttu-id="d8e8f-137">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertHtmlAsSibling(insertLocationString, html)
  fullName: insertHtmlAsSibling(insertLocationString, html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="d8e8f-138">現在の Paragraph を基準にした新しいコンテンツの場所です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-138">The location of new contents relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: html
      description: <span data-ttu-id="d8e8f-139">コンテンツの視覚表示を記述する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-139">An HTML string that describes the visual presentation of the content.</span></span> <span data-ttu-id="d8e8f-140">OneNote アドインの JavaScript API については、「[サポートされている HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) 」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-140">See [Supported HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) for the OneNote add-ins JavaScript API.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertImageAsSibling
  summary: >-
    <span data-ttu-id="d8e8f-141">指定された挿入位置にイメージを挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-141">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="d8e8f-142">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - OneNote.Image
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d8e8f-143\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d8e8f-143\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="d8e8f-144">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-144">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: base64EncodedImage
      description: <span data-ttu-id="d8e8f-145">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-145">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="d8e8f-p108">省略可能。ポイント単位の幅。既定値は null で、イメージの幅が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p108">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="d8e8f-p109">省略可能。ポイント単位の高さ。既定値は null で、イメージの高さが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p109">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertImageAsSibling_1
  summary: >-
    <span data-ttu-id="d8e8f-152">指定された挿入位置にイメージを挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-152">Inserts the image at the specified insert location..</span></span>


    <span data-ttu-id="d8e8f-153">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-153">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  fullName: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    return:
      type:
      - OneNote.Image
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="d8e8f-154">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-154">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: base64EncodedImage
      description: <span data-ttu-id="d8e8f-155">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-155">HTML string to append.</span></span>
      type:
      - string
    - id: width
      description: <span data-ttu-id="d8e8f-p110">省略可能。ポイント単位の幅。既定値は null で、イメージの幅が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p110">Optional. Width in the unit of Points. The default value is null and image width will be respected.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="d8e8f-p111">省略可能。ポイント単位の高さ。既定値は null で、イメージの高さが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p111">Optional. Height in the unit of Points. The default value is null and image height will be respected.</span></span>
      type:
      - number
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
  summary: >-
    <span data-ttu-id="d8e8f-162">指定された挿入位置に段落テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-162">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="d8e8f-163">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-163">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocation, paragraphText)
  fullName: insertRichTextAsSibling(insertLocation, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d8e8f-164\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d8e8f-164\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="d8e8f-165">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-165">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: paragraphText
      description: <span data-ttu-id="d8e8f-166">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-166">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertRichTextAsSibling_1
  summary: >-
    <span data-ttu-id="d8e8f-167">指定された挿入位置に段落テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-167">Inserts the paragraph text at the specifiec insert location.</span></span>


    <span data-ttu-id="d8e8f-168">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-168">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRichTextAsSibling(insertLocationString, paragraphText)
  fullName: insertRichTextAsSibling(insertLocationString, paragraphText)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="d8e8f-169">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-169">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: paragraphText
      description: <span data-ttu-id="d8e8f-170">追加する HTML 文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-170">HTML string to append.</span></span>
      type:
      - string
- uid: onenote.OneNote.Paragraph.insertTableAsSibling
  summary: >-
    <span data-ttu-id="d8e8f-171">指定された数の行と列を含む表を現在の段落の前または後に追加します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-171">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="d8e8f-172">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-172">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="d8e8f-173">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-173">The location of the table relative to the current Paragraph.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: rowCount
      description: <span data-ttu-id="d8e8f-174">表の行数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-174">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="d8e8f-175">表の列数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-175">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="d8e8f-176">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-176">Optional 2D array.</span></span> <span data-ttu-id="d8e8f-177">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-177">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.insertTableAsSibling_1
  summary: >-
    <span data-ttu-id="d8e8f-178">指定された数の行と列を含む表を現在の段落の前または後に追加します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-178">Adds a table with the specified number of rows and columns before or after the current paragraph.</span></span>


    <span data-ttu-id="d8e8f-179">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-179">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  fullName: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: insertLocationString
      description: <span data-ttu-id="d8e8f-180">現在の Paragraph を基準にした表の位置。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-180">The location of the table relative to the current Paragraph.</span></span>
      type:
      - "\"Before\" | \"After\""
    - id: rowCount
      description: <span data-ttu-id="d8e8f-181">表の行数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-181">The number of rows in the table.</span></span>
      type:
      - number
    - id: columnCount
      description: <span data-ttu-id="d8e8f-182">表の列数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-182">The number of columns in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="d8e8f-183">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-183">Optional 2D array.</span></span> <span data-ttu-id="d8e8f-184">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-184">Cells are filled if the corresponding strings are specified in the array.</span></span>
      type:
      - string[][]
- uid: onenote.OneNote.Paragraph.load
  summary: <span data-ttu-id="d8e8f-185">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-185">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d8e8f-186">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-186">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d8e8f-187">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-187">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d8e8f-188">`load(option?: string | string[]): OneNote.Paragraph`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-188">`load(option?: string | string[]): OneNote.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d8e8f-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-189">`load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d8e8f-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-190">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="d8e8f-191">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-191">It is similar to the preceding signature.</span></span> <span data-ttu-id="d8e8f-192">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-192">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d8e8f-193">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-193">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d8e8f-194">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-194">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - onenote.OneNote.Interfaces.ParagraphLoadOptions
- uid: onenote.OneNote.Paragraph.load_1
  summary: <span data-ttu-id="d8e8f-195">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-195">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d8e8f-196">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-196">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d8e8f-197\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d8e8f-197\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d8e8f-198">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-198">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Paragraph.load_2
  summary: <span data-ttu-id="d8e8f-199">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-199">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d8e8f-200">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-200">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="d8e8f-201">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-201">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Paragraph.outline
  summary: >-
    <span data-ttu-id="d8e8f-p118">Paragraph を含む Outline オブジェクトを取得します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p118">Gets the Outline object that contains the Paragraph. Read-only.</span></span>


    <span data-ttu-id="d8e8f-204">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-204">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: outline
  fullName: outline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
- uid: onenote.OneNote.Paragraph.paragraphs
  summary: >-
    <span data-ttu-id="d8e8f-205">この段落の下にある段落のコレクション。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-205">The collection of paragraphs under this paragraph.</span></span> <span data-ttu-id="d8e8f-206">読み取り専用</span><span class="sxs-lookup"><span data-stu-id="d8e8f-206">Read only</span></span>


    <span data-ttu-id="d8e8f-207">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-207">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraphs
  fullName: paragraphs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
- uid: onenote.OneNote.Paragraph.parentParagraph
  summary: >-
    <span data-ttu-id="d8e8f-p120">親の Paragraph オブジェクトを取得します。親の Paragraph が存在しない場合はスローします。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p120">Gets the parent paragraph object. Throws if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="d8e8f-211">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-211">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraph
  fullName: parentParagraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentParagraphOrNull
  summary: >-
    <span data-ttu-id="d8e8f-p121">親の Paragraph オブジェクトを取得します。親の Paragraph が存在しない場合は null を返します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p121">Gets the parent paragraph object. Returns null if a parent paragraph does not exist. Read-only.</span></span>


    <span data-ttu-id="d8e8f-215">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-215">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentParagraphOrNull
  fullName: parentParagraphOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.parentTableCell
  summary: >-
    <span data-ttu-id="d8e8f-p122">Paragraph を含む TableCell オブジェクトを取得します (存在する場合)。親が TableCell でない場合は ItemNotFound をスローします。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p122">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, throws ItemNotFound. Read-only.</span></span>


    <span data-ttu-id="d8e8f-219">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-219">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCell
  fullName: parentTableCell
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.parentTableCellOrNull
  summary: >-
    <span data-ttu-id="d8e8f-p123">Paragraph を含む TableCell オブジェクトを取得します (存在する場合)。親が TableCell でない場合は null を返します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p123">Gets the TableCell object that contains the Paragraph if one exists. If parent is not a TableCell, returns null. Read-only.</span></span>


    <span data-ttu-id="d8e8f-223">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-223">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTableCellOrNull
  fullName: parentTableCellOrNull
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
- uid: onenote.OneNote.Paragraph.richText
  summary: >-
    <span data-ttu-id="d8e8f-224">Paragraph 内の RichText オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-224">Gets the RichText object in the Paragraph.</span></span> <span data-ttu-id="d8e8f-225">ParagraphType が RichText ではない場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-225">Throws an exception if ParagraphType is not RichText.</span></span> <span data-ttu-id="d8e8f-226">読み取り専用</span><span class="sxs-lookup"><span data-stu-id="d8e8f-226">Read-only</span></span>


    <span data-ttu-id="d8e8f-227">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-227">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: richText
  fullName: richText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type:
      - onenote.OneNote.RichText
- uid: onenote.OneNote.Paragraph.set
  summary: <span data-ttu-id="d8e8f-228">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-228">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d8e8f-229">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-229">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="d8e8f-230">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-230">This method has the following additional signature:</span></span>


    `set(properties: OneNote.Paragraph): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="d8e8f-231">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-231">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ParagraphUpdateData
    - id: options
      description: <span data-ttu-id="d8e8f-232">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-232">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: onenote.OneNote.Paragraph.set_1
  summary: <span data-ttu-id="d8e8f-233">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-233">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: OneNote.Paragraph): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Paragraph.table
  summary: >-
    <span data-ttu-id="d8e8f-p126">Paragraph 内の Table オブジェクトを取得します。ParagraphType が Table ではない場合は例外をスローします。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-p126">Gets the Table object in the Paragraph. Throws an exception if ParagraphType is not Table. Read-only.</span></span>


    <span data-ttu-id="d8e8f-237">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-237">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: table
  fullName: table
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.Paragraph.toJSON
  summary: <span data-ttu-id="d8e8f-238">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-238">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d8e8f-239">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の OneNote の Paragraph オブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、元のオブジェクトから`OneNote.Interfaces.ParagraphData` <!-- -->読み込まれた子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-239">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ParagraphData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphData
      description: ''
- uid: onenote.OneNote.Paragraph.track
  summary: <span data-ttu-id="d8e8f-240">ドキュメント内の周囲の変更に基づいて自動調整するオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-240">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="d8e8f-241">この呼び出しは、コンテキストの省略形です。追加 (thisObject)。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-241">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="d8e8f-242">このオブジェクトを "sync" という呼び出しの間で使用していて、プロパティを設定するとき、またはオブジェクトでメソッドを呼び出したときに "InvalidObjectPath" エラーが発生する場合は、オブジェクトを追跡対象オブジェクトに追加する必要があります。オブジェクトが最初に作成されたときのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-242">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Paragraph.type
  summary: >-
    <span data-ttu-id="d8e8f-243">Paragraph オブジェクトの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-243">Gets the type of the Paragraph object.</span></span> <span data-ttu-id="d8e8f-244">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-244">Read-only.</span></span>


    <span data-ttu-id="d8e8f-245">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8e8f-245">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type:
      - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
- uid: onenote.OneNote.Paragraph.untrack
  summary: <span data-ttu-id="d8e8f-246">このオブジェクトが以前に追跡されている場合は、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-246">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="d8e8f-247">この呼び出しは、コンテキストの短縮形です。 remove (thisObject)。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-247">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="d8e8f-248">追跡対象のオブジェクトの数が多いとホストアプリケーションの処理速度が低下するので、追加したオブジェクトはすべて使用した後で解放してください。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-248">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="d8e8f-249">メモリリリースを有効にするには、「context. sync ()」を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d8e8f-249">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
