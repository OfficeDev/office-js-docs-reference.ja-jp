### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Application
    summary: |-
      <span data-ttu-id="880a7-101">グローバルにアドレス可能な OneNote オブジェクト (ノートブック、アクティブなノートブック、アクティブなセクションなど) すべてを含む最上位のオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="880a7-101">Represents the top-level object that contains all globally addressable OneNote objects such as notebooks, the active notebook, and the active section.</span></span>

      <span data-ttu-id="880a7-102">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Application
    fullName: OneNote.Application
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.Application.context
      - onenote.OneNote.Application.getActiveNotebook
      - onenote.OneNote.Application.getActiveNotebookOrNull
      - onenote.OneNote.Application.getActiveOutline
      - onenote.OneNote.Application.getActiveOutlineOrNull
      - onenote.OneNote.Application.getActivePage
      - onenote.OneNote.Application.getActivePageOrNull
      - onenote.OneNote.Application.getActiveParagraph
      - onenote.OneNote.Application.getActiveParagraphOrNull
      - onenote.OneNote.Application.getActiveSection
      - onenote.OneNote.Application.getActiveSectionOrNull
      - onenote.OneNote.Application.getWindowSize
      - onenote.OneNote.Application.insertHtmlAtCurrentPosition
      - onenote.OneNote.Application.isViewingDeletedNotes
      - onenote.OneNote.Application.load
      - onenote.OneNote.Application.load_1
      - onenote.OneNote.Application.load_2
      - onenote.OneNote.Application.navigateToPage
      - onenote.OneNote.Application.navigateToPageWithClientUrl
      - onenote.OneNote.Application.notebooks
      - onenote.OneNote.Application.toJSON
  - uid: onenote.OneNote.Application.context
    summary: <span data-ttu-id="880a7-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="880a7-103">The request context associated with the object.</span></span> <span data-ttu-id="880a7-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="880a7-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.Application.getActiveNotebook
    summary: |-
      <span data-ttu-id="880a7-105">存在する場合はアクティブなノートブックを取得します。</span><span class="sxs-lookup"><span data-stu-id="880a7-105">Gets the active notebook if one exists.</span></span> <span data-ttu-id="880a7-106">アクティブなノートブックがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="880a7-106">If no notebook is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="880a7-107">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveNotebook()
    fullName: getActiveNotebook()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveNotebook(): OneNote.Notebook;'
      return:
        type:
          - onenote.OneNote.Notebook
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-108">例</span><span class="sxs-lookup"><span data-stu-id="880a7-108">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active notebook.
              var notebook = context.application.getActiveNotebook();
                      
              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Notebook name: " + notebook.name);
                      console.log("Notebook ID: " + notebook.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveNotebookOrNull
    summary: |-
      <span data-ttu-id="880a7-109">存在する場合はアクティブなノートブックを取得します。</span><span class="sxs-lookup"><span data-stu-id="880a7-109">Gets the active notebook if one exists.</span></span> <span data-ttu-id="880a7-110">アクティブなノートブックがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="880a7-110">If no notebook is active, returns null.</span></span>

      <span data-ttu-id="880a7-111">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-111">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveNotebookOrNull()
    fullName: getActiveNotebookOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveNotebookOrNull(): OneNote.Notebook;'
      return:
        type:
          - onenote.OneNote.Notebook
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-112">例</span><span class="sxs-lookup"><span data-stu-id="880a7-112">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active notebook.
              var notebook = context.application.getActiveNotebookOrNull();

              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('id,name');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // check if active notebook is set.
                      if (!notebook.isNull) {
                          console.log("Notebook name: " + notebook.name);
                          console.log("Notebook ID: " + notebook.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveOutline
    summary: |-
      <span data-ttu-id="880a7-113">存在する場合はアクティブなアウトラインを取得します。アクティブなアウトラインがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="880a7-113">Gets the active outline if one exists, If no outline is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="880a7-114">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveOutline()
    fullName: getActiveOutline()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveOutline(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-115">例</span><span class="sxs-lookup"><span data-stu-id="880a7-115">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // get active outline.
              var outline = context.application.getActiveOutline();

              // Queue a command to load the id of the outline.         
              outline.load('id');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Show some properties.
                      console.log("outline id: " + outline.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveOutlineOrNull
    summary: |-
      <span data-ttu-id="880a7-116">存在する場合はアクティブなアウトラインを取得します。アクティブなアウトラインがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="880a7-116">Gets the active outline if one exists, otherwise returns null.</span></span>

      <span data-ttu-id="880a7-117">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveOutlineOrNull()
    fullName: getActiveOutlineOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveOutlineOrNull(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-118">例</span><span class="sxs-lookup"><span data-stu-id="880a7-118">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // get active outline.
              var outline = context.application.getActiveOutlineOrNull();

              // Queue a command to load the id of the outline.         
              outline.load('id');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      if (!outline.isNull) {
                          console.log("outline id: " + outline.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActivePage
    summary: |-
      <span data-ttu-id="880a7-119">存在する場合はアクティブなページを取得します。</span><span class="sxs-lookup"><span data-stu-id="880a7-119">Gets the active page if one exists.</span></span> <span data-ttu-id="880a7-120">アクティブなページがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="880a7-120">If no page is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="880a7-121">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActivePage()
    fullName: getActivePage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-122">例</span><span class="sxs-lookup"><span data-stu-id="880a7-122">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active page.
              var page = context.application.getActivePage();
                      
              // Queue a command to load the page. 
              // For best performance, request specific properties.           
              page.load('id,title');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Page title: " + page.title);
                      console.log("Page ID: " + page.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActivePageOrNull
    summary: |-
      <span data-ttu-id="880a7-123">存在する場合はアクティブなページを取得します。</span><span class="sxs-lookup"><span data-stu-id="880a7-123">Gets the active page if one exists.</span></span> <span data-ttu-id="880a7-124">アクティブなページがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="880a7-124">If no page is active, returns null.</span></span>

      <span data-ttu-id="880a7-125">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActivePageOrNull()
    fullName: getActivePageOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePageOrNull(): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-126">例</span><span class="sxs-lookup"><span data-stu-id="880a7-126">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active page.
              var page = context.application.getActivePageOrNull();

              // Queue a command to load the page. 
              // For best performance, request specific properties.           
              page.load('id,title');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      if (!page.isNull) {
                          // Show some properties.
                          console.log("Page title: " + page.title);
                          console.log("Page ID: " + page.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveParagraph
    summary: |-
      <span data-ttu-id="880a7-127">アクティブな段落がある場合、アクティブな段落を取得します。段落がない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="880a7-127">Gets the active Paragraph if one exists, If no Paragraph is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="880a7-128">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-128">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveParagraph()
    fullName: getActiveParagraph()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveParagraph(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
  - uid: onenote.OneNote.Application.getActiveParagraphOrNull
    summary: |-
      <span data-ttu-id="880a7-129">アクティブな段落を取得します (存在する場合)。それ以外の場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="880a7-129">Gets the active Paragraph if one exists, otherwise returns null.</span></span>

      <span data-ttu-id="880a7-130">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-130">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveParagraphOrNull()
    fullName: getActiveParagraphOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveParagraphOrNull(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
  - uid: onenote.OneNote.Application.getActiveSection
    summary: |-
      <span data-ttu-id="880a7-131">存在する場合はアクティブなセクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="880a7-131">Gets the active section if one exists.</span></span> <span data-ttu-id="880a7-132">アクティブなセクションがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="880a7-132">If no section is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="880a7-133">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-133">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveSection()
    fullName: getActiveSection()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSection(): OneNote.Section;'
      return:
        type:
          - onenote.OneNote.Section
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-134">例</span><span class="sxs-lookup"><span data-stu-id="880a7-134">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Section name: " + section.name);
                      console.log("Section ID: " + section.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveSectionOrNull
    summary: |-
      <span data-ttu-id="880a7-135">存在する場合はアクティブなセクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="880a7-135">Gets the active section if one exists.</span></span> <span data-ttu-id="880a7-136">アクティブなセクションがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="880a7-136">If no section is active, returns null.</span></span>

      <span data-ttu-id="880a7-137">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveSectionOrNull()
    fullName: getActiveSectionOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSectionOrNull(): OneNote.Section;'
      return:
        type:
          - onenote.OneNote.Section
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-138">例</span><span class="sxs-lookup"><span data-stu-id="880a7-138">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active section.
              var section = context.application.getActiveSectionOrNull();

              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load('id,name');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      if (!section.isNull) {
                          // Show some properties.
                          console.log("Section name: " + section.name);
                          console.log("Section ID: " + section.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getWindowSize
    name: getWindowSize()
    fullName: getWindowSize()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getWindowSize(): OfficeExtension.ClientResult<number[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<number[]>'
        description: ''
  - uid: onenote.OneNote.Application.insertHtmlAtCurrentPosition
    name: insertHtmlAtCurrentPosition(html)
    fullName: insertHtmlAtCurrentPosition(html)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAtCurrentPosition(html: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: html
          description: ''
          type:
            - string
  - uid: onenote.OneNote.Application.isViewingDeletedNotes
    name: isViewingDeletedNotes()
    fullName: isViewingDeletedNotes()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isViewingDeletedNotes(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - OfficeExtension.ClientResult<boolean>
        description: ''
  - uid: onenote.OneNote.Application.load
    summary: <span data-ttu-id="880a7-139">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="880a7-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="880a7-140">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="880a7-140">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="880a7-141">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="880a7-141">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="880a7-142">`load(option?: string | string[]): OneNote.Application`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="880a7-142">`load(option?: string | string[]): OneNote.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="880a7-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="880a7-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="880a7-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="880a7-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application` - Only available on collection types.</span></span> <span data-ttu-id="880a7-145">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="880a7-145">It is similar to the preceding signature.</span></span> <span data-ttu-id="880a7-146">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="880a7-146">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="880a7-147">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="880a7-147">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="880a7-148">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="880a7-148">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.ApplicationLoadOptions): OneNote.Application;'
      return:
        type:
          - OneNote.Application
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.ApplicationLoadOptions
  - uid: onenote.OneNote.Application.load_1
    summary: <span data-ttu-id="880a7-149">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="880a7-149">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="880a7-150">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="880a7-150">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Application;'
      return:
        type:
          - OneNote.Application
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="880a7-151">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="880a7-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Application.load_2
    summary: <span data-ttu-id="880a7-152">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="880a7-152">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="880a7-153">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="880a7-153">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Application;'
      return:
        type:
          - OneNote.Application
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="880a7-154">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="880a7-154">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Application.navigateToPage
    summary: |-
      <span data-ttu-id="880a7-155">アプリケーション インスタンスで指定されたページを開きます。</span><span class="sxs-lookup"><span data-stu-id="880a7-155">Opens the specified page in the application instance.</span></span>

      <span data-ttu-id="880a7-156">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-156">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: navigateToPage(page)
    fullName: navigateToPage(page)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'navigateToPage(page: OneNote.Page): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-157">例</span><span class="sxs-lookup"><span data-stu-id="880a7-157">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;
                      
              // Queue a command to load the pages. 
              // For best performance, request specific properties.           
              pages.load('id');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // This example loads the first page in the section.
                      var page = pages.items[0];
                                  
                      // Open the page in the application.                    
                      context.application.navigateToPage(page);
                              
                      // Run the queued command.
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: page
          description: <span data-ttu-id="880a7-158">開くページです。</span><span class="sxs-lookup"><span data-stu-id="880a7-158">The page to open.</span></span>
          type:
            - onenote.OneNote.Page
  - uid: onenote.OneNote.Application.navigateToPageWithClientUrl
    summary: |-
      <span data-ttu-id="880a7-159">指定されたページを取得し、アプリケーション インスタンスで開きます。</span><span class="sxs-lookup"><span data-stu-id="880a7-159">Gets the specified page, and opens it in the application instance.</span></span>

      <span data-ttu-id="880a7-160">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-160">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: navigateToPageWithClientUrl(url)
    fullName: navigateToPageWithClientUrl(url)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'navigateToPageWithClientUrl(url: string): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="880a7-161">例</span><span class="sxs-lookup"><span data-stu-id="880a7-161">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;

              // Queue a command to load the pages. 
              // For best performance, request specific properties.           
              pages.load('clientUrl');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // This example loads the first page in the section.
                      var page = pages.items[0];

                      // Open the page in the application.                    
                      context.application.navigateToPageWithClientUrl(page.clientUrl);

                      // Run the queued command.
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: url
          description: <span data-ttu-id="880a7-162">開くページのクライアント URL です。</span><span class="sxs-lookup"><span data-stu-id="880a7-162">The client url of the page to open.</span></span>
          type:
            - string
  - uid: onenote.OneNote.Application.notebooks
    summary: |-
      <span data-ttu-id="880a7-p112">OneNote アプリケーション インスタンスで開いているノートブックのコレクションを取得します。OneNote Online では、ノートブックはアプリケーション インスタンスで一度に 1 つだけ開かれます。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="880a7-p112">Gets the collection of notebooks that are open in the OneNote application instance. In OneNote Online, only one notebook at a time is open in the application instance. Read-only.</span></span>

      <span data-ttu-id="880a7-166">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="880a7-166">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: notebooks
    fullName: notebooks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly notebooks: OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
  - uid: onenote.OneNote.Application.toJSON
    summary: '<span data-ttu-id="880a7-167">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="880a7-167">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="880a7-168">.</span><span class="sxs-lookup"><span data-stu-id="880a7-168"></span></span> <span data-ttu-id="880a7-169">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="880a7-169"></span></span><!-- --><span data-ttu-id="880a7-170">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の OneNote の Application オブジェクトは API オブジェクトであり、メソッド`toJSON`はプレーンな JavaScript オブジェクトを返します (型は`OneNote.Interfaces.ApplicationData`</span><span class="sxs-lookup"><span data-stu-id="880a7-170">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ApplicationData`</span></span><!-- --><span data-ttu-id="880a7-171">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="880a7-171">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ApplicationData;'
      return:
        type:
          - OneNote.Interfaces.ApplicationData
        description: ''