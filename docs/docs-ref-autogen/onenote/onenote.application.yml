### YamlMime:UniversalReference
ms.openlocfilehash: 358cbded29d8bfe700393c35bb7889d7090cac49
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 09/28/2018
ms.locfileid: "24049332"
items:
- uid: onenote.OneNote.Application
  summary: >-
    <span data-ttu-id="2620f-101">グローバルにアドレス可能な OneNote オブジェクト (ノートブック、アクティブなノートブック、アクティブなセクションなど) すべてを含む最上位のオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="2620f-101">Represents the top-level object that contains all globally addressable OneNote objects such as notebooks, the active notebook, and the active section.</span></span>


    <span data-ttu-id="2620f-102">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-102">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Application
  fullName: onenote.OneNote.Application
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Application.getActiveNotebook
  - onenote.OneNote.Application.getActiveNotebookOrNull
  - onenote.OneNote.Application.getActiveOutline
  - onenote.OneNote.Application.getActiveOutlineOrNull
  - onenote.OneNote.Application.getActivePage
  - onenote.OneNote.Application.getActivePageOrNull
  - onenote.OneNote.Application.getActiveParagraph
  - onenote.OneNote.Application.getActiveParagraphOrNull
  - onenote.OneNote.Application.getActiveSection
  - onenote.OneNote.Application.getActiveSectionOrNull
  - onenote.OneNote.Application.getWindowSize
  - onenote.OneNote.Application.insertHtmlAtCurrentPosition
  - onenote.OneNote.Application.isViewingDeletedNotes
  - onenote.OneNote.Application.load
  - onenote.OneNote.Application.navigateToPage
  - onenote.OneNote.Application.navigateToPageWithClientUrl
  - onenote.OneNote.Application.notebooks
  - onenote.OneNote.Application.toJSON
- uid: onenote.OneNote.Application.getActiveNotebook
  summary: >-
    <span data-ttu-id="2620f-p101">存在する場合はアクティブなノートブックを取得します。アクティブなノートブックがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="2620f-p101">Gets the active notebook if one exists. If no notebook is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="2620f-105">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-105">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveNotebook()
  fullName: onenote.OneNote.Application.getActiveNotebook
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveNotebook(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-106\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-106\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebook();\n            \n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Notebook name: \" + notebook.name);\n            console.log(\"Notebook ID: \" + notebook.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveNotebookOrNull
  summary: >-
    <span data-ttu-id="2620f-p102">存在する場合はアクティブなノートブックを取得します。アクティブなノートブックがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="2620f-p102">Gets the active notebook if one exists. If no notebook is active, returns null.</span></span>


    <span data-ttu-id="2620f-109">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-109">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveNotebookOrNull()
  fullName: onenote.OneNote.Application.getActiveNotebookOrNull
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveNotebookOrNull(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-110\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-110\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebookOrNull();\n\n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // check if active notebook is set.\n            if (!notebook.isNull) {\n                console.log(\"Notebook name: \" + notebook.name);\n                console.log(\"Notebook ID: \" + notebook.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveOutline
  summary: >-
    <span data-ttu-id="2620f-111">存在する場合はアクティブなアウトラインを取得します。アクティブなアウトラインがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="2620f-111">Gets the active outline if one exists, If no outline is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="2620f-112">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-112">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveOutline()
  fullName: onenote.OneNote.Application.getActiveOutline
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveOutline(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-113\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-113\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutline();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Show some properties.\n            console.log(\"outline id: \" + outline.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveOutlineOrNull
  summary: >-
    <span data-ttu-id="2620f-114">存在する場合はアクティブなアウトラインを取得します。アクティブなアウトラインがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="2620f-114">Gets the active outline if one exists, otherwise returns null.</span></span>


    <span data-ttu-id="2620f-115">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-115">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveOutlineOrNull()
  fullName: onenote.OneNote.Application.getActiveOutlineOrNull
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveOutlineOrNull(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-116\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-116\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutlineOrNull();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            if (!outline.isNull) {\n                console.log(\"outline id: \" + outline.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActivePage
  summary: >-
    <span data-ttu-id="2620f-p103">存在する場合はアクティブなページを取得します。アクティブなページがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="2620f-p103">Gets the active page if one exists. If no page is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="2620f-119">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-119">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActivePage()
  fullName: onenote.OneNote.Application.getActivePage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePage(): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-120\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-120\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active page.\n    var page = context.application.getActivePage();\n            \n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Page title: \" + page.title);\n            console.log(\"Page ID: \" + page.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActivePageOrNull
  summary: >-
    <span data-ttu-id="2620f-p104">存在する場合はアクティブなページを取得します。アクティブなページがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="2620f-p104">Gets the active page if one exists. If no page is active, returns null.</span></span>


    <span data-ttu-id="2620f-123">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-123">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActivePageOrNull()
  fullName: onenote.OneNote.Application.getActivePageOrNull
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePageOrNull(): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-124\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-124\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active page.\n    var page = context.application.getActivePageOrNull();\n\n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            if (!page.isNull) {\n                // Show some properties.\n                console.log(\"Page title: \" + page.title);\n                console.log(\"Page ID: \" + page.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveParagraph
  summary: >-
    <span data-ttu-id="2620f-125">取得作業中の段落の段落がアクティブでない場合、存在する場合スロー ItemNotFound します。</span><span class="sxs-lookup"><span data-stu-id="2620f-125">Gets the active Paragraph if one exists, If no Paragraph is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="2620f-126">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-126">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveParagraph()
  fullName: onenote.OneNote.Application.getActiveParagraph
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveParagraph(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Application.getActiveParagraphOrNull
  summary: >-
    <span data-ttu-id="2620f-127">取得作業中の段落 1 つ存在する場合、それ以外の場合は null を返します。</span><span class="sxs-lookup"><span data-stu-id="2620f-127">Gets the active Paragraph if one exists, otherwise returns null.</span></span>


    <span data-ttu-id="2620f-128">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-128">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveParagraphOrNull()
  fullName: onenote.OneNote.Application.getActiveParagraphOrNull
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveParagraphOrNull(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Application.getActiveSection
  summary: >-
    <span data-ttu-id="2620f-p105">存在する場合はアクティブなセクションを取得します。アクティブなセクションがない場合は、ItemNotFound をスローします。</span><span class="sxs-lookup"><span data-stu-id="2620f-p105">Gets the active section if one exists. If no section is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="2620f-131">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-131">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveSection()
  fullName: onenote.OneNote.Application.getActiveSection
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSection(): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-132\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Section name: \" + section.name);\n            console.log(\"Section ID: \" + section.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveSectionOrNull
  summary: >-
    <span data-ttu-id="2620f-p106">存在する場合はアクティブなセクションを取得します。アクティブなセクションがない場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="2620f-p106">Gets the active section if one exists. If no section is active, returns null.</span></span>


    <span data-ttu-id="2620f-135">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-135">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveSectionOrNull()
  fullName: onenote.OneNote.Application.getActiveSectionOrNull
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSectionOrNull(): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-136\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-136\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active section.\n    var section = context.application.getActiveSectionOrNull();\n\n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            if (!section.isNull) {\n                // Show some properties.\n                console.log(\"Section name: \" + section.name);\n                console.log(\"Section ID: \" + section.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getWindowSize
  name: getWindowSize()
  fullName: onenote.OneNote.Application.getWindowSize
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getWindowSize(): OfficeExtension.ClientResult<number[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<number[]>
      description: ''
- uid: onenote.OneNote.Application.insertHtmlAtCurrentPosition
  name: insertHtmlAtCurrentPosition(html)
  fullName: onenote.OneNote.Application.insertHtmlAtCurrentPosition
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAtCurrentPosition(html: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: html
      description: ''
      type:
      - string
- uid: onenote.OneNote.Application.isViewingDeletedNotes
  name: isViewingDeletedNotes()
  fullName: onenote.OneNote.Application.isViewingDeletedNotes
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isViewingDeletedNotes(): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
- uid: onenote.OneNote.Application.load
  summary: <span data-ttu-id="2620f-137">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="2620f-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2620f-138">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2620f-138">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="2620f-139">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="2620f-139">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="2620f-140">`load(option?: { select?: string; expand?: string; }): OneNote.Application`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="2620f-140">`load(option?: { select?: string; expand?: string; }): OneNote.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="2620f-141">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="2620f-141">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application` - Only available on collection types.</span></span> <span data-ttu-id="2620f-142">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="2620f-142">It is similar to the preceding signature.</span></span> <span data-ttu-id="2620f-143">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2620f-143">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2620f-144">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="2620f-144">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2620f-145">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="2620f-145">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: onenote.OneNote.Application.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.Application;'
    return:
      type:
      - OneNote.Application
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="2620f-146">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="2620f-146">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Application.navigateToPage
  summary: >-
    <span data-ttu-id="2620f-147">アプリケーション インスタンスで指定されたページを開きます。</span><span class="sxs-lookup"><span data-stu-id="2620f-147">Opens the specified page in the application instance.</span></span>


    <span data-ttu-id="2620f-148">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-148">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: navigateToPage(page)
  fullName: onenote.OneNote.Application.navigateToPage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'navigateToPage(page: OneNote.Page): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-149\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-149\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n            \n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('id');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // This example loads the first page in the section.\n            var page = pages.items[0];\n                        \n            // Open the page in the application.                    \n            context.application.navigateToPage(page);\n                    \n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: page
      description: <span data-ttu-id="2620f-150">開くページです。</span><span class="sxs-lookup"><span data-stu-id="2620f-150">The page to open.</span></span>
      type:
      - onenote.OneNote.Page
- uid: onenote.OneNote.Application.navigateToPageWithClientUrl
  summary: >-
    <span data-ttu-id="2620f-151">指定されたページを取得し、アプリケーション インスタンスで開きます。</span><span class="sxs-lookup"><span data-stu-id="2620f-151">Gets the specified page, and opens it in the application instance.</span></span>


    <span data-ttu-id="2620f-152">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-152">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: navigateToPageWithClientUrl(url)
  fullName: onenote.OneNote.Application.navigateToPageWithClientUrl
  langs:
  - typeScript
  type: method
  syntax:
    content: 'navigateToPageWithClientUrl(url: string): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"2620f-153\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"2620f-153\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n\n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('clientUrl');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // This example loads the first page in the section.\n            var page = pages.items[0];\n\n            // Open the page in the application.                    \n            context.application.navigateToPageWithClientUrl(page.clientUrl);\n\n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: url
      description: <span data-ttu-id="2620f-154">開くページのクライアント URL です。</span><span class="sxs-lookup"><span data-stu-id="2620f-154">The client url of the page to open.</span></span>
      type:
      - string
- uid: onenote.OneNote.Application.notebooks
  summary: >-
    <span data-ttu-id="2620f-p109">OneNote アプリケーション インスタンスで開いているノートブックのコレクションを取得します。OneNote Online では、ノートブックはアプリケーション インスタンスで一度に 1 つだけ開かれます。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2620f-p109">Gets the collection of notebooks that are open in the OneNote application instance. In OneNote Online, only one notebook at a time is open in the application instance. Read-only.</span></span>


    <span data-ttu-id="2620f-158">\[[API セット: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="2620f-158">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: notebooks
  fullName: onenote.OneNote.Application.notebooks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly notebooks: OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
- uid: onenote.OneNote.Application.toJSON
  name: toJSON()
  fullName: onenote.OneNote.Application.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ApplicationData;'
    return:
      type:
      - OneNote.Interfaces.ApplicationData
      description: ''
