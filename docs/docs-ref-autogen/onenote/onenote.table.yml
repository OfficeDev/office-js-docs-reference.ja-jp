### YamlMime:UniversalReference
ms.openlocfilehash: 6cfd114b3623589b0f4bb3e15476784473b23919
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980976"
items:
- uid: onenote.OneNote.Table
  summary: >-
    <span data-ttu-id="841a6-101">OneNote ページの表を表します。</span><span class="sxs-lookup"><span data-stu-id="841a6-101">Represents a table in a OneNote page.</span></span>


    <span data-ttu-id="841a6-102">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Table
  fullName: OneNote.Table
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Table.appendColumn
  - onenote.OneNote.Table.appendRow
  - onenote.OneNote.Table.borderVisible
  - onenote.OneNote.Table.clear
  - onenote.OneNote.Table.columnCount
  - onenote.OneNote.Table.context
  - onenote.OneNote.Table.getCell
  - onenote.OneNote.Table.id
  - onenote.OneNote.Table.insertColumn
  - onenote.OneNote.Table.insertRow
  - onenote.OneNote.Table.load
  - onenote.OneNote.Table.load_1
  - onenote.OneNote.Table.load_2
  - onenote.OneNote.Table.paragraph
  - onenote.OneNote.Table.rowCount
  - onenote.OneNote.Table.rows
  - onenote.OneNote.Table.set
  - onenote.OneNote.Table.set_1
  - onenote.OneNote.Table.setShadingColor
  - onenote.OneNote.Table.toJSON
  - onenote.OneNote.Table.track
  - onenote.OneNote.Table.untrack
- uid: onenote.OneNote.Table.appendColumn
  summary: >-
    <span data-ttu-id="841a6-p101">テーブルの末尾に列を追加します。値が指定されている場合、新しい列に設定されます。指定されてない場合、列は空です。</span><span class="sxs-lookup"><span data-stu-id="841a6-p101">Adds a column to the end of the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="841a6-106">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendColumn(values)
  fullName: appendColumn(values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendColumn(values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"841a6-107\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"841a6-107\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.appendColumn([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="841a6-108">省略可能。</span><span class="sxs-lookup"><span data-stu-id="841a6-108">Optional.</span></span> <span data-ttu-id="841a6-109">配列として指定された、新しい列に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="841a6-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="841a6-110">テーブルの行数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="841a6-110">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.appendRow
  summary: >-
    <span data-ttu-id="841a6-p103">テーブルの末尾に行を追加します。値が指定されている場合、新しい行に設定されます。指定されてない場合、行は空です。</span><span class="sxs-lookup"><span data-stu-id="841a6-p103">Adds a row to the end of the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="841a6-114">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendRow(values)
  fullName: appendRow(values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendRow(values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"841a6-115\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"841a6-115\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.appendRow([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="841a6-116">省略可能。</span><span class="sxs-lookup"><span data-stu-id="841a6-116">Optional.</span></span> <span data-ttu-id="841a6-117">配列として指定された、新しい行に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="841a6-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="841a6-118">テーブルの列数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="841a6-118">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.borderVisible
  summary: >-
    <span data-ttu-id="841a6-p105">枠線を表示するかどうかを取得または設定します。表示する場合は true、非表示の場合は false。</span><span class="sxs-lookup"><span data-stu-id="841a6-p105">Gets or sets whether the borders are visible or not. True if they are visible, false if they are hidden.</span></span>


    <span data-ttu-id="841a6-121">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: borderVisible
  fullName: borderVisible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'borderVisible: boolean;'
    return:
      type:
      - boolean
- uid: onenote.OneNote.Table.clear
  summary: >-
    <span data-ttu-id="841a6-122">テーブルの内容をクリアします。</span><span class="sxs-lookup"><span data-stu-id="841a6-122">Clears the contents of the table.</span></span>


    <span data-ttu-id="841a6-123">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.Table.columnCount
  summary: >-
    <span data-ttu-id="841a6-124">表の列数を取得します。</span><span class="sxs-lookup"><span data-stu-id="841a6-124">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="841a6-125">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.context
  summary: <span data-ttu-id="841a6-126">オブジェクトに関連付けられた要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="841a6-126">The request context associated with the object.</span></span> <span data-ttu-id="841a6-127">これは、Office ホスト アプリケーションのプロセスに、アドインのプロセスを接続します。</span><span class="sxs-lookup"><span data-stu-id="841a6-127">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Table.getCell
  summary: >-
    <span data-ttu-id="841a6-128">指定された行と列のテーブル セルを取得します。</span><span class="sxs-lookup"><span data-stu-id="841a6-128">Gets the table cell at a specified row and column.</span></span>


    <span data-ttu-id="841a6-129">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getCell(rowIndex, cellIndex)
  fullName: getCell(rowIndex, cellIndex)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"841a6-130\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"841a6-130\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a cell in the second row and third column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowIndex
      description: <span data-ttu-id="841a6-131">行のインデックスです。</span><span class="sxs-lookup"><span data-stu-id="841a6-131">The index of the row.</span></span>
      type:
      - number
    - id: cellIndex
      description: <span data-ttu-id="841a6-132">行のセルのインデックス。</span><span class="sxs-lookup"><span data-stu-id="841a6-132">The index of the cell in the row.</span></span>
      type:
      - number
- uid: onenote.OneNote.Table.id
  summary: >-
    <span data-ttu-id="841a6-p107">テーブルの ID を取得します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="841a6-p107">Gets the ID of the table. Read-only.</span></span>


    <span data-ttu-id="841a6-135">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Table.insertColumn
  summary: >-
    <span data-ttu-id="841a6-p108">テーブル内の指定したインデックスに列を挿入します。値が指定されている場合、新しい列に設定されます。指定されてない場合、列は空です。</span><span class="sxs-lookup"><span data-stu-id="841a6-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="841a6-139">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertColumn(index, values)
  fullName: insertColumn(index, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertColumn(index: number, values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"841a6-140\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"841a6-140\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a column at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.insertColumn(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="841a6-141">テーブルに列を挿入する位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="841a6-141">Index where the column will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="841a6-142">省略可能。</span><span class="sxs-lookup"><span data-stu-id="841a6-142">Optional.</span></span> <span data-ttu-id="841a6-143">配列として指定された、新しい列に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="841a6-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="841a6-144">テーブルの行数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="841a6-144">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.insertRow
  summary: >-
    <span data-ttu-id="841a6-p110">テーブル内の指定したインデックスに行を挿入します。値が指定されている場合、新しい行に設定されます。指定されてない場合、行は空です。</span><span class="sxs-lookup"><span data-stu-id="841a6-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="841a6-148">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRow(index, values)
  fullName: insertRow(index, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"841a6-149\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"841a6-149\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a row at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.insertRow(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="841a6-150">テーブルに行を挿入する位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="841a6-150">Index where the row will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="841a6-151">省略可能。</span><span class="sxs-lookup"><span data-stu-id="841a6-151">Optional.</span></span> <span data-ttu-id="841a6-152">配列として指定された、新しい行に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="841a6-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="841a6-153">テーブルの列数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="841a6-153">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.load
  summary: <span data-ttu-id="841a6-154">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="841a6-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="841a6-155">"Context.sync()"は、プロパティを読み取る前に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="841a6-155">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="841a6-156">だけでなく、この署名は、このメソッドは、次の署名をします。</span><span class="sxs-lookup"><span data-stu-id="841a6-156">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="841a6-157">`load(option?: string | string[]): OneNote.Table`-ここで、オプションは、コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="841a6-157">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="841a6-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-どこで読み込むには、プロパティを指定するコンマ区切りの文字列は、option.select、options.expand を読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="841a6-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="841a6-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`でコレクション型のみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="841a6-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id="841a6-160">前の署名に似ていますが。</span><span class="sxs-lookup"><span data-stu-id="841a6-160">It is similar to the preceding signature.</span></span> <span data-ttu-id="841a6-161">Option.top は、結果に含めることができるコレクション アイテムの最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="841a6-161">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="841a6-162">Option.skip はスキップされ、その結果に含まれていない項目の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="841a6-162">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="841a6-163">Option.top が指定されている場合、結果セットが指定数のアイテムをスキップした後開始されます。</span><span class="sxs-lookup"><span data-stu-id="841a6-163">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.TableLoadOptions
- uid: onenote.OneNote.Table.load_1
  summary: <span data-ttu-id="841a6-164">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="841a6-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="841a6-165">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="841a6-165">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"841a6-166\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"841a6-166\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // For each table, log properties.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table);\n                return ctx.sync().then(function() {\n                    console.log(\"Table Id: \" + table.id);\n                    console.log(\"Row Count: \" + table.rowCount);\n                    console.log(\"Column Count: \" + table.columnCount);\n                    return ctx.sync();\n                });\n            }\n        }\n    });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, log its paragraph id.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table, \"paragraph/id, rows/id\");\n                return ctx.sync().then(function() {\n                    console.log(\"Paragraph Id: \" + table.paragraph.id);\n                    var rows = table.rows;\n                    \n                    // for each rows in the table, log row index and id.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="841a6-167">コンマで区切られた文字列またはロードするにはプロパティを指定する文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="841a6-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Table.load_2
  summary: <span data-ttu-id="841a6-168">オブジェクトの指定したプロパティを読み込むためのコマンドをキューします。</span><span class="sxs-lookup"><span data-stu-id="841a6-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="841a6-169">呼び出す必要があります`context.sync()`プロパティを読み取る前にします。</span><span class="sxs-lookup"><span data-stu-id="841a6-169">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="841a6-170">読み込むには、プロパティを指定するコンマ区切りの文字列は、propertyNamesAndPaths.select、propertyNamesAndPaths.expand は、読み込むナビゲーション プロパティを指定するコンマ区切りの文字列。</span><span class="sxs-lookup"><span data-stu-id="841a6-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Table.paragraph
  summary: >-
    <span data-ttu-id="841a6-p116">Table オブジェクトを含む Paragraph オブジェクトを取得します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="841a6-p116">Gets the Paragraph object that contains the Table object. Read-only.</span></span>


    <span data-ttu-id="841a6-173">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraph
  fullName: paragraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Table.rowCount
  summary: >-
    <span data-ttu-id="841a6-174">表の行数を取得します。</span><span class="sxs-lookup"><span data-stu-id="841a6-174">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="841a6-175">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.rows
  summary: >-
    <span data-ttu-id="841a6-p117">すべてのテーブルの行を取得します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="841a6-p117">Gets all of the table rows. Read-only.</span></span>


    <span data-ttu-id="841a6-178">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-178">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: OneNote.TableRowCollection;'
    return:
      type:
      - OneNote.TableRowCollection
- uid: onenote.OneNote.Table.set
  summary: <span data-ttu-id="841a6-179">同時に複数のオブジェクトのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="841a6-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="841a6-180">適切なプロパティで、普通のオブジェクトまたは同じ種類の別の API のオブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="841a6-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="841a6-181">このメソッドには、次の追加の署名があります。</span><span class="sxs-lookup"><span data-stu-id="841a6-181">This method has the following additional signature:</span></span>


    `set(properties: OneNote.Table): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="841a6-182">Isomorphically メソッドが呼び出されますオブジェクトのプロパティを構造化されているプロパティを使用して JavaScript オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="841a6-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableUpdateData
    - id: options
      description: <span data-ttu-id="841a6-183">プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを非表示にするオプションが用意されています。</span><span class="sxs-lookup"><span data-stu-id="841a6-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: onenote.OneNote.Table.set_1
  summary: <span data-ttu-id="841a6-184">オブジェクトに読み込まれている既存のオブジェクトに基づいて、同時に複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="841a6-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: OneNote.Table): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - OneNote.Table
- uid: onenote.OneNote.Table.setShadingColor
  summary: >-
    <span data-ttu-id="841a6-185">テーブルのすべてのセルの網かけの色を設定します。</span><span class="sxs-lookup"><span data-stu-id="841a6-185">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="841a6-186">セルに設定する色コード。</span><span class="sxs-lookup"><span data-stu-id="841a6-186">The color code to set the cells to.</span></span>


    <span data-ttu-id="841a6-187">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="841a6-187">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: setShadingColor(colorCode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.Table.toJSON
  summary: <span data-ttu-id="841a6-188">JavaScript を上書き`toJSON()`API オブジェクトに渡すときより有用な出力を提供するためにメソッド`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="841a6-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="841a6-189">(`JSON.stringify`<!-- -->で、さらに、`toJSON`に渡されるオブジェクトのメソッドです)。API のオブジェクトの元の OneNote.Table オブジェクトには、`toJSON`メソッドは、プレーンな JavaScript オブジェクトを返します (として型指定された`OneNote.Interfaces.TableData` <!-- -->) を元のオブジェクトから読み込まれた子プロパティのシャロー コピーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="841a6-189">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableData;'
    return:
      type:
      - OneNote.Interfaces.TableData
      description: ''
- uid: onenote.OneNote.Table.track
  summary: <span data-ttu-id="841a6-190">周囲の文書内の変更に基づいて自動的に調整するオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="841a6-190">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="841a6-191">この呼び出しは、context.trackedObjects.add(thisObject) の短縮です。</span><span class="sxs-lookup"><span data-stu-id="841a6-191">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="841a6-192">プロパティを設定するときは、このオブジェクト".sync"の呼び出しで、".run"のバッチ、および get"InvalidObjectPath"エラーの連続実行範囲の外側を使用しているまたは追跡対象のオブジェクトにオブジェクトを追加するのには必要なオブジェクトのメソッドを呼び出して、コレクションのオブジェクトが最初に作成したときです。</span><span class="sxs-lookup"><span data-stu-id="841a6-192">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
- uid: onenote.OneNote.Table.untrack
  summary: <span data-ttu-id="841a6-193">リリース履歴管理されていた場合に、このオブジェクトに関連付けられているメモリです。</span><span class="sxs-lookup"><span data-stu-id="841a6-193">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="841a6-194">この呼び出しは、context.trackedObjects.remove(thisObject) の省略形です。</span><span class="sxs-lookup"><span data-stu-id="841a6-194">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="841a6-195">追跡の多くのオブジェクトを持つ速度が遅くなりますホスト アプリケーションでは、そのためできたら、追加するすべてのオブジェクトを解放するために注意してくださいそれらを使用します。</span><span class="sxs-lookup"><span data-stu-id="841a6-195">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="841a6-196">メモリの解放を有効にするには、"context.sync()"を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="841a6-196">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
