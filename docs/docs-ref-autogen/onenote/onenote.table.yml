### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Table
    summary: |-
      <span data-ttu-id="84716-101">OneNote ページのテーブルを表します。</span><span class="sxs-lookup"><span data-stu-id="84716-101">Represents a table in a OneNote page.</span></span>

      <span data-ttu-id="84716-102">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Table
    fullName: OneNote.Table
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.Table.appendColumn
      - onenote.OneNote.Table.appendRow
      - onenote.OneNote.Table.borderVisible
      - onenote.OneNote.Table.clear
      - onenote.OneNote.Table.columnCount
      - onenote.OneNote.Table.context
      - onenote.OneNote.Table.getCell
      - onenote.OneNote.Table.id
      - onenote.OneNote.Table.insertColumn
      - onenote.OneNote.Table.insertRow
      - onenote.OneNote.Table.load
      - onenote.OneNote.Table.load_1
      - onenote.OneNote.Table.load_2
      - onenote.OneNote.Table.paragraph
      - onenote.OneNote.Table.rowCount
      - onenote.OneNote.Table.rows
      - onenote.OneNote.Table.set
      - onenote.OneNote.Table.set_1
      - onenote.OneNote.Table.setShadingColor
      - onenote.OneNote.Table.toJSON
      - onenote.OneNote.Table.track
      - onenote.OneNote.Table.untrack
  - uid: onenote.OneNote.Table.appendColumn
    summary: |-
      <span data-ttu-id="84716-103">テーブルの末尾に列を追加します。</span><span class="sxs-lookup"><span data-stu-id="84716-103">Adds a column to the end of the table.</span></span> <span data-ttu-id="84716-104">値が指定されている場合、新しい列に設定されます。</span><span class="sxs-lookup"><span data-stu-id="84716-104">Values, if specified, are set in the new column.</span></span> <span data-ttu-id="84716-105">指定されてない場合、列は空です。</span><span class="sxs-lookup"><span data-stu-id="84716-105">Otherwise the column is empty.</span></span>

      <span data-ttu-id="84716-106">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendColumn(values)
    fullName: appendColumn(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendColumn(values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84716-107">例</span><span class="sxs-lookup"><span data-stu-id="84716-107">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.appendColumn(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="84716-108">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84716-108">Optional.</span></span> <span data-ttu-id="84716-109">配列として指定された、新しい列に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="84716-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="84716-110">テーブルの行数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="84716-110">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.appendRow
    summary: |-
      <span data-ttu-id="84716-111">テーブルの末尾に行を追加します。</span><span class="sxs-lookup"><span data-stu-id="84716-111">Adds a row to the end of the table.</span></span> <span data-ttu-id="84716-112">値が指定されている場合、新しい行に設定されます。</span><span class="sxs-lookup"><span data-stu-id="84716-112">Values, if specified, are set in the new row.</span></span> <span data-ttu-id="84716-113">指定されてない場合、行は空です。</span><span class="sxs-lookup"><span data-stu-id="84716-113">Otherwise the row is empty.</span></span>

      <span data-ttu-id="84716-114">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendRow(values)
    fullName: appendRow(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRow(values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84716-115">例</span><span class="sxs-lookup"><span data-stu-id="84716-115">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.appendRow(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="84716-116">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84716-116">Optional.</span></span> <span data-ttu-id="84716-117">配列として指定された、新しい行に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="84716-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="84716-118">テーブルの列数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="84716-118">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.borderVisible
    summary: |-
      <span data-ttu-id="84716-119">枠線を表示するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="84716-119">Gets or sets whether the borders are visible or not.</span></span> <span data-ttu-id="84716-120">表示する場合は true、非表示の場合は false。</span><span class="sxs-lookup"><span data-stu-id="84716-120">True if they are visible, false if they are hidden.</span></span>

      <span data-ttu-id="84716-121">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: borderVisible
    fullName: borderVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderVisible: boolean;'
      return:
        type:
          - boolean
  - uid: onenote.OneNote.Table.clear
    summary: |-
      <span data-ttu-id="84716-122">テーブルの内容をクリアします。</span><span class="sxs-lookup"><span data-stu-id="84716-122">Clears the contents of the table.</span></span>

      <span data-ttu-id="84716-123">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: onenote.OneNote.Table.columnCount
    summary: |-
      <span data-ttu-id="84716-124">表の列数を取得します。</span><span class="sxs-lookup"><span data-stu-id="84716-124">Gets the number of columns in the table.</span></span>

      <span data-ttu-id="84716-125">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.Table.context
    summary: <span data-ttu-id="84716-126">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="84716-126">The request context associated with the object.</span></span> <span data-ttu-id="84716-127">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="84716-127">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.Table.getCell
    summary: |-
      <span data-ttu-id="84716-128">指定された行と列のテーブル セルを取得します。</span><span class="sxs-lookup"><span data-stu-id="84716-128">Gets the table cell at a specified row and column.</span></span>

      <span data-ttu-id="84716-129">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'getCell(rowIndex, cellIndex)'
    fullName: 'getCell(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
      return:
        type:
          - onenote.OneNote.TableCell
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84716-130">例</span><span class="sxs-lookup"><span data-stu-id="84716-130">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get a cell in the second row and third column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowIndex
          description: <span data-ttu-id="84716-131">行のインデックスです。</span><span class="sxs-lookup"><span data-stu-id="84716-131">The index of the row.</span></span>
          type:
            - number
        - id: cellIndex
          description: <span data-ttu-id="84716-132">行のセルのインデックス。</span><span class="sxs-lookup"><span data-stu-id="84716-132">The index of the cell in the row.</span></span>
          type:
            - number
  - uid: onenote.OneNote.Table.id
    summary: |-
      <span data-ttu-id="84716-133">テーブルの ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="84716-133">Gets the ID of the table.</span></span> <span data-ttu-id="84716-134">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="84716-134">Read-only.</span></span>

      <span data-ttu-id="84716-135">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.Table.insertColumn
    summary: |-
      <span data-ttu-id="84716-p108">テーブル内の指定したインデックスに列を挿入します。値が指定されている場合、新しい列に設定されます。指定されてない場合、列は空です。</span><span class="sxs-lookup"><span data-stu-id="84716-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>

      <span data-ttu-id="84716-139">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertColumn(index, values)'
    fullName: 'insertColumn(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertColumn(index: number, values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84716-140">例</span><span class="sxs-lookup"><span data-stu-id="84716-140">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a column at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.insertColumn(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="84716-141">テーブルに列を挿入する位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="84716-141">Index where the column will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="84716-142">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84716-142">Optional.</span></span> <span data-ttu-id="84716-143">配列として指定された、新しい列に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="84716-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="84716-144">テーブルの行数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="84716-144">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.insertRow
    summary: |-
      <span data-ttu-id="84716-p110">テーブル内の指定したインデックスに行を挿入します。値が指定されている場合、新しい行に設定されます。指定されてない場合、行は空です。</span><span class="sxs-lookup"><span data-stu-id="84716-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>

      <span data-ttu-id="84716-148">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRow(index, values)'
    fullName: 'insertRow(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84716-149">例</span><span class="sxs-lookup"><span data-stu-id="84716-149">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a row at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.insertRow(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="84716-150">テーブルに行を挿入する位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="84716-150">Index where the row will be inserted in the table.</span></span>
          type:
            - number
        - id: values
          description: '<span data-ttu-id="84716-151">省略可能。</span><span class="sxs-lookup"><span data-stu-id="84716-151">Optional.</span></span> <span data-ttu-id="84716-152">配列として指定された、新しい行に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="84716-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="84716-153">テーブルの列数よりも多い値は指定できません。</span><span class="sxs-lookup"><span data-stu-id="84716-153">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.load
    summary: <span data-ttu-id="84716-154">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="84716-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="84716-155">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="84716-155">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="84716-156">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="84716-156">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="84716-157">`load(option?: string | string[]): OneNote.Table`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="84716-157">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="84716-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="84716-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="84716-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="84716-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id="84716-160">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="84716-160">It is similar to the preceding signature.</span></span> <span data-ttu-id="84716-161">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="84716-161">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="84716-162">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="84716-162">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="84716-163">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="84716-163">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.TableLoadOptions
  - uid: onenote.OneNote.Table.load_1
    summary: <span data-ttu-id="84716-164">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="84716-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="84716-165">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="84716-165">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="84716-166">例</span><span class="sxs-lookup"><span data-stu-id="84716-166">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // For each table, log properties.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table);
                          return ctx.sync().then(function() {
                              console.log("Table Id: " + table.id);
                              console.log("Row Count: " + table.rowCount);
                              console.log("Column Count: " + table.columnCount);
                              return ctx.sync();
                          });
                      }
                  }
              });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, log its paragraph id.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table, "paragraph/id, rows/id");
                          return ctx.sync().then(function() {
                              console.log("Paragraph Id: " + table.paragraph.id);
                              var rows = table.rows;
                              
                              // for each rows in the table, log row index and id.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="84716-167">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="84716-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Table.load_2
    summary: <span data-ttu-id="84716-168">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="84716-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="84716-169">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="84716-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="84716-170">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="84716-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Table.paragraph
    summary: |-
      <span data-ttu-id="84716-171">Table オブジェクトを含む Paragraph オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="84716-171">Gets the Paragraph object that contains the Table object.</span></span> <span data-ttu-id="84716-172">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="84716-172">Read-only.</span></span>

      <span data-ttu-id="84716-173">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Table.rowCount
    summary: |-
      <span data-ttu-id="84716-174">表の行数を取得します。</span><span class="sxs-lookup"><span data-stu-id="84716-174">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="84716-175">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.Table.rows
    summary: |-
      <span data-ttu-id="84716-176">すべてのテーブルの行を取得します。</span><span class="sxs-lookup"><span data-stu-id="84716-176">Gets all of the table rows.</span></span> <span data-ttu-id="84716-177">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="84716-177">Read-only.</span></span>

      <span data-ttu-id="84716-178">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-178">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: OneNote.TableRowCollection;'
      return:
        type:
          - OneNote.TableRowCollection
  - uid: onenote.OneNote.Table.set
    summary: '<span data-ttu-id="84716-179">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="84716-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="84716-180">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="84716-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="84716-181">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="84716-181">This method has the following additional signature:</span></span>

      `set(properties: OneNote.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="84716-182">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="84716-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableUpdateData
        - id: options
          description: <span data-ttu-id="84716-183">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="84716-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: onenote.OneNote.Table.set_1
    summary: '<span data-ttu-id="84716-184">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="84716-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - OneNote.Table
  - uid: onenote.OneNote.Table.setShadingColor
    summary: |-
      <span data-ttu-id="84716-185">テーブルのすべてのセルの網かけの色を設定します。</span><span class="sxs-lookup"><span data-stu-id="84716-185">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="84716-186">セルに設定する色コード。</span><span class="sxs-lookup"><span data-stu-id="84716-186">The color code to set the cells to.</span></span>

      <span data-ttu-id="84716-187">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="84716-187">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: onenote.OneNote.Table.toJSON
    summary: '<span data-ttu-id="84716-188">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="84716-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="84716-189">.</span><span class="sxs-lookup"><span data-stu-id="84716-189"></span></span> <span data-ttu-id="84716-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="84716-190"></span></span><!-- --><span data-ttu-id="84716-191">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Table オブジェクトは API オブジェクトですが、このメソッドは`toJSON`プレーンな JavaScript オブジェクト (として型指定されます) を返します。`OneNote.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="84716-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="84716-192">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="84716-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableData;'
      return:
        type:
          - OneNote.Interfaces.TableData
        description: ''
  - uid: onenote.OneNote.Table.track
    summary: '<span data-ttu-id="84716-193">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="84716-193">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="84716-194">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="84716-194">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="84716-195">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="84716-195">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''
  - uid: onenote.OneNote.Table.untrack
    summary: '<span data-ttu-id="84716-196">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="84716-196">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="84716-197">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="84716-197">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="84716-198">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="84716-198">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="84716-199">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="84716-199">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Table;'
      return:
        type:
          - OneNote.Table
        description: ''