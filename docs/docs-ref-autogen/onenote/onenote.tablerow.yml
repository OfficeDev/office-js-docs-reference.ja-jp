### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.TableRow
    summary: |-
      <span data-ttu-id="e1af7-101">テーブル内の行を表します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-101">Represents a row in a table.</span></span>

      <span data-ttu-id="e1af7-102">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.TableRow
    fullName: OneNote.TableRow
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: onenote
    children:
      - onenote.OneNote.TableRow.cellCount
      - onenote.OneNote.TableRow.cells
      - onenote.OneNote.TableRow.clear
      - onenote.OneNote.TableRow.context
      - onenote.OneNote.TableRow.id
      - onenote.OneNote.TableRow.insertRowAsSibling
      - onenote.OneNote.TableRow.insertRowAsSibling_1
      - onenote.OneNote.TableRow.load
      - onenote.OneNote.TableRow.load_1
      - onenote.OneNote.TableRow.load_2
      - onenote.OneNote.TableRow.parentTable
      - onenote.OneNote.TableRow.rowIndex
      - onenote.OneNote.TableRow.setShadingColor
      - onenote.OneNote.TableRow.toJSON
      - onenote.OneNote.TableRow.track
      - onenote.OneNote.TableRow.untrack
  - uid: onenote.OneNote.TableRow.cellCount
    summary: |-
      <span data-ttu-id="e1af7-103">行のセルの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-103">Gets the number of cells in the row.</span></span> <span data-ttu-id="e1af7-104">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-104">Read-only.</span></span>

      <span data-ttu-id="e1af7-105">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.TableRow.cells
    summary: |-
      <span data-ttu-id="e1af7-106">行のセルを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-106">Gets the cells in the row.</span></span> <span data-ttu-id="e1af7-107">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-107">Read-only.</span></span>

      <span data-ttu-id="e1af7-108">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-108">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: cells
    fullName: cells
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cells: OneNote.TableCellCollection;'
      return:
        type:
          - onenote.OneNote.TableCellCollection
  - uid: onenote.OneNote.TableRow.clear
    summary: |-
      <span data-ttu-id="e1af7-109">行の内容をクリアします。</span><span class="sxs-lookup"><span data-stu-id="e1af7-109">Clears the contents of the row.</span></span>

      <span data-ttu-id="e1af7-110">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-110">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: onenote.OneNote.TableRow.context
    summary: <span data-ttu-id="e1af7-111">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="e1af7-111">The request context associated with the object.</span></span> <span data-ttu-id="e1af7-112">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="e1af7-112">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: onenote.OneNote.TableRow.id
    summary: |-
      <span data-ttu-id="e1af7-113">行の ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-113">Gets the ID of the row.</span></span> <span data-ttu-id="e1af7-114">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-114">Read-only.</span></span>

      <span data-ttu-id="e1af7-115">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.TableRow.insertRowAsSibling
    summary: |-
      <span data-ttu-id="e1af7-116">現在の行の前後に行を挿入します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-116">Inserts a row before or after the current row.</span></span>

      <span data-ttu-id="e1af7-117">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRowAsSibling(insertLocation, values)'
    fullName: 'insertRowAsSibling(insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRowAsSibling(insertLocation: OneNote.InsertLocation, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e1af7-118">例</span><span class="sxs-lookup"><span data-stu-id="e1af7-118">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load table.rows.
                          ctx.load(table, "rows");
                          
                          // Run the queued commands
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              rows.items[1].insertRowAsSibling("Before", ["cell0", "cell1"]);
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: <span data-ttu-id="e1af7-119">現在の行を基準にした新しい行を挿入する場所。</span><span class="sxs-lookup"><span data-stu-id="e1af7-119">Where the new rows should be inserted relative to the current row.</span></span>
          type:
            - onenote.OneNote.InsertLocation
        - id: values
          description: '<span data-ttu-id="e1af7-120">配列として指定された、新しい行に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="e1af7-120">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="e1af7-121">現在の行内のセルよりも多くのセル数にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="e1af7-121">Must not have more cells than in the current row.</span></span> <span data-ttu-id="e1af7-122">省略可能。</span><span class="sxs-lookup"><span data-stu-id="e1af7-122">Optional.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.TableRow.insertRowAsSibling_1
    summary: |-
      <span data-ttu-id="e1af7-123">現在の行の前後に行を挿入します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-123">Inserts a row before or after the current row.</span></span>

      <span data-ttu-id="e1af7-124">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-124">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRowAsSibling(insertLocationString, values)'
    fullName: 'insertRowAsSibling(insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRowAsSibling(insertLocationString: "Before" | "After", values?: string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: insertLocationString
          description: <span data-ttu-id="e1af7-125">現在の行を基準にした新しい行を挿入する場所。</span><span class="sxs-lookup"><span data-stu-id="e1af7-125">Where the new rows should be inserted relative to the current row.</span></span>
          type:
            - '"Before" | "After"'
        - id: values
          description: '<span data-ttu-id="e1af7-126">配列として指定された、新しい行に挿入する文字列。</span><span class="sxs-lookup"><span data-stu-id="e1af7-126">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="e1af7-127">現在の行内のセルよりも多くのセル数にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="e1af7-127">Must not have more cells than in the current row.</span></span> <span data-ttu-id="e1af7-128">省略可能。</span><span class="sxs-lookup"><span data-stu-id="e1af7-128">Optional.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.TableRow.load
    summary: <span data-ttu-id="e1af7-129">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="e1af7-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1af7-130">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1af7-130">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e1af7-131">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e1af7-131">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e1af7-132">`load(option?: string | string[]): OneNote.TableRow`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-132">`load(option?: string | string[]): OneNote.TableRow` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e1af7-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-133">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e1af7-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e1af7-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow` - Only available on collection types.</span></span> <span data-ttu-id="e1af7-135">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="e1af7-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="e1af7-136">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e1af7-137">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e1af7-138">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="e1af7-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableRowLoadOptions): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OneNote.Interfaces.TableRowLoadOptions
  - uid: onenote.OneNote.TableRow.load_1
    summary: <span data-ttu-id="e1af7-139">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="e1af7-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1af7-140">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1af7-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e1af7-141">例</span><span class="sxs-lookup"><span data-stu-id="e1af7-141">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load table.rows.
                          ctx.load(table, "rows");
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              
                              // for each table row, log cell count and row index.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                                  console.log("Row " + i + " Cell Count: " + rows.items[i].cellCount);
                                  console.log("Row " + i + " Row Index: " + rows.items[i].rowIndex);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get table rows.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          
                          // Queue a command to load parentTable and cells of each row in the table.
                          ctx.load(table, "rows/parentTable, rows/cells");
                          return ctx.sync().then(function() {
                              var rows = table.rows;
                              
                              // for each row, log parentTable and cells
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Parent Table Id: " + rows.items[i].parentTable.id);
                                  var cells = rows.items[i].cells;
                                  for (var j = 0 ; j < cells.items.length; j++) {
                                      console.log("Row " + i + " Cell " + j + " Id: " + cells.items[j].id);
                                  }
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e1af7-142">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="e1af7-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.TableRow.load_2
    summary: <span data-ttu-id="e1af7-143">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="e1af7-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1af7-144">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1af7-144">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e1af7-145">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-145">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.TableRow.parentTable
    summary: |-
      <span data-ttu-id="e1af7-146">親テーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-146">Gets the parent table.</span></span> <span data-ttu-id="e1af7-147">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-147">Read-only.</span></span>

      <span data-ttu-id="e1af7-148">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: OneNote.Table;'
      return:
        type:
          - OneNote.Table
  - uid: onenote.OneNote.TableRow.rowIndex
    summary: |-
      <span data-ttu-id="e1af7-149">親テーブル内の行のインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-149">Gets the index of the row in its parent table.</span></span> <span data-ttu-id="e1af7-150">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="e1af7-150">Read-only.</span></span>

      <span data-ttu-id="e1af7-151">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-151">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rowIndex
    fullName: rowIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowIndex: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.TableRow.setShadingColor
    summary: |-
      <span data-ttu-id="e1af7-152">行のすべてのセルの網かけの色を設定します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-152">Sets the shading color of all cells in the row.</span></span> <span data-ttu-id="e1af7-153">セルに設定する色コード。</span><span class="sxs-lookup"><span data-stu-id="e1af7-153">The color code to set the cells to.</span></span>

      <span data-ttu-id="e1af7-154">\[[API セット: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1af7-154">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: onenote.OneNote.TableRow.toJSON
    summary: '<span data-ttu-id="e1af7-155">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e1af7-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e1af7-156">.</span><span class="sxs-lookup"><span data-stu-id="e1af7-156"></span></span> <span data-ttu-id="e1af7-157">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e1af7-157"></span></span><!-- --><span data-ttu-id="e1af7-158">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の OneNote の TableRow オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`OneNote.Interfaces.TableRowData`</span><span class="sxs-lookup"><span data-stu-id="e1af7-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableRowData`</span></span><!-- --><span data-ttu-id="e1af7-159">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableRowData;'
      return:
        type:
          - OneNote.Interfaces.TableRowData
        description: ''
  - uid: onenote.OneNote.TableRow.track
    summary: '<span data-ttu-id="e1af7-160">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-160">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="e1af7-161">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-161">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="e1af7-162">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="e1af7-162">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''
  - uid: onenote.OneNote.TableRow.untrack
    summary: '<span data-ttu-id="e1af7-163">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="e1af7-163">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="e1af7-164">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="e1af7-164">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="e1af7-165">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="e1af7-165">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="e1af7-166">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e1af7-166">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.TableRow;'
      return:
        type:
          - OneNote.TableRow
        description: ''