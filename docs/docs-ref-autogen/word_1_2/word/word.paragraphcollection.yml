### YamlMime:UniversalReference
items:
  - uid: word.Word.ParagraphCollection
    summary: |-
      <span data-ttu-id="3ef23-101">[Word の Paragraph](xref:word.Word.Paragraph)オブジェクトのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="3ef23-101">Contains a collection of [Word.Paragraph](xref:word.Word.Paragraph) objects.</span></span>

      <span data-ttu-id="3ef23-102">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3ef23-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.ParagraphCollection
    fullName: Word.ParagraphCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.ParagraphCollection.context
      - word.Word.ParagraphCollection.items
      - word.Word.ParagraphCollection.load
      - word.Word.ParagraphCollection.load_1
      - word.Word.ParagraphCollection.load_2
      - word.Word.ParagraphCollection.toJSON
      - word.Word.ParagraphCollection.track
      - word.Word.ParagraphCollection.untrack
  - uid: word.Word.ParagraphCollection.context
    summary: <span data-ttu-id="3ef23-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="3ef23-103">The request context associated with the object.</span></span> <span data-ttu-id="3ef23-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="3ef23-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.ParagraphCollection.items
    summary: <span data-ttu-id="3ef23-105">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="3ef23-105">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Paragraph[];'
      return:
        type:
          - 'Word.Paragraph[]'
  - uid: word.Word.ParagraphCollection.load
    summary: <span data-ttu-id="3ef23-106">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3ef23-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3ef23-107">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3ef23-107">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="3ef23-108">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3ef23-108">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3ef23-109">`load(option?: string | string[]): Word.ParagraphCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="3ef23-109">`load(option?: string | string[]): Word.ParagraphCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3ef23-110">`load(option?: { select?: string; expand?: string; }): Word.ParagraphCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3ef23-110">`load(option?: { select?: string; expand?: string; }): Word.ParagraphCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3ef23-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ParagraphCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3ef23-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ParagraphCollection` - Only available on collection types.</span></span> <span data-ttu-id="3ef23-112">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="3ef23-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="3ef23-113">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3ef23-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3ef23-114">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3ef23-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3ef23-115">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="3ef23-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="3ef23-116">例</span><span class="sxs-lookup"><span data-stu-id="3ef23-116">Examples</span></span>

      ```javascript
      // This example shows how to get the paragraphs in the Word document
      // along with their text and font size properties.
      // 
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a proxy object for the paragraphs collection.
          var paragraphs = context.document.body.paragraphs;

          // Queue a commmand to load the text and font properties.
          // It is best practice to always specify the property set. Otherwise, all properties are
          // returned in on the object.
          context.load(paragraphs, 'text, font/size');

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {

          // Insert code that works with the paragraphs loaded by context.load().
          })
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.ParagraphCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
  - uid: word.Word.ParagraphCollection.load_1
    summary: <span data-ttu-id="3ef23-117">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3ef23-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3ef23-118">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3ef23-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3ef23-119">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="3ef23-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.ParagraphCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: word.Word.ParagraphCollection.toJSON
    summary: '<span data-ttu-id="3ef23-120">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3ef23-120">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3ef23-121">.</span><span class="sxs-lookup"><span data-stu-id="3ef23-121"></span></span> <span data-ttu-id="3ef23-122">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3ef23-122"></span></span><!-- --><span data-ttu-id="3ef23-123">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Word.ParagraphCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Word.Interfaces.ParagraphCollectionData`</span><span class="sxs-lookup"><span data-stu-id="3ef23-123">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.ParagraphCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphCollectionData`</span></span><!-- --><span data-ttu-id="3ef23-124">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="3ef23-124">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphCollectionData;'
      return:
        type:
          - word.Word.Interfaces.ParagraphCollectionData
        description: ''
  - uid: word.Word.ParagraphCollection.track
    summary: '<span data-ttu-id="3ef23-125">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="3ef23-125">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="3ef23-126">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="3ef23-126">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="3ef23-127">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="3ef23-127">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
  - uid: word.Word.ParagraphCollection.untrack
    summary: '<span data-ttu-id="3ef23-128">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="3ef23-128">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="3ef23-129">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="3ef23-129">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="3ef23-130">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="3ef23-130">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="3ef23-131">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3ef23-131">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''