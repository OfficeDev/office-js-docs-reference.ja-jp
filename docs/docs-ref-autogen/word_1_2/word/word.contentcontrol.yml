### YamlMime:UniversalReference
items:
  - uid: 'word!Word.ContentControl:class'
    summary: |-
      <span data-ttu-id="ed71d-p101">コンテンツ コントロールを表します。コンテンツ コントロールは、特定の種類のコンテンツのコンテナーとして機能し、ドキュメント内で境界線で区切られ、ラベルが付いた領域になる場合もあります。個々のコンテンツ コントロールには、画像、表、書式設定されたテキストの段落などの内容が含まれていることがあります。現時点では、リッチ テキスト コンテンツ コントロールのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ed71d-p101">Represents a content control. Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content. Individual content controls may contain contents such as images, tables, or paragraphs of formatted text. Currently, only rich text content controls are supported.</span></span>

      <span data-ttu-id="ed71d-105">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.ContentControl
    fullName: Word.ContentControl
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.ContentControl#appearance:member'
      - 'word!Word.ContentControl#cannotDelete:member'
      - 'word!Word.ContentControl#cannotEdit:member'
      - 'word!Word.ContentControl#clear:member(1)'
      - 'word!Word.ContentControl#color:member'
      - 'word!Word.ContentControl#contentControls:member'
      - 'word!Word.ContentControl#context:member'
      - 'word!Word.ContentControl#delete:member(1)'
      - 'word!Word.ContentControl#font:member'
      - 'word!Word.ContentControl#getHtml:member(1)'
      - 'word!Word.ContentControl#getOoxml:member(1)'
      - 'word!Word.ContentControl#id:member'
      - 'word!Word.ContentControl#inlinePictures:member'
      - 'word!Word.ContentControl#insertBreak:member(1)'
      - 'word!Word.ContentControl#insertBreak:member(2)'
      - 'word!Word.ContentControl#insertFileFromBase64:member(1)'
      - 'word!Word.ContentControl#insertFileFromBase64:member(2)'
      - 'word!Word.ContentControl#insertHtml:member(1)'
      - 'word!Word.ContentControl#insertHtml:member(2)'
      - 'word!Word.ContentControl#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.ContentControl#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.ContentControl#insertOoxml:member(1)'
      - 'word!Word.ContentControl#insertOoxml:member(2)'
      - 'word!Word.ContentControl#insertParagraph:member(1)'
      - 'word!Word.ContentControl#insertParagraph:member(2)'
      - 'word!Word.ContentControl#insertText:member(1)'
      - 'word!Word.ContentControl#insertText:member(2)'
      - 'word!Word.ContentControl#load:member(1)'
      - 'word!Word.ContentControl#load:member(2)'
      - 'word!Word.ContentControl#load:member(3)'
      - 'word!Word.ContentControl#paragraphs:member'
      - 'word!Word.ContentControl#parentContentControl:member'
      - 'word!Word.ContentControl#placeholderText:member'
      - 'word!Word.ContentControl#removeWhenEdited:member'
      - 'word!Word.ContentControl#search:member(1)'
      - 'word!Word.ContentControl#select:member(1)'
      - 'word!Word.ContentControl#select:member(2)'
      - 'word!Word.ContentControl#set:member(1)'
      - 'word!Word.ContentControl#set:member(2)'
      - 'word!Word.ContentControl#style:member'
      - 'word!Word.ContentControl#tag:member'
      - 'word!Word.ContentControl#text:member'
      - 'word!Word.ContentControl#title:member'
      - 'word!Word.ContentControl#toJSON:member(1)'
      - 'word!Word.ContentControl#track:member(1)'
      - 'word!Word.ContentControl#type:member'
      - 'word!Word.ContentControl#untrack:member(1)'
  - uid: 'word!Word.ContentControl#appearance:member'
    summary: |-
      <span data-ttu-id="ed71d-106">コンテンツ コントロールの外観を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-106">Gets or sets the appearance of the content control.</span></span> <span data-ttu-id="ed71d-107">値には、' BoundingBox '、' Tags '、または ' Hidden ' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-107">The value can be 'BoundingBox', 'Tags', or 'Hidden'.</span></span>

      <span data-ttu-id="ed71d-108">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-108">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: appearance
    fullName: appearance
    langs:
      - typeScript
    type: property
    syntax:
      content: 'appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";'
      return:
        type:
          - 'word!Word.ContentControl#appearance~0:complex'
  - uid: 'word!Word.ContentControl#cannotDelete:member'
    summary: |-
      <span data-ttu-id="ed71d-109">ユーザーがコンテンツ コントロールを削除できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-109">Gets or sets a value that indicates whether the user can delete the content control.</span></span> <span data-ttu-id="ed71d-110">removeWhenEdited と同時に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-110">Mutually exclusive with removeWhenEdited.</span></span>

      <span data-ttu-id="ed71d-111">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-111">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: cannotDelete
    fullName: cannotDelete
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotDelete: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.ContentControl#cannotEdit:member'
    summary: |-
      <span data-ttu-id="ed71d-112">ユーザーがコンテンツ コントロールのコンテンツを編集できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-112">Gets or sets a value that indicates whether the user can edit the contents of the content control.</span></span>

      <span data-ttu-id="ed71d-113">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: cannotEdit
    fullName: cannotEdit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cannotEdit: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.ContentControl#clear:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-114">コンテンツ コントロールの内容をクリアします。</span><span class="sxs-lookup"><span data-stu-id="ed71d-114">Clears the contents of the content control.</span></span> <span data-ttu-id="ed71d-115">ユーザーは、消去された内容を元に戻す操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-115">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="ed71d-116">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-117">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the content controls collection.
              contentControls.load('text');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  if (contentControls.items.length === 0) {
                      console.log("There isn't a content control in this document.");
                  } else {
                      
                      // Queue a command to clear the contents of the first content control.
                      contentControls.items[0].clear();
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync().then(function () {
                          console.log('Content control cleared of contents.');
                      });      
                  }
                      
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.ContentControl#color:member'
    summary: |-
      <span data-ttu-id="ed71d-118">コンテンツ コントロールの色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-118">Gets or sets the color of the content control.</span></span> <span data-ttu-id="ed71d-119">色は、'\#RRGGBB ' 形式または色名を使用して指定されます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-119">Color is specified in '\#RRGGBB' format or by using the color name.</span></span>

      <span data-ttu-id="ed71d-120">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#contentControls:member'
    summary: |-
      <span data-ttu-id="ed71d-121">コンテンツ コントロールのコンテンツ コントロール オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-121">Gets the collection of content control objects in the content control.</span></span> <span data-ttu-id="ed71d-122">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-122">Read-only.</span></span>

      <span data-ttu-id="ed71d-123">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.ContentControl#context:member'
    summary: <span data-ttu-id="ed71d-124">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="ed71d-124">The request context associated with the object.</span></span> <span data-ttu-id="ed71d-125">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-125">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.ContentControl#delete:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-126">コンテンツ コントロールとそのコンテンツを削除します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-126">Deletes the content control and its content.</span></span> <span data-ttu-id="ed71d-127">keepContent が true の場合、コンテンツは削除されません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-127">If keepContent is set to true, the content is not deleted.</span></span>

      <span data-ttu-id="ed71d-128">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-128">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete(keepContent)
    fullName: delete(keepContent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(keepContent: boolean): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-129">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-129">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the content controls collection.
              contentControls.load('text');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  
                  if (contentControls.items.length === 0) {
                      console.log("There isn't a content control in this document.");
                  } else {
                      
                      // Queue a command to delete the first content control. The
                      // contents will remain in the document.
                      contentControls.items[0].delete(true);
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync().then(function () {
                          console.log('Content control cleared of contents.');
                      });      
                  }
                      
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: keepContent
          description: '<span data-ttu-id="ed71d-130">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-130">Required.</span></span> <span data-ttu-id="ed71d-131">コンテンツ コントロールを使用してコンテンツを削除する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-131">Indicates whether the content should be deleted with the content control.</span></span> <span data-ttu-id="ed71d-132">keepContent が true の場合、コンテンツは削除されません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-132">If keepContent is set to true, the content is not deleted.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.ContentControl#font:member'
    summary: |-
      <span data-ttu-id="ed71d-133">コンテンツ コントロールのテキストの書式設定を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-133">Gets the text format of the content control.</span></span> <span data-ttu-id="ed71d-134">これを使用して、フォント名、サイズ、色、およびその他のプロパティを取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-134">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="ed71d-135">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="ed71d-135">Read-only.</span></span>

      <span data-ttu-id="ed71d-136">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.ContentControl#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-137">コンテンツコントロールオブジェクトの HTML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-137">Gets an HTML representation of the content control object.</span></span> <span data-ttu-id="ed71d-138">Web ページまたは HTML ビューアーでレンダリングされる場合、書式設定は、ドキュメントの書式設定と完全に一致しますが、完全に一致するとは限りません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-138">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="ed71d-139">このメソッドは、異なるプラットフォーム (Windows、Mac など) の同じドキュメントに対して、まったく同じ HTML を返しません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-139">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="ed71d-140">厳密な忠実性、または複数のプラットフォーム間で`ContentControl.getOoxml()`の一貫性が必要な場合は、を使用して、返された XML を HTML に変換します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-140">If you need exact fidelity, or consistency across platforms, use `ContentControl.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="ed71d-141">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.ContentControl#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-142">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-142">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection that contains a specific tag.
              var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');
              
              // Queue a command to load the tag property for all of content controls. 
              context.load(contentControlsWithTag, 'tag');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTag.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to get the HTML contents of the first content control.
                      var html = contentControlsWithTag.items[0].getHtml();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Content control HTML: ' + html.value);
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.ContentControl#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-143">コンテンツ コントロール オブジェクトの Office Open XML (OOXML) 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-143">Gets the Office Open XML (OOXML) representation of the content control object.</span></span>

      <span data-ttu-id="ed71d-144">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-144">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.ContentControl#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-145">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-145">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to get the OOXML contents of the first content control.
                      var ooxml = contentControls.items[0].getOoxml();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Content control OOXML: ' + ooxml.value);
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.ContentControl#id:member'
    summary: |-
      <span data-ttu-id="ed71d-146">コンテンツ コントロールの識別子を表す整数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-146">Gets an integer that represents the content control identifier.</span></span> <span data-ttu-id="ed71d-147">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-147">Read-only.</span></span>

      <span data-ttu-id="ed71d-148">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'word!Word.ContentControl#inlinePictures:member'
    summary: |-
      <span data-ttu-id="ed71d-149">コンテンツ コントロールに含まれる inlinePicture オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-149">Gets the collection of inlinePicture objects in the content control.</span></span> <span data-ttu-id="ed71d-150">コレクションに浮動イメージは含まれません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-150">The collection does not include floating images.</span></span> <span data-ttu-id="ed71d-151">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-151">Read-only.</span></span>

      <span data-ttu-id="ed71d-152">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-152">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.ContentControl#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-153">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-153">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="ed71d-154">InsertLocation の値には、' Start '、' End '、' Before '、または ' After ' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-154">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="ed71d-155">このメソッドは、' RichTextTable '、' RichTextTableRow '、および ' RichTextTableCell ' のコンテンツコントロールと共に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-155">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>

      <span data-ttu-id="ed71d-156">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-156">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="ed71d-157">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-157">Required.</span></span> <span data-ttu-id="ed71d-158">休憩の種類。</span><span class="sxs-lookup"><span data-stu-id="ed71d-158">Type of break.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-159">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-159">Required.</span></span> <span data-ttu-id="ed71d-160">値には、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-160">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-161">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-161">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="ed71d-162">InsertLocation の値には、' Start '、' End '、' Before '、または ' After ' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-162">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span> <span data-ttu-id="ed71d-163">このメソッドは、' RichTextTable '、' RichTextTableRow '、および ' RichTextTableCell ' のコンテンツコントロールと共に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-163">This method cannot be used with 'RichTextTable', 'RichTextTableRow' and 'RichTextTableCell' content controls.</span></span>

      <span data-ttu-id="ed71d-164">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-164">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-165">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-165">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of content controls. 
              context.load(contentControls, 'id');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion. We now will have 
              // access to the content control collection.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to insert a page break after the first content control. 
                      contentControls.items[0].insertBreak('page', "After");
                      
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion. 
                      return context.sync()
                          .then(function () {
                              console.log('Inserted a page break after the first content control.');    
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="ed71d-166">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-166">Required.</span></span> <span data-ttu-id="ed71d-167">休憩の種類。</span><span class="sxs-lookup"><span data-stu-id="ed71d-167">Type of break.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-168">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-168">Required.</span></span> <span data-ttu-id="ed71d-169">値には、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-169">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-170">指定した位置にコンテンツコントロールにドキュメントを挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-170">Inserts a document into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-171">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-171">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-172">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-172">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="ed71d-173">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-173">Required.</span></span> <span data-ttu-id="ed71d-174">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="ed71d-174">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-175">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-175">Required.</span></span> <span data-ttu-id="ed71d-176">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-176">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-177">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-177">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-178">指定した位置にコンテンツコントロールにドキュメントを挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-178">Inserts a document into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-179">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-179">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-180">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-180">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="ed71d-181">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-181">Required.</span></span> <span data-ttu-id="ed71d-182">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="ed71d-182">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="ed71d-183">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-183">Required.</span></span> <span data-ttu-id="ed71d-184">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-184">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-185">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-185">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-186">コンテンツ コントロール内の指定された位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-186">Inserts HTML into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-187">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-187">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-188">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-188">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="ed71d-189">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-189">Required.</span></span> <span data-ttu-id="ed71d-190">コンテンツ コントロールに挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="ed71d-190">The HTML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-191">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-191">Required.</span></span> <span data-ttu-id="ed71d-192">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-192">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-193">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-193">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-194">コンテンツ コントロール内の指定された位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-194">Inserts HTML into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-195">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-195">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-196">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-196">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-197">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-197">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to put HTML into the contents of the first content control.
                      contentControls.items[0].insertHtml(
                          '<strong>HTML content inserted into the content control.</strong>',
                          'Start');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted HTML in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="ed71d-198">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-198">Required.</span></span> <span data-ttu-id="ed71d-199">コンテンツ コントロールに挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="ed71d-199">The HTML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="ed71d-200">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-200">Required.</span></span> <span data-ttu-id="ed71d-201">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-201">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-202">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-202">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-203">コンテンツ コントロール内の指定された位置にインライン画像を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-203">Inserts an inline picture into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-204">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-204">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-205">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-205">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="ed71d-206">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-206">Required.</span></span> <span data-ttu-id="ed71d-207">コンテンツ コントロールに挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="ed71d-207">The base64 encoded image to be inserted in the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-208">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-208">Required.</span></span> <span data-ttu-id="ed71d-209">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-209">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-210">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-210">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-211">コンテンツ コントロール内の指定された位置にインライン画像を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-211">Inserts an inline picture into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-212">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-212">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-213">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-213">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="ed71d-214">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-214">Required.</span></span> <span data-ttu-id="ed71d-215">コンテンツ コントロールに挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="ed71d-215">The base64 encoded image to be inserted in the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="ed71d-216">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-216">Required.</span></span> <span data-ttu-id="ed71d-217">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-217">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-218">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-218">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-219">指定した位置に、コンテンツコントロールに OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-219">Inserts OOXML into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-220">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-220">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-221">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-221">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="ed71d-222">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-222">Required.</span></span> <span data-ttu-id="ed71d-223">コンテンツコントロールに挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-223">The OOXML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-224">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-224">Required.</span></span> <span data-ttu-id="ed71d-225">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-225">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-226">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-226">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-227">指定した位置に、コンテンツコントロールに OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-227">Inserts OOXML into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-228">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-228">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-229">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-229">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-230">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-230">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to put OOXML into the contents of the first content control.
                      contentControls.items[0].insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", "End");
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted OOXML in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="ed71d-231">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-231">Required.</span></span> <span data-ttu-id="ed71d-232">コンテンツコントロールに挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-232">The OOXML to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="ed71d-233">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-233">Required.</span></span> <span data-ttu-id="ed71d-234">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-234">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-235">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-235">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-236">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-236">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="ed71d-237">InsertLocation の値には、' Start '、' End '、' Before '、または ' After ' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-237">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="ed71d-238">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-238">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="ed71d-239">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-239">Required.</span></span> <span data-ttu-id="ed71d-240">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="ed71d-240">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-241">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-241">Required.</span></span> <span data-ttu-id="ed71d-242">値には、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-242">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="ed71d-243">'' Before '' と '' After '' は、'' RichTextTable ''、'' RichTextTableRow ''、および '' RichTextTableCell '' のコンテンツコントロールと併用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-243">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-244">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-244">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="ed71d-245">InsertLocation の値には、' Start '、' End '、' Before '、または ' After ' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-245">The insertLocation value can be 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="ed71d-246">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-246">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-247">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-247">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to insert a paragraph after the first content control. 
                      contentControls.items[0].insertParagraph('Text of the inserted paragraph.', 'After');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Inserted a paragraph after the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="ed71d-248">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-248">Required.</span></span> <span data-ttu-id="ed71d-249">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="ed71d-249">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="ed71d-250">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-250">Required.</span></span> <span data-ttu-id="ed71d-251">値には、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-251">The value can be ''Start'', ''End'', ''Before'', or ''After''.</span></span> <span data-ttu-id="ed71d-252">'' Before '' と '' After '' は、'' RichTextTable ''、'' RichTextTableRow ''、および '' RichTextTableCell '' のコンテンツコントロールと併用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-252">''Before'' and ''After'' cannot be used with ''RichTextTable'', ''RichTextTableRow'' and ''RichTextTableCell'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#insertText:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-253">コンテンツ コントロール内の指定された位置にテキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-253">Inserts text into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-254">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-254">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-255">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="ed71d-256">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-256">Required.</span></span> <span data-ttu-id="ed71d-257">コンテンツ コントロールに挿入する テキスト。</span><span class="sxs-lookup"><span data-stu-id="ed71d-257">The text to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="ed71d-258">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-258">Required.</span></span> <span data-ttu-id="ed71d-259">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-259">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-260">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-260">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.ContentControl#insertText:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-261">コンテンツ コントロール内の指定された位置にテキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-261">Inserts text into the content control at the specified location.</span></span> <span data-ttu-id="ed71d-262">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-262">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="ed71d-263">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-264">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-264">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to replace text in the first content control. 
                      contentControls.items[0].insertText('Replaced text in the first content control.', 'Replace');
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Replaced text in the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how to use the insertText method.
          // https://aka.ms/sillystorywordaddin
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="ed71d-265">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-265">Required.</span></span> <span data-ttu-id="ed71d-266">コンテンツ コントロールに挿入する テキスト。</span><span class="sxs-lookup"><span data-stu-id="ed71d-266">The text to be inserted in to the content control.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="ed71d-267">必須。</span><span class="sxs-lookup"><span data-stu-id="ed71d-267">Required.</span></span> <span data-ttu-id="ed71d-268">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-268">The value can be ''Replace'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-269">'' Replace '' は、'' RichTextTable '' および '' RichTextTableRow '' コンテンツコントロールでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-269">''Replace'' cannot be used with ''RichTextTable'' and ''RichTextTableRow'' content controls.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.ContentControl#load:member(1)'
    summary: <span data-ttu-id="ed71d-270">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-270">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ed71d-271">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ed71d-271">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="ed71d-272">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ed71d-272">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="ed71d-273">`load(option?: string | string[]): Word.ContentControl`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-273">`load(option?: string | string[]): Word.ContentControl` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="ed71d-274">`load(option?: { select?: string; expand?: string; }): Word.ContentControl`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-274">`load(option?: { select?: string; expand?: string; }): Word.ContentControl` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="ed71d-275">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-275">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControl` - Only available on collection types.</span></span> <span data-ttu-id="ed71d-276">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="ed71d-276">It is similar to the preceding signature.</span></span> <span data-ttu-id="ed71d-277">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-277">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ed71d-278">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-278">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ed71d-279">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-279">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="ed71d-280">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-280">Examples</span></span>

      ```javascript
      // Load all of the content control properties
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Create a proxy object for the content controls collection.
          var contentControls = context.document.contentControls;
          
          // Queue a command to load the id property for all of the content controls. 
          context.load(contentControls, 'id');
           
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              if (contentControls.items.length === 0) {
                  console.log('No content control found.');
              }
              else {
                  // Queue a command to load the properties on the first content control. 
                  contentControls.items[0].load(  'appearance,' +
                                                  'cannotDelete,' +
                                                  'cannotEdit,' +
                                                  'id,' +
                                                  'placeHolderText,' +
                                                  'removeWhenEdited,' +
                                                  'title,' +
                                                  'text,' +
                                                  'type,' +
                                                  'style,' +
                                                  'tag,' +
                                                  'font/size,' +
                                                  'font/name,' +
                                                  'font/color');             
              
                  // Synchronize the document state by executing the queued commands, 
                  // and return a promise to indicate task completion.
                  return context.sync()
                      .then(function () {
                          console.log('Property values of the first content control:' + 
                              '   ----- appearance: ' + contentControls.items[0].appearance + 
                              '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                              '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                              '   ----- color: ' + contentControls.items[0].color +
                              '   ----- id: ' + contentControls.items[0].id +
                              '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                              '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                              '   ----- title: ' + contentControls.items[0].title +
                              '   ----- text: ' + contentControls.items[0].text +
                              '   ----- type: ' + contentControls.items[0].type +
                              '   ----- style: ' + contentControls.items[0].style +
                              '   ----- tag: ' + contentControls.items[0].tag +
                              '   ----- font size: ' + contentControls.items[0].font.size +
                              '   ----- font name: ' + contentControls.items[0].font.name +
                              '   ----- font color: ' + contentControls.items[0].font.color);
                  });
              }
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ContentControlLoadOptions): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ContentControlLoadOptions:interface'
  - uid: 'word!Word.ContentControl#load:member(2)'
    summary: <span data-ttu-id="ed71d-281">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-281">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ed71d-282">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ed71d-282">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="ed71d-283">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="ed71d-283">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.ContentControl#load:member(3)'
    summary: <span data-ttu-id="ed71d-284">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-284">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ed71d-285">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ed71d-285">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="ed71d-286">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-286">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.ContentControl#paragraphs:member'
    summary: |-
      <span data-ttu-id="ed71d-287">コンテンツ コントロールにある Paragraph オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-287">Get the collection of paragraph objects in the content control.</span></span> <span data-ttu-id="ed71d-288">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-288">Read-only.</span></span>

      <span data-ttu-id="ed71d-289">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.ContentControl#parentContentControl:member'
    summary: |-
      <span data-ttu-id="ed71d-290">コンテンツ コントロールを含むコンテンツ コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-290">Gets the content control that contains the content control.</span></span> <span data-ttu-id="ed71d-291">親コンテンツコントロールがない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-291">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="ed71d-292">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-292">Read-only.</span></span>

      <span data-ttu-id="ed71d-293">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-293">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.ContentControl#placeholderText:member'
    summary: |-
      <span data-ttu-id="ed71d-294">コンテンツ コントロールのプレースホルダー テキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-294">Gets or sets the placeholder text of the content control.</span></span> <span data-ttu-id="ed71d-295">コンテンツ コントロールが空の場合は、淡色のテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-295">Dimmed text will be displayed when the content control is empty.</span></span>

      <span data-ttu-id="ed71d-296">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-296">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: placeholderText
    fullName: placeholderText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placeholderText: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#removeWhenEdited:member'
    summary: |-
      <span data-ttu-id="ed71d-297">コンテンツ コントロールを編集後に削除できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-297">Gets or sets a value that indicates whether the content control is removed after it is edited.</span></span> <span data-ttu-id="ed71d-298">cannotDelete と同時に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ed71d-298">Mutually exclusive with cannotDelete.</span></span>

      <span data-ttu-id="ed71d-299">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-299">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: removeWhenEdited
    fullName: removeWhenEdited
    langs:
      - typeScript
    type: property
    syntax:
      content: 'removeWhenEdited: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.ContentControl#search:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-300">コンテンツコントロールオブジェクトの範囲に対して、指定した SearchOptions を使用して検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-300">Performs a search with the specified SearchOptions on the scope of the content control object.</span></span> <span data-ttu-id="ed71d-301">検索結果は、範囲オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="ed71d-301">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="ed71d-302">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-302">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-303">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-303">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy object for the content controls collection.
              var contentControls = context.document.contentControls;
              
              // Queue a command to load the id property for all of the content controls. 
              context.load(contentControls, 'id');
               
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControls.items.length === 0) {
                      console.log('No content control found.');
                  }
                  else {
                      // Queue a command to select the first content control.
                      contentControls.items[0].select();
                  
                      // Synchronize the document state by executing the queued commands, 
                      // and return a promise to indicate task completion.
                      return context.sync()
                          .then(function () {
                              console.log('Selected the first content control.');
                      });
                  }
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="ed71d-304">必須です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-304">Required.</span></span> <span data-ttu-id="ed71d-305">検索テキスト。</span><span class="sxs-lookup"><span data-stu-id="ed71d-305">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="ed71d-306">省略可能。</span><span class="sxs-lookup"><span data-stu-id="ed71d-306">Optional.</span></span> <span data-ttu-id="ed71d-307">検索のオプション。</span><span class="sxs-lookup"><span data-stu-id="ed71d-307">Options for the search.</span></span>
          type:
            - 'word!Word.ContentControl#search~0:complex'
  - uid: 'word!Word.ContentControl#select:member(1)'
    summary: |-
      <span data-ttu-id="ed71d-308">コンテンツ コントロールを選択します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-308">Selects the content control.</span></span> <span data-ttu-id="ed71d-309">その結果、Word は選択範囲にスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-309">This causes Word to scroll to the selection.</span></span>

      <span data-ttu-id="ed71d-310">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-310">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="ed71d-311">省略可能。</span><span class="sxs-lookup"><span data-stu-id="ed71d-311">Optional.</span></span> <span data-ttu-id="ed71d-312">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="ed71d-312">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-313">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-313">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.ContentControl#select:member(2)'
    summary: |-
      <span data-ttu-id="ed71d-314">コンテンツ コントロールを選択します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-314">Selects the content control.</span></span> <span data-ttu-id="ed71d-315">その結果、Word は選択範囲にスクロールされます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-315">This causes Word to scroll to the selection.</span></span>

      <span data-ttu-id="ed71d-316">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-316">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="ed71d-317">省略可能。</span><span class="sxs-lookup"><span data-stu-id="ed71d-317">Optional.</span></span> <span data-ttu-id="ed71d-318">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="ed71d-318">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="ed71d-319">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-319">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.ContentControl#set:member(1)'
    summary: '<span data-ttu-id="ed71d-320">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-320">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ed71d-321">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="ed71d-321">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="ed71d-322">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="ed71d-322">This method has the following additional signature:</span></span>

      `set(properties: Word.ContentControl): void`

      #### <a name="examples"></a><span data-ttu-id="ed71d-323">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-323">Examples</span></span>

      ```typescript
      // Adds title and colors to odd and even content controls and changes their appearance.
      await Word.run(async (context) => {
        // Gets the complete sentence (as range) associated with the insertion point.
        let evenContentControls = context.document.contentControls.getByTag("even");
        let oddContentControls = context.document.contentControls.getByTag("odd");
        evenContentControls.load("length");
        oddContentControls.load("length");

        await context.sync();

        for (let i = 0; i < evenContentControls.items.length; i++) {
          // Change a few properties and append a paragraph
          evenContentControls.items[i].set({
            color: "red",
            title: "Odd ContentControl #" + (i + 1),
            appearance: "Tags"
          });
          evenContentControls.items[i].insertParagraph("This is an odd content control", "End");
        }

        for (let j = 0; j < oddContentControls.items.length; j++) {
          // Change a few properties and append a paragraph
          oddContentControls.items[j].set({
            color: "green",
            title: "Even ContentControl #" + (j + 1),
            appearance: "Tags"
          });
          oddContentControls.items[j].insertHtml("This is an <b>even</b> content control", "End");
        }

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="ed71d-324">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ed71d-324">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.ContentControlUpdateData:interface'
        - id: options
          description: <span data-ttu-id="ed71d-325">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-325">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.ContentControl#set:member(2)'
    summary: '<span data-ttu-id="ed71d-326">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-326">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.ContentControl): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.ContentControl:class'
  - uid: 'word!Word.ContentControl#style:member'
    summary: |-
      <span data-ttu-id="ed71d-327">コンテンツコントロールのスタイル名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-327">Gets or sets the style name for the content control.</span></span> <span data-ttu-id="ed71d-328">カスタム スタイルとローカライズされたスタイルの名前には、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-328">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="ed71d-329">ロケール間で移植可能な組み込みスタイルを使用するには、"styleBuiltIn" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ed71d-329">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="ed71d-330">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-330">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#tag:member'
    summary: |-
      <span data-ttu-id="ed71d-331">コンテンツコントロールを識別するタグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-331">Gets or sets a tag to identify a content control.</span></span>

      <span data-ttu-id="ed71d-332">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-332">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tag
    fullName: tag
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tag: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ed71d-333">例</span><span class="sxs-lookup"><span data-stu-id="ed71d-333">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {
              
              // Create a proxy range object for the current selection.
              var range = context.document.getSelection();
              
              // Queue a command to create the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = 'Customer-Address';
              myContentControl.title = ' has t';
              myContentControl.style = 'Heading 2';
              myContentControl.insertText('One Microsoft Way, Redmond, WA 98052', 'Replace');
              myContentControl.cannotEdit = true;
              
              // Queue a command to load the id property for the content control you created.
              context.load(myContentControl, 'id');
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Created content control with id: ' + myContentControl.id);
              });  
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          // Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // Don't need any properties; just wrap each paragraph with a content control.

            await context.sync();

            for (let i = 0; i < paragraphs.items.length; i++) {
              let contentControl = paragraphs.items[i].insertContentControl();
              // For even, tag "even".
              if (i % 2 === 0) {
                contentControl.tag = "even";
              } else {
                contentControl.tag = "odd";
              }
            }
            console.log("Content controls inserted: " + paragraphs.items.length);

            await context.sync();
          });
          ```
  - uid: 'word!Word.ContentControl#text:member'
    summary: |-
      <span data-ttu-id="ed71d-334">コンテンツ コントロールのテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-334">Gets the text of the content control.</span></span> <span data-ttu-id="ed71d-335">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-335">Read-only.</span></span>

      <span data-ttu-id="ed71d-336">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-336">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#title:member'
    summary: |-
      <span data-ttu-id="ed71d-337">コンテンツ コントロールのタイトルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-337">Gets or sets the title for a content control.</span></span>

      <span data-ttu-id="ed71d-338">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-338">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'title: string;'
      return:
        type:
          - string
  - uid: 'word!Word.ContentControl#toJSON:member(1)'
    summary: '<span data-ttu-id="ed71d-339">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="ed71d-339">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="ed71d-340">.</span><span class="sxs-lookup"><span data-stu-id="ed71d-340"></span></span> <span data-ttu-id="ed71d-341">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="ed71d-341"></span></span><!-- --><span data-ttu-id="ed71d-342">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の "ContentControl" オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力します) を返します。`Word.Interfaces.ContentControlData`</span><span class="sxs-lookup"><span data-stu-id="ed71d-342">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.ContentControl object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlData`</span></span><!-- --><span data-ttu-id="ed71d-343">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-343">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ContentControlData;'
      return:
        type:
          - 'word!Word.Interfaces.ContentControlData:interface'
        description: ''
  - uid: 'word!Word.ContentControl#track:member(1)'
    summary: '<span data-ttu-id="ed71d-344">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-344">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="ed71d-345">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-345">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="ed71d-346">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="ed71d-346">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
  - uid: 'word!Word.ContentControl#type:member'
    summary: |-
      <span data-ttu-id="ed71d-347">コンテンツ コントロールの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-347">Gets the content control type.</span></span> <span data-ttu-id="ed71d-348">現在、リッチ テキストのコンテンツ コントロールのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ed71d-348">Only rich text content controls are supported currently.</span></span> <span data-ttu-id="ed71d-349">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-349">Read-only.</span></span>

      <span data-ttu-id="ed71d-350">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ed71d-350">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
      return:
        type:
          - 'word!Word.ContentControl#type~0:complex'
  - uid: 'word!Word.ContentControl#untrack:member(1)'
    summary: '<span data-ttu-id="ed71d-351">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="ed71d-351">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="ed71d-352">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="ed71d-352">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="ed71d-353">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="ed71d-353">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="ed71d-354">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ed71d-354">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControl#appearance~0:complex'
    name: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden"
    fullName: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden"
    spec.typeScript:
      - uid: 'word!Word.ContentControlAppearance:enum'
        name: Word.ContentControlAppearance
        fullName: Word.ContentControlAppearance
      - name: ' | "BoundingBox" | "Tags" | "Hidden"'
        fullName: ' | "BoundingBox" | "Tags" | "Hidden"'
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.ContentControl#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.ContentControl#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Interfaces.ContentControlLoadOptions:interface'
    name: Word.Interfaces.ContentControlLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.ContentControl#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.ContentControlUpdateData:interface'
    name: Interfaces.ContentControlUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.ContentControlData:interface'
    name: Word.Interfaces.ContentControlData
  - uid: 'word!Word.ContentControl#type~0:complex'
    name: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
    fullName: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
    spec.typeScript:
      - uid: 'word!Word.ContentControlType:enum'
        name: Word.ContentControlType
        fullName: Word.ContentControlType
      - name: ' | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"'
        fullName: ' | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"'