### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Range:class'
    summary: |-
      <span data-ttu-id="6c86c-101">文書内の連続した領域を表します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-101">Represents a contiguous area in a document.</span></span>

      <span data-ttu-id="6c86c-102">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Range#clear:member(1)'
      - 'word!Word.Range#contentControls:member'
      - 'word!Word.Range#context:member'
      - 'word!Word.Range#delete:member(1)'
      - 'word!Word.Range#font:member'
      - 'word!Word.Range#getHtml:member(1)'
      - 'word!Word.Range#getOoxml:member(1)'
      - 'word!Word.Range#inlinePictures:member'
      - 'word!Word.Range#insertBreak:member(1)'
      - 'word!Word.Range#insertBreak:member(2)'
      - 'word!Word.Range#insertContentControl:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(1)'
      - 'word!Word.Range#insertFileFromBase64:member(2)'
      - 'word!Word.Range#insertHtml:member(1)'
      - 'word!Word.Range#insertHtml:member(2)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Range#insertOoxml:member(1)'
      - 'word!Word.Range#insertOoxml:member(2)'
      - 'word!Word.Range#insertParagraph:member(1)'
      - 'word!Word.Range#insertParagraph:member(2)'
      - 'word!Word.Range#insertText:member(1)'
      - 'word!Word.Range#insertText:member(2)'
      - 'word!Word.Range#load:member(1)'
      - 'word!Word.Range#load:member(2)'
      - 'word!Word.Range#load:member(3)'
      - 'word!Word.Range#paragraphs:member'
      - 'word!Word.Range#parentContentControl:member'
      - 'word!Word.Range#search:member(1)'
      - 'word!Word.Range#select:member(1)'
      - 'word!Word.Range#select:member(2)'
      - 'word!Word.Range#set:member(1)'
      - 'word!Word.Range#set:member(2)'
      - 'word!Word.Range#style:member'
      - 'word!Word.Range#text:member'
      - 'word!Word.Range#toJSON:member(1)'
      - 'word!Word.Range#track:member(1)'
      - 'word!Word.Range#untrack:member(1)'
  - uid: 'word!Word.Range#clear:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-103">範囲オブジェクトの内容をクリアします。</span><span class="sxs-lookup"><span data-stu-id="6c86c-103">Clears the contents of the range object.</span></span> <span data-ttu-id="6c86c-104">ユーザーは、消去された内容を元に戻す操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="6c86c-105">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-106">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#contentControls:member'
    summary: |-
      <span data-ttu-id="6c86c-107">範囲内のコンテンツコントロールオブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-107">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id="6c86c-108">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-108">Read-only.</span></span>

      <span data-ttu-id="6c86c-109">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Range#context:member'
    summary: <span data-ttu-id="6c86c-110">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="6c86c-110">The request context associated with the object.</span></span> <span data-ttu-id="6c86c-111">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Range#delete:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-112">文書から範囲と、その範囲の内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-112">Deletes the range and its content from the document.</span></span>

      <span data-ttu-id="6c86c-113">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-114">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-114">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#font:member'
    summary: |-
      <span data-ttu-id="6c86c-115">範囲のテキスト形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-115">Gets the text format of the range.</span></span> <span data-ttu-id="6c86c-116">これを使用して、フォント名、サイズ、色、およびその他のプロパティを取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-116">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="6c86c-117">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-117">Read-only.</span></span>

      <span data-ttu-id="6c86c-118">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-118">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Range#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-119">Range オブジェクトの HTML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-119">Gets an HTML representation of the range object.</span></span> <span data-ttu-id="6c86c-120">Web ページまたは HTML ビューアーでレンダリングされる場合、書式設定は、ドキュメントの書式設定と完全に一致しますが、完全に一致するとは限りません。</span><span class="sxs-lookup"><span data-stu-id="6c86c-120">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="6c86c-121">このメソッドは、異なるプラットフォーム (Windows、Mac、web 用の Word など) で同じドキュメントに対して、まったく同じ HTML を返しません。</span><span class="sxs-lookup"><span data-stu-id="6c86c-121">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word for the web, etc.).</span></span> <span data-ttu-id="6c86c-122">厳密な忠実性、または複数のプラットフォーム間で`Range.getOoxml()`の一貫性が必要な場合は、を使用して、返された XML を HTML に変換します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-122">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="6c86c-123">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-124">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-124">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-125">Range オブジェクトの OOXML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-125">Gets the OOXML representation of the range object.</span></span>

      <span data-ttu-id="6c86c-126">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Range#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-127">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Range#inlinePictures:member'
    summary: |-
      <span data-ttu-id="6c86c-128">範囲に含まれるインライン画像オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-128">Gets the collection of inline picture objects in the range.</span></span> <span data-ttu-id="6c86c-129">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="6c86c-129">Read-only.</span></span>

      <span data-ttu-id="6c86c-130">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-130">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Range#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-131">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-131">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="6c86c-132">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-132">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="6c86c-133">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-133">Required.</span></span> <span data-ttu-id="6c86c-134">追加する区切りの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-134">The break type to add.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: <span data-ttu-id="6c86c-135">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-135">Required.</span></span> <span data-ttu-id="6c86c-136">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-136">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-137">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-137">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="6c86c-138">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-138">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-139">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-139">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="6c86c-140">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-140">Required.</span></span> <span data-ttu-id="6c86c-141">追加する区切りの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-141">The break type to add.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="6c86c-142">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-142">Required.</span></span> <span data-ttu-id="6c86c-143">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-143">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-144">範囲オブジェクトを、リッチ テキストのコンテンツ コントロールでラップします。</span><span class="sxs-lookup"><span data-stu-id="6c86c-144">Wraps the range object with a rich text content control.</span></span>

      <span data-ttu-id="6c86c-145">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-145">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-146">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-146">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: 'word!Word.Range#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-147">指定した位置に文書を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-147">Inserts a document at the specified location.</span></span>

      <span data-ttu-id="6c86c-148">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-149">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="6c86c-150">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-150">Required.</span></span> <span data-ttu-id="6c86c-151">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="6c86c-151">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="6c86c-152">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-152">Required.</span></span> <span data-ttu-id="6c86c-153">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-153">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-154">指定した位置に文書を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-154">Inserts a document at the specified location.</span></span>

      <span data-ttu-id="6c86c-155">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-155">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="6c86c-156">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-156">Required.</span></span> <span data-ttu-id="6c86c-157">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="6c86c-157">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="6c86c-158">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-158">Required.</span></span> <span data-ttu-id="6c86c-159">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-159">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-160">指定した位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-160">Inserts HTML at the specified location.</span></span>

      <span data-ttu-id="6c86c-161">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-161">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-162">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-162">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="6c86c-163">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-163">Required.</span></span> <span data-ttu-id="6c86c-164">挿入する HTML を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-164">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="6c86c-165">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-165">Required.</span></span> <span data-ttu-id="6c86c-166">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-166">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-167">指定した位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-167">Inserts HTML at the specified location.</span></span>

      <span data-ttu-id="6c86c-168">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-168">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="6c86c-169">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-169">Required.</span></span> <span data-ttu-id="6c86c-170">挿入する HTML を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-170">The HTML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="6c86c-171">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-171">Required.</span></span> <span data-ttu-id="6c86c-172">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-172">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-173">指定された位置に画像を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-173">Inserts a picture at the specified location.</span></span>

      <span data-ttu-id="6c86c-174">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-174">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="6c86c-175">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-175">Required.</span></span> <span data-ttu-id="6c86c-176">挿入する base64 でエンコードされたイメージ。</span><span class="sxs-lookup"><span data-stu-id="6c86c-176">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="6c86c-177">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-177">Required.</span></span> <span data-ttu-id="6c86c-178">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-178">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-179">指定された位置に画像を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-179">Inserts a picture at the specified location.</span></span>

      <span data-ttu-id="6c86c-180">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-180">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="6c86c-181">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-181">Required.</span></span> <span data-ttu-id="6c86c-182">挿入する base64 でエンコードされたイメージ。</span><span class="sxs-lookup"><span data-stu-id="6c86c-182">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="6c86c-183">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-183">Required.</span></span> <span data-ttu-id="6c86c-184">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-184">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-185">指定した位置に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-185">Inserts OOXML at the specified location.</span></span>

      <span data-ttu-id="6c86c-186">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-187">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-187">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="6c86c-188">必須。</span><span class="sxs-lookup"><span data-stu-id="6c86c-188">Required.</span></span> <span data-ttu-id="6c86c-189">挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-189">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="6c86c-190">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-190">Required.</span></span> <span data-ttu-id="6c86c-191">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-191">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-192">指定した位置に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-192">Inserts OOXML at the specified location.</span></span>

      <span data-ttu-id="6c86c-193">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="6c86c-194">必須。</span><span class="sxs-lookup"><span data-stu-id="6c86c-194">Required.</span></span> <span data-ttu-id="6c86c-195">挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-195">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="6c86c-196">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-196">Required.</span></span> <span data-ttu-id="6c86c-197">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-197">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-198">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-198">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="6c86c-199">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-199">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-200">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-200">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="6c86c-201">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-201">Required.</span></span> <span data-ttu-id="6c86c-202">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="6c86c-202">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="6c86c-203">必須。</span><span class="sxs-lookup"><span data-stu-id="6c86c-203">Required.</span></span> <span data-ttu-id="6c86c-204">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-204">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-205">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-205">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="6c86c-206">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-206">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="6c86c-207">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-207">Required.</span></span> <span data-ttu-id="6c86c-208">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="6c86c-208">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="6c86c-209">必須。</span><span class="sxs-lookup"><span data-stu-id="6c86c-209">Required.</span></span> <span data-ttu-id="6c86c-210">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-210">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#insertText:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-211">指定した位置にテキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-211">Inserts text at the specified location.</span></span>

      <span data-ttu-id="6c86c-212">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-212">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-213">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-213">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="6c86c-214">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-214">Required.</span></span> <span data-ttu-id="6c86c-215">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="6c86c-215">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="6c86c-216">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-216">Required.</span></span> <span data-ttu-id="6c86c-217">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-217">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Range#insertText:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-218">指定した位置にテキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-218">Inserts text at the specified location.</span></span>

      <span data-ttu-id="6c86c-219">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-219">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="6c86c-220">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-220">Required.</span></span> <span data-ttu-id="6c86c-221">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="6c86c-221">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="6c86c-222">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-222">Required.</span></span> <span data-ttu-id="6c86c-223">値には、'' Replace ''、'' Start ''、'' End ''、'' Before ''、または '' After '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-223">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Range#load:member(1)'
    summary: <span data-ttu-id="6c86c-224">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-224">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6c86c-225">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c86c-225">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="6c86c-226">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="6c86c-226">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6c86c-227">`load(option?: string | string[]): Word.Range`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-227">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6c86c-228">`load(option?: { select?: string; expand?: string; }): Word.Range`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-228">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6c86c-229">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-229">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id="6c86c-230">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="6c86c-230">It is similar to the preceding signature.</span></span> <span data-ttu-id="6c86c-231">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-231">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6c86c-232">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-232">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6c86c-233">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-233">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.RangeLoadOptions:interface'
  - uid: 'word!Word.Range#load:member(2)'
    summary: <span data-ttu-id="6c86c-234">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-234">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6c86c-235">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c86c-235">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="6c86c-236">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="6c86c-236">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Range#load:member(3)'
    summary: <span data-ttu-id="6c86c-237">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-237">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6c86c-238">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c86c-238">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6c86c-239">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-239">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Range#paragraphs:member'
    summary: |-
      <span data-ttu-id="6c86c-240">範囲内の paragraph オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-240">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id="6c86c-241">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-241">Read-only.</span></span>

      <span data-ttu-id="6c86c-242">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-242">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
  - uid: 'word!Word.Range#parentContentControl:member'
    summary: |-
      <span data-ttu-id="6c86c-243">範囲を格納するコンテンツ コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-243">Gets the content control that contains the range.</span></span> <span data-ttu-id="6c86c-244">親コンテンツコントロールがない場合は、エラーをスローします。</span><span class="sxs-lookup"><span data-stu-id="6c86c-244">Throws an error if there isn't a parent content control.</span></span> <span data-ttu-id="6c86c-245">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-245">Read-only.</span></span>

      <span data-ttu-id="6c86c-246">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-246">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Range#search:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-247">Range オブジェクトの範囲に対して、指定した SearchOptions を使用して検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-247">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id="6c86c-248">検索結果は、範囲オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="6c86c-248">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="6c86c-249">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-249">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="6c86c-250">必須です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-250">Required.</span></span> <span data-ttu-id="6c86c-251">検索テキスト。</span><span class="sxs-lookup"><span data-stu-id="6c86c-251">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="6c86c-252">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6c86c-252">Optional.</span></span> <span data-ttu-id="6c86c-253">検索のオプション。</span><span class="sxs-lookup"><span data-stu-id="6c86c-253">Options for the search.</span></span>
          type:
            - 'word!Word.Range#search~0:complex'
  - uid: 'word!Word.Range#select:member(1)'
    summary: |-
      <span data-ttu-id="6c86c-254">範囲を選択して、その範囲に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-254">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="6c86c-255">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6c86c-256">例</span><span class="sxs-lookup"><span data-stu-id="6c86c-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a command to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="6c86c-257">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6c86c-257">Optional.</span></span> <span data-ttu-id="6c86c-258">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="6c86c-258">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="6c86c-259">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-259">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Range#select:member(2)'
    summary: |-
      <span data-ttu-id="6c86c-260">範囲を選択して、その範囲に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-260">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="6c86c-261">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-261">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="6c86c-262">省略可能。</span><span class="sxs-lookup"><span data-stu-id="6c86c-262">Optional.</span></span> <span data-ttu-id="6c86c-263">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="6c86c-263">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="6c86c-264">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-264">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Range#set:member(1)'
    summary: '<span data-ttu-id="6c86c-265">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-265">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6c86c-266">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="6c86c-266">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6c86c-267">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="6c86c-267">This method has the following additional signature:</span></span>

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="6c86c-268">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6c86c-268">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.RangeUpdateData:interface'
        - id: options
          description: <span data-ttu-id="6c86c-269">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-269">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Range#set:member(2)'
    summary: '<span data-ttu-id="6c86c-270">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-270">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Range:class'
  - uid: 'word!Word.Range#style:member'
    summary: |-
      <span data-ttu-id="6c86c-271">範囲のスタイル名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-271">Gets or sets the style name for the range.</span></span> <span data-ttu-id="6c86c-272">カスタム スタイルとローカライズされたスタイルの名前には、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-272">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="6c86c-273">ロケール間で移植可能な組み込みスタイルを使用するには、"styleBuiltIn" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c86c-273">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="6c86c-274">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-274">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#text:member'
    summary: |-
      <span data-ttu-id="6c86c-275">範囲のテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-275">Gets the text of the range.</span></span> <span data-ttu-id="6c86c-276">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-276">Read-only.</span></span>

      <span data-ttu-id="6c86c-277">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6c86c-277">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Range#toJSON:member(1)'
    summary: '<span data-ttu-id="6c86c-278">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6c86c-278">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6c86c-279">.</span><span class="sxs-lookup"><span data-stu-id="6c86c-279"></span></span> <span data-ttu-id="6c86c-280">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6c86c-280"></span></span><!-- --><span data-ttu-id="6c86c-281">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Word の Range オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="6c86c-281">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="6c86c-282">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-282">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - 'word!Word.Interfaces.RangeData:interface'
        description: ''
  - uid: 'word!Word.Range#track:member(1)'
    summary: '<span data-ttu-id="6c86c-283">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-283">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="6c86c-284">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-284">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="6c86c-285">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="6c86c-285">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
  - uid: 'word!Word.Range#untrack:member(1)'
    summary: '<span data-ttu-id="6c86c-286">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="6c86c-286">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="6c86c-287">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="6c86c-287">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="6c86c-288">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="6c86c-288">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="6c86c-289">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6c86c-289">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Range#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Interfaces.RangeLoadOptions:interface'
    name: Word.Interfaces.RangeLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Range#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.RangeUpdateData:interface'
    name: Interfaces.RangeUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Interfaces.RangeData:interface'
    name: Word.Interfaces.RangeData