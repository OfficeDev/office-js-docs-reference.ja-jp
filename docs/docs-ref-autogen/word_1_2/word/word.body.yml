### YamlMime:UniversalReference
items:
  - uid: word.Word.Body
    summary: |-
      <span data-ttu-id="11c35-101">文書またはセクションの本文を表します。</span><span class="sxs-lookup"><span data-stu-id="11c35-101">Represents the body of a document or a section.</span></span>

      <span data-ttu-id="11c35-102">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Body
    fullName: Word.Body
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.Body.clear
      - word.Word.Body.contentControls
      - word.Word.Body.context
      - word.Word.Body.font
      - word.Word.Body.getHtml
      - word.Word.Body.getOoxml
      - word.Word.Body.inlinePictures
      - word.Word.Body.insertBreak
      - word.Word.Body.insertBreak_1
      - word.Word.Body.insertContentControl
      - word.Word.Body.insertFileFromBase64
      - word.Word.Body.insertFileFromBase64_1
      - word.Word.Body.insertHtml
      - word.Word.Body.insertHtml_1
      - word.Word.Body.insertInlinePictureFromBase64
      - word.Word.Body.insertInlinePictureFromBase64_1
      - word.Word.Body.insertOoxml
      - word.Word.Body.insertOoxml_1
      - word.Word.Body.insertParagraph
      - word.Word.Body.insertParagraph_1
      - word.Word.Body.insertText
      - word.Word.Body.insertText_1
      - word.Word.Body.load
      - word.Word.Body.load_1
      - word.Word.Body.load_2
      - word.Word.Body.paragraphs
      - word.Word.Body.parentContentControl
      - word.Word.Body.search
      - word.Word.Body.select
      - word.Word.Body.select_1
      - word.Word.Body.set
      - word.Word.Body.set_1
      - word.Word.Body.style
      - word.Word.Body.text
      - word.Word.Body.toJSON
      - word.Word.Body.track
      - word.Word.Body.untrack
  - uid: word.Word.Body.clear
    summary: |-
      <span data-ttu-id="11c35-103">本文オブジェクトの内容を消去します。</span><span class="sxs-lookup"><span data-stu-id="11c35-103">Clears the contents of the body object.</span></span> <span data-ttu-id="11c35-104">ユーザーは、消去された内容を元に戻す操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="11c35-105">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-106">例</span><span class="sxs-lookup"><span data-stu-id="11c35-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to clear the contents of the body.
              body.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the body contents.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how the 
          // clear method can be used to clear the contents of a document.
          // https://aka.ms/sillystorywordaddin
          ```
  - uid: word.Word.Body.contentControls
    summary: |-
      <span data-ttu-id="11c35-107">本文に含まれるリッチテキストコンテンツコントロールオブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-107">Gets the collection of rich text content control objects in the body.</span></span> <span data-ttu-id="11c35-108">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="11c35-108">Read-only.</span></span>

      <span data-ttu-id="11c35-109">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word.Word.Body.context
    summary: <span data-ttu-id="11c35-110">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="11c35-110">The request context associated with the object.</span></span> <span data-ttu-id="11c35-111">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="11c35-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.Body.font
    summary: |-
      <span data-ttu-id="11c35-112">本文のテキスト形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-112">Gets the text format of the body.</span></span> <span data-ttu-id="11c35-113">フォント名、サイズ、色、およびその他のプロパティを取得および設定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="11c35-113">Use this to get and set font name, size, color and other properties.</span></span> <span data-ttu-id="11c35-114">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="11c35-114">Read-only.</span></span>

      <span data-ttu-id="11c35-115">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-116">例</span><span class="sxs-lookup"><span data-stu-id="11c35-116">Examples</span></span>

          ```javascript
          // Get the style and the font size, font name, and font color properties on the body object.
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to load font and style information for the document body.
              context.load(body, 'font/size, font/name, font/color, style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  // Show the results of the load method. Here we show the
                  // property values on the body object.
                  var results = 'Font size: ' + body.font.size +
                                '; Font name: ' + body.font.name +
                                '; Font color: ' + body.font.color +
                                '; Body style: ' + body.style;

                  console.log(results);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Body.getHtml
    summary: |-
      <span data-ttu-id="11c35-117">Body オブジェクトの HTML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-117">Gets an HTML representation of the body object.</span></span> <span data-ttu-id="11c35-118">Web ページまたは HTML ビューアーでレンダリングされる場合、書式設定は、ドキュメントの書式設定と完全に一致しますが、完全に一致するとは限りません。</span><span class="sxs-lookup"><span data-stu-id="11c35-118">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="11c35-119">このメソッドは、異なるプラットフォーム (Windows、Mac など) の同じドキュメントに対して、まったく同じ HTML を返しません。</span><span class="sxs-lookup"><span data-stu-id="11c35-119">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="11c35-120">厳密な忠実性、または複数のプラットフォーム間で`Body.getOoxml()`の一貫性が必要な場合は、を使用して、返された XML を HTML に変換します。</span><span class="sxs-lookup"><span data-stu-id="11c35-120">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="11c35-121">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-122">例</span><span class="sxs-lookup"><span data-stu-id="11c35-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to get the HTML contents of the body.
              var bodyHTML = body.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body HTML contents: " + bodyHTML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Body.getOoxml
    summary: |-
      <span data-ttu-id="11c35-123">本文オブジェクトの OOXML (Office オープン XML) 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-123">Gets the OOXML (Office Open XML) representation of the body object.</span></span>

      <span data-ttu-id="11c35-124">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-125">例</span><span class="sxs-lookup"><span data-stu-id="11c35-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to get the OOXML contents of the body.
              var bodyOOXML = body.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body OOXML contents: " + bodyOOXML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Body.inlinePictures
    summary: |-
      <span data-ttu-id="11c35-126">本文にある InlinePicture オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-126">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="11c35-127">コレクションに浮動イメージは含まれません。</span><span class="sxs-lookup"><span data-stu-id="11c35-127">The collection does not include floating images.</span></span> <span data-ttu-id="11c35-128">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="11c35-128">Read-only.</span></span>

      <span data-ttu-id="11c35-129">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-129">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word.Word.Body.insertBreak
    summary: |-
      <span data-ttu-id="11c35-130">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-130">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="11c35-131">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-131">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="11c35-132">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-132">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-133">例</span><span class="sxs-lookup"><span data-stu-id="11c35-133">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (ctx) {

              // Create a proxy object for the document body.
              var body = ctx.document.body;

              // Queue a commmand to insert a page break at the start of the document body.
              body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  console.log('Added a page break at the start of the document body.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="11c35-134">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-134">Required.</span></span> <span data-ttu-id="11c35-135">本文に追加する区切りの種類。</span><span class="sxs-lookup"><span data-stu-id="11c35-135">The break type to add to the body.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: <span data-ttu-id="11c35-136">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-136">Required.</span></span> <span data-ttu-id="11c35-137">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="11c35-137">The value can be 'Start' or 'End'.</span></span>
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Body.insertBreak_1
    summary: |-
      <span data-ttu-id="11c35-138">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-138">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="11c35-139">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-139">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="11c35-140">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="11c35-141">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-141">Required.</span></span> <span data-ttu-id="11c35-142">本文に追加する区切りの種類。</span><span class="sxs-lookup"><span data-stu-id="11c35-142">The break type to add to the body.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="11c35-143">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-143">Required.</span></span> <span data-ttu-id="11c35-144">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="11c35-144">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Body.insertContentControl
    summary: |-
      <span data-ttu-id="11c35-145">リッチ テキスト コンテンツ コントロールで本文オブジェクトをラップします。</span><span class="sxs-lookup"><span data-stu-id="11c35-145">Wraps the body object with a Rich Text content control.</span></span>

      <span data-ttu-id="11c35-146">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-146">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-147">例</span><span class="sxs-lookup"><span data-stu-id="11c35-147">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to wrap the body in a content control.
              body.insertContentControl();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped the body in a content control.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Body.insertFileFromBase64
    summary: |-
      <span data-ttu-id="11c35-148">文書を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-148">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="11c35-149">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-149">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-150">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-150">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-151">例</span><span class="sxs-lookup"><span data-stu-id="11c35-151">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert base64 encoded .docx at the beginning of the content body.
              // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.
              body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="11c35-152">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-152">Required.</span></span> <span data-ttu-id="11c35-153">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="11c35-153">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="11c35-154">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-154">Required.</span></span> <span data-ttu-id="11c35-155">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-155">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Body.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="11c35-156">文書を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-156">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="11c35-157">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-157">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-158">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-158">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="11c35-159">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-159">Required.</span></span> <span data-ttu-id="11c35-160">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="11c35-160">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="11c35-161">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-161">Required.</span></span> <span data-ttu-id="11c35-162">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-162">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Body.insertHtml
    summary: |-
      <span data-ttu-id="11c35-163">指定した位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-163">Inserts HTML at the specified location.</span></span> <span data-ttu-id="11c35-164">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-164">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-165">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-165">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-166">例</span><span class="sxs-lookup"><span data-stu-id="11c35-166">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert HTML in to the beginning of the body.
              body.insertHtml(
                  '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="11c35-167">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-167">Required.</span></span> <span data-ttu-id="11c35-168">文書に挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="11c35-168">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="11c35-169">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-169">Required.</span></span> <span data-ttu-id="11c35-170">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-170">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Body.insertHtml_1
    summary: |-
      <span data-ttu-id="11c35-171">指定した位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-171">Inserts HTML at the specified location.</span></span> <span data-ttu-id="11c35-172">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-172">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-173">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-173">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="11c35-174">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-174">Required.</span></span> <span data-ttu-id="11c35-175">文書に挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="11c35-175">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="11c35-176">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-176">Required.</span></span> <span data-ttu-id="11c35-177">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-177">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Body.insertInlinePictureFromBase64
    summary: |-
      <span data-ttu-id="11c35-178">画像を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-178">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="11c35-179">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-179">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="11c35-180">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-180">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-181">例</span><span class="sxs-lookup"><span data-stu-id="11c35-181">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert OOXML in to the beginning of the body.
              body.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml

          // The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="11c35-182">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-182">Required.</span></span> <span data-ttu-id="11c35-183">本文に挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="11c35-183">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="11c35-184">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-184">Required.</span></span> <span data-ttu-id="11c35-185">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="11c35-185">The value can be 'Start' or 'End'.</span></span>
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Body.insertInlinePictureFromBase64_1
    summary: |-
      <span data-ttu-id="11c35-186">画像を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-186">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="11c35-187">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-187">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="11c35-188">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="11c35-189">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-189">Required.</span></span> <span data-ttu-id="11c35-190">本文に挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="11c35-190">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="11c35-191">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-191">Required.</span></span> <span data-ttu-id="11c35-192">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="11c35-192">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Body.insertOoxml
    summary: |-
      <span data-ttu-id="11c35-193">指定した位置に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-193">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="11c35-194">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-194">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-195">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-195">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="11c35-196">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-196">Required.</span></span> <span data-ttu-id="11c35-197">挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="11c35-197">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="11c35-198">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-198">Required.</span></span> <span data-ttu-id="11c35-199">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-199">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Body.insertOoxml_1
    summary: |-
      <span data-ttu-id="11c35-200">指定した位置に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-200">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="11c35-201">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-201">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-202">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-202">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="11c35-203">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-203">Required.</span></span> <span data-ttu-id="11c35-204">挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="11c35-204">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="11c35-205">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-205">Required.</span></span> <span data-ttu-id="11c35-206">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-206">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Body.insertParagraph
    summary: |-
      <span data-ttu-id="11c35-207">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-207">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="11c35-208">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-208">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="11c35-209">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-209">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-210">例</span><span class="sxs-lookup"><span data-stu-id="11c35-210">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert the paragraph at the end of the document body.
              body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added at the end of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let paragraph = context.document.body.insertParagraph("Timeline", "End");
              paragraph.style = "Heading 2";
              let paragraph2 = context.document.body.insertParagraph("The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.", "End");
              paragraph2.style = "Normal";
              let paragraph3 = context.document.body.insertParagraph("Project Costs by Phase", "End");
              paragraph3.style = "Heading 2";
              // Note a content control with the title of "ProjectCosts" is added. Content will be replaced later.
              let paragraph4 = context.document.body.insertParagraph("<Add Project Costs Here>", "End");
              paragraph4.style = "Normal";
              paragraph4.font.highlightColor = "#FFFF00";
              let contentControl = paragraph4.insertContentControl();
              contentControl.title = "ProjectCosts";
              let paragraph5 = context.document.body.insertParagraph("Project Team", "End");
              paragraph5.style = "Heading 2";
              paragraph5.font.highlightColor = "#FFFFFF";
              let paragraph6 = context.document.body.insertParagraph("Terms of Work", "End");
              paragraph6.style = "Heading 1";
              let paragraph7 = context.document.body.insertParagraph("Contractor shall provide the Services and Deliverable(s) as follows:", "End");
              paragraph7.style = "Normal";
              let paragraph8 = context.document.body.insertParagraph("Out-of-Pocket Expenses / Invoice Procedures", "End");
              paragraph8.style = "Heading 2";
              let paragraph9 = context.document.body.insertParagraph("Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.", "End");
              paragraph9.style = "Normal";
              // Insert a page break at the end of the document.
              context.document.body.insertBreak("Page", "End");

              await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="11c35-211">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-211">Required.</span></span> <span data-ttu-id="11c35-212">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="11c35-212">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="11c35-213">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-213">Required.</span></span> <span data-ttu-id="11c35-214">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="11c35-214">The value can be 'Start' or 'End'.</span></span>
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Body.insertParagraph_1
    summary: |-
      <span data-ttu-id="11c35-215">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-215">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="11c35-216">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-216">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="11c35-217">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-217">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="11c35-218">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-218">Required.</span></span> <span data-ttu-id="11c35-219">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="11c35-219">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="11c35-220">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-220">Required.</span></span> <span data-ttu-id="11c35-221">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="11c35-221">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Body.insertText
    summary: |-
      <span data-ttu-id="11c35-222">テキストを本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-222">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="11c35-223">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-223">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-224">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-224">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-225">例</span><span class="sxs-lookup"><span data-stu-id="11c35-225">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert text in to the beginning of the body.
              body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="11c35-226">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-226">Required.</span></span> <span data-ttu-id="11c35-227">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="11c35-227">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="11c35-228">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-228">Required.</span></span> <span data-ttu-id="11c35-229">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-229">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Body.insertText_1
    summary: |-
      <span data-ttu-id="11c35-230">テキストを本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-230">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="11c35-231">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-231">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="11c35-232">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-232">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="11c35-233">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-233">Required.</span></span> <span data-ttu-id="11c35-234">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="11c35-234">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="11c35-235">必須。</span><span class="sxs-lookup"><span data-stu-id="11c35-235">Required.</span></span> <span data-ttu-id="11c35-236">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-236">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Body.load
    summary: <span data-ttu-id="11c35-237">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="11c35-237">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11c35-238">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="11c35-238">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="11c35-239">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="11c35-239">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="11c35-240">`load(option?: string | string[]): Word.Body`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="11c35-240">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="11c35-241">`load(option?: { select?: string; expand?: string; }): Word.Body`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="11c35-241">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="11c35-242">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-242">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="11c35-243">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="11c35-243">It is similar to the preceding signature.</span></span> <span data-ttu-id="11c35-244">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="11c35-244">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="11c35-245">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="11c35-245">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="11c35-246">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="11c35-246">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.BodyLoadOptions
  - uid: word.Word.Body.load_1
    summary: <span data-ttu-id="11c35-247">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="11c35-247">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11c35-248">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="11c35-248">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="11c35-249">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="11c35-249">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.Body.load_2
    summary: <span data-ttu-id="11c35-250">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="11c35-250">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11c35-251">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="11c35-251">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="11c35-252">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="11c35-252">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.Body.paragraphs
    summary: |-
      <span data-ttu-id="11c35-253">本文に含まれる paragraph オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-253">Gets the collection of paragraph objects in the body.</span></span> <span data-ttu-id="11c35-254">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="11c35-254">Read-only.</span></span>

      <span data-ttu-id="11c35-255">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-256">例</span><span class="sxs-lookup"><span data-stu-id="11c35-256">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
  - uid: word.Word.Body.parentContentControl
    summary: |-
      <span data-ttu-id="11c35-257">本文を含むコンテンツ コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-257">Gets the content control that contains the body.</span></span> <span data-ttu-id="11c35-258">親コンテンツコントロールがない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="11c35-258">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="11c35-259">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="11c35-259">Read-only.</span></span>

      <span data-ttu-id="11c35-260">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-260">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.Body.search
    summary: |-
      <span data-ttu-id="11c35-261">Body オブジェクトのスコープで、指定された SearchOptions を使用して検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="11c35-261">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="11c35-262">検索結果は、範囲オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="11c35-262">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="11c35-263">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - word.Word.RangeCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-264">例</span><span class="sxs-lookup"><span data-stu-id="11c35-264">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to search the document.
              var searchResults = context.document.body.search('video', {matchCase: false});

              // Queue a commmand to load the results.
              context.load(searchResults, 'text, font');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  var results = 'Found count: ' + searchResults.items.length +
                                '; we highlighted the results.';

                  // Queue a command to change the font for each found item.
                  for (var i = 0; i < searchResults.items.length; i++) {
                    searchResults.items[i].font.color = '#FF0000'    // Change color to Red
                    searchResults.items[i].font.highlightColor = '#FFFF00';
                    searchResults.items[i].font.bold = true;
                  }

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log(results);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
            let results = context.document.body.search("Online");
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "yellow";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes
            // (i.e. use wildcards).
            let results = context.document.body.search("$*.[0-9][0-9]", { matchWildcards: true });
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "red";
              results.items[i].font.color = "white";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="11c35-265">必須です。</span><span class="sxs-lookup"><span data-stu-id="11c35-265">Required.</span></span> <span data-ttu-id="11c35-266">検索テキスト。</span><span class="sxs-lookup"><span data-stu-id="11c35-266">The search text.</span></span> <span data-ttu-id="11c35-267">最大255文字を指定できます。</span><span class="sxs-lookup"><span data-stu-id="11c35-267">Can be a maximum of 255 characters.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="11c35-268">省略可能。</span><span class="sxs-lookup"><span data-stu-id="11c35-268">Optional.</span></span> <span data-ttu-id="11c35-269">検索のオプション。</span><span class="sxs-lookup"><span data-stu-id="11c35-269">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word.Word.Body.select
    summary: |-
      <span data-ttu-id="11c35-270">本文を選択し、その本文に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="11c35-270">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="11c35-271">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-271">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-272">例</span><span class="sxs-lookup"><span data-stu-id="11c35-272">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to select the document body. The Word UI will
              // move to the selected document body.
              body.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="11c35-273">省略可能。</span><span class="sxs-lookup"><span data-stu-id="11c35-273">Optional.</span></span> <span data-ttu-id="11c35-274">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="11c35-274">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="11c35-275">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="11c35-275">''Select'' is the default.</span></span>'
          type:
            - word.Word.SelectionMode
  - uid: word.Word.Body.select_1
    summary: |-
      <span data-ttu-id="11c35-276">本文を選択し、その本文に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="11c35-276">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="11c35-277">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-277">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="11c35-278">省略可能。</span><span class="sxs-lookup"><span data-stu-id="11c35-278">Optional.</span></span> <span data-ttu-id="11c35-279">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="11c35-279">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="11c35-280">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="11c35-280">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word.Word.Body.set
    summary: '<span data-ttu-id="11c35-281">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="11c35-281">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="11c35-282">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="11c35-282">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="11c35-283">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="11c35-283">This method has the following additional signature:</span></span>

      `set(properties: Word.Body): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="11c35-284">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11c35-284">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.BodyUpdateData
        - id: options
          description: <span data-ttu-id="11c35-285">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="11c35-285">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: word.Word.Body.set_1
    summary: '<span data-ttu-id="11c35-286">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="11c35-286">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Body): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.Body
  - uid: word.Word.Body.style
    summary: |-
      <span data-ttu-id="11c35-p161">本文のスタイル名を取得または設定します。カスタム スタイルとローカライズされたスタイルの名前には、このプロパティを使用します。ロケール間で移植可能な組み込みスタイルを使用するには、"styleBuiltIn" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="11c35-p161">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="11c35-290">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-290">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word.Word.Body.text
    summary: |-
      <span data-ttu-id="11c35-291">本文のテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="11c35-291">Gets the text of the body.</span></span> <span data-ttu-id="11c35-292">insertText メソッドを使用して、テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="11c35-292">Use the insertText method to insert text.</span></span> <span data-ttu-id="11c35-293">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="11c35-293">Read-only.</span></span>

      <span data-ttu-id="11c35-294">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11c35-294">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11c35-295">例</span><span class="sxs-lookup"><span data-stu-id="11c35-295">Examples</span></span>

          ```javascript
          // Get the text property on the body object
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to load the text in document body.
              context.load(body, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body contents: " + body.text);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Body.toJSON
    summary: '<span data-ttu-id="11c35-296">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="11c35-296">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="11c35-297">.</span><span class="sxs-lookup"><span data-stu-id="11c35-297"></span></span> <span data-ttu-id="11c35-298">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="11c35-298"></span></span><!-- --><span data-ttu-id="11c35-299">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Word のオブジェクトは API オブジェクトであるのに対し`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Word.Interfaces.BodyData`</span><span class="sxs-lookup"><span data-stu-id="11c35-299">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Body object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BodyData`</span></span><!-- --><span data-ttu-id="11c35-300">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="11c35-300">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.BodyData;'
      return:
        type:
          - word.Word.Interfaces.BodyData
        description: ''
  - uid: word.Word.Body.track
    summary: '<span data-ttu-id="11c35-301">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="11c35-301">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="11c35-302">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="11c35-302">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="11c35-303">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="11c35-303">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: ''
  - uid: word.Word.Body.untrack
    summary: '<span data-ttu-id="11c35-304">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="11c35-304">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="11c35-305">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="11c35-305">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="11c35-306">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="11c35-306">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="11c35-307">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="11c35-307">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Body;'
      return:
        type:
          - word.Word.Body
        description: ''