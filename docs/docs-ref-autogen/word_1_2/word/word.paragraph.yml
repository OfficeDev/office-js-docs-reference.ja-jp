### YamlMime:UniversalReference
items:
  - uid: word.Word.Paragraph
    summary: |-
      <span data-ttu-id="503a4-101">選択部分、範囲、コンテンツ コントロール、または文書本文に含まれる 1 つの段落を表します。</span><span class="sxs-lookup"><span data-stu-id="503a4-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>

      <span data-ttu-id="503a4-102">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.Paragraph.alignment
      - word.Word.Paragraph.clear
      - word.Word.Paragraph.contentControls
      - word.Word.Paragraph.context
      - word.Word.Paragraph.delete
      - word.Word.Paragraph.firstLineIndent
      - word.Word.Paragraph.font
      - word.Word.Paragraph.getHtml
      - word.Word.Paragraph.getOoxml
      - word.Word.Paragraph.inlinePictures
      - word.Word.Paragraph.insertBreak
      - word.Word.Paragraph.insertBreak_1
      - word.Word.Paragraph.insertContentControl
      - word.Word.Paragraph.insertFileFromBase64
      - word.Word.Paragraph.insertFileFromBase64_1
      - word.Word.Paragraph.insertHtml
      - word.Word.Paragraph.insertHtml_1
      - word.Word.Paragraph.insertInlinePictureFromBase64
      - word.Word.Paragraph.insertInlinePictureFromBase64_1
      - word.Word.Paragraph.insertOoxml
      - word.Word.Paragraph.insertOoxml_1
      - word.Word.Paragraph.insertParagraph
      - word.Word.Paragraph.insertParagraph_1
      - word.Word.Paragraph.insertText
      - word.Word.Paragraph.insertText_1
      - word.Word.Paragraph.leftIndent
      - word.Word.Paragraph.lineSpacing
      - word.Word.Paragraph.lineUnitAfter
      - word.Word.Paragraph.lineUnitBefore
      - word.Word.Paragraph.load
      - word.Word.Paragraph.load_1
      - word.Word.Paragraph.load_2
      - word.Word.Paragraph.outlineLevel
      - word.Word.Paragraph.parentContentControl
      - word.Word.Paragraph.rightIndent
      - word.Word.Paragraph.search
      - word.Word.Paragraph.select
      - word.Word.Paragraph.select_1
      - word.Word.Paragraph.set
      - word.Word.Paragraph.set_1
      - word.Word.Paragraph.spaceAfter
      - word.Word.Paragraph.spaceBefore
      - word.Word.Paragraph.style
      - word.Word.Paragraph.text
      - word.Word.Paragraph.toJSON
      - word.Word.Paragraph.track
      - word.Word.Paragraph.untrack
  - uid: word.Word.Paragraph.alignment
    summary: |-
      <span data-ttu-id="503a4-103">段落の配置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="503a4-104">値には、"left"、"centered"、"right"、または "justified" を指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>

      <span data-ttu-id="503a4-105">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-106">例</span><span class="sxs-lookup"><span data-stu-id="503a4-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: word.Word.Paragraph.clear
    summary: |-
      <span data-ttu-id="503a4-107">段落オブジェクトの内容をクリアします。</span><span class="sxs-lookup"><span data-stu-id="503a4-107">Clears the contents of the paragraph object.</span></span> <span data-ttu-id="503a4-108">ユーザーは、消去された内容を元に戻す操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-108">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="503a4-109">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-110">例</span><span class="sxs-lookup"><span data-stu-id="503a4-110">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Paragraph.contentControls
    summary: |-
      <span data-ttu-id="503a4-111">段落内のコンテンツコントロールオブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="503a4-111">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id="503a4-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="503a4-112">Read-only.</span></span>

      <span data-ttu-id="503a4-113">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word.Word.Paragraph.context
    summary: <span data-ttu-id="503a4-114">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="503a4-114">The request context associated with the object.</span></span> <span data-ttu-id="503a4-115">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="503a4-115">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.Paragraph.delete
    summary: |-
      <span data-ttu-id="503a4-116">文書から段落と、その段落の内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="503a4-116">Deletes the paragraph and its content from the document.</span></span>

      <span data-ttu-id="503a4-117">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-117">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-118">例</span><span class="sxs-lookup"><span data-stu-id="503a4-118">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Paragraph.firstLineIndent
    summary: |-
      <span data-ttu-id="503a4-p105">最初の行のインデントまたはぶら下げインデントの値をポイント数単位で取得または設定します。最初の行のインデントを設定するには、正の値を使用します。また、ぶら下げインデントを設定するには、負の値を使用します。</span><span class="sxs-lookup"><span data-stu-id="503a4-p105">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>

      <span data-ttu-id="503a4-121">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: word.Word.Paragraph.font
    summary: |-
      <span data-ttu-id="503a4-122">段落のテキスト形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="503a4-122">Gets the text format of the paragraph.</span></span> <span data-ttu-id="503a4-123">これを使用して、フォント名、サイズ、色、およびその他のプロパティを取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-123">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="503a4-124">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="503a4-124">Read-only.</span></span>

      <span data-ttu-id="503a4-125">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-125">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word.Word.Paragraph.getHtml
    summary: |-
      <span data-ttu-id="503a4-126">Paragraph オブジェクトの HTML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="503a4-126">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="503a4-127">Web ページまたは HTML ビューアーでレンダリングされる場合、書式設定は、ドキュメントの書式設定と完全に一致しますが、完全に一致するとは限りません。</span><span class="sxs-lookup"><span data-stu-id="503a4-127">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="503a4-128">このメソッドは、異なるプラットフォーム (Windows、Mac など) の同じドキュメントに対して、まったく同じ HTML を返しません。</span><span class="sxs-lookup"><span data-stu-id="503a4-128">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="503a4-129">厳密な忠実性、または複数のプラットフォーム間で`Paragraph.getOoxml()`の一貫性が必要な場合は、を使用して、返された XML を HTML に変換します。</span><span class="sxs-lookup"><span data-stu-id="503a4-129">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="503a4-130">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-131">例</span><span class="sxs-lookup"><span data-stu-id="503a4-131">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Paragraph.getOoxml
    summary: |-
      <span data-ttu-id="503a4-132">Paragraph オブジェクトの Office Open XML (OOXML) 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="503a4-132">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>

      <span data-ttu-id="503a4-133">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-134">例</span><span class="sxs-lookup"><span data-stu-id="503a4-134">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Paragraph.inlinePictures
    summary: |-
      <span data-ttu-id="503a4-135">段落内の InlinePicture オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="503a4-135">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="503a4-136">コレクションに浮動イメージは含まれません。</span><span class="sxs-lookup"><span data-stu-id="503a4-136">The collection does not include floating images.</span></span> <span data-ttu-id="503a4-137">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="503a4-137">Read-only.</span></span>

      <span data-ttu-id="503a4-138">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-138">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word.Word.Paragraph.insertBreak
    summary: |-
      <span data-ttu-id="503a4-139">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-139">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="503a4-140">insertLocation の値には、'Before' または 'After' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-140">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="503a4-141">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-141">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-142">例</span><span class="sxs-lookup"><span data-stu-id="503a4-142">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="503a4-143">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-143">Required.</span></span> <span data-ttu-id="503a4-144">文書に追加する区切りの種類。</span><span class="sxs-lookup"><span data-stu-id="503a4-144">The break type to add to the document.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: <span data-ttu-id="503a4-145">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-145">Required.</span></span> <span data-ttu-id="503a4-146">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="503a4-146">The value can be 'Before' or 'After'.</span></span>
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Paragraph.insertBreak_1
    summary: |-
      <span data-ttu-id="503a4-147">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-147">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="503a4-148">insertLocation の値には、'Before' または 'After' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-148">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="503a4-149">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-149">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-150">例</span><span class="sxs-lookup"><span data-stu-id="503a4-150">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="503a4-151">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-151">Required.</span></span> <span data-ttu-id="503a4-152">文書に追加する区切りの種類。</span><span class="sxs-lookup"><span data-stu-id="503a4-152">The break type to add to the document.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="503a4-153">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-153">Required.</span></span> <span data-ttu-id="503a4-154">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="503a4-154">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Paragraph.insertContentControl
    summary: |-
      <span data-ttu-id="503a4-155">段落オブジェクトを、リッチ テキストのコンテンツ コントロールでラップします。</span><span class="sxs-lookup"><span data-stu-id="503a4-155">Wraps the paragraph object with a rich text content control.</span></span>

      <span data-ttu-id="503a4-156">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-156">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-157">例</span><span class="sxs-lookup"><span data-stu-id="503a4-157">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Paragraph.insertFileFromBase64
    summary: |-
      <span data-ttu-id="503a4-158">指定した位置に段落に文書を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-158">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-159">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-159">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-160">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-160">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="503a4-161">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-161">Required.</span></span> <span data-ttu-id="503a4-162">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="503a4-162">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="503a4-163">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-163">Required.</span></span> <span data-ttu-id="503a4-164">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-164">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Paragraph.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="503a4-165">指定した位置に段落に文書を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-165">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-166">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-166">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-167">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-167">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="503a4-168">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-168">Required.</span></span> <span data-ttu-id="503a4-169">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="503a4-169">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="503a4-170">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-170">Required.</span></span> <span data-ttu-id="503a4-171">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-171">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Paragraph.insertHtml
    summary: |-
      <span data-ttu-id="503a4-172">段落の指定した位置に、HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-172">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-173">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-173">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-174">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-174">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-175">例</span><span class="sxs-lookup"><span data-stu-id="503a4-175">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="503a4-176">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-176">Required.</span></span> <span data-ttu-id="503a4-177">段落に挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="503a4-177">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="503a4-178">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-178">Required.</span></span> <span data-ttu-id="503a4-179">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-179">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Paragraph.insertHtml_1
    summary: |-
      <span data-ttu-id="503a4-180">段落の指定した位置に、HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-180">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-181">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-181">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-182">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-182">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="503a4-183">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-183">Required.</span></span> <span data-ttu-id="503a4-184">段落に挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="503a4-184">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="503a4-185">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-185">Required.</span></span> <span data-ttu-id="503a4-186">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-186">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Paragraph.insertInlinePictureFromBase64
    summary: |-
      <span data-ttu-id="503a4-187">段落の指定した位置に、図を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-187">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-188">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-188">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-189">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-189">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-190">例</span><span class="sxs-lookup"><span data-stu-id="503a4-190">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="503a4-191">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-191">Required.</span></span> <span data-ttu-id="503a4-192">挿入する base64 でエンコードされたイメージ。</span><span class="sxs-lookup"><span data-stu-id="503a4-192">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="503a4-193">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-193">Required.</span></span> <span data-ttu-id="503a4-194">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-194">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Paragraph.insertInlinePictureFromBase64_1
    summary: |-
      <span data-ttu-id="503a4-195">段落の指定した位置に、図を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-195">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-196">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-196">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-197">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-197">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="503a4-198">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-198">Required.</span></span> <span data-ttu-id="503a4-199">挿入する base64 でエンコードされたイメージ。</span><span class="sxs-lookup"><span data-stu-id="503a4-199">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="503a4-200">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-200">Required.</span></span> <span data-ttu-id="503a4-201">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-201">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Paragraph.insertOoxml
    summary: |-
      <span data-ttu-id="503a4-202">指定した位置の段落に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-202">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-203">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-203">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-204">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-204">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="503a4-205">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-205">Required.</span></span> <span data-ttu-id="503a4-206">段落に挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-206">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="503a4-207">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-207">Required.</span></span> <span data-ttu-id="503a4-208">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-208">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Paragraph.insertOoxml_1
    summary: |-
      <span data-ttu-id="503a4-209">指定した位置の段落に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-209">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-210">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-210">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-211">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="503a4-212">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-212">Required.</span></span> <span data-ttu-id="503a4-213">段落に挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-213">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="503a4-214">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-214">Required.</span></span> <span data-ttu-id="503a4-215">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-215">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Paragraph.insertParagraph
    summary: |-
      <span data-ttu-id="503a4-216">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-216">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="503a4-217">有効な insertLocation の値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="503a4-217">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="503a4-218">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-218">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-219">例</span><span class="sxs-lookup"><span data-stu-id="503a4-219">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="503a4-220">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-220">Required.</span></span> <span data-ttu-id="503a4-221">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="503a4-221">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="503a4-222">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-222">Required.</span></span> <span data-ttu-id="503a4-223">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="503a4-223">The value can be 'Before' or 'After'.</span></span>
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Paragraph.insertParagraph_1
    summary: |-
      <span data-ttu-id="503a4-224">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-224">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="503a4-225">有効な insertLocation の値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="503a4-225">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="503a4-226">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-226">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="503a4-227">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-227">Required.</span></span> <span data-ttu-id="503a4-228">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="503a4-228">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="503a4-229">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-229">Required.</span></span> <span data-ttu-id="503a4-230">有効な値は、'Before' または 'After' です。</span><span class="sxs-lookup"><span data-stu-id="503a4-230">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Paragraph.insertText
    summary: |-
      <span data-ttu-id="503a4-231">段落の指定した位置に、テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-231">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-232">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-232">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-233">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-233">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-234">例</span><span class="sxs-lookup"><span data-stu-id="503a4-234">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="503a4-235">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-235">Required.</span></span> <span data-ttu-id="503a4-236">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="503a4-236">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="503a4-237">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-237">Required.</span></span> <span data-ttu-id="503a4-238">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-238">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Paragraph.insertText_1
    summary: |-
      <span data-ttu-id="503a4-239">段落の指定した位置に、テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="503a4-239">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="503a4-240">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-240">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="503a4-241">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-241">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="503a4-242">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-242">Required.</span></span> <span data-ttu-id="503a4-243">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="503a4-243">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="503a4-244">必須。</span><span class="sxs-lookup"><span data-stu-id="503a4-244">Required.</span></span> <span data-ttu-id="503a4-245">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-245">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Paragraph.leftIndent
    summary: |-
      <span data-ttu-id="503a4-246">段落の左インデントの値をポイント数単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-246">Gets or sets the left indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="503a4-247">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-247">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-248">例</span><span class="sxs-lookup"><span data-stu-id="503a4-248">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: word.Word.Paragraph.lineSpacing
    summary: |-
      <span data-ttu-id="503a4-249">段落の行間をポイント数単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-249">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id="503a4-250">Word UI では、この値が 12 で除算されます。</span><span class="sxs-lookup"><span data-stu-id="503a4-250">In the Word UI, this value is divided by 12.</span></span>

      <span data-ttu-id="503a4-251">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-251">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-252">例</span><span class="sxs-lookup"><span data-stu-id="503a4-252">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: word.Word.Paragraph.lineUnitAfter
    summary: |-
      <span data-ttu-id="503a4-253">段落後の間隔の量 (グリッド線単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-253">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>

      <span data-ttu-id="503a4-254">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-254">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: word.Word.Paragraph.lineUnitBefore
    summary: |-
      <span data-ttu-id="503a4-255">段落前の間隔の幅をグリッド線数単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-255">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>

      <span data-ttu-id="503a4-256">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-256">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: word.Word.Paragraph.load
    summary: <span data-ttu-id="503a4-257">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="503a4-257">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="503a4-258">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="503a4-258">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="503a4-259">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="503a4-259">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="503a4-260">`load(option?: string | string[]): Word.Paragraph`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="503a4-260">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="503a4-261">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="503a4-261">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="503a4-262">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="503a4-262">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="503a4-263">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="503a4-263">It is similar to the preceding signature.</span></span> <span data-ttu-id="503a4-264">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-264">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="503a4-265">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-265">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="503a4-266">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="503a4-266">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.ParagraphLoadOptions
  - uid: word.Word.Paragraph.load_1
    summary: <span data-ttu-id="503a4-267">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="503a4-267">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="503a4-268">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="503a4-268">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="503a4-269">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="503a4-269">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.Paragraph.load_2
    summary: <span data-ttu-id="503a4-270">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="503a4-270">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="503a4-271">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="503a4-271">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="503a4-272">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="503a4-272">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.Paragraph.outlineLevel
    summary: |-
      <span data-ttu-id="503a4-273">段落のアウトライン レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-273">Gets or sets the outline level for the paragraph.</span></span>

      <span data-ttu-id="503a4-274">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-274">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: word.Word.Paragraph.parentContentControl
    summary: |-
      <span data-ttu-id="503a4-275">段落を格納しているコンテンツ コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="503a4-275">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="503a4-276">親コンテンツコントロールがない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="503a4-276">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="503a4-277">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="503a4-277">Read-only.</span></span>

      <span data-ttu-id="503a4-278">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-278">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.Paragraph.rightIndent
    summary: |-
      <span data-ttu-id="503a4-279">段落の右インデントの値をポイント数単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-279">Gets or sets the right indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="503a4-280">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-280">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: word.Word.Paragraph.search
    summary: |-
      <span data-ttu-id="503a4-281">Paragraph オブジェクトの範囲に対して、指定した SearchOptions を使用して検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="503a4-281">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="503a4-282">検索結果は、範囲オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="503a4-282">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="503a4-283">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-283">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - word.Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="503a4-284">必須です。</span><span class="sxs-lookup"><span data-stu-id="503a4-284">Required.</span></span> <span data-ttu-id="503a4-285">検索テキスト。</span><span class="sxs-lookup"><span data-stu-id="503a4-285">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="503a4-286">省略可能。</span><span class="sxs-lookup"><span data-stu-id="503a4-286">Optional.</span></span> <span data-ttu-id="503a4-287">検索のオプション。</span><span class="sxs-lookup"><span data-stu-id="503a4-287">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word.Word.Paragraph.select
    summary: |-
      <span data-ttu-id="503a4-288">段落を選択して、その段落に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="503a4-288">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="503a4-289">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-290">例</span><span class="sxs-lookup"><span data-stu-id="503a4-290">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="503a4-291">省略可能。</span><span class="sxs-lookup"><span data-stu-id="503a4-291">Optional.</span></span> <span data-ttu-id="503a4-292">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="503a4-292">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="503a4-293">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="503a4-293">''Select'' is the default.</span></span>'
          type:
            - word.Word.SelectionMode
  - uid: word.Word.Paragraph.select_1
    summary: |-
      <span data-ttu-id="503a4-294">段落を選択して、その段落に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="503a4-294">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="503a4-295">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-295">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="503a4-296">省略可能。</span><span class="sxs-lookup"><span data-stu-id="503a4-296">Optional.</span></span> <span data-ttu-id="503a4-297">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="503a4-297">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="503a4-298">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="503a4-298">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word.Word.Paragraph.set
    summary: '<span data-ttu-id="503a4-299">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-299">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="503a4-300">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="503a4-300">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="503a4-301">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="503a4-301">This method has the following additional signature:</span></span>

      `set(properties: Word.Paragraph): void`

      #### <a name="examples"></a><span data-ttu-id="503a4-302">例</span><span class="sxs-lookup"><span data-stu-id="503a4-302">Examples</span></span>

      ```typescript
      await Word.run(async (context) => {
        const paragraph = context.document.body.paragraphs.getFirst();
        paragraph.set({
          leftIndent: 30,
          font: {
            bold: true,
            color: "red"
          }
        });

        await context.sync();
      });
      ```
      ```typescript
      await Word.run(async (context) => {
        const firstParagraph = context.document.body.paragraphs.getFirst();
        const secondParagraph = firstParagraph.getNext();
        firstParagraph.load("text, font/color, font/bold, leftIndent");

        await context.sync();

        secondParagraph.set(firstParagraph);

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="503a4-303">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="503a4-303">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ParagraphUpdateData
        - id: options
          description: <span data-ttu-id="503a4-304">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="503a4-304">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: word.Word.Paragraph.set_1
    summary: '<span data-ttu-id="503a4-305">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-305">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.Paragraph
  - uid: word.Word.Paragraph.spaceAfter
    summary: |-
      <span data-ttu-id="503a4-306">段落後の間隔をポイント数単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-306">Gets or sets the spacing, in points, after the paragraph.</span></span>

      <span data-ttu-id="503a4-307">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-307">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-308">例</span><span class="sxs-lookup"><span data-stu-id="503a4-308">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: word.Word.Paragraph.spaceBefore
    summary: |-
      <span data-ttu-id="503a4-309">段落前の間隔をポイント数単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-309">Gets or sets the spacing, in points, before the paragraph.</span></span>

      <span data-ttu-id="503a4-310">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-310">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: word.Word.Paragraph.style
    summary: |-
      <span data-ttu-id="503a4-311">段落のスタイル名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="503a4-311">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id="503a4-312">カスタム スタイルとローカライズされたスタイルの名前には、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="503a4-312">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="503a4-313">ロケール間で移植可能な組み込みスタイルを使用するには、"styleBuiltIn" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503a4-313">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="503a4-314">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-314">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word.Word.Paragraph.text
    summary: |-
      <span data-ttu-id="503a4-315">段落のテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="503a4-315">Gets the text of the paragraph.</span></span> <span data-ttu-id="503a4-316">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="503a4-316">Read-only.</span></span>

      <span data-ttu-id="503a4-317">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="503a4-317">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="503a4-318">例</span><span class="sxs-lookup"><span data-stu-id="503a4-318">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: word.Word.Paragraph.toJSON
    summary: '<span data-ttu-id="503a4-319">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="503a4-319">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="503a4-320">.</span><span class="sxs-lookup"><span data-stu-id="503a4-320"></span></span> <span data-ttu-id="503a4-321">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="503a4-321"></span></span><!-- --><span data-ttu-id="503a4-322">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Paragraph オブジェクトは API オブジェクトであるのに対して`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="503a4-322">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="503a4-323">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="503a4-323">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - word.Word.Interfaces.ParagraphData
        description: ''
  - uid: word.Word.Paragraph.track
    summary: '<span data-ttu-id="503a4-324">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="503a4-324">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="503a4-325">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="503a4-325">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="503a4-326">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="503a4-326">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
  - uid: word.Word.Paragraph.untrack
    summary: '<span data-ttu-id="503a4-327">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="503a4-327">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="503a4-328">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="503a4-328">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="503a4-329">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="503a4-329">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="503a4-330">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="503a4-330">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''