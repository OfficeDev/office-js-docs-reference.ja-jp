### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.BindingCollection:class'
    summary: |-
      <span data-ttu-id="bcd51-101">ブックの一部であるすべてのバインド オブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>

      <span data-ttu-id="bcd51-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.BindingCollection#add:member(1)'
      - 'excel!Excel.BindingCollection#add:member(2)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(1)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(2)'
      - 'excel!Excel.BindingCollection#context:member'
      - 'excel!Excel.BindingCollection#count:member'
      - 'excel!Excel.BindingCollection#getCount:member(1)'
      - 'excel!Excel.BindingCollection#getItem:member(1)'
      - 'excel!Excel.BindingCollection#getItemAt:member(1)'
      - 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.BindingCollection#items:member'
      - 'excel!Excel.BindingCollection#load:member(1)'
      - 'excel!Excel.BindingCollection#load:member(2)'
      - 'excel!Excel.BindingCollection#load:member(3)'
      - 'excel!Excel.BindingCollection#toJSON:member(1)'
  - uid: 'excel!Excel.BindingCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="bcd51-103">特定の範囲に新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-103">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="bcd51-104">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="bcd51-p101">バインドをバインドする範囲です。Excel Range オブジェクト、または文字列である場合があります。文字列の場合は、シート名を含む完全なアドレスが含まれている必要があります</span><span class="sxs-lookup"><span data-stu-id="bcd51-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~0:complex'
        - id: bindingType
          description: <span data-ttu-id="bcd51-108">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="bcd51-108">Type of binding.</span></span> <span data-ttu-id="bcd51-109">「Excel. BindingType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bcd51-109">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="bcd51-110">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-110">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#add:member(2)'
    summary: |-
      <span data-ttu-id="bcd51-111">特定の範囲に新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-111">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="bcd51-112">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingTypeString, id)'
    fullName: 'add(range, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="bcd51-p103">バインドをバインドする範囲です。Excel Range オブジェクト、または文字列である場合があります。文字列の場合は、シート名を含む完全なアドレスが含まれている必要があります</span><span class="sxs-lookup"><span data-stu-id="bcd51-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - 'excel!Excel.BindingCollection#add~1:complex'
        - id: bindingTypeString
          description: <span data-ttu-id="bcd51-116">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="bcd51-116">Type of binding.</span></span> <span data-ttu-id="bcd51-117">「Excel. BindingType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bcd51-117">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="bcd51-118">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-118">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
    summary: |-
      <span data-ttu-id="bcd51-119">ブック内の名前付きアイテムに基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="bcd51-120">名前付きアイテムが複数の領域を参照している場合は、"InvalidReference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bcd51-121">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="bcd51-122">バインドの作成元の名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-122">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingType
          description: <span data-ttu-id="bcd51-123">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="bcd51-123">Type of binding.</span></span> <span data-ttu-id="bcd51-124">「Excel. BindingType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bcd51-124">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="bcd51-125">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-125">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(2)'
    summary: |-
      <span data-ttu-id="bcd51-126">ブック内の名前付きアイテムに基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="bcd51-127">名前付きアイテムが複数の領域を参照している場合は、"InvalidReference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bcd51-128">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingTypeString, id)'
    fullName: 'addFromNamedItem(name, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="bcd51-129">バインドの作成元の名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-129">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingTypeString
          description: <span data-ttu-id="bcd51-130">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="bcd51-130">Type of binding.</span></span> <span data-ttu-id="bcd51-131">「Excel. BindingType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bcd51-131">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="bcd51-132">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-132">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(1)'
    summary: |-
      <span data-ttu-id="bcd51-133">現在の選択範囲に基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="bcd51-134">複数の領域が選択されている場合は、"InvalidReference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bcd51-135">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingType
          description: <span data-ttu-id="bcd51-136">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="bcd51-136">Type of binding.</span></span> <span data-ttu-id="bcd51-137">「Excel. BindingType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bcd51-137">See Excel.BindingType.</span></span>
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: <span data-ttu-id="bcd51-138">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-138">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(2)'
    summary: |-
      <span data-ttu-id="bcd51-139">現在の選択範囲に基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="bcd51-140">複数の領域が選択されている場合は、"InvalidReference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bcd51-141">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingTypeString, id)'
    fullName: 'addFromSelection(bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: bindingTypeString
          description: <span data-ttu-id="bcd51-142">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="bcd51-142">Type of binding.</span></span> <span data-ttu-id="bcd51-143">「Excel. BindingType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bcd51-143">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="bcd51-144">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-144">Name of binding.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#context:member'
    summary: <span data-ttu-id="bcd51-145">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="bcd51-145">The request context associated with the object.</span></span> <span data-ttu-id="bcd51-146">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-146">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.BindingCollection#count:member'
    summary: |-
      <span data-ttu-id="bcd51-147">コレクション内にあるバインドの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-147">Returns the number of bindings in the collection.</span></span> <span data-ttu-id="bcd51-148">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-148">Read-only.</span></span>

      <span data-ttu-id="bcd51-149">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.BindingCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="bcd51-150">コレクションに含まれるバインドの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-150">Gets the number of bindings in the collection.</span></span>

      <span data-ttu-id="bcd51-151">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-151">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.BindingCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.BindingCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="bcd51-152">ID を使用してバインド オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-152">Gets a binding object by ID.</span></span>

      <span data-ttu-id="bcd51-153">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bcd51-154">例</span><span class="sxs-lookup"><span data-stu-id="bcd51-154">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="bcd51-155">取得するバインド オブジェクトの ID。</span><span class="sxs-lookup"><span data-stu-id="bcd51-155">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="bcd51-156">項目の配列内の位置に基づいて、バインド オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-156">Gets a binding object based on its position in the items array.</span></span>

      <span data-ttu-id="bcd51-157">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bcd51-158">例</span><span class="sxs-lookup"><span data-stu-id="bcd51-158">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="bcd51-159">取得するオブジェクトのインデックス値。</span><span class="sxs-lookup"><span data-stu-id="bcd51-159">Index value of the object to be retrieved.</span></span> <span data-ttu-id="bcd51-160">0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="bcd51-160">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="bcd51-161">ID によってバインド オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-161">Gets a binding object by ID.</span></span> <span data-ttu-id="bcd51-162">バインディング オブジェクトが存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-162">If the binding object does not exist, will return a null object.</span></span>

      <span data-ttu-id="bcd51-163">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bcd51-163">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="bcd51-164">取得するバインド オブジェクトの ID。</span><span class="sxs-lookup"><span data-stu-id="bcd51-164">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#items:member'
    summary: <span data-ttu-id="bcd51-165">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-165">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'excel!Excel.BindingCollection#items~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(1)'
    summary: <span data-ttu-id="bcd51-166">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bcd51-167">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bcd51-167">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="bcd51-168">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="bcd51-168">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="bcd51-169">`load(option?: string | string[]): Excel.BindingCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-169">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="bcd51-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="bcd51-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="bcd51-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="bcd51-172">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="bcd51-172">It is similar to the preceding signature.</span></span> <span data-ttu-id="bcd51-173">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-173">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bcd51-174">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="bcd51-174">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bcd51-175">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-175">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.BindingCollection#load~0:complex'
  - uid: 'excel!Excel.BindingCollection#load:member(2)'
    summary: <span data-ttu-id="bcd51-176">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-176">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bcd51-177">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bcd51-177">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bcd51-178">例</span><span class="sxs-lookup"><span data-stu-id="bcd51-178">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="bcd51-179">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="bcd51-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.BindingCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - 'excel!Excel.BindingCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.BindingCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="bcd51-180">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="bcd51-180">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="bcd51-181">.</span><span class="sxs-lookup"><span data-stu-id="bcd51-181"></span></span> <span data-ttu-id="bcd51-182">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="bcd51-182"></span></span><!-- --><span data-ttu-id="bcd51-183">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.BindingCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.BindingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="bcd51-183">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id="bcd51-184">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="bcd51-184">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.BindingCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Binding:class'
    name: Excel.Binding
  - uid: 'excel!Excel.BindingCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.BindingType:enum'
    name: Excel.BindingType
  - uid: 'excel!Excel.BindingCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.BindingCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.BindingCollection#items~0:complex'
    name: 'Excel.Binding[]'
    fullName: 'Excel.Binding[]'
    spec.typeScript:
      - uid: 'excel!Excel.Binding:class'
        name: Excel.Binding
        fullName: Excel.Binding
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.BindingCollection:class'
    name: Excel.BindingCollection
  - uid: 'excel!Excel.BindingCollection#load~0:complex'
    name: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.BindingCollectionLoadOptions:interface'
        name: Excel.Interfaces.BindingCollectionLoadOptions
        fullName: Excel.Interfaces.BindingCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.BindingCollectionData:interface'
    name: Excel.Interfaces.BindingCollectionData