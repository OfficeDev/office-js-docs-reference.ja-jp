### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Setting
    summary: |-
      <span data-ttu-id="b80cb-101">Setting は、ドキュメントに保持される設定のキーと値のペアを表します (アドインごとのファイルごと)。</span><span class="sxs-lookup"><span data-stu-id="b80cb-101">Setting represents a key-value pair of a setting persisted to the document (per file per add-in).</span></span> <span data-ttu-id="b80cb-102">これらのカスタムキーと値のペアを使用して、コンテンツアドインまたは作業ウィンドウアドインに必要な状態またはライフサイクル情報を格納できます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-102">These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in.</span></span> <span data-ttu-id="b80cb-103">設定はドキュメント内で保持されるため、ユーザー情報やパスワードなどの機密情報や保護された情報を格納する場所ではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b80cb-103">Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.</span></span>

      <span data-ttu-id="b80cb-104">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b80cb-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Setting
    fullName: Excel.Setting
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Setting.context
      - excel.Excel.Setting.delete
      - excel.Excel.Setting.key
      - excel.Excel.Setting.load
      - excel.Excel.Setting.load_1
      - excel.Excel.Setting.load_2
      - excel.Excel.Setting.set
      - excel.Excel.Setting.set_1
      - excel.Excel.Setting.toJSON
      - excel.Excel.Setting.value
  - uid: excel.Excel.Setting.context
    summary: <span data-ttu-id="b80cb-105">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="b80cb-105">The request context associated with the object.</span></span> <span data-ttu-id="b80cb-106">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Setting.delete
    summary: |-
      <span data-ttu-id="b80cb-107">設定を削除します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-107">Deletes the setting.</span></span>

      <span data-ttu-id="b80cb-108">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b80cb-108">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b80cb-109">例</span><span class="sxs-lookup"><span data-stu-id="b80cb-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.Setting.key
    summary: |-
      <span data-ttu-id="b80cb-110">Setting の ID を表すキーを返します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-110">Returns the key that represents the id of the Setting.</span></span> <span data-ttu-id="b80cb-111">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b80cb-111">Read-only.</span></span>

      <span data-ttu-id="b80cb-112">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b80cb-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Setting.load
    summary: <span data-ttu-id="b80cb-113">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b80cb-114">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b80cb-114">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="b80cb-115">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="b80cb-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="b80cb-116">`load(option?: string | string[]): Excel.Setting`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="b80cb-116">`load(option?: string | string[]): Excel.Setting` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="b80cb-117">`load(option?: { select?: string; expand?: string; }): Excel.Setting`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="b80cb-117">`load(option?: { select?: string; expand?: string; }): Excel.Setting` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="b80cb-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting` - Only available on collection types.</span></span> <span data-ttu-id="b80cb-119">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="b80cb-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="b80cb-120">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b80cb-121">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b80cb-122">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SettingLoadOptions
  - uid: excel.Excel.Setting.load_1
    summary: <span data-ttu-id="b80cb-123">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b80cb-124">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b80cb-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="b80cb-125">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="b80cb-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.Setting.load_2
    summary: <span data-ttu-id="b80cb-126">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b80cb-127">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b80cb-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="b80cb-128">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="b80cb-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Setting.set
    summary: '<span data-ttu-id="b80cb-129">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-129">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b80cb-130">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b80cb-130">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="b80cb-131">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="b80cb-131">This method has the following additional signature:</span></span>

      `set(properties: Excel.Setting): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="b80cb-132">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b80cb-132">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.SettingUpdateData
        - id: options
          description: <span data-ttu-id="b80cb-133">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-133">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Setting.set_1
    summary: '<span data-ttu-id="b80cb-134">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-134">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Setting): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Setting
  - uid: excel.Excel.Setting.toJSON
    summary: '<span data-ttu-id="b80cb-135">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b80cb-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b80cb-136">.</span><span class="sxs-lookup"><span data-stu-id="b80cb-136"></span></span> <span data-ttu-id="b80cb-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b80cb-137"></span></span><!-- --><span data-ttu-id="b80cb-138">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel 設定オブジェクトは API オブジェクトですが、このメソッド`toJSON`はプレーンな JavaScript オブジェクト (として型指定されます) を返します。`Excel.Interfaces.SettingData`</span><span class="sxs-lookup"><span data-stu-id="b80cb-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Setting object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingData`</span></span><!-- --><span data-ttu-id="b80cb-139">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingData;'
      return:
        type:
          - excel.Excel.Interfaces.SettingData
        description: ''
  - uid: excel.Excel.Setting.value
    summary: |-
      <span data-ttu-id="b80cb-140">この設定に格納されている値を表します。</span><span class="sxs-lookup"><span data-stu-id="b80cb-140">Represents the value stored for this setting.</span></span>

      <span data-ttu-id="b80cb-141">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b80cb-141">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any