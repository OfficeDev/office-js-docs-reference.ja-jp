### YamlMime:UniversalReference
ms.openlocfilehash: bab25cd7f9bf03548b2adaea1fb7921018933f57
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055459"
items:
- uid: Outlook_1_7.Office.Item
  summary: >-
    <span data-ttu-id="a16d7-101">item 名前空間は、現在選択されているメッセージ、会議出席依頼、または予定にアクセスするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-101">The item namespace is used to access the currently selected message, meeting request, or appointment.</span></span> <span data-ttu-id="a16d7-102">`itemType`プロパティを使用して、アイテムの種類を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-102">You can determine the type of the item by using the `itemType` property.</span></span>


    <span data-ttu-id="a16d7-103">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-103">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-104">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-104">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-105">制限あり</span><span class="sxs-lookup"><span data-stu-id="a16d7-105">Restricted</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-106">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-106">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-107">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-107">Compose or read</span></span></td></tr></table>
  name: Office.Item
  fullName: Office.Item
  langs:
  - typeScript
  type: interface
  package: Outlook_1_7
  children:
  - Outlook_1_7.Office.Item.addHandlerAsync
  - Outlook_1_7.Office.Item.addHandlerAsync_1
  - Outlook_1_7.Office.Item.loadCustomPropertiesAsync
  - Outlook_1_7.Office.Item.removeHandlerAsync
  - Outlook_1_7.Office.Item.removeHandlerAsync_1
  - Outlook_1_7.Office.Item.body
  - Outlook_1_7.Office.Item.itemType
  - Outlook_1_7.Office.Item.notificationMessages
  - Outlook_1_7.Office.Item.seriesId
- uid: Outlook_1_7.Office.Item.addHandlerAsync
  summary: >-
    <span data-ttu-id="a16d7-108">サポートされているイベントのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-108">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="a16d7-109">現在、サポートされて`Office.EventType.AppointmentTimeChanged` <!-- -->いる`Office.EventType.RecipientsChanged` <!-- -->イベントの`Office.EventType.RecurrenceChanged` <!-- -->種類は、、、です。</span><span class="sxs-lookup"><span data-stu-id="a16d7-109">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="a16d7-110">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-110">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-111">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-111">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-112">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-112">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-113">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-113">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-114">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-114">Compose or read</span></span></td></tr></table>


    <span data-ttu-id="a16d7-115">このシグネチャに加えて、メソッドには次のシグネチャもあります。</span><span class="sxs-lookup"><span data-stu-id="a16d7-115">In addition to this signature, the method also has the following signature:</span></span>


    `addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;`
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="a16d7-116">ハンドラーを呼び出す必要のあるイベント。</span><span class="sxs-lookup"><span data-stu-id="a16d7-116">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="a16d7-117">イベントを処理する関数。</span><span class="sxs-lookup"><span data-stu-id="a16d7-117">The function to handle the event.</span></span> <span data-ttu-id="a16d7-118">この関数は、1つのパラメーター (オブジェクトリテラル) を受け入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="a16d7-118">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="a16d7-119">パラメーターの type プロパティは、addハンドラ async に渡される eventType パラメーターと一致します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-119">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: options
      description: '<span data-ttu-id="a16d7-120">省略可能。</span><span class="sxs-lookup"><span data-stu-id="a16d7-120">Optional.</span></span> <span data-ttu-id="a16d7-121">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="a16d7-121">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="a16d7-122">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-122">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - any
    - id: callback
      description: <span data-ttu-id="a16d7-123">省略可能。</span><span class="sxs-lookup"><span data-stu-id="a16d7-123">Optional.</span></span> <span data-ttu-id="a16d7-124">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="a16d7-124">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.addHandlerAsync_1
  summary: >-
    <span data-ttu-id="a16d7-125">サポートされているイベントのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-125">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="a16d7-126">現在、サポートされて`Office.EventType.AppointmentTimeChanged` <!-- -->いる`Office.EventType.RecipientsChanged` <!-- -->イベントの`Office.EventType.RecurrenceChanged` <!-- -->種類は、、、です。</span><span class="sxs-lookup"><span data-stu-id="a16d7-126">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="a16d7-127">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-127">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-128">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-128">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-129">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-129">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-130">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-130">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-131">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-131">Compose or read</span></span></td></tr></table><span data-ttu-id="a16d7-132">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="a16d7-132">

    #### Examples</span></span>


    ```javascript

    function myHandlerFunction(eventarg) {
        if (eventarg.attachmentStatus === Office.MailboxEnums.AttachmentStatus.Added) {
            var attachment = eventarg.attachmentDetails;
            console.log("Event Fired and Attachment Added!");
            getAttachmentContentAsync(attachment.id, options, callback);
        }
    }


    Office.context.mailbox.item.addHandlerAsync(Office.EventType.AttachmentsChanged, myHandlerFunction, myCallback);

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="a16d7-133">ハンドラーを呼び出す必要のあるイベント。</span><span class="sxs-lookup"><span data-stu-id="a16d7-133">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="a16d7-134">イベントを処理する関数。</span><span class="sxs-lookup"><span data-stu-id="a16d7-134">The function to handle the event.</span></span> <span data-ttu-id="a16d7-135">この関数は、1つのパラメーター (オブジェクトリテラル) を受け入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="a16d7-135">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="a16d7-136">パラメーターの type プロパティは、addハンドラ async に渡される eventType パラメーターと一致します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-136">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="a16d7-137">省略可能。</span><span class="sxs-lookup"><span data-stu-id="a16d7-137">Optional.</span></span> <span data-ttu-id="a16d7-138">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="a16d7-138">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="a16d7-139">選択されたアイテムのこのアドインのカスタム プロパティを非同期に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-139">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="a16d7-p107">カスタム プロパティは、アプリケーションごと、アイテムごとのキーと値のペアとして格納されます。このメソッドは、コールバックで CustomProperties オブジェクトを返します。このオブジェクトは、現在のアイテムおよび現在のアドインに固有のカスタム プロパティにアクセスするためのメソッドを提供します。カスタム プロパティは、アイテム上では暗号化されません。そのため、セキュリティ保護記憶域として使用するべきではありません。</span><span class="sxs-lookup"><span data-stu-id="a16d7-p107">Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="a16d7-p108">カスタム プロパティは asyncResult.value プロパティの CustomProperties オブジェクトとして指定されます。このオブジェクトは、アイテムからカスタム プロパティを取得、設定、および削除し、カスタム プロパティに対する変更をサーバーに設定し直すために使用できます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-p108">The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="a16d7-145">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-145">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-146">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-146">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-147">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-147">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-148">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-148">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-149">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-149">Compose or read</span></span></td></tr></table><span data-ttu-id="a16d7-150">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="a16d7-150">

    #### Examples</span></span>


    ```javascript

    // The following example shows how to use the loadCustomPropertiesAsync method

    // to asynchronously load custom properties that are specific to the current item.

    // The example also shows how to use the saveAsync method to save these properties

    // back to the server. After loading the custom properties, the example uses the

    // get method to read the custom property myProp, the set method to write the

    // custom property otherProp, and then finally calls the saveAsync method to save

    // the custom properties.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var mailbox = Office.context.mailbox;
            mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
        });
    };


    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get("myProp");

        customProps.set("otherProp", "value");
        customProps.saveAsync(saveCallback);
    }


    function saveCallback(asyncResult) {

    }

    ```
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="a16d7-151">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="a16d7-151">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="a16d7-152">省略可能。</span><span class="sxs-lookup"><span data-stu-id="a16d7-152">Optional.</span></span> <span data-ttu-id="a16d7-153">開発者は、コールバック関数でアクセスする任意のオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-153">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="a16d7-154">このオブジェクトには、コールバック関数の asyncResult コンテキストプロパティによってアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-154">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: Outlook_1_7.Office.Item.removeHandlerAsync
  summary: >-
    <span data-ttu-id="a16d7-155">サポートされているイベントの種類のイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-155">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="a16d7-156">現在、サポートされて`Office.EventType.AppointmentTimeChanged` <!-- -->いる`Office.EventType.RecipientsChanged` <!-- -->イベントの`Office.EventType.RecurrenceChanged` <!-- -->種類は、、、です。</span><span class="sxs-lookup"><span data-stu-id="a16d7-156">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="a16d7-157">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-157">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-158">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-158">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-159">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-159">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-160">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-160">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-161">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-161">Compose or read</span></span></td></tr></table>


    <span data-ttu-id="a16d7-162">このシグネチャに加えて、メソッドには次のシグネチャもあります。</span><span class="sxs-lookup"><span data-stu-id="a16d7-162">In addition to this signature, the method also has the following signature:</span></span>


    `removeHandlerAsync(eventType: Office.EventType, callback?: (result: Office.AsyncResult<void>) => void): void;`
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="a16d7-163">ハンドラーを取り消すイベント。</span><span class="sxs-lookup"><span data-stu-id="a16d7-163">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: options
      description: '<span data-ttu-id="a16d7-164">省略可能。</span><span class="sxs-lookup"><span data-stu-id="a16d7-164">Optional.</span></span> <span data-ttu-id="a16d7-165">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="a16d7-165">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="a16d7-166">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="a16d7-166">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - any
    - id: callback
      description: <span data-ttu-id="a16d7-167">省略可能。</span><span class="sxs-lookup"><span data-stu-id="a16d7-167">Optional.</span></span> <span data-ttu-id="a16d7-168">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="a16d7-168">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.removeHandlerAsync_1
  summary: >-
    <span data-ttu-id="a16d7-169">サポートされているイベントの種類のイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-169">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="a16d7-170">現在、サポートされて`Office.EventType.AppointmentTimeChanged` <!-- -->いる`Office.EventType.RecipientsChanged` <!-- -->イベントの`Office.EventType.RecurrenceChanged` <!-- -->種類は、、、です。</span><span class="sxs-lookup"><span data-stu-id="a16d7-170">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span>


    <span data-ttu-id="a16d7-171">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-171">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-172">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-172">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-173">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-173">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-174">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-174">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-175">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-175">Compose or read</span></span></td></tr></table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="a16d7-176">ハンドラーを取り消すイベント。</span><span class="sxs-lookup"><span data-stu-id="a16d7-176">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="a16d7-177">省略可能。</span><span class="sxs-lookup"><span data-stu-id="a16d7-177">Optional.</span></span> <span data-ttu-id="a16d7-178">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="a16d7-178">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.Item.body
  summary: >-
    <span data-ttu-id="a16d7-179">アイテムの本文を操作するメソッドを提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-179">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="a16d7-180">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-180">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-181">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-181">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-182">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-182">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-183">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-183">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-184">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-184">Compose or read</span></span></td></tr></table><span data-ttu-id="a16d7-185">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="a16d7-185">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_7.Office.Item.itemType
  summary: >-
    <span data-ttu-id="a16d7-186">インスタンスが表しているアイテムの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-186">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="a16d7-187">itemType プロパティは、ItemType 列挙値の 1 つを返します。これは item オブジェクト インスタンスがメッセージと予定のどちらであるかを示すものです。</span><span class="sxs-lookup"><span data-stu-id="a16d7-187">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="a16d7-188">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-188">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-189">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-189">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-190">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-190">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-191">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-191">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-192">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-192">Compose or read</span></span></td></tr></table><span data-ttu-id="a16d7-193">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="a16d7-193">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_7.Office.Item.notificationMessages
  summary: >-
    <span data-ttu-id="a16d7-194">アイテムの通知メッセージを取得します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-194">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="a16d7-195">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-195">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="a16d7-196">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="a16d7-196">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="a16d7-197">ReadItem</span><span class="sxs-lookup"><span data-stu-id="a16d7-197">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="a16d7-198">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="a16d7-198">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="a16d7-199">作成または読み取り</span><span class="sxs-lookup"><span data-stu-id="a16d7-199">Compose or read</span></span></td></tr></table><span data-ttu-id="a16d7-200">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="a16d7-200">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_7.Office.Item.seriesId
  summary: >-
    <span data-ttu-id="a16d7-201">あるインスタンスが属するシリーズの ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-201">Gets the id of the series that an instance belongs to.</span></span>


    <span data-ttu-id="a16d7-202">OWA および Outlook では、このアイテムが属している親 (シリーズ) アイテムの Exchange Web サービス (EWS) id を、系列 ID が返します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-202">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="a16d7-203">ただし、iOS と Android では、系列 id は親アイテムの REST id を返します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-203">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>


    <span data-ttu-id="a16d7-204">**注**: [系列 id] プロパティによって返される識別子は、Exchange Web サービスのアイテム識別子と同じです。</span><span class="sxs-lookup"><span data-stu-id="a16d7-204">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="a16d7-205">"系列 id" プロパティは、outlook REST API で使用される outlook id と同一ではありません。</span><span class="sxs-lookup"><span data-stu-id="a16d7-205">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="a16d7-206">この値を使用して REST API を呼び出す前に、Office.context.mailbox.convertToRestId を使用して変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a16d7-206">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="a16d7-207">詳細については、「outlook[アドインからの outlook REST api の使用](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a16d7-207">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.</span></span>


    <span data-ttu-id="a16d7-208">個別の予定、一連のアイテム、会議出席依頼などの親アイテムがないアイテムに対しては、[区分 id] プロパティは null を返し、会議出席依頼以外のアイテムについては未定義を返します。</span><span class="sxs-lookup"><span data-stu-id="a16d7-208">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>


    <span data-ttu-id="a16d7-209">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a16d7-209">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: "<table><tr><td>[<span data-ttu-id=\"a16d7-210\">最小限のアクセス許可レベル</span><span class=\"sxs-lookup\"><span data-stu-id=\"a16d7-210\">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id=\"a16d7-211\">ReadItem</span><span class=\"sxs-lookup\"><span data-stu-id=\"a16d7-211\">ReadItem</span></span></td></tr>\n\n<tr><td>[<span data-ttu-id=\"a16d7-212\">適用可能な Outlook のモード</span><span class=\"sxs-lookup\"><span data-stu-id=\"a16d7-212\">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id=\"a16d7-213\">作成または読み取り</span><span class=\"sxs-lookup\"><span data-stu-id=\"a16d7-213\">Compose or read</span></span></td></tr></table><span data-ttu-id=\"a16d7-214\">\n####例えば</span><span class=\"sxs-lookup\"><span data-stu-id=\"a16d7-214\">\n#### Examples</span></span>\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
