### YamlMime:UniversalReference
ms.openlocfilehash: 011039cb0b6ac026461b745af2274aa6268169d0
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055592"
items:
- uid: Outlook_1_5.Office.AppointmentCompose
  summary: >-
    <span data-ttu-id="109a6-101">[Office](xref:Outlook_1_5.Office.Item)<!-- -->の予定の開催者モード。</span><span class="sxs-lookup"><span data-stu-id="109a6-101">The appointment organizer mode of [Office.context.mailbox.item](xref:Outlook_1_5.Office.Item)<!-- -->.</span></span>


    <span data-ttu-id="109a6-102">**重要**: これは、内部の Outlook オブジェクトであり、既存のインターフェイスを使用して直接公開されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="109a6-102">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="109a6-103">これは、Office の1つのモードとして扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="109a6-103">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="109a6-104">詳細については、「[オブジェクトモデル](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item)」ページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="109a6-104">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.5/office.context.mailbox.item) page for more information.</span></span>
  name: Office.AppointmentCompose
  fullName: Office.AppointmentCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Appointment
  - 'ItemCompose '
  package: Outlook_1_5
  children:
  - Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync
  - Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync_1
  - Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync_2
  - Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync_3
  - Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync
  - Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync_1
  - Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync_2
  - Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync_3
  - Outlook_1_5.Office.AppointmentCompose.close
  - Outlook_1_5.Office.AppointmentCompose.getSelectedDataAsync
  - Outlook_1_5.Office.AppointmentCompose.getSelectedDataAsync_1
  - Outlook_1_5.Office.AppointmentCompose.loadCustomPropertiesAsync
  - Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync
  - Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync_1
  - Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync_2
  - Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync_3
  - Outlook_1_5.Office.AppointmentCompose.saveAsync
  - Outlook_1_5.Office.AppointmentCompose.saveAsync_1
  - Outlook_1_5.Office.AppointmentCompose.saveAsync_2
  - Outlook_1_5.Office.AppointmentCompose.saveAsync_3
  - Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync
  - Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync_1
  - Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync_2
  - Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync_3
  - Outlook_1_5.Office.AppointmentCompose.body
  - Outlook_1_5.Office.AppointmentCompose.end
  - Outlook_1_5.Office.AppointmentCompose.itemType
  - Outlook_1_5.Office.AppointmentCompose.location
  - Outlook_1_5.Office.AppointmentCompose.notificationMessages
  - Outlook_1_5.Office.AppointmentCompose.optionalAttendees
  - Outlook_1_5.Office.AppointmentCompose.requiredAttendees
  - Outlook_1_5.Office.AppointmentCompose.start
  - Outlook_1_5.Office.AppointmentCompose.subject
- uid: Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync
  summary: >-
    <span data-ttu-id="109a6-105">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-105">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="109a6-106">addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="109a6-106">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="109a6-107">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-107">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-108">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-108">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-109">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-109">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-110">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-110">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-111">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-111">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-112">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-112">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-113">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-113">Errors</span></span></td><td><span data-ttu-id="109a6-114">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="109a6-114">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-115">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="109a6-115">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-116">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-116">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>


    <span data-ttu-id="109a6-117">このシグネチャに加えて、メソッドには次のシグネチャもあります。</span><span class="sxs-lookup"><span data-stu-id="109a6-117">In addition to this signature, the method also has the following signatures:</span></span>


    `addFileAttachmentAsync(uri: string, attachmentName: string): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a><span data-ttu-id="109a6-118">例</span><span class="sxs-lookup"><span data-stu-id="109a6-118">Examples</span></span>


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="109a6-p102">メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p102">The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="109a6-p103">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p103">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="109a6-123">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-123">Optional.</span></span> <span data-ttu-id="109a6-124">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-124">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-125">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-125">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="109a6-126">isinline: true の場合は、添付ファイルがインラインでメッセージ本文に表示され、添付ファイル一覧に表示されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="109a6-126">isInline: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="109a6-127">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-127">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="109a6-128">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-128">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="109a6-129">添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトにはエラーについて説明する Error オブジェクトが入ります。</span><span class="sxs-lookup"><span data-stu-id="109a6-129">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync_1
  summary: >-
    <span data-ttu-id="109a6-130">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-130">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="109a6-131">addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="109a6-131">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="109a6-132">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-132">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-133">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-133">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-134">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-134">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-135">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-135">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-136">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-136">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-137">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-137">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-138">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-138">Errors</span></span></td><td><span data-ttu-id="109a6-139">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="109a6-139">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-140">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="109a6-140">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-141">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-141">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName)
  fullName: addFileAttachmentAsync(uri, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="109a6-p106">メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p106">The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="109a6-p107">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p107">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
- uid: Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync_2
  summary: >-
    <span data-ttu-id="109a6-146">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-146">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="109a6-147">addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="109a6-147">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="109a6-148">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-148">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-149">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-149">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-150">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-150">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-151">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-151">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-152">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-152">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-153">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-153">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-154">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-154">Errors</span></span></td><td><span data-ttu-id="109a6-155">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="109a6-155">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-156">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="109a6-156">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-157">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-157">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, options)
  fullName: addFileAttachmentAsync(uri, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="109a6-p108">メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p108">The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="109a6-p109">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p109">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="109a6-162">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-162">Optional.</span></span> <span data-ttu-id="109a6-163">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-163">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-164">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-164">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="109a6-165">isinline: true の場合は、添付ファイルがインラインでメッセージ本文に表示され、添付ファイル一覧に表示されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="109a6-165">isInline: If true, indicates that the attachment will be shown inline in the message body and should not be displayed in the attachment list.</span></span>'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_5.Office.AppointmentCompose.addFileAttachmentAsync_3
  summary: >-
    <span data-ttu-id="109a6-166">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-166">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="109a6-167">addFileAttachmentAsync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="109a6-167">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="109a6-168">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-168">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-169">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-169">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-170">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-170">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-171">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-171">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-172">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-172">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-173">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-173">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-174">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-174">Errors</span></span></td><td><span data-ttu-id="109a6-175">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="109a6-175">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-176">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="109a6-176">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr><tr><td></td><td><span data-ttu-id="109a6-177">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-177">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="109a6-p111">メッセージまたは予定に添付するファイルの場所を示す URI。最大長は 2048 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p111">The URI that provides the location of the file to attach to the message or appointment. The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="109a6-p112">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p112">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="109a6-182">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-182">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="109a6-183">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-183">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="109a6-184">添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトにはエラーについて説明する Error オブジェクトが入ります。</span><span class="sxs-lookup"><span data-stu-id="109a6-184">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync
  summary: >-
    <span data-ttu-id="109a6-185">メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-185">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="109a6-p114">addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p114">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="109a6-189">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-189">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-190">Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-190">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="109a6-191">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-191">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-192">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-192">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-193">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-193">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-194">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-194">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-195">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-195">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-196">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-196">Errors</span></span></td><td><span data-ttu-id="109a6-197">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-197">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>


    <span data-ttu-id="109a6-198">このシグネチャに加えて、このメソッドには次のシグネチャもあります。</span><span class="sxs-lookup"><span data-stu-id="109a6-198">In addition to this signature, this method also has the following signatures:</span></span>


    `addItemAttachmentAsync(itemId: any, attachmentName: string): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;`

    #### <a name="examples"></a><span data-ttu-id="109a6-199">例</span><span class="sxs-lookup"><span data-stu-id="109a6-199">Examples</span></span>


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="109a6-p115">添付するアイテムの Exchange 識別子。最大長は 100 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p115">The Exchange identifier of the item to attach. The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="109a6-p116">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p116">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="109a6-204">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-204">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-205">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-205">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="109a6-206">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-206">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="109a6-207">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-207">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="109a6-208">添付ファイルの追加が失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-208">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync_1
  summary: >-
    <span data-ttu-id="109a6-209">メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-209">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="109a6-p119">addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p119">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="109a6-213">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-213">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-214">Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-214">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="109a6-215">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-215">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-216">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-216">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-217">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-217">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-218">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-218">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-219">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-219">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-220">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-220">Errors</span></span></td><td><span data-ttu-id="109a6-221">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-221">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName)
  fullName: addItemAttachmentAsync(itemId, attachmentName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="109a6-p120">添付するアイテムの Exchange 識別子。最大長は 100 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p120">The Exchange identifier of the item to attach. The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="109a6-p121">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p121">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
- uid: Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync_2
  summary: >-
    <span data-ttu-id="109a6-226">メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-226">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="109a6-p122">addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p122">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="109a6-230">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-230">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-231">Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-231">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="109a6-232">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-232">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-233">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-233">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-234">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-234">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-235">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-235">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-236">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-236">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-237">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-237">Errors</span></span></td><td><span data-ttu-id="109a6-238">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-238">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, options)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="109a6-p123">添付するアイテムの Exchange 識別子。最大長は 100 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p123">The Exchange identifier of the item to attach. The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="109a6-p124">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p124">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="109a6-243">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-243">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-244">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-244">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_5.Office.AppointmentCompose.addItemAttachmentAsync_3
  summary: >-
    <span data-ttu-id="109a6-245">メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="109a6-245">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="109a6-p126">addItemAttachmentAsync メソッドは、指定した Exchange 識別子を含むアイテムを、作成フォーム内のアイテムに添付します。コールバック メソッドを指定した場合、メソッドは添付ファイルの識別子、またはアイテムの添付中に発生したすべてのエラーを含む asyncResult という 1 つのパラメーターで呼び出されます。options パラメーターを使用して、必要に応じてコールバック メソッドに状態情報を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p126">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form. If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item. You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="109a6-249">その後、removeAttachmentAsync メソッドで識別子を使用して同じセッションの添付ファイルを削除できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-249">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="109a6-250">Office アドインを Outlook Web App で実行している場合、addItemAttachmentAsync メソッドはアイテムを、編集中のアイテム以外のアイテムに添付できますが、これはサポートされておらず、推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-250">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="109a6-251">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-251">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-252">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-252">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-253">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-253">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-254">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-254">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-255">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-255">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-256">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-256">Errors</span></span></td><td><span data-ttu-id="109a6-257">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="109a6-257">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr></table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="109a6-p127">添付するアイテムの Exchange 識別子。最大長は 100 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p127">The Exchange identifier of the item to attach. The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="109a6-p128">添付ファイルのアップロード時に表示される添付ファイルの名前。最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="109a6-p128">The name of the attachment that is shown while the attachment is uploading. The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="109a6-262">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-262">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="109a6-263">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-263">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="109a6-264">添付ファイルの追加が失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-264">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.close
  summary: >-
    <span data-ttu-id="109a6-265">構成されている現在のアイテムを閉じます。</span><span class="sxs-lookup"><span data-stu-id="109a6-265">Closes the current item that is being composed</span></span>


    <span data-ttu-id="109a6-266">close メソッドの動作は、構成されているアイテムの現在の状態によって異なります。</span><span class="sxs-lookup"><span data-stu-id="109a6-266">The behaviors of the close method depends on the current state of the item being composed.</span></span> <span data-ttu-id="109a6-267">アイテムに保存されていない変更がある場合、クライアントはユーザーに対して、操作を保存、破棄、または閉じることを求めるメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="109a6-267">If the item has unsaved changes, the client prompts the user to save, discard, or close the action.</span></span>


    <span data-ttu-id="109a6-268">Outlook デスクトップ クライアントでは、メッセージがインライン返信の場合、close メソッドは無効になります。</span><span class="sxs-lookup"><span data-stu-id="109a6-268">In the Outlook desktop client, if the message is an inline reply, the close method has no effect.</span></span>


    <span data-ttu-id="109a6-269">**注**: web 上の Outlook では、アイテムが予定であり、以前に saveAsync を使用して保存されている場合、アイテムが最後に保存されてから変更が行われていない場合でも、ユーザーに対して保存、破棄、またはキャンセルを求めるメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-269">**Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using saveAsync, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.</span></span>


    <span data-ttu-id="109a6-270">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-270">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-271">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-271">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-272">制限あり</span><span class="sxs-lookup"><span data-stu-id="109a6-272">Restricted</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-273">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-273">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-274">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-274">Appointment Organizer</span></span></td></tr></table>
  name: close()
  fullName: close()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_5.Office.AppointmentCompose.getSelectedDataAsync
  summary: >-
    <span data-ttu-id="109a6-275">メッセージの件名または本文から非同期的に選択したデータを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-275">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="109a6-p131">本文または件名で選択範囲がカーソルのみの場合、メソッドは選択されたデータに対して null を返します。本文または件名以外のフィールドを選択した場合、メソッドは InvalidSelection エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-p131">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data. If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="109a6-p132">コールバック メソッドから選択されたデータにアクセスするには、asyncResult.value.data を呼び出します。選択が行われたソース プロパティにアクセスするには、asyncResult.value.sourceProperty を呼び出します。この場合、body、または subject のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-p132">To access the selected data from the callback method, call asyncResult.value.data. To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="109a6-280">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-280">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-281">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-281">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-282">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-282">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-283">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-283">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-284">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-284">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-285">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-285">

    #### Examples</span></span>


    ```javascript

    // Get selected data.

    Office.initialize = function () {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
    };


    function getCallback(asyncResult) {
        var text = asyncResult.value.data;
        var prop = asyncResult.value.sourceProperty;

        Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
    }


    function setCallback(asyncResult) {
        // Check for errors.
    }

    ```
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync(coercionType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (result: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="109a6-286">選択されたデータ (coercionType で決定された形式の文字列として)。</span><span class="sxs-lookup"><span data-stu-id="109a6-286">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="109a6-p133">データの形式を要求します。テキストの場合、メソッドは文字列としてプレーン テキストを返し、存在する HTML タグはすべて削除されます。HTMLの場合、メソッドは、プレーンテキストまたは HTML のいずれの場合も選択されたテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-p133">Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: options
      description: '<span data-ttu-id="109a6-290">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-290">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-291">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-291">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="109a6-292">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-292">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<any>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.getSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="109a6-293">メッセージの件名または本文から非同期的に選択したデータを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-293">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="109a6-p135">本文または件名で選択範囲がカーソルのみの場合、メソッドは選択されたデータに対して null を返します。本文または件名以外のフィールドを選択した場合、メソッドは InvalidSelection エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-p135">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data. If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="109a6-p136">コールバック メソッドから選択されたデータにアクセスするには、asyncResult.value.data を呼び出します。選択が行われたソース プロパティにアクセスするには、asyncResult.value.sourceProperty を呼び出します。この場合、body、または subject のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-p136">To access the selected data from the callback method, call asyncResult.value.data. To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="109a6-298">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-298">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-299">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-299">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-300">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-300">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-301">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-301">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-302">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-302">Appointment Organizer</span></span></td></tr></table>
  name: getSelectedDataAsync(coercionType, callback)
  fullName: getSelectedDataAsync(coercionType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="109a6-303">選択されたデータ (coercionType で決定された形式の文字列として)。</span><span class="sxs-lookup"><span data-stu-id="109a6-303">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="109a6-p137">データの形式を要求します。テキストの場合、メソッドは文字列としてプレーン テキストを返し、存在する HTML タグはすべて削除されます。HTMLの場合、メソッドは、プレーンテキストまたは HTML のいずれの場合も選択されたテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-p137">Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: callback
      description: <span data-ttu-id="109a6-307">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-307">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="109a6-308">選択されたアイテムのこのアドインのカスタム プロパティを非同期に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="109a6-308">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="109a6-p138">カスタム プロパティは、アプリケーションごと、アイテムごとのキーと値のペアとして格納されます。このメソッドは、コールバックで CustomProperties オブジェクトを返します。このオブジェクトは、現在のアイテムおよび現在のアドインに固有のカスタム プロパティにアクセスするためのメソッドを提供します。カスタム プロパティは、アイテム上では暗号化されません。そのため、セキュリティ保護記憶域として使用するべきではありません。</span><span class="sxs-lookup"><span data-stu-id="109a6-p138">Custom properties are stored as key/value pairs on a per-app, per-item basis. This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in. Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="109a6-p139">カスタム プロパティは asyncResult.value プロパティの CustomProperties オブジェクトとして指定されます。このオブジェクトは、アイテムからカスタム プロパティを取得、設定、および削除し、カスタム プロパティに対する変更をサーバーに設定し直すために使用できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p139">The custom properties are provided as a CustomProperties object in the asyncResult.value property. This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="109a6-314">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-314">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-315">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-315">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-316">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-316">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-317">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-317">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-318">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-318">Appointment Organizer</span></span></td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="109a6-319">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-319">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="109a6-320">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-320">Optional.</span></span> <span data-ttu-id="109a6-321">開発者は、コールバック関数でアクセスする任意のオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-321">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="109a6-322">このオブジェクトには、コールバック関数の asyncResult コンテキストプロパティによってアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="109a6-322">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync
  summary: >-
    <span data-ttu-id="109a6-323">メッセージまたは予定から添付ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-323">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="109a6-324">removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-324">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="109a6-325">ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="109a6-325">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="109a6-326">Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="109a6-326">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="109a6-327">ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。</span><span class="sxs-lookup"><span data-stu-id="109a6-327">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="109a6-328">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-328">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-329">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-329">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-330">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-330">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-331">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-331">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-332">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-332">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-333">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-333">Errors</span></span></td><td><span data-ttu-id="109a6-334">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-334">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>


    <span data-ttu-id="109a6-335">このシグネチャに加えて、メソッドには次のシグネチャもあります。</span><span class="sxs-lookup"><span data-stu-id="109a6-335">In addition to this signature, the method also has the following signatures:</span></span>


    `removeAttachmentAsync(attachmentId: string): void;`


    `removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;`


    `removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a><span data-ttu-id="109a6-336">例</span><span class="sxs-lookup"><span data-stu-id="109a6-336">Examples</span></span>


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="109a6-337">削除する添付ファイルの識別子。</span><span class="sxs-lookup"><span data-stu-id="109a6-337">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="109a6-338">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-338">Optional.</span></span> <span data-ttu-id="109a6-339">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-339">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-340">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-340">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="109a6-341">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-341">Optional.</span></span> <span data-ttu-id="109a6-342">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-342">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="109a6-343">添付ファイルの削除が失敗した場合、エラーコードにはエラーの理由と共にエラーコードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="109a6-343">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync_1
  summary: >-
    <span data-ttu-id="109a6-344">メッセージまたは予定から添付ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-344">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="109a6-345">removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-345">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="109a6-346">ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="109a6-346">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="109a6-347">Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="109a6-347">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="109a6-348">ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。</span><span class="sxs-lookup"><span data-stu-id="109a6-348">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="109a6-349">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-349">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-350">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-350">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-351">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-351">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-352">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-352">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-353">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-353">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-354">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-354">Errors</span></span></td><td><span data-ttu-id="109a6-355">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-355">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>
  name: removeAttachmentAsync(attachmentId)
  fullName: removeAttachmentAsync(attachmentId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="109a6-356">削除する添付ファイルの識別子。</span><span class="sxs-lookup"><span data-stu-id="109a6-356">The identifier of the attachment to remove.</span></span>
      type:
      - string
- uid: Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync_2
  summary: >-
    <span data-ttu-id="109a6-357">メッセージまたは予定から添付ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-357">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="109a6-358">removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-358">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="109a6-359">ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="109a6-359">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="109a6-360">Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="109a6-360">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="109a6-361">ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。</span><span class="sxs-lookup"><span data-stu-id="109a6-361">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="109a6-362">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-362">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-363">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-363">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-364">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-364">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-365">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-365">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-366">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-366">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-367">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-367">Errors</span></span></td><td><span data-ttu-id="109a6-368">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-368">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>
  name: removeAttachmentAsync(attachmentId, options)
  fullName: removeAttachmentAsync(attachmentId, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="109a6-369">削除する添付ファイルの識別子。</span><span class="sxs-lookup"><span data-stu-id="109a6-369">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="109a6-370">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-370">Optional.</span></span> <span data-ttu-id="109a6-371">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-371">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-372">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-372">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_5.Office.AppointmentCompose.removeAttachmentAsync_3
  summary: >-
    <span data-ttu-id="109a6-373">メッセージまたは予定から添付ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-373">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="109a6-374">removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。</span><span class="sxs-lookup"><span data-stu-id="109a6-374">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="109a6-375">ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="109a6-375">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="109a6-376">Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="109a6-376">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="109a6-377">ユーザーがアプリを閉じるか、ユーザーがインライン フォームで新規作成を開始し、フォームが表示され、別ウィンドウで操作を継続すると、セッションは終了します。</span><span class="sxs-lookup"><span data-stu-id="109a6-377">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="109a6-378">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-378">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-379">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-379">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-380">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-380">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-381">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-381">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-382">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-382">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-383">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-383">Errors</span></span></td><td><span data-ttu-id="109a6-384">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-384">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="109a6-385">削除する添付ファイルの識別子。</span><span class="sxs-lookup"><span data-stu-id="109a6-385">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="109a6-386">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-386">Optional.</span></span> <span data-ttu-id="109a6-387">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-387">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="109a6-388">添付ファイルの削除が失敗した場合、エラーコードにはエラーの理由と共にエラーコードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="109a6-388">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.saveAsync
  summary: >-
    <span data-ttu-id="109a6-389">項目を非同期的に保存します。</span><span class="sxs-lookup"><span data-stu-id="109a6-389">Asynchronously saves an item.</span></span>


    <span data-ttu-id="109a6-p149">呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p149">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="109a6-393">予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-393">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="109a6-394">以前に保存されていない新しい予定の場合、招待状は送信されません。</span><span class="sxs-lookup"><span data-stu-id="109a6-394">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="109a6-395">既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-395">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="109a6-396">**注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="109a6-396">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="109a6-397">アイテムが同期されるまで、itemId を使用するとエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-397">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="109a6-398">**注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="109a6-398">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="109a6-399">Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-399">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="109a6-400">Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-400">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="109a6-401">Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-401">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="109a6-402">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-402">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-403">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-403">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-404">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-404">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-405">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-405">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-406">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-406">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-407">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-407">Errors</span></span></td><td><span data-ttu-id="109a6-408">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-408">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>


    <span data-ttu-id="109a6-409">このシグネチャに加えて、メソッドには次のシグネチャもあります。</span><span class="sxs-lookup"><span data-stu-id="109a6-409">In addition to this signature, the method also has the following signatures:</span></span>


    `saveAsync(): void;`


    `saveAsync(options: Office.AsyncContextOptions): void;`


    `saveAsync(callback: (result: Office.AsyncResult<string>) => void): void;`
  name: saveAsync(options, callback)
  fullName: saveAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="109a6-410">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-410">Optional.</span></span> <span data-ttu-id="109a6-411">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-411">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-412">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-412">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="109a6-413">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-413">Optional.</span></span> <span data-ttu-id="109a6-414">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-414">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.saveAsync_1
  summary: >-
    <span data-ttu-id="109a6-415">項目を非同期的に保存します。</span><span class="sxs-lookup"><span data-stu-id="109a6-415">Asynchronously saves an item.</span></span>


    <span data-ttu-id="109a6-p155">呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p155">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="109a6-419">予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-419">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="109a6-420">以前に保存されていない新しい予定の場合、招待状は送信されません。</span><span class="sxs-lookup"><span data-stu-id="109a6-420">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="109a6-421">既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-421">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="109a6-422">**注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="109a6-422">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="109a6-423">アイテムが同期されるまで、itemId を使用するとエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-423">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="109a6-424">**注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="109a6-424">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="109a6-425">Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-425">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="109a6-426">Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-426">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="109a6-427">Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-427">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="109a6-428">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-428">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-429">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-429">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-430">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-430">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-431">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-431">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-432">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-432">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-433">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-433">Errors</span></span></td><td><span data-ttu-id="109a6-434">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-434">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>
  name: saveAsync()
  fullName: saveAsync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_5.Office.AppointmentCompose.saveAsync_2
  summary: >-
    <span data-ttu-id="109a6-435">項目を非同期的に保存します。</span><span class="sxs-lookup"><span data-stu-id="109a6-435">Asynchronously saves an item.</span></span>


    <span data-ttu-id="109a6-p159">呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p159">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="109a6-439">予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-439">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="109a6-440">以前に保存されていない新しい予定の場合、招待状は送信されません。</span><span class="sxs-lookup"><span data-stu-id="109a6-440">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="109a6-441">既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-441">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="109a6-442">**注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="109a6-442">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="109a6-443">アイテムが同期されるまで、itemId を使用するとエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-443">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="109a6-444">**注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="109a6-444">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="109a6-445">Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-445">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="109a6-446">Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-446">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="109a6-447">Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-447">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="109a6-448">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-448">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-449">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-449">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-450">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-450">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-451">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-451">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-452">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-452">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-453">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-453">Errors</span></span></td><td><span data-ttu-id="109a6-454">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-454">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>
  name: saveAsync(options)
  fullName: saveAsync(options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options: Office.AsyncContextOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="109a6-455">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-455">Optional.</span></span> <span data-ttu-id="109a6-456">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="109a6-456">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="109a6-457">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-457">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
- uid: Outlook_1_5.Office.AppointmentCompose.saveAsync_3
  summary: >-
    <span data-ttu-id="109a6-458">項目を非同期的に保存します。</span><span class="sxs-lookup"><span data-stu-id="109a6-458">Asynchronously saves an item.</span></span>


    <span data-ttu-id="109a6-p164">呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p164">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="109a6-462">予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-462">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="109a6-463">以前に保存されていない新しい予定の場合、招待状は送信されません。</span><span class="sxs-lookup"><span data-stu-id="109a6-463">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="109a6-464">既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-464">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="109a6-465">**注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="109a6-465">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="109a6-466">アイテムが同期されるまで、itemId を使用するとエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-466">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="109a6-467">**注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="109a6-467">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="109a6-468">Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="109a6-468">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="109a6-469">Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-469">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="109a6-470">Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-470">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="109a6-471">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-471">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-472">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-472">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-473">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-473">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-474">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-474">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-475">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-475">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-476">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-476">Errors</span></span></td><td><span data-ttu-id="109a6-477">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-477">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table><span data-ttu-id="109a6-478">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-478">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.saveAsync(
        function callback(result) {
            // Process the result.
        });

    // The following is an example of the

    // `result` parameter passed to the

    // callback function. The `value`

    // property contains the item ID of

    // the item.

    {
        "value": "AAMkADI5...AAA=",
        "status": "succeeded"
    }

    ```
  name: saveAsync(callback)
  fullName: saveAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback: (result: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="109a6-479">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-479">Optional.</span></span> <span data-ttu-id="109a6-480">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-480">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<string>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync
  summary: >-
    <span data-ttu-id="109a6-481">メッセージの本文または件名に非同期的にデータを挿入します。</span><span class="sxs-lookup"><span data-stu-id="109a6-481">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="109a6-482">setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。</span><span class="sxs-lookup"><span data-stu-id="109a6-482">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="109a6-483">カーソルが本文または件名フィールドにない場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-483">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="109a6-484">挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。</span><span class="sxs-lookup"><span data-stu-id="109a6-484">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="109a6-485">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-485">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-486">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-486">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-487">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-487">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-488">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-488">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-489">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-489">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-490">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-490">Errors</span></span></td><td><span data-ttu-id="109a6-491">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-491">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>


    <span data-ttu-id="109a6-492">このシグネチャに加えて、メソッドには次のシグネチャもあります。</span><span class="sxs-lookup"><span data-stu-id="109a6-492">In addition to this signature, the method also has the following signatures:</span></span>


    `setSelectedDataAsync(data: string): void;`


    `setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions): void;`


    `setSelectedDataAsync(data: string, callback: (result: Office.AsyncResult<void>) => void): void;`

    #### <a name="examples"></a><span data-ttu-id="109a6-493">例</span><span class="sxs-lookup"><span data-stu-id="109a6-493">Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("Hello World!");

    ```
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="109a6-p170">挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p170">The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: options
      description: "<span data-ttu-id=\"109a6-497\">省略可能。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-497\">Optional.</span></span> <span data-ttu-id=\"109a6-498\">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-498\">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id=\"109a6-499\">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-499\">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id=\"109a6-500\">coercionType: テキストの場合、現在のスタイルが outlook Web App および outlook で適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-500\">coercionType: If text, the current style is applied in Outlook Web App and Outlook.</span></span> <span data-ttu-id=\"109a6-501\">フィールドが HTML エディターの場合、データが HTML の場合でも、テキスト データのみが挿入されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-501\">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id=\"109a6-502\">html とフィールドが html をサポートしている場合 (件名は含まれません)、現在のスタイルが outlook Web App で適用され、既定のスタイルが outlook で適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-502\">If html and the field supports HTML (the subject doesn't), the current style is applied in Outlook Web App and the default style is applied in Outlook.</span></span> <span data-ttu-id=\"109a6-503\">フィールドがテキストフィールドの場合は、InvalidDataFormat エラーが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-503\">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id=\"109a6-504\">coercionType が設定されていない場合、結果はフィールドに依存します。フィールドが HTML フィールドであれば HTML が使用され、フィールドがテキスト フィールドであればプレーン テキストが使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-504\">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>"
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: <span data-ttu-id="109a6-505">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-505">Optional.</span></span> <span data-ttu-id="109a6-506">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-506">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="109a6-507">メッセージの本文または件名に非同期的にデータを挿入します。</span><span class="sxs-lookup"><span data-stu-id="109a6-507">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="109a6-508">setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。</span><span class="sxs-lookup"><span data-stu-id="109a6-508">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="109a6-509">カーソルが本文または件名フィールドにない場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-509">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="109a6-510">挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。</span><span class="sxs-lookup"><span data-stu-id="109a6-510">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="109a6-511">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-511">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-512">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-512">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-513">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-513">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-514">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-514">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-515">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-515">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-516">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-516">Errors</span></span></td><td><span data-ttu-id="109a6-517">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-517">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>
  name: setSelectedDataAsync(data)
  fullName: setSelectedDataAsync(data)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="109a6-p174">挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p174">The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
- uid: Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync_2
  summary: >-
    <span data-ttu-id="109a6-521">メッセージの本文または件名に非同期的にデータを挿入します。</span><span class="sxs-lookup"><span data-stu-id="109a6-521">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="109a6-522">setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。</span><span class="sxs-lookup"><span data-stu-id="109a6-522">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="109a6-523">カーソルが本文または件名フィールドにない場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-523">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="109a6-524">挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。</span><span class="sxs-lookup"><span data-stu-id="109a6-524">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="109a6-525">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-525">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-526">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-526">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-527">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-527">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-528">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-528">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-529">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-529">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-530">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-530">Errors</span></span></td><td><span data-ttu-id="109a6-531">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-531">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table><span data-ttu-id="109a6-532">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-532">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });

    ```
  name: setSelectedDataAsync(data, options)
  fullName: setSelectedDataAsync(data, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="109a6-p176">挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p176">The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: options
      description: "<span data-ttu-id=\"109a6-536\">省略可能。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-536\">Optional.</span></span> <span data-ttu-id=\"109a6-537\">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-537\">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id=\"109a6-538\">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-538\">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id=\"109a6-539\">coercionType: テキストの場合、現在のスタイルが outlook Web App および outlook で適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-539\">coercionType: If text, the current style is applied in Outlook Web App and Outlook.</span></span> <span data-ttu-id=\"109a6-540\">フィールドが HTML エディターの場合、データが HTML の場合でも、テキスト データのみが挿入されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-540\">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id=\"109a6-541\">html とフィールドが html をサポートしている場合 (件名は含まれません)、現在のスタイルが outlook Web App で適用され、既定のスタイルが outlook で適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-541\">If html and the field supports HTML (the subject doesn't), the current style is applied in Outlook Web App and the default style is applied in Outlook.</span></span> <span data-ttu-id=\"109a6-542\">フィールドがテキストフィールドの場合は、InvalidDataFormat エラーが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-542\">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id=\"109a6-543\">coercionType が設定されていない場合、結果はフィールドに依存します。フィールドが HTML フィールドであれば HTML が使用され、フィールドがテキスト フィールドであればプレーン テキストが使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"109a6-543\">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>"
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
- uid: Outlook_1_5.Office.AppointmentCompose.setSelectedDataAsync_3
  summary: >-
    <span data-ttu-id="109a6-544">メッセージの本文または件名に非同期的にデータを挿入します。</span><span class="sxs-lookup"><span data-stu-id="109a6-544">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="109a6-545">setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。</span><span class="sxs-lookup"><span data-stu-id="109a6-545">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="109a6-546">カーソルが本文または件名フィールドにない場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="109a6-546">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="109a6-547">挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。</span><span class="sxs-lookup"><span data-stu-id="109a6-547">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="109a6-548">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-548">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-549">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-549">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-550">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="109a6-550">ReadWriteItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-551">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-551">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-552">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-552">Appointment Organizer</span></span></td></tr>


    <tr><td><span data-ttu-id="109a6-553">エラー</span><span class="sxs-lookup"><span data-stu-id="109a6-553">Errors</span></span></td><td><span data-ttu-id="109a6-554">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="109a6-554">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr></table>
  name: setSelectedDataAsync(data, callback)
  fullName: setSelectedDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="109a6-p179">挿入するデータ。データは 1,000,000 文字を超えてはいけません。1,000,000 文字を超える文字が渡されると、ArgumentOutOfRange の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="109a6-p179">The data to be inserted. Data is not to exceed 1,000,000 characters. If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="109a6-558">省略可能。</span><span class="sxs-lookup"><span data-stu-id="109a6-558">Optional.</span></span> <span data-ttu-id="109a6-559">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="109a6-559">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_5.Office.AppointmentCompose.body
  summary: >-
    <span data-ttu-id="109a6-560">アイテムの本文を操作するメソッドを提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="109a6-560">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="109a6-561">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-561">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-562">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-562">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-563">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-563">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-564">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-564">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-565">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-565">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-566">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-566">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the message as plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of an object that is passed as the result parameter to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_5.Office.AppointmentCompose.end
  summary: >-
    <span data-ttu-id="109a6-567">予定が終了する日時を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="109a6-567">Gets or sets the date and time that the appointment is to end.</span></span>


    <span data-ttu-id="109a6-568">end プロパティは、協定世界時 (UTC) の日付と時刻の値として表される、 [Office. time](xref:Outlook_1_5.Office.Time)オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="109a6-568">The end property is an [Office.Time](xref:Outlook_1_5.Office.Time) object expressed as a Coordinated Universal Time (UTC) date and time value.</span></span> <span data-ttu-id="109a6-569">converttolocalclienttime メソッドを使用すると、end プロパティの値をクライアントのローカルの日付と時刻に変換できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-569">You can use the convertToLocalClientTime method to convert the end property value to the client's local date and time.</span></span>


    <span data-ttu-id="109a6-570">Time.setAsync メソッドを使用して終了時刻を設定する場合、convertToUtcClientTime メソッドを使用して、クライアント上のローカルの時刻をサーバーの UTC に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="109a6-570">When you use the Time.setAsync method to set the end time, you should use the convertToUtcClientTime method to convert the local time on the client to UTC for the server.</span></span>


    <span data-ttu-id="109a6-571">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-571">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-572">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-572">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-573">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-573">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-574">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-574">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-575">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-575">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-576">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-576">

    #### Examples</span></span>


    ```javascript

    // The following example sets the end time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var endTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.end.setAsync(endTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("End Time " + result.asyncContext.verb);
        }
    });

    ```
  name: end
  fullName: end
  langs:
  - typeScript
  type: property
  syntax:
    content: 'end: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_5.Office.AppointmentCompose.itemType
  summary: >-
    <span data-ttu-id="109a6-577">インスタンスが表しているアイテムの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="109a6-577">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="109a6-578">itemType プロパティは、ItemType 列挙値の 1 つを返します。これは item オブジェクト インスタンスがメッセージと予定のどちらであるかを示すものです。</span><span class="sxs-lookup"><span data-stu-id="109a6-578">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="109a6-579">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-579">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-580">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-580">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-581">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-581">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-582">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-582">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-583">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-583">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-584">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-584">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Appointment) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_5.Office.AppointmentCompose.location
  summary: >-
    <span data-ttu-id="109a6-585">予定のオフィスの[場所](xref:Outlook_1_5.Office.Location)を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="109a6-585">Gets or sets the [Office.Location](xref:Outlook_1_5.Office.Location) of an appointment.</span></span> <span data-ttu-id="109a6-586">location プロパティは予定の場所を取得または設定するために使用するメソッドを提供する Location オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-586">The location property returns a Location object that provides methods that are used to get and set the location of the appointment.</span></span>


    <span data-ttu-id="109a6-587">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-587">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-588">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-588">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-589">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-589">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-590">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-590">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-591">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-591">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-592">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-592">

    #### Examples</span></span>


    ```javascript

    var userContext = { value : 1 };

    Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var location = asyncResult.value;
    }

    ```
  name: location
  fullName: location
  langs:
  - typeScript
  type: property
  syntax:
    content: 'location: Location;'
    return:
      type:
      - Location
- uid: Outlook_1_5.Office.AppointmentCompose.notificationMessages
  summary: >-
    <span data-ttu-id="109a6-593">アイテムの通知メッセージを取得します。</span><span class="sxs-lookup"><span data-stu-id="109a6-593">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="109a6-594">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-594">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-595">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-595">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-596">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-596">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-597">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-597">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-598">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-598">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-599">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-599">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_5.Office.AppointmentCompose.optionalAttendees
  summary: >-
    <span data-ttu-id="109a6-600">イベントの任意出席者へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="109a6-600">Provides access to the optional attendees of an event.</span></span> <span data-ttu-id="109a6-601">オブジェクトの種類とアクセスのレベルは、現在のアイテムのモードによって異なります。</span><span class="sxs-lookup"><span data-stu-id="109a6-601">The type of object and level of access depends on the mode of the current item.</span></span> <span data-ttu-id="109a6-602">オプションの出席者プロパティは、会議の任意出席者を取得または更新するメソッドを提供する[Office の Recipients](xref:Outlook_1_5.Office.Recipients)オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-602">The optionalAttendees property returns an [Office.Recipients](xref:Outlook_1_5.Office.Recipients) object that provides methods to get or update the optional attendees for a meeting.</span></span>


    <span data-ttu-id="109a6-603">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-603">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-604">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-604">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-605">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-605">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-606">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-606">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-607">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-607">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-608">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-608">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.optionalAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfOptionalAttendeesRecipients = asyncResult.value;
    }

    ```
  name: optionalAttendees
  fullName: optionalAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'optionalAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_5.Office.AppointmentCompose.requiredAttendees
  summary: >-
    <span data-ttu-id="109a6-609">イベントの必須出席者へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="109a6-609">Provides access to the required attendees of an event.</span></span> <span data-ttu-id="109a6-610">オブジェクトの種類とアクセスのレベルは、現在のアイテムのモードによって異なります。</span><span class="sxs-lookup"><span data-stu-id="109a6-610">The type of object and level of access depends on the mode of the current item.</span></span> <span data-ttu-id="109a6-611">requiredattendees プロパティは、会議の必須出席者を取得または更新するためのメソッドを提供する[Office の Recipients](xref:Outlook_1_5.Office.Recipients)オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-611">The requiredAttendees property returns an [Office.Recipients](xref:Outlook_1_5.Office.Recipients) object that provides methods to get or update the required attendees for a meeting.</span></span>


    <span data-ttu-id="109a6-612">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-612">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-613">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-613">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-614">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-614">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-615">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-615">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-616">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-616">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-617">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-617">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.requiredAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfRequiredAttendeesRecipients = asyncResult.value;
        console.log(JSON.stringify(arrayOfRequiredAttendeesRecipients));
    }

    ```
  name: requiredAttendees
  fullName: requiredAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requiredAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_5.Office.AppointmentCompose.start
  summary: >-
    <span data-ttu-id="109a6-618">予定を開始する日時を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="109a6-618">Gets or sets the date and time that the appointment is to begin.</span></span>


    <span data-ttu-id="109a6-619">start プロパティは、協定世界時 (UTC) の日付と時刻の値として表される、 [Office. time](xref:Outlook_1_5.Office.Time)オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="109a6-619">The start property is an [Office.Time](xref:Outlook_1_5.Office.Time) object expressed as a Coordinated Universal Time (UTC) date and time value.</span></span> <span data-ttu-id="109a6-620">converttolocalclienttime メソッドを使用すると、値をクライアントのローカルの日付と時刻に変換できます。</span><span class="sxs-lookup"><span data-stu-id="109a6-620">You can use the convertToLocalClientTime method to convert the value to the client's local date and time.</span></span>


    <span data-ttu-id="109a6-621">Time.setAsync メソッドを使用して開始時刻を設定する場合、convertToUtcClientTime メソッドを使用して、クライアント上のローカルの時刻をサーバーの UTC に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="109a6-621">When you use the Time.setAsync method to set the start time, you should use the convertToUtcClientTime method to convert the local time on the client to UTC for the server.</span></span>


    <span data-ttu-id="109a6-622">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-622">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-623">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-623">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-624">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-624">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-625">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-625">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-626">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-626">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-627">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-627">

    #### Examples</span></span>


    ```javascript

    // The following example sets the start time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: start
  fullName: start
  langs:
  - typeScript
  type: property
  syntax:
    content: 'start: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_5.Office.AppointmentCompose.subject
  summary: >-
    <span data-ttu-id="109a6-628">アイテムの件名フィールドに示される説明を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="109a6-628">Gets or sets the description that appears in the subject field of an item.</span></span>


    <span data-ttu-id="109a6-629">subject プロパティは、電子メール サーバーによって送信されたアイテムの件名全体を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="109a6-629">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>


    <span data-ttu-id="109a6-630">subject プロパティは件名を取得および設定するためのメソッドを提供する Subject オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="109a6-630">The subject property returns a Subject object that provides methods to get and set the subject.</span></span>


    <span data-ttu-id="109a6-631">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="109a6-631">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table><tr><td>[<span data-ttu-id="109a6-632">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="109a6-632">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="109a6-633">ReadItem</span><span class="sxs-lookup"><span data-stu-id="109a6-633">ReadItem</span></span></td></tr>


    <tr><td>[<span data-ttu-id="109a6-634">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="109a6-634">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="109a6-635">予定の開催者</span><span class="sxs-lookup"><span data-stu-id="109a6-635">Appointment Organizer</span></span></td></tr></table><span data-ttu-id="109a6-636">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="109a6-636">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
