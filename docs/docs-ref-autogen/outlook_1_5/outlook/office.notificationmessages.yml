### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.NotificationMessages:interface'
    summary: |-
      NotificationMessages オブジェクトは、アイテムの notificationMessages プロパティとして返されます。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り
    name: Office.NotificationMessages
    fullName: Office.NotificationMessages
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.NotificationMessages#addAsync:member(1)'
      - 'outlook!Office.NotificationMessages#addAsync:member(2)'
      - 'outlook!Office.NotificationMessages#getAllAsync:member(1)'
      - 'outlook!Office.NotificationMessages#getAllAsync:member(2)'
      - 'outlook!Office.NotificationMessages#removeAsync:member(1)'
      - 'outlook!Office.NotificationMessages#removeAsync:member(2)'
      - 'outlook!Office.NotificationMessages#replaceAsync:member(1)'
      - 'outlook!Office.NotificationMessages#replaceAsync:member(2)'
  - uid: 'outlook!Office.NotificationMessages#addAsync:member(1)'
    summary: |-
      アイテムに通知を追加します。

      メッセージあたりの最大通知数は 5 です。 More を設定すると、NumberOfNotificationMessagesExceeded エラーが返されます。
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り
    name: 'addAsync(key, JSONmessage, options, callback)'
    fullName: 'addAsync(key, JSONmessage, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: この通知メッセージを参照するために使用される、開発者が指定したキー。開発者は、このキーを使用して後ほどこのメッセージを変更できます。32 文字以内にしてください。
          type:
            - string
        - id: JSONmessage
          description: アイテムに追加される通知メッセージを格納する JSON オブジェクト。 NotificationMessageDetails オブジェクトが含まれています。
          type:
            - 'outlook!Office.NotificationMessageDetails:interface'
        - id: options
          description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asyncContext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: |-
            省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。

            \[Api set: Mailbox 1.3\]
          type:
            - 'outlook!Office.NotificationMessages#addAsync~0:complex'
  - uid: 'outlook!Office.NotificationMessages#addAsync:member(2)'
    summary: |-
      アイテムに通知を追加します。

      メッセージあたりの最大通知数は 5 です。 More を設定すると、NumberOfNotificationMessagesExceeded エラーが返されます。
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // Create three notifications, each with a different key.
      Office.context.mailbox.item.notificationMessages.addAsync("progress", {
          type: "progressIndicator",
          message : "An add-in is processing this message."
      });
      Office.context.mailbox.item.notificationMessages.addAsync("information", {
          type: "informationalMessage",
          message : "The add-in processed this message.",
          icon : "iconid",
          persistent: false
      });
      Office.context.mailbox.item.notificationMessages.addAsync("error", {
          type: "errorMessage",
          message : "The add-in failed to process this message."
      });
      ```
    name: 'addAsync(key, JSONmessage, callback)'
    fullName: 'addAsync(key, JSONmessage, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(key: string, JSONmessage: NotificationMessageDetails, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: この通知メッセージを参照するために使用される、開発者が指定したキー。開発者は、このキーを使用して後ほどこのメッセージを変更できます。32 文字以内にしてください。
          type:
            - string
        - id: JSONmessage
          description: アイテムに追加される通知メッセージを格納する JSON オブジェクト。 NotificationMessageDetails オブジェクトが含まれています。
          type:
            - 'outlook!Office.NotificationMessageDetails:interface'
        - id: callback
          description: |-
            省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。

            \[Api set: Mailbox 1.3\]
          type:
            - 'outlook!Office.NotificationMessages#addAsync~1:complex'
  - uid: 'outlook!Office.NotificationMessages#getAllAsync:member(1)'
    summary: |-
      アイテムのすべてのキーとメッセージを返します。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り
    name: 'getAllAsync(options, callback)'
    fullName: 'getAllAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asyncContext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 結果`value`のプロパティは、NotificationMessageDetails オブジェクトの配列です。
          type:
            - 'outlook!Office.NotificationMessages#getAllAsync~0:complex'
  - uid: 'outlook!Office.NotificationMessages#getAllAsync:member(2)'
    summary: |-
      アイテムのすべてのキーとメッセージを返します。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // Get all notifications.
      Office.context.mailbox.item.notificationMessages.getAllAsync(function (asyncResult) {
          if (asyncResult.status != "failed") {
              Office.context.mailbox.item.notificationMessages.replaceAsync( "notifications", {
                  type: "informationalMessage",
                  message : "Found " + asyncResult.value.length + " notifications.",
                  icon : "iconid",
                  persistent: false
              });
          }
      });
      ```
    name: getAllAsync(callback)
    fullName: getAllAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(callback?: (asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。 結果`value`のプロパティは、NotificationMessageDetails オブジェクトの配列です。
          type:
            - 'outlook!Office.NotificationMessages#getAllAsync~1:complex'
  - uid: 'outlook!Office.NotificationMessages#removeAsync:member(1)'
    summary: |-
      アイテムの通知メッセージを削除します。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り
    name: 'removeAsync(key, options, callback)'
    fullName: 'removeAsync(key, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(key: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: 通知メッセージを削除するためのキー。
          type:
            - string
        - id: options
          description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asyncContext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
          type:
            - 'outlook!Office.NotificationMessages#removeAsync~0:complex'
  - uid: 'outlook!Office.NotificationMessages#removeAsync:member(2)'
    summary: |-
      アイテムの通知メッセージを削除します。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // Remove a notification.
      Office.context.mailbox.item.notificationMessages.removeAsync("progress");
      ```
    name: 'removeAsync(key, callback)'
    fullName: 'removeAsync(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(key: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: 通知メッセージを削除するためのキー。
          type:
            - string
        - id: callback
          description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
          type:
            - 'outlook!Office.NotificationMessages#removeAsync~1:complex'
  - uid: 'outlook!Office.NotificationMessages#replaceAsync:member(1)'
    summary: |-
      指定のキーが含まれる通知メッセージを別のメッセージに置換します。

      指定したキーを持つ通知メッセージが存在しない場合は、replaceAsync によって通知が追加されます。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り
    name: 'replaceAsync(key, JSONmessage, options, callback)'
    fullName: 'replaceAsync(key, JSONmessage, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'replaceAsync(key: string, JSONmessage: NotificationMessageDetails, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: 置換する通知メッセージのキー。 32 文字以内にする必要があります。
          type:
            - string
        - id: JSONmessage
          description: 既存のメッセージを置換する新しい通知メッセージを格納する JSON オブジェクト。 NotificationMessageDetails オブジェクトが含まれています。
          type:
            - 'outlook!Office.NotificationMessageDetails:interface'
        - id: options
          description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 asyncContext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
          type:
            - 'outlook!Office.NotificationMessages#replaceAsync~0:complex'
  - uid: 'outlook!Office.NotificationMessages#replaceAsync:member(2)'
    summary: |-
      指定のキーが含まれる通知メッセージを別のメッセージに置換します。

      指定したキーを持つ通知メッセージが存在しない場合は、replaceAsync によって通知が追加されます。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // Replace a notification with an informational notification.
      Office.context.mailbox.item.notificationMessages.replaceAsync("progress", {
          type: "informationalMessage",
          message : "The message was processed successfully.",
          icon : "iconid",
          persistent: false
      });
      ```
    name: 'replaceAsync(key, JSONmessage, callback)'
    fullName: 'replaceAsync(key, JSONmessage, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'replaceAsync(key: string, JSONmessage: NotificationMessageDetails, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: key
          description: 置換する通知メッセージのキー。 32 文字以内にする必要があります。
          type:
            - string
        - id: JSONmessage
          description: 既存のメッセージを置換する新しい通知メッセージを格納する JSON オブジェクト。 NotificationMessageDetails オブジェクトが含まれています。
          type:
            - 'outlook!Office.NotificationMessageDetails:interface'
        - id: callback
          description: 省略可能。 メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。
          type:
            - 'outlook!Office.NotificationMessages#replaceAsync~1:complex'
references:
  - uid: 'outlook!Office.NotificationMessageDetails:interface'
    name: NotificationMessageDetails
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.NotificationMessages#addAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.NotificationMessages#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.NotificationMessages#getAllAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.NotificationMessageDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.NotificationMessageDetails:interface'
        name: NotificationMessageDetails
        fullName: Office.NotificationMessageDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.NotificationMessages#getAllAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<NotificationMessageDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.NotificationMessageDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.NotificationMessageDetails:interface'
        name: NotificationMessageDetails
        fullName: Office.NotificationMessageDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.NotificationMessages#removeAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.NotificationMessages#removeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.NotificationMessages#replaceAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.NotificationMessages#replaceAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void