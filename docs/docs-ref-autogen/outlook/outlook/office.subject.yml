### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Subject:interface'
    summary: |-
      <span data-ttu-id="87205-101">Outlook のアドインで、予定またはメッセージの件名を取得および設定するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="87205-101">Provides methods to get and set the subject of an appointment or message in an Outlook add-in.</span></span>

      <span data-ttu-id="87205-102">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87205-102">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="87205-103">**[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span><span class="sxs-lookup"><span data-stu-id="87205-103">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="87205-104">**[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成</span><span class="sxs-lookup"><span data-stu-id="87205-104">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: Office.Subject
    fullName: Office.Subject
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Subject#getAsync:member(1)'
      - 'outlook!Office.Subject#getAsync:member(2)'
      - 'outlook!Office.Subject#setAsync:member(1)'
      - 'outlook!Office.Subject#setAsync:member(2)'
  - uid: 'outlook!Office.Subject#getAsync:member(1)'
    summary: |-
      <span data-ttu-id="87205-105">予定またはメッセージの件名を取得します。</span><span class="sxs-lookup"><span data-stu-id="87205-105">Gets the subject of an appointment or message.</span></span>

      <span data-ttu-id="87205-106">GetAsync メソッドは、Exchange サーバーへの非同期呼び出しを開始して、予定またはメッセージの件名を取得します。</span><span class="sxs-lookup"><span data-stu-id="87205-106">The getAsync method starts an asynchronous call to the Exchange server to get the subject of an appointment or message.</span></span>

      <span data-ttu-id="87205-107">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87205-107">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="87205-108">**[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span><span class="sxs-lookup"><span data-stu-id="87205-108">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="87205-109">**[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成</span><span class="sxs-lookup"><span data-stu-id="87205-109">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="87205-110">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="87205-110">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="87205-111">asyncContext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="87205-111">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="87205-112">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="87205-112">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="87205-113">結果`value`のプロパティは、アイテムの件名です。</span><span class="sxs-lookup"><span data-stu-id="87205-113">The `value` property of the result is the subject of the item.</span></span>'
          type:
            - 'outlook!Office.Subject#getAsync~0:complex'
  - uid: 'outlook!Office.Subject#getAsync:member(2)'
    summary: |-
      <span data-ttu-id="87205-114">予定またはメッセージの件名を取得します。</span><span class="sxs-lookup"><span data-stu-id="87205-114">Gets the subject of an appointment or message.</span></span>

      <span data-ttu-id="87205-115">GetAsync メソッドは、Exchange サーバーへの非同期呼び出しを開始して、予定またはメッセージの件名を取得します。</span><span class="sxs-lookup"><span data-stu-id="87205-115">The getAsync method starts an asynchronous call to the Exchange server to get the subject of an appointment or message.</span></span>

      <span data-ttu-id="87205-116">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87205-116">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="87205-117">**[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span><span class="sxs-lookup"><span data-stu-id="87205-117">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="87205-118">**[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成</span><span class="sxs-lookup"><span data-stu-id="87205-118">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="87205-119">例</span><span class="sxs-lookup"><span data-stu-id="87205-119">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="87205-120">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="87205-120">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="87205-121">結果`value`のプロパティは、アイテムの件名です。</span><span class="sxs-lookup"><span data-stu-id="87205-121">The `value` property of the result is the subject of the item.</span></span>'
          type:
            - 'outlook!Office.Subject#getAsync~1:complex'
  - uid: 'outlook!Office.Subject#setAsync:member(1)'
    summary: |-
      <span data-ttu-id="87205-122">予定またはメッセージの件名を設定します。</span><span class="sxs-lookup"><span data-stu-id="87205-122">Sets the subject of an appointment or message.</span></span>

      <span data-ttu-id="87205-123">SetAsync メソッドは、Exchange サーバーへの非同期呼び出しを開始し、予定またはメッセージの件名を設定します。</span><span class="sxs-lookup"><span data-stu-id="87205-123">The setAsync method starts an asynchronous call to the Exchange server to set the subject of an appointment or message.</span></span> <span data-ttu-id="87205-124">件名を設定すると、現在の件名は上書きされますが、"Fwd:" または "Re:" などのプレフィックスはそのまま残ります。</span><span class="sxs-lookup"><span data-stu-id="87205-124">Setting the subject overwrites the current subject, but leaves any prefixes, such as "Fwd:" or "Re:" in place.</span></span>

      <span data-ttu-id="87205-125">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87205-125">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="87205-126">**[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span><span class="sxs-lookup"><span data-stu-id="87205-126">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="87205-127">**[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成</span><span class="sxs-lookup"><span data-stu-id="87205-127">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="87205-128">**エラー**:</span><span class="sxs-lookup"><span data-stu-id="87205-128">**Errors**:</span></span>

      - <span data-ttu-id="87205-129">DataExceedsMaximumSize: subject パラメーターが255文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="87205-129">DataExceedsMaximumSize: The subject parameter is longer than 255 characters.</span></span>
    name: 'setAsync(subject, options, callback)'
    fullName: 'setAsync(subject, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(subject: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: subject
          description: <span data-ttu-id="87205-130">予定またはメッセージの件名。</span><span class="sxs-lookup"><span data-stu-id="87205-130">The subject of the appointment or message.</span></span> <span data-ttu-id="87205-131">文字列の長さは最大 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="87205-131">The string is limited to 255 characters.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="87205-132">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87205-132">Optional.</span></span> <span data-ttu-id="87205-133">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="87205-133">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="87205-134">asyncContext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="87205-134">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="87205-135">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87205-135">Optional.</span></span> <span data-ttu-id="87205-136">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="87205-136">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="87205-137">件名の設定に失敗すると、asyncResult. error プロパティにエラーコードが格納されます。</span><span class="sxs-lookup"><span data-stu-id="87205-137">If setting the subject fails, the asyncResult.error property will contain an error code.</span></span>'
          type:
            - 'outlook!Office.Subject#setAsync~0:complex'
  - uid: 'outlook!Office.Subject#setAsync:member(2)'
    summary: |-
      <span data-ttu-id="87205-138">予定またはメッセージの件名を設定します。</span><span class="sxs-lookup"><span data-stu-id="87205-138">Sets the subject of an appointment or message.</span></span>

      <span data-ttu-id="87205-139">SetAsync メソッドは、Exchange サーバーへの非同期呼び出しを開始し、予定またはメッセージの件名を設定します。</span><span class="sxs-lookup"><span data-stu-id="87205-139">The setAsync method starts an asynchronous call to the Exchange server to set the subject of an appointment or message.</span></span> <span data-ttu-id="87205-140">件名を設定すると、現在の件名は上書きされますが、"Fwd:" または "Re:" などのプレフィックスはそのまま残ります。</span><span class="sxs-lookup"><span data-stu-id="87205-140">Setting the subject overwrites the current subject, but leaves any prefixes, such as "Fwd:" or "Re:" in place.</span></span>

      <span data-ttu-id="87205-141">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="87205-141">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="87205-142">**[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span><span class="sxs-lookup"><span data-stu-id="87205-142">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="87205-143">**[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成</span><span class="sxs-lookup"><span data-stu-id="87205-143">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="87205-144">**エラー**:</span><span class="sxs-lookup"><span data-stu-id="87205-144">**Errors**:</span></span>

      - <span data-ttu-id="87205-145">DataExceedsMaximumSize: subject パラメーターが255文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="87205-145">DataExceedsMaximumSize: The subject parameter is longer than 255 characters.</span></span>

      #### <a name="examples"></a><span data-ttu-id="87205-146">例</span><span class="sxs-lookup"><span data-stu-id="87205-146">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.subject.setAsync("New subject!", function (asyncResult) {
          if (asyncResult.status === "failed") {
              console.log("Action failed with error: " + asyncResult.error.message);
          }
      });
      ```
    name: 'setAsync(data, callback)'
    fullName: 'setAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: ''
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="87205-147">省略可能。</span><span class="sxs-lookup"><span data-stu-id="87205-147">Optional.</span></span> <span data-ttu-id="87205-148">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="87205-148">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="87205-149">件名の設定に失敗すると、asyncResult. error プロパティにエラーコードが格納されます。</span><span class="sxs-lookup"><span data-stu-id="87205-149">If setting the subject fails, the asyncResult.error property will contain an error code.</span></span>'
          type:
            - 'outlook!Office.Subject#setAsync~1:complex'
references:
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Subject#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.Subject#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.Subject#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Subject#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void