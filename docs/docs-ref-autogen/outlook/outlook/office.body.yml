### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Body:interface'
    summary: |-
      Body オブジェクトには、メッセージまたは予定の内容を追加および更新するためのメソッドが用意されています。 これは、選択されたアイテムの body プロパティで返されます。

      \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り
    name: Office.Body
    fullName: Office.Body
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Body#appendOnSendAsync:member(1)'
      - 'outlook!Office.Body#appendOnSendAsync:member(2)'
      - 'outlook!Office.Body#getAsync:member(1)'
      - 'outlook!Office.Body#getAsync:member(2)'
      - 'outlook!Office.Body#getTypeAsync:member(1)'
      - 'outlook!Office.Body#getTypeAsync:member(2)'
      - 'outlook!Office.Body#prependAsync:member(1)'
      - 'outlook!Office.Body#prependAsync:member(2)'
      - 'outlook!Office.Body#setAsync:member(1)'
      - 'outlook!Office.Body#setAsync:member(2)'
      - 'outlook!Office.Body#setSelectedDataAsync:member(1)'
      - 'outlook!Office.Body#setSelectedDataAsync:member(2)'
      - 'outlook!Office.Body#setSignatureAsync:member(1)'
      - 'outlook!Office.Body#setSignatureAsync:member(2)'
  - uid: 'outlook!Office.Body#appendOnSendAsync:member(1)'
    summary: |-
      を追加します。指定されたコンテンツを、署名後にアイテム本文の末尾に送信します。

      [マニフェストで itemsend \`\`を使用して、送信時機能](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-on-send-addins?tabs=windows)を実装しているアドインをユーザーが実行している場合<!-- -->、送信時に送信時実行を追加します。

      **重要**: を使用するには`appendOnSendAsync`<!-- -->、マニフェスト`AppendOnSend`の`ExtendedPermissions`ノードに拡張アクセス許可が含まれている必要があります。

      **注**: 以前`appendOnSendAsync`の呼び出しからデータを消去するには、パラメーターをに設定`data`して再度呼び出すことができます。`null`<!-- -->.

      \[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: パラメーター `data`が5000文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されていますが、メッセージ本文はプレーンテキストになっています。

      #### <a name="examples"></a>例

      ```javascript
      Office.context.mailbox.item.body.appendOnSendAsync(
          "P.S. This text was appended on send.",
          {coercionType: Office.CoercionType.Html},
          function (asyncResult) {
              if (asyncResult.status === Office.AsyncResultStatus.Failed) {
                  console.log("Action failed with error: " + asyncResult.error.message);
              }
          }
      );
      ```
    isPreview: true
    name: 'appendOnSendAsync(data, options, callback)'
    fullName: 'appendOnSendAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendOnSendAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 本文の末尾に追加する文字列を指定します。 文字列は5000文字までに制限されています。
          type:
            - string
        - id: options
          description: '省略可能です。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 `coercionType`<!-- -->: 追加するデータに必要な形式を指定します。 パラメーター内の文字列は、この形式に変換されます。'
          type:
            - 'outlook!Office.Body#appendOnSendAsync~0:complex'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#appendOnSendAsync~1:complex'
  - uid: 'outlook!Office.Body#appendOnSendAsync:member(2)'
    summary: |-
      を追加します。指定されたコンテンツを、署名後にアイテム本文の末尾に送信します。

      [マニフェストで itemsend \`\`を使用して、送信時機能](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-on-send-addins?tabs=windows)を実装しているアドインをユーザーが実行している場合<!-- -->、送信時に送信時実行を追加します。

      **重要**: を使用するには`appendOnSendAsync`<!-- -->、マニフェスト`AppendOnSend`の`ExtendedPermissions`ノードに拡張アクセス許可が含まれている必要があります。

      **注**: 以前`appendOnSendAsync`の呼び出しからデータを消去するには、パラメーターをに設定`data`して再度呼び出すことができます。`null`<!-- -->.

      \[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: パラメーター `data`が5000文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されていますが、メッセージ本文はプレーンテキストになっています。
    isPreview: true
    name: 'appendOnSendAsync(data, callback)'
    fullName: 'appendOnSendAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendOnSendAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 本文の末尾に追加する文字列を指定します。 文字列は5000文字までに制限されています。
          type:
            - string
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#appendOnSendAsync~2:complex'
  - uid: 'outlook!Office.Body#getAsync:member(1)'
    summary: |-
      現在の本文を指定された形式で返します。

      このメソッドは、次のように指定された形式で、現在の本文全体を返します。`coercionType`<!-- -->.

      HTML 形式の本文で作業する場合は、メソッド`Body.getAsync`と`Body.setAsync`メソッドが等にならない点に注意してください。 `getAsync`メソッドから返される値は、前の`setAsync`手順で渡された値と必ずしも厳密には同じではありません。 クライアントは、レンダリングエンジンで効率的に`setAsync`レンダリングされるように、渡された値を変更することができます。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: 'getAsync(coercionType, options, callback)'
    fullName: 'getAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(coercionType: Office.CoercionType | string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: coercionType
          description: 返される本文の形式です。
          type:
            - 'outlook!Office.Body#getAsync~0:complex'
        - id: options
          description: '省略可能です。 次のプロパティの1つ以上を含むオブジェクトリテラル。`asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が呼び出されて、1つのパラメーターである型は Office. AsyncResult になります。 本文は、 `asyncResult.value`プロパティの要求された形式で提供されます。
          type:
            - 'outlook!Office.Body#getAsync~1:complex'
  - uid: 'outlook!Office.Body#getAsync:member(2)'
    summary: |-
      現在の本文を指定された形式で返します。

      このメソッドは、次のように指定された形式で、現在の本文全体を返します。`coercionType`<!-- -->.

      HTML 形式の本文で作業する場合は、メソッド`Body.getAsync`と`Body.setAsync`メソッドが等にならない点に注意してください。 `getAsync`メソッドから返される値は、前の`setAsync`手順で渡された値と必ずしも厳密には同じではありません。 クライアントは、レンダリングエンジンで効率的に`setAsync`レンダリングされるように、渡された値を変更することができます。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成または読み取り
    name: 'getAsync(coercionType, callback)'
    fullName: 'getAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(coercionType: Office.CoercionType | string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: coercionType
          description: 返される本文の形式です。
          type:
            - 'outlook!Office.Body#getAsync~2:complex'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が呼び出されて、1つのパラメーターである型は Office. AsyncResult になります。 本文は、 `asyncResult.value`プロパティの要求された形式で提供されます。
          type:
            - 'outlook!Office.Body#getAsync~3:complex'
  - uid: 'outlook!Office.Body#getTypeAsync:member(1)'
    summary: |-
      コンテンツの形式が HTML とテキストのどちらであるかを示す値を取得します。

      \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成
    name: 'getTypeAsync(options, callback)'
    fullName: 'getTypeAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTypeAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Office.CoercionType>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '省略可能です。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. コンテンツタイプは、 `CoercionType` `asyncResult.value`プロパティの値の1つとして返されます。
          type:
            - 'outlook!Office.Body#getTypeAsync~0:complex'
  - uid: 'outlook!Office.Body#getTypeAsync:member(2)'
    summary: |-
      コンテンツの形式が HTML とテキストのどちらであるかを示す値を取得します。

      \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      #### <a name="examples"></a>例

      ```javascript
      Office.context.mailbox.item.body.getTypeAsync(function (asyncResult) {
          if (asyncResult.status === "failed") {
              console.log("Action failed with error: " + asyncResult.error.message);
          } else {
              console.log("Body type: " + asyncResult.value);
          }
      });
      ```
    name: getTypeAsync(callback)
    fullName: getTypeAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTypeAsync(callback?: (asyncResult: Office.AsyncResult<Office.CoercionType>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. コンテンツタイプは、 `CoercionType` `asyncResult.value`プロパティの値の1つとして返されます。
          type:
            - 'outlook!Office.Body#getTypeAsync~1:complex'
  - uid: 'outlook!Office.Body#prependAsync:member(1)'
    summary: |-
      アイテム本文の先頭に指定の内容を追加します。

      メソッド`prependAsync`は、指定された文字列をアイテム本文の先頭に挿入します。 挿入した後、挿入されたコンテンツを基準として、カーソルが元の位置に戻されます。

      HTML マークアップにリンクを含める場合は、アンカーの`id`属性を設定することによって、オンラインリンクプレビューを無効にすることができます (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) を "LPNoLP" にします (サンプルについては、「**例**」セクションを参照してください)。

      \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: Data パラメーターが100万文字を超えています。

      #### <a name="examples"></a>例

      ```javascript
      // When including links in HTML markup, you can disable online link preview
      // by setting the id attribute on the anchor (<a>) to "LPNoLP".
      Office.context.mailbox.item.body.prependAsync(
          '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
          {coercionType: Office.CoercionType.Html},
          callback);
      ```
    name: 'prependAsync(data, options, callback)'
    fullName: 'prependAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'prependAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '本文の先頭に挿入する文字列。 文字列の最大長は 1,000,000 文字です。'
          type:
            - string
        - id: options
          description: '省略可能です。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 `coercionType`<!-- -->: 本文の目的の形式。 パラメーター内の文字列は、この形式に変換されます。'
          type:
            - 'outlook!Office.Body#prependAsync~0:complex'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#prependAsync~1:complex'
  - uid: 'outlook!Office.Body#prependAsync:member(2)'
    summary: |-
      アイテム本文の先頭に指定の内容を追加します。

      メソッド`prependAsync`は、指定された文字列をアイテム本文の先頭に挿入します。 挿入した後、挿入されたコンテンツを基準として、カーソルが元の位置に戻されます。

      HTML マークアップにリンクを含める場合は、アンカーの`id`属性を設定することによって、オンラインリンクプレビューを無効にすることができます (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) を "LPNoLP" にします (サンプルについては、「**例**」セクションを参照してください)。

      \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: Data パラメーターが100万文字を超えています。
    name: 'prependAsync(data, callback)'
    fullName: 'prependAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'prependAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '本文の先頭に挿入する文字列。 文字列の最大長は 1,000,000 文字です。'
          type:
            - string
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#prependAsync~2:complex'
  - uid: 'outlook!Office.Body#setAsync:member(1)'
    summary: |-
      本文全体を指定されたテキストに置換します。

      HTML 形式の本文で作業する場合は、メソッド`Body.getAsync`と`Body.setAsync`メソッドが等にならない点に注意してください。 `getAsync`メソッドから返される値は、前の`setAsync`手順で渡された値と必ずしも厳密には同じではありません。 クライアントは、レンダリングエンジンで効率的に`setAsync`レンダリングされるように、渡された値を変更することができます。

      HTML マークアップにリンクを含める場合は、アンカーの`id`属性を設定することによって、オンラインリンクプレビューを無効にすることができます (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) を "LPNoLP" にします (サンプルについては、「**例**」セクションを参照してください)。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: Data パラメーターが100万文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されており、メッセージ本文はプレーンテキストです。

      #### <a name="examples"></a>例

      ```javascript
      // When including links in HTML markup, you can disable online link preview
      // by setting the id attribute on the anchor (<a>) to "LPNoLP".
      Office.context.mailbox.item.body.setAsync(
          '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
          {coercionType: Office.CoercionType.Html},
          callback);
      Office.context.mailbox.item.body.setAsync(
          "<b>(replaces all body, including threads you are replying to that may be on the bottom)</b>",
          { coercionType: "html", asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Process the result.
      });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value":null,
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: 'setAsync(data, options, callback)'
    fullName: 'setAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '既存の本文を置換する文字列。 文字列の長さは 1,000,000 文字までに制限されています。'
          type:
            - string
        - id: options
          description: '省略可能です。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 `coercionType`<!-- -->: 本文の目的の形式。 パラメーター内の文字列は、この形式に変換されます。'
          type:
            - 'outlook!Office.Body#setAsync~0:complex'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が呼び出されて、1つのパラメーターである型は Office. AsyncResult になります。 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#setAsync~1:complex'
  - uid: 'outlook!Office.Body#setAsync:member(2)'
    summary: |-
      本文全体を指定されたテキストに置換します。

      HTML 形式の本文で作業する場合は、メソッド`Body.getAsync`と`Body.setAsync`メソッドが等にならない点に注意してください。 `getAsync`メソッドから返される値は、前の`setAsync`手順で渡された値と必ずしも厳密には同じではありません。 クライアントは、レンダリングエンジンで効率的に`setAsync`レンダリングされるように、渡された値を変更することができます。

      HTML マークアップにリンクを含める場合は、アンカーの id 属性を設定することによって、オンラインリンクプレビューを無効にすることができます (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) を "LPNoLP" にします (サンプルについては、「**例**」セクションを参照してください)。

      \[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: パラメーター `data`が100万文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されており、メッセージ本文はプレーンテキストです。
    name: 'setAsync(data, callback)'
    fullName: 'setAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '既存の本文を置換する文字列。 文字列の長さは 1,000,000 文字までに制限されています。'
          type:
            - string
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#setAsync~2:complex'
  - uid: 'outlook!Office.Body#setSelectedDataAsync:member(1)'
    summary: |-
      本文の選択部分を、指定のテキストに置き換えます。

      この`setSelectedDataAsync`メソッドは、指定された文字列を、アイテムの本文のカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。 カーソルがアイテムの本文内にない場合、または UI でフォーカスが失われた場合は、本文のコンテンツの先頭に文字列が挿入されます。 挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。

      HTML マークアップにリンクを含める場合は、アンカーの id 属性を設定することによって、オンラインリンクプレビューを無効にすることができます (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) を "LPNoLP" にします (サンプルについては、「**例**」セクションを参照してください)。

      \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: パラメーター `data`が100万文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されており、メッセージ本文はプレーンテキストです。

      #### <a name="examples"></a>例

      ```javascript
      // When including links in HTML markup, you can disable online link preview
      // by setting the id attribute on the anchor (<a>) to "LPNoLP".
      Office.context.mailbox.item.body.setSelectedDataAsync(
          '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
          {coercionType: Office.CoercionType.Html},
          callback);
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '既存の本文を置換する文字列。 文字列の長さは 1,000,000 文字までに制限されています。'
          type:
            - string
        - id: options
          description: '省略可能です。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 `coercionType`<!-- -->: 本文の目的の形式。 パラメーター内の文字列は、この形式に変換されます。'
          type:
            - 'outlook!Office.Body#setSelectedDataAsync~0:complex'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#setSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.Body#setSelectedDataAsync:member(2)'
    summary: |-
      本文の選択部分を、指定のテキストに置き換えます。

      この`setSelectedDataAsync`メソッドは、指定された文字列を、アイテムの本文のカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。 カーソルがアイテムの本文内にない場合、または UI でフォーカスが失われた場合は、本文のコンテンツの先頭に文字列が挿入されます。 挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。

      HTML マークアップにリンクを含める場合は、アンカーの`id`属性を設定することによって、オンラインリンクプレビューを無効にすることができます (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) を "LPNoLP" にします (サンプルについては、「**例**」セクションを参照してください)。

      \[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: パラメーター `data`が100万文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されており、メッセージ本文はプレーンテキストです。
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '既存の本文を置換する文字列。 文字列の長さは 1,000,000 文字までに制限されています。'
          type:
            - string
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->. 検出されたすべてのエラーは `asyncResult.error` プロパティに表示されます。
          type:
            - 'outlook!Office.Body#setSelectedDataAsync~2:complex'
  - uid: 'outlook!Office.Body#setSignatureAsync:member(1)'
    summary: |-
      アイテム本文の署名を追加または置換します。

      **重要**: Outlook on the web では`setSignatureAsync` 、メッセージに対してのみ機能します。

      \[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: パラメーター `data`が3万文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されており、メッセージ本文はプレーンテキストです。
    isPreview: true
    name: 'setSignatureAsync(data, options, callback)'
    fullName: 'setSignatureAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSignatureAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: メールの本文で設定する署名を表す文字列。 この文字列は3万文字までに制限されています。
          type:
            - string
        - id: options
          description: '省略可能です。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。 `coercionType`<!-- -->: 署名の形式をに設定する必要があります。 テキストの場合、このメソッドは署名をプレーンテキストに設定し、HTML タグがある場合はそれを削除します。 Html の場合、メソッドは署名を HTML に設定します。'
          type:
            - 'outlook!Office.Body#setSignatureAsync~0:complex'
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.Body#setSignatureAsync~1:complex'
  - uid: 'outlook!Office.Body#setSignatureAsync:member(2)'
    summary: |-
      アイテム本文の署名を追加または置換します。

      **重要**: Outlook on the web では`setSignatureAsync` 、メッセージに対してのみ機能します。

      \[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/#extension-points)<!-- -->**: 新規作成

      **エラー**:

      - `DataExceedsMaximumSize`<!-- -->: パラメーター `data`が3万文字を超えています。

      - `InvalidFormatError`<!-- -->: `options.coercionType`パラメーターはに`Office.CoercionType.Html`設定されており、メッセージ本文はプレーンテキストです。

      #### <a name="examples"></a>例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/work-with-client-signatures.yaml
      // Set the signature for the current item.
      var signature = $("#signature").val();
      console.log(`Setting signature to "${signature}".`);
      Office.context.mailbox.item.body.setSignatureAsync(signature, function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("setSignatureAsync succeeded");
        } else {
          console.error(asyncResult.error);
        }
      });
      ```
    isPreview: true
    name: 'setSignatureAsync(data, callback)'
    fullName: 'setSignatureAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSignatureAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: メールの本文で設定する署名を表す文字列。 この文字列は3万文字までに制限されています。
          type:
            - string
        - id: callback
          description: 省略可能です。 メソッドが完了すると、 `callback`パラメーターに渡された関数が、型の1つのパラメーターで呼び出されます。`Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.Body#setSignatureAsync~2:complex'
references:
  - uid: 'outlook!Office.Body#appendOnSendAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'office!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.Body#appendOnSendAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#appendOnSendAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#getAsync~0:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'office!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Body#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.Body#getAsync~2:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'office!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.Body#getAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.Body#getTypeAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<Office.CoercionType>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CoercionType>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.Body#getTypeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<Office.CoercionType>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CoercionType>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.Body#prependAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'office!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.Body#prependAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#prependAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#setAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'office!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.Body#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#setAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#setSelectedDataAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'office!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.Body#setSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#setSelectedDataAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#setSignatureAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'office!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.Body#setSignatureAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Body#setSignatureAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void