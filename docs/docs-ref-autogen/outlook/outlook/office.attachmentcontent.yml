### YamlMime:UniversalReference
items:
  - uid: outlook.Office.AttachmentContent
    summary: |-
      メッセージアイテムまたは予定アイテムの添付ファイルのコンテンツを表します。

      \[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限のアクセス許可レベル](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[適用可能な Outlook モード](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 新規作成または読み取り
    isPreview: true
    name: Office.AttachmentContent
    fullName: Office.AttachmentContent
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.AttachmentContent.content
      - outlook.Office.AttachmentContent.format
  - uid: outlook.Office.AttachmentContent.content
    summary: 文字列としての添付ファイルの内容。
    isPreview: true
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
  - uid: outlook.Office.AttachmentContent.format
    summary: |-
      添付ファイルのコンテンツに使用する文字列形式。

      添付ファイルの場合、書式設定は base64 でエンコードされた文字列です。

      メッセージを表すアイテムの添付ファイルの場合、書式設定は .eml 形式のファイルを表す文字列です。

      アイテムの添付ファイルが予定表アイテムを表す場合、書式設定は icalendar ファイルを表す文字列になります。

      クラウド添付ファイルの場合、書式設定は URL 文字列です。
    isPreview: true
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format: MailboxEnums.AttachmentContentFormat | string;'
      return:
        type:
          - MailboxEnums.AttachmentContentFormat | string
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          var item = Office.context.mailbox.item;
          var listOfAttachments = [];
          var options = {asyncContext: {currentItem: item}};
          item.getAttachmentsAsync(options, callback);

          function callback(result) {
              if (result.value.length > 0) {
                  for (i = 0 ; i < result.value.length ; i++) {
                      result.asyncContext.currentItem.getAttachmentContentAsync(result.value[i].id, handleAttachmentsCallback);
                  }
              }
          }

          function handleAttachmentsCallback(result) {
              // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
              if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {
                  // Handle file attachment.
              } else if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {
                  // Handle email item attachment.
              } else if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {
                  // Handle .icalender attachment.
              } else if (result.value.format === Office.MailboxEnums.AttachmentContentFormat.Url) {
                  // Handle cloud attachment.
              } else {
                  // Handle attachment formats that are not supported.
              }
          }
          ```