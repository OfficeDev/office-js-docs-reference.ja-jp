### YamlMime:TSType
name: Office.Recurrence
uid: outlook!Office.Recurrence:interface
package: outlook!
fullName: Office.Recurrence
summary: >-
  オブジェクトは、予定の定期的なパターンを取得および設定するメソッドを提供しますが、会議出席依頼の定期的な `Recurrence` パターンのみを取得します。 次のキーを持つ辞書があります。 `seriesTime`<!-- -->, `recurrenceType`<!-- -->, `recurrenceProperties`<!-- -->、および `recurrenceTimeZone` (省略可能)。


  \[[API セット: メールボックス 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


  **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り


  **状態**


  <table> <tr> <th>状態</th> <th>編集可能ですか?</th> <th>表示可能ですか?</th> </tr> <tr> <td>予定の開催者 - 作成シリーズ</td> <td>はい (setAsync)</td> <td>はい (getAsync)</td> </tr> <tr> <td>予定の開催者 - インスタンスの作成</td> <td>いいえ (setAsync はエラーを返します)</td> <td>はい (getAsync)</td> </tr> <tr> <td>予定の出席者 - シリーズの読み取り</td> <td>いいえ (setAsync は使用できません)</td> <td>はい (item.recurrence)</td> </tr> <tr> <td>予定の出席者 - インスタンスの読み取り</td> <td>いいえ (setAsync は使用できません)</td> <td>はい (item.recurrence)</td> </tr> <tr> <td>会議出席依頼 - 読み取りシリーズ</td> <td>いいえ (setAsync は使用できません)</td> <td>はい (item.recurrence)</td> </tr> <tr> <td>会議出席依頼 - 読み取りインスタンス</td> <td>いいえ (setAsync は使用できません)</td> <td>はい (item.recurrence)</td> </tr> </table>
isPreview: false
isDeprecated: false
type: interface
properties:
- name: recurrenceProperties
  uid: outlook!Office.Recurrence#recurrenceProperties:member
  package: outlook!
  fullName: recurrenceProperties
  summary: >-
    定期的な予定の系列のプロパティを取得または設定します。


    \[[API セット: メールボックス 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceProperties?: RecurrenceProperties;'
    return:
      type: <xref uid="outlook!Office.RecurrenceProperties:interface" />
- name: recurrenceTimeZone
  uid: outlook!Office.Recurrence#recurrenceTimeZone:member
  package: outlook!
  fullName: recurrenceTimeZone
  summary: >-
    定期的な予定の系列のプロパティを取得または設定します。


    \[[API セット: メールボックス 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceTimeZone?: RecurrenceTimeZone;'
    return:
      type: <xref uid="outlook!Office.RecurrenceTimeZone:interface" />
- name: recurrenceType
  uid: outlook!Office.Recurrence#recurrenceType:member
  package: outlook!
  fullName: recurrenceType
  summary: >-
    定期的な予定の種類を取得または設定します。


    \[[API セット: メールボックス 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceType: MailboxEnums.RecurrenceType | string;'
    return:
      type: <xref uid="outlook!Office.MailboxEnums.RecurrenceType:enum" /> | string
- name: seriesTime
  uid: outlook!Office.Recurrence#seriesTime:member
  package: outlook!
  fullName: seriesTime
  summary: >-
    [SeriesTime](xref:outlook!Office.SeriesTime:interface)オブジェクトを使用すると、定期的な予定系列の開始日と終了日、およびインスタンスの通常の開始時刻と終了時刻を管理できます。 **このオブジェクトは UTC 時間ではありません。** 代わりに、値で指定されたタイム ゾーンに設定されるか、アイテムのタイム ゾーンに既定 `recurrenceTimeZone` で設定されます。


    \[[API セット: メールボックス 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'seriesTime: SeriesTime;'
    return:
      type: <xref uid="outlook!Office.SeriesTime:interface" />
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.Recurrence#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    予定の系列の現在の定期的なオブジェクトを返します。


    このメソッドは、予定の系列 `Recurrence` のオブジェクト全体を返します。


    \[[API セット: メールボックス 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成または読み取り


    #### <a name="examples"></a>例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml

    Office.context.mailbox.item.recurrence.getAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        var recurrence = asyncResult.value;
        if (recurrence === null) {
          console.log("This is a single appointment.");
        } else {
          console.log(`Recurrence pattern: ${JSON.stringify(recurrence)}`);
        }
      } else {
        console.error(asyncResult.error);
      }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Recurrence>) => void): void;'
    parameters:
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバック メソッドでアクセスする任意のオブジェクトを提供できます。'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 省略可能。 メソッドが完了すると、パラメーターで渡された関数が `callback` 1 つのパラメーターで呼び出されます。 `asyncResult`<!-- -->オブジェクト `Office.AsyncResult` です。 結果 `value` のプロパティはオブジェクト `Recurrence` です。
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.Recurrence:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(recurrencePattern, options, callback)
  uid: outlook!Office.Recurrence#setAsync:member(1)
  package: outlook!
  fullName: setAsync(recurrencePattern, options, callback)
  summary: >-
    予定の定期的なパターンを設定します。


    **注**: `setAsync` シリーズ アイテムでのみ使用できる必要があります。インスタンス アイテムには使用できません。


    \[[API セット: メールボックス 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最小アクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadWriteItem`


    **[該当する Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: 作成


    **エラー**:


    - `InvalidEndTime`<!-- -->: 予定の終了時刻は開始時刻より前です。


    #### <a name="examples"></a>例


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml

    // Important: Can only set the recurrence pattern of an appointment series.


    var currentDate = new Date();

    let seriesTimeObject : Office.SeriesTime;

    // Set series start date to tomorrow.

    seriesTimeObject.setStartDate(
      currentDate.getFullYear(),
      currentDate.getMonth(),
      currentDate.getDay() + 1
    );

    // Set series end date to 1 month from now.

    seriesTimeObject.setEndDate(
      currentDate.getFullYear(),
      currentDate.getMonth() + 1,
      currentDate.getDay()
    );

    // Set start time to 1:30 PM.

    seriesTimeObject.setStartTime(13, 30);

    // Set duration to 30 minutes.

    seriesTimeObject.setDuration(30);


    let pattern : Office.Recurrence = {
      seriesTime: seriesTimeObject,
      recurrenceType: "weekly",
      recurrenceProperties: { interval: 1, days: ["tue", "thu"], firstDayOfWeek: "sun" },
      recurrenceTimeZone: { name: "Pacific Standard Time" }
    };


    Office.context.mailbox.item.recurrence.setAsync(pattern, (asyncResult) => {
      if (asyncResult.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Failed to set recurrence. Error: ${asyncResult.error.message}`);
        return;
      }
      console.log(`Succeeded in setting recurrence pattern ${JSON.stringify(pattern)}`);
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(recurrencePattern: Recurrence, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: recurrencePattern
      description: 定期的なオブジェクト。
      type: <xref uid="outlook!Office.Recurrence:interface" />
    - id: options
      description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバック メソッドでアクセスする任意のオブジェクトを提供できます。'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 省略可能。 メソッドが完了すると、パラメーターで渡された関数が `callback` 1 つのパラメーターで呼び出されます。 `asyncResult`<!-- -->オブジェクト `Office.AsyncResult` です。
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 057e373f3bd2b5d83dfcec24de0cb548ac6c1fc7
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51339868"
