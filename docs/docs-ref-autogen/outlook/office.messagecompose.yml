### YamlMime:UniversalReference
ms.openlocfilehash: fddb2e523a8cb947090c5d4ee3d87e942d50e62b
ms.sourcegitcommit: 2ef4b6e6f2f27ecb9abf01fefa4cffd9498ad5dc
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 03/16/2019
ms.locfileid: "30656837"
items:
- uid: outlook.Office.MessageCompose
  summary: >-
    <span data-ttu-id="54f5c-101">メッセージ作成モードの[Office. mailbox。](xref:outlook.Office.Item)</span><span class="sxs-lookup"><span data-stu-id="54f5c-101">The message compose mode of [Office.context.mailbox.item](xref:outlook.Office.Item)</span></span><!-- --><span data-ttu-id="54f5c-102">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-102"></span></span>


    <span data-ttu-id="54f5c-103">**重要**: これは、内部の Outlook オブジェクトであり、既存のインターフェイスを使用して直接公開されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-103">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="54f5c-104">これは、Office の1つのモードとして扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-104">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="54f5c-105">詳細については、「[オブジェクトモデル](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item)」ページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="54f5c-105">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item) page for more information.</span></span>
  name: Office.MessageCompose
  fullName: Office.MessageCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Message
  - 'ItemCompose '
  package: outlook
  children:
  - outlook.Office.MessageCompose.addFileAttachmentAsync
  - outlook.Office.MessageCompose.addFileAttachmentAsync_1
  - outlook.Office.MessageCompose.addFileAttachmentFromBase64Async
  - outlook.Office.MessageCompose.addFileAttachmentFromBase64Async_1
  - outlook.Office.MessageCompose.addHandlerAsync
  - outlook.Office.MessageCompose.addHandlerAsync_1
  - outlook.Office.MessageCompose.addItemAttachmentAsync
  - outlook.Office.MessageCompose.addItemAttachmentAsync_1
  - outlook.Office.MessageCompose.close
  - outlook.Office.MessageCompose.getAttachmentsAsync
  - outlook.Office.MessageCompose.getAttachmentsAsync_1
  - outlook.Office.MessageCompose.getInitializationContextAsync
  - outlook.Office.MessageCompose.getInitializationContextAsync_1
  - outlook.Office.MessageCompose.getSelectedDataAsync
  - outlook.Office.MessageCompose.getSelectedDataAsync_1
  - outlook.Office.MessageCompose.loadCustomPropertiesAsync
  - outlook.Office.MessageCompose.removeAttachmentAsync
  - outlook.Office.MessageCompose.removeAttachmentAsync_1
  - outlook.Office.MessageCompose.removeHandlerAsync
  - outlook.Office.MessageCompose.removeHandlerAsync_1
  - outlook.Office.MessageCompose.saveAsync
  - outlook.Office.MessageCompose.saveAsync_1
  - outlook.Office.MessageCompose.setSelectedDataAsync
  - outlook.Office.MessageCompose.setSelectedDataAsync_1
  - outlook.Office.MessageCompose.bcc
  - outlook.Office.MessageCompose.body
  - outlook.Office.MessageCompose.cc
  - outlook.Office.MessageCompose.conversationId
  - outlook.Office.MessageCompose.from
  - outlook.Office.MessageCompose.internetHeaders
  - outlook.Office.MessageCompose.itemType
  - outlook.Office.MessageCompose.notificationMessages
  - outlook.Office.MessageCompose.seriesId
  - outlook.Office.MessageCompose.subject
  - outlook.Office.MessageCompose.to
- uid: outlook.Office.MessageCompose.addFileAttachmentAsync
  summary: >-
    <span data-ttu-id="54f5c-106">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-106">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="54f5c-107">addfileattachmentasync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-107">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="54f5c-108">その後、removeattachmentasync メソッドで識別子を使用して、同じセッションの添付ファイルを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-108">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="54f5c-109">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-109">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-110">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-110">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-111">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-111">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-112">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-112">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-113">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-113">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-114">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-114">Errors</span></span></td><td><span data-ttu-id="54f5c-115">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-115">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-116">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-116">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-117">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-117">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table><span data-ttu-id="54f5c-118">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-118">

    #### Examples</span></span>


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```

    ```javascript

    // The following example adds an image file as an inline attachment and

    // references the attachment in the message body.

    Office.context.mailbox.item.addFileAttachmentAsync(
        "http://i.imgur.com/WJXklif.png",
        "cute_bird.png",
        {
            isInline: true
        },
        function (asyncResult) {
            Office.context.mailbox.item.body.setAsync(
                "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                {
                    "coercionType": "html"
                },
                function (asyncResult) {
                    // Do something here.
                });
        });
    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="54f5c-119">メッセージまたは予定に添付するファイルの場所を示す URI。</span><span class="sxs-lookup"><span data-stu-id="54f5c-119">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="54f5c-120">最大長は 2048 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-120">The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="54f5c-121">添付ファイルのアップロード時に表示される添付ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="54f5c-121">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="54f5c-122">最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-122">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="54f5c-123">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-123">Optional.</span></span> <span data-ttu-id="54f5c-124">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-124">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-125">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-125">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="54f5c-126">isinline: true の場合は、添付ファイルがインラインでメッセージ本文に表示され、添付ファイル一覧に表示されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-126">isInline: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.</span></span>'
      type:
      - 'Office.AsyncContextOptions & { isInline: boolean }'
    - id: callback
      description: <span data-ttu-id="54f5c-127">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-127">Optional.</span></span> <span data-ttu-id="54f5c-128">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-128">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-129">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-129">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="54f5c-130">添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-130">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.addFileAttachmentAsync_1
  summary: >-
    <span data-ttu-id="54f5c-131">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-131">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="54f5c-132">addfileattachmentasync メソッドは、指定した URI にあるファイルをアップロードし、新規作成フォーム内のアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-132">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="54f5c-133">その後、removeattachmentasync メソッドで識別子を使用して、同じセッションの添付ファイルを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-133">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="54f5c-134">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-134">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-135">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-135">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-136">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-136">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-137">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-137">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-138">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-138">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-139">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-139">Errors</span></span></td><td><span data-ttu-id="54f5c-140">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-140">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-141">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-141">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-142">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-142">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="54f5c-143">メッセージまたは予定に添付するファイルの場所を示す URI。</span><span class="sxs-lookup"><span data-stu-id="54f5c-143">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="54f5c-144">最大長は 2048 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-144">The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="54f5c-145">添付ファイルのアップロード時に表示される添付ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="54f5c-145">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="54f5c-146">最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-146">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="54f5c-147">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-147">Optional.</span></span> <span data-ttu-id="54f5c-148">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-148">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-149">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-149">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="54f5c-150">添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-150">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.addFileAttachmentFromBase64Async
  summary: >-
    <span data-ttu-id="54f5c-151">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-151">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="54f5c-152">addFileAttachmentFromBase64Async メソッドは、base64 エンコードからファイルをアップロードし、新規作成フォームのアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-152">The addFileAttachmentFromBase64Async method uploads the file from the base64 encoding and attaches it to the item in the compose form.</span></span> <span data-ttu-id="54f5c-153">このメソッドは、asyncResult オブジェクトの添付ファイル識別子を返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-153">This method returns the attachment identifier in the asyncResult.value object.</span></span>


    <span data-ttu-id="54f5c-154">その後、removeattachmentasync メソッドで識別子を使用して、同じセッションの添付ファイルを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-154">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="54f5c-155">\[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-155">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-156">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-156">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-157">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-157">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-158">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-158">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-159">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-159">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-160">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-160">Errors</span></span></td><td><span data-ttu-id="54f5c-161">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-161">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-162">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-162">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-163">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-163">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table><span data-ttu-id="54f5c-164">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-164">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.addFileAttachmentFromBase64Async(
        base64String,
        "cute_bird.png",
        {
            isInline: true
        },
        function (asyncResult) {
            Office.context.mailbox.item.body.setAsync(
                "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                {
                    "coercionType": "html"
                },
                function (asyncResult) {
                    // Do something here.
                });
        });
    ```
  isPreview: true
  name: addFileAttachmentFromBase64Async(base64File, attachmentName, options, callback)
  fullName: addFileAttachmentFromBase64Async(base64File, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentFromBase64Async(base64File: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="54f5c-165">電子メールまたはイベントに追加する画像またはファイルの、base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="54f5c-165">The base64 encoded content of an image or file to be added to an email or event.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="54f5c-166">添付ファイルのアップロード時に表示される添付ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="54f5c-166">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="54f5c-167">最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-167">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="54f5c-168">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-168">Optional.</span></span> <span data-ttu-id="54f5c-169">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-169">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-170">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-170">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="54f5c-171">isinline: true の場合は、添付ファイルがインラインでメッセージ本文に表示され、添付ファイル一覧に表示されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-171">isInline: If true, indicates that the attachment will be shown inline in the message body and should not be displayed in the attachment list.</span></span>'
      type:
      - 'Office.AsyncContextOptions & { isInline: boolean }'
    - id: callback
      description: <span data-ttu-id="54f5c-172">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-172">Optional.</span></span> <span data-ttu-id="54f5c-173">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-173">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-174">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-174">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="54f5c-175">添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-175">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.addFileAttachmentFromBase64Async_1
  summary: >-
    <span data-ttu-id="54f5c-176">ファイルを添付ファイルとしてメッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-176">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="54f5c-177">addFileAttachmentFromBase64Async メソッドは、base64 エンコードからファイルをアップロードし、新規作成フォームのアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-177">The addFileAttachmentFromBase64Async method uploads the file from the base64 encoding and attaches it to the item in the compose form.</span></span> <span data-ttu-id="54f5c-178">このメソッドは、asyncResult オブジェクトの添付ファイル識別子を返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-178">This method returns the attachment identifier in the asyncResult.value object.</span></span>


    <span data-ttu-id="54f5c-179">その後、removeattachmentasync メソッドで識別子を使用して、同じセッションの添付ファイルを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-179">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="54f5c-180">\[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-180">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-181">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-181">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-182">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-182">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-183">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-183">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-184">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-184">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-185">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-185">Errors</span></span></td><td><span data-ttu-id="54f5c-186">attachmentsizeexceeded-添付ファイルが許可されているサイズを超えています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-186">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-187">filetypenotsupported-添付ファイルに許可されていない拡張子が付いています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-187">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="54f5c-188">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-188">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table>
  isPreview: true
  name: addFileAttachmentFromBase64Async(base64File, attachmentName, callback)
  fullName: addFileAttachmentFromBase64Async(base64File, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentFromBase64Async(base64File: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: base64File
      description: <span data-ttu-id="54f5c-189">電子メールまたはイベントに追加する画像またはファイルの、base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="54f5c-189">The base64 encoded content of an image or file to be added to an email or event.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="54f5c-190">添付ファイルのアップロード時に表示される添付ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="54f5c-190">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="54f5c-191">最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-191">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="54f5c-192">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-192">Optional.</span></span> <span data-ttu-id="54f5c-193">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-193">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-194">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-194">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="54f5c-195">添付ファイルのアップロードが失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-195">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.addHandlerAsync
  summary: >-
    <span data-ttu-id="54f5c-196">サポートされているイベントのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-196">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="54f5c-197">現在、サポートされているイベントの種類は以下のとおりです。`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-197">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="54f5c-198">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-198"></span></span><!-- --><span data-ttu-id="54f5c-199">そして`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-199">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="54f5c-200">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-200"></span></span> <span data-ttu-id="54f5c-201">プレビューで`Office.EventType.EnhancedLocationsChanged`は`Office.EventType.AttachmentsChanged` 、もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-201">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="54f5c-202">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-202">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-203">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-203">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-204">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-204">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-205">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-205">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-206">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-206">Message Compose</span></span></td></tr> </table>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="54f5c-207">ハンドラを呼び出す必要のあるイベント。</span><span class="sxs-lookup"><span data-stu-id="54f5c-207">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="54f5c-208">イベントを処理する関数。</span><span class="sxs-lookup"><span data-stu-id="54f5c-208">The function to handle the event.</span></span> <span data-ttu-id="54f5c-209">関数は、オブジェクト リテラルである単一パラメーターを受け入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-209">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="54f5c-210">パラメーターの type プロパティは、addハンドラ async に渡される eventType パラメーターと一致します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-210">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: options
      description: '<span data-ttu-id="54f5c-211">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-211">Optional.</span></span> <span data-ttu-id="54f5c-212">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-212">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-213">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-213">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-214">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-214">Optional.</span></span> <span data-ttu-id="54f5c-215">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="54f5c-215">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.addHandlerAsync_1
  summary: >-
    <span data-ttu-id="54f5c-216">サポートされているイベントのイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-216">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="54f5c-217">現在、サポートされているイベントの種類は以下のとおりです。`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-217">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="54f5c-218">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-218"></span></span><!-- --><span data-ttu-id="54f5c-219">そして`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-219">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="54f5c-220">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-220"></span></span> <span data-ttu-id="54f5c-221">プレビューで`Office.EventType.EnhancedLocationsChanged`は`Office.EventType.AttachmentsChanged` 、もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-221">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="54f5c-222">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-222">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-223">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-223">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-224">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-224">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-225">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-225">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-226">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-226">Message Compose</span></span></td></tr> </table>
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="54f5c-227">ハンドラを呼び出す必要のあるイベント。</span><span class="sxs-lookup"><span data-stu-id="54f5c-227">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="54f5c-228">イベントを処理する関数。</span><span class="sxs-lookup"><span data-stu-id="54f5c-228">The function to handle the event.</span></span> <span data-ttu-id="54f5c-229">関数は、オブジェクト リテラルである単一パラメーターを受け入れる必要があります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-229">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="54f5c-230">パラメーターの type プロパティは、addハンドラ async に渡される eventType パラメーターと一致します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-230">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="54f5c-231">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-231">Optional.</span></span> <span data-ttu-id="54f5c-232">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="54f5c-232">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.addItemAttachmentAsync
  summary: >-
    <span data-ttu-id="54f5c-233">メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-233">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="54f5c-234">additemattachmentasync メソッドは、指定された Exchange 識別子を持つアイテムを新規作成フォームのアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-234">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="54f5c-235">コールバックメソッドを指定すると、メソッドは1つのパラメーター asyncResult を指定して呼び出されます。これには、添付ファイルの識別子、またはアイテムの添付中に発生したエラーを示すコードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-235">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="54f5c-236">必要に応じて、options パラメーターを使用して、コールバックメソッドに状態情報を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-236">You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="54f5c-237">その後、removeattachmentasync メソッドで識別子を使用して、同じセッションの添付ファイルを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-237">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="54f5c-238">Office アドインが Outlook Web App で実行されている場合、additemattachmentasync メソッドは、編集しているアイテム以外のアイテムにアイテムを添付できます。ただし、これはサポートされておらず、推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-238">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="54f5c-239">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-239">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-240">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-240">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-241">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-241">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-242">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-242">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-243">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-243">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-244">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-244">Errors</span></span></td><td><span data-ttu-id="54f5c-245">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-245">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table><span data-ttu-id="54f5c-246">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-246">

    #### Examples</span></span>


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="54f5c-247">添付するアイテムの Exchange 識別子。</span><span class="sxs-lookup"><span data-stu-id="54f5c-247">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="54f5c-248">最大長は 100 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-248">The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="54f5c-249">添付ファイルのアップロード時に表示される添付ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="54f5c-249">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="54f5c-250">最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-250">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="54f5c-251">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-251">Optional.</span></span> <span data-ttu-id="54f5c-252">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-252">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-253">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-253">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-254">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-254">Optional.</span></span> <span data-ttu-id="54f5c-255">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-255">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-256">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-256">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="54f5c-257">添付ファイルの追加が失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-257">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.addItemAttachmentAsync_1
  summary: >-
    <span data-ttu-id="54f5c-258">メッセージなどの Exchange アイテムを添付ファイルとして、メッセージまたは予定に追加します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-258">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="54f5c-259">additemattachmentasync メソッドは、指定された Exchange 識別子を持つアイテムを新規作成フォームのアイテムに添付します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-259">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="54f5c-260">コールバックメソッドを指定すると、メソッドは1つのパラメーター asyncResult を指定して呼び出されます。これには、添付ファイルの識別子、またはアイテムの添付中に発生したエラーを示すコードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-260">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="54f5c-261">必要に応じて、options パラメーターを使用して、コールバックメソッドに状態情報を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-261">You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="54f5c-262">その後、removeattachmentasync メソッドで識別子を使用して、同じセッションの添付ファイルを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-262">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="54f5c-263">Office アドインが Outlook Web App で実行されている場合、additemattachmentasync メソッドは、編集しているアイテム以外のアイテムにアイテムを添付できます。ただし、これはサポートされておらず、推奨されていません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-263">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="54f5c-264">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-264">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-265">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-265">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-266">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-266">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-267">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-267">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-268">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-268">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-269">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-269">Errors</span></span></td><td><span data-ttu-id="54f5c-270">NumberOfAttachmentsExceeded-メッセージまたは予定に含まれている添付ファイルが多すぎます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-270">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="54f5c-271">添付するアイテムの Exchange 識別子。</span><span class="sxs-lookup"><span data-stu-id="54f5c-271">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="54f5c-272">最大長は 100 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-272">The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="54f5c-273">添付ファイルのアップロード時に表示される添付ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="54f5c-273">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="54f5c-274">最大長は 255 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-274">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="54f5c-275">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-275">Optional.</span></span> <span data-ttu-id="54f5c-276">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-276">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-277">成功すると、添付ファイルの識別子が asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-277">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="54f5c-278">添付ファイルの追加が失敗した場合、asyncResult オブジェクトには、エラーの説明を提供する error オブジェクトが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-278">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.close
  summary: >-
    <span data-ttu-id="54f5c-279">構成されている現在のアイテムを閉じます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-279">Closes the current item that is being composed</span></span>


    <span data-ttu-id="54f5c-280">close メソッドの動作は、構成されているアイテムの現在の状態によって異なります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-280">The behaviors of the close method depends on the current state of the item being composed.</span></span> <span data-ttu-id="54f5c-281">アイテムに保存されていない変更がある場合、クライアントはユーザーに対して、操作を保存、破棄、または閉じることを求めるメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-281">If the item has unsaved changes, the client prompts the user to save, discard, or close the action.</span></span>


    <span data-ttu-id="54f5c-282">Outlook デスクトップクライアントでは、メッセージがインライン返信の場合、close メソッドは無効です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-282">In the Outlook desktop client, if the message is an inline reply, the close method has no effect.</span></span>


    <span data-ttu-id="54f5c-283">**注**: web 上の Outlook では、アイテムが予定であり、以前に saveAsync を使用して保存されている場合、アイテムが最後に保存されてから変更が行われていない場合でも、ユーザーに対して保存、破棄、またはキャンセルを求めるメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-283">**Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using saveAsync, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.</span></span>


    <span data-ttu-id="54f5c-284">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-284">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-285">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-285">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-286">制限あり</span><span class="sxs-lookup"><span data-stu-id="54f5c-286">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-287">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-287">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-288">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-288">Message Compose</span></span></td></tr> </table>
  name: close()
  fullName: close()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(): void;'
    return:
      type:
      - void
      description: ''
- uid: outlook.Office.MessageCompose.getAttachmentsAsync
  summary: >-
    <span data-ttu-id="54f5c-289">アイテムの添付ファイルを配列として取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-289">Gets the item's attachments as an array.</span></span>


    <span data-ttu-id="54f5c-290">\[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-290">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-291">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-291">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-292">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-292">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-293">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-293">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-294">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-294">Message Compose</span></span></td></tr> </table>
  isPreview: true
  name: getAttachmentsAsync(options, callback)
  fullName: getAttachmentsAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAttachmentsAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="54f5c-295">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-295">Optional.</span></span> <span data-ttu-id="54f5c-296">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-296">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-297">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-297">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-298">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-298">Optional.</span></span> <span data-ttu-id="54f5c-299">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-299">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-300">呼び出しが失敗した場合、asyncResult. error プロパティには、エラーの理由と共にエラーコードが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-300">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void'
- uid: outlook.Office.MessageCompose.getAttachmentsAsync_1
  summary: >-
    <span data-ttu-id="54f5c-301">アイテムの添付ファイルを配列として取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-301">Gets the item's attachments as an array.</span></span>


    <span data-ttu-id="54f5c-302">\[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-302">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-303">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-303">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-304">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-304">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-305">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-305">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-306">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-306">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-307">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-307">

    #### Examples</span></span>


    ```javascript

    var item = Office.context.mailbox.item;

    var outputString = "";

    item.getAttachmentsAsync(callback);


    function callback(result) {
        if (result.value.length > 0) {
            for (i = 0 ; i < result.value.length ; i++) {
                var attachment = result.value [i];
                outputString += "<BR>" + i + ". Name: ";
                outputString += attachment.name;
                outputString += "<BR>ID: " + attachment.id;
                outputString += "<BR>contentType: " + attachment.contentType;
                outputString += "<BR>size: " + attachment.size;
                outputString += "<BR>attachmentType: " + attachment.attachmentType;
                outputString += "<BR>isInline: " + attachment.isInline;
            }
        }
    }

    ```
  isPreview: true
  name: getAttachmentsAsync(callback)
  fullName: getAttachmentsAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAttachmentsAsync(callback?: (asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="54f5c-308">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-308">Optional.</span></span> <span data-ttu-id="54f5c-309">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-309">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-310">呼び出しが失敗した場合、asyncResult. error プロパティには、エラーの理由と共にエラーコードが格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-310">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<AttachmentDetails[]>) => void'
- uid: outlook.Office.MessageCompose.getInitializationContextAsync
  summary: >-
    <span data-ttu-id="54f5c-311">アクション可能なメッセージによってアドインがアクティブ化されたときに渡される初期化データを取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-311">Gets initialization data passed when the add-in is activated by an actionable message.</span></span>


    <span data-ttu-id="54f5c-312">**注**: このメソッドは、outlook 2016 for Windows (16.0.8413.1000 より大きいクイック実行バージョン) と web 上の outlook for Office 365 でのみサポートされています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-312">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>


    <span data-ttu-id="54f5c-313">\[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-313">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-314">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-314">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-315">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-315">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-316">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-316">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-317">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-317">Message Compose</span></span></td></tr> </table>


    <span data-ttu-id="54f5c-318">操作可能な[メッセージ](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)の詳細情報</span><span class="sxs-lookup"><span data-stu-id="54f5c-318">More information on [actionable messages](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="54f5c-319">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-319"></span></span>
  isPreview: true
  name: getInitializationContextAsync(options, callback)
  fullName: getInitializationContextAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="54f5c-320">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-320">Optional.</span></span> <span data-ttu-id="54f5c-321">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-321">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-322">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-322">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-323">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-323">Optional.</span></span> <span data-ttu-id="54f5c-324">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-324">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-325">成功すると、初期化データが文字列として asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-325">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="54f5c-326">初期化コンテキストが存在しない場合、asyncResult オブジェクトには、code プロパティが9020に設定されている Error オブジェクトと、その name プロパティが genericresponseerror に設定されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-326">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.getInitializationContextAsync_1
  summary: >-
    <span data-ttu-id="54f5c-327">アクション可能なメッセージによってアドインがアクティブ化されたときに渡される初期化データを取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-327">Gets initialization data passed when the add-in is activated by an actionable message.</span></span>


    <span data-ttu-id="54f5c-328">**注**: このメソッドは、outlook 2016 for Windows (16.0.8413.1000 より大きいクイック実行バージョン) と web 上の outlook for Office 365 でのみサポートされています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-328">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>


    <span data-ttu-id="54f5c-329">\[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-329">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-330">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-330">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-331">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-331">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-332">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-332">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-333">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-333">Message Compose</span></span></td></tr> </table>


    <span data-ttu-id="54f5c-334">操作可能な[メッセージ](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)の詳細情報</span><span class="sxs-lookup"><span data-stu-id="54f5c-334">More information on [actionable messages](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="54f5c-335">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-335"></span></span>
  isPreview: true
  name: getInitializationContextAsync(callback)
  fullName: getInitializationContextAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="54f5c-336">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-336">Optional.</span></span> <span data-ttu-id="54f5c-337">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-337">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-338">成功すると、初期化データが文字列として asyncResult プロパティに提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-338">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="54f5c-339">初期化コンテキストが存在しない場合、asyncResult オブジェクトには、code プロパティが9020に設定されている Error オブジェクトと、その name プロパティが genericresponseerror に設定されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-339">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.getSelectedDataAsync
  summary: >-
    <span data-ttu-id="54f5c-340">メッセージの件名または本文から非同期的に選択したデータを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-340">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="54f5c-341">選択したデータがなく、カーソルが本文または件名にある場合、選択したデータに対して null が返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-341">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="54f5c-342">本文または件名以外のフィールドが選択されている場合、このメソッドは invalidselection エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-342">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="54f5c-343">コールバックメソッドから選択したデータにアクセスするには、asyncResult. 値データを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-343">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="54f5c-344">選択範囲のソースプロパティにアクセスするには、sourceProperty を呼び出します。このプロパティは、本文または件名のどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-344">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="54f5c-345">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-345">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-346">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-346">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-347">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-347">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-348">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-348">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-349">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-349">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-350">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-350">

    #### Examples</span></span>


    ```javascript

    // Get selected data.

    Office.initialize = function () {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
    };


    function getCallback(asyncResult) {
        var text = asyncResult.value.data;
        var prop = asyncResult.value.sourceProperty;

        Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
    }


    function setCallback(asyncResult) {
        // Check for errors.
    }

    ```
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync(coercionType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="54f5c-351">coercionType によって決定された形式の文字列として選択されたデータ。</span><span class="sxs-lookup"><span data-stu-id="54f5c-351">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="54f5c-352">データの形式を要求します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-352">Requests a format for the data.</span></span> <span data-ttu-id="54f5c-353">text の場合、このメソッドはプレーンテキストを文字列として返し、HTML タグがある場合はそれを削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-353">If Text, the method returns the plain text as a string, removing any HTML tags present.</span></span> <span data-ttu-id="54f5c-354">HTMLの場合、メソッドは、プレーンテキストまたは HTML のいずれの場合も選択されたテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-354">If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: options
      description: '<span data-ttu-id="54f5c-355">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-355">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-356">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-356">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-357">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-357">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<any>) => void'
- uid: outlook.Office.MessageCompose.getSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="54f5c-358">メッセージの件名または本文から非同期的に選択したデータを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-358">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="54f5c-359">選択したデータがなく、カーソルが本文または件名にある場合、選択したデータに対して null が返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-359">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="54f5c-360">本文または件名以外のフィールドが選択されている場合、このメソッドは invalidselection エラーを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-360">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="54f5c-361">コールバックメソッドから選択したデータにアクセスするには、asyncResult. 値データを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-361">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="54f5c-362">選択範囲のソースプロパティにアクセスするには、sourceProperty を呼び出します。このプロパティは、本文または件名のどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-362">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="54f5c-363">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-363">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-364">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-364">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-365">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-365">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-366">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-366">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-367">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-367">Message Compose</span></span></td></tr> </table>
  name: getSelectedDataAsync(coercionType, callback)
  fullName: getSelectedDataAsync(coercionType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="54f5c-368">coercionType によって決定された形式の文字列として選択されたデータ。</span><span class="sxs-lookup"><span data-stu-id="54f5c-368">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="54f5c-369">データの形式を要求します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-369">Requests a format for the data.</span></span> <span data-ttu-id="54f5c-370">text の場合、このメソッドはプレーンテキストを文字列として返し、HTML タグがある場合はそれを削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-370">If Text, the method returns the plain text as a string, removing any HTML tags present.</span></span> <span data-ttu-id="54f5c-371">HTMLの場合、メソッドは、プレーンテキストまたは HTML のいずれの場合も選択されたテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-371">If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: callback
      description: <span data-ttu-id="54f5c-372">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-372">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<any>) => void'
- uid: outlook.Office.MessageCompose.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="54f5c-373">選択されたアイテムのこのアドインのカスタム プロパティを非同期に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-373">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="54f5c-374">カスタムプロパティは、アプリごとのアイテムごとにキーと値のペアとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-374">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="54f5c-375">このメソッドは、コールバックで CustomProperties オブジェクトを返します。このオブジェクトは、現在のアイテムおよび現在のアドインに固有のカスタムプロパティにアクセスするためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-375">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="54f5c-376">カスタムプロパティはアイテムで暗号化されていないので、セキュリティで保護されたストレージとして使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="54f5c-376">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="54f5c-377">カスタムプロパティは、CustomProperties オブジェクトとして、asyncResult プロパティによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-377">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="54f5c-378">このオブジェクトは、アイテムからカスタム プロパティを取得、設定、削除し、サーバーに設定し直すカスタム プロパティへの変更を保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-378">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="54f5c-379">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-379">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-380">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-380">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-381">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-381">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-382">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-382">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-383">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-383">Message Compose</span></span></td></tr> </table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="54f5c-384">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-384">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="54f5c-385">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-385">Optional.</span></span> <span data-ttu-id="54f5c-386">開発者は、コールバック関数でアクセスする任意のオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-386">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="54f5c-387">このオブジェクトには、コールバック関数の asyncResult コンテキストプロパティによってアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-387">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: outlook.Office.MessageCompose.removeAttachmentAsync
  summary: >-
    <span data-ttu-id="54f5c-388">メッセージまたは予定から添付ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-388">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="54f5c-389">removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-389">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="54f5c-390">ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="54f5c-390">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="54f5c-391">Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-391">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="54f5c-392">ユーザーがアプリを閉じたとき、またはインラインフォームの作成が開始されたときに、別のウィンドウで続行するためにフォームをポップアウトした後、セッションが終了します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-392">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="54f5c-393">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-393">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-394">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-394">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-395">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-395">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-396">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-396">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-397">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-397">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-398">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-398">Errors</span></span></td><td><span data-ttu-id="54f5c-399">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-399">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="54f5c-400">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-400">

    #### Examples</span></span>


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="54f5c-401">削除する添付ファイルの識別子。</span><span class="sxs-lookup"><span data-stu-id="54f5c-401">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="54f5c-402">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-402">Optional.</span></span> <span data-ttu-id="54f5c-403">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-403">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-404">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-404">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-405">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-405">Optional.</span></span> <span data-ttu-id="54f5c-406">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-406">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-407">添付ファイルの削除が失敗した場合、エラーコードにはエラーの理由と共にエラーコードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-407">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.removeAttachmentAsync_1
  summary: >-
    <span data-ttu-id="54f5c-408">メッセージまたは予定から添付ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-408">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="54f5c-409">removeattachmentasync メソッドは、指定された識別子を持つ添付ファイルをアイテムから削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-409">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="54f5c-410">ベスト プラクティスとして、同じメール アプリが同じセッションで添付ファイルを追加した場合にのみ、その添付ファイルの識別子を使用して添付ファイルを削除することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="54f5c-410">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="54f5c-411">Outlook Web App とデバイス用 OWA では、添付ファイルの識別子は同じセッション内でのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-411">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="54f5c-412">ユーザーがアプリを閉じたとき、またはインラインフォームの作成が開始されたときに、別のウィンドウで続行するためにフォームをポップアウトした後、セッションが終了します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-412">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="54f5c-413">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-413">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-414">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-414">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-415">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-415">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-416">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-416">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-417">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-417">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-418">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-418">Errors</span></span></td><td><span data-ttu-id="54f5c-419">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-419">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="54f5c-420">削除する添付ファイルの識別子。</span><span class="sxs-lookup"><span data-stu-id="54f5c-420">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="54f5c-421">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-421">Optional.</span></span> <span data-ttu-id="54f5c-422">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-422">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="54f5c-423">添付ファイルの削除が失敗した場合、エラーコードにはエラーの理由と共にエラーコードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-423">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.removeHandlerAsync
  summary: >-
    <span data-ttu-id="54f5c-424">サポートされているイベントの種類のイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-424">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="54f5c-425">現在、サポートされているイベントの種類は以下のとおりです。`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-425">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="54f5c-426">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-426"></span></span><!-- --><span data-ttu-id="54f5c-427">そして`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-427">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="54f5c-428">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-428"></span></span> <span data-ttu-id="54f5c-429">プレビューで`Office.EventType.EnhancedLocationsChanged`は`Office.EventType.AttachmentsChanged` 、もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-429">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="54f5c-430">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-430">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-431">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-431">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-432">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-432">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-433">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-433">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-434">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-434">Message Compose</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="54f5c-435">ハンドラーを取り消すイベント。</span><span class="sxs-lookup"><span data-stu-id="54f5c-435">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: options
      description: '<span data-ttu-id="54f5c-436">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-436">Optional.</span></span> <span data-ttu-id="54f5c-437">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-437">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-438">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-438">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-439">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-439">Optional.</span></span> <span data-ttu-id="54f5c-440">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="54f5c-440">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.removeHandlerAsync_1
  summary: >-
    <span data-ttu-id="54f5c-441">サポートされているイベントの種類のイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-441">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="54f5c-442">現在、サポートされているイベントの種類は以下のとおりです。`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-442">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="54f5c-443">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-443"></span></span><!-- --><span data-ttu-id="54f5c-444">そして`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="54f5c-444">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="54f5c-445">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-445"></span></span> <span data-ttu-id="54f5c-446">プレビューで`Office.EventType.EnhancedLocationsChanged`は`Office.EventType.AttachmentsChanged` 、もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="54f5c-446">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="54f5c-447">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-447">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-448">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-448">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-449">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-449">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-450">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-450">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-451">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-451">Message Compose</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="54f5c-452">ハンドラーを取り消すイベント。</span><span class="sxs-lookup"><span data-stu-id="54f5c-452">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="54f5c-453">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-453">Optional.</span></span> <span data-ttu-id="54f5c-454">メソッドが完了すると、callback パラメーターに渡された関数が、1つのパラメーター asyncResult を使用して呼び出されます。これは、Office の asyncresult オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="54f5c-454">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.saveAsync
  summary: >-
    <span data-ttu-id="54f5c-455">項目を非同期的に保存します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-455">Asynchronously saves an item.</span></span>


    <span data-ttu-id="54f5c-p159">呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-p159">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="54f5c-459">予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-459">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="54f5c-460">以前に保存されていない新しい予定の場合、招待状は送信されません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-460">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="54f5c-461">既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-461">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="54f5c-462">**注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="54f5c-462">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="54f5c-463">アイテムが同期されるまで、itemId を使用するとエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-463">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="54f5c-464">**注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="54f5c-464">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="54f5c-465">Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-465">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="54f5c-466">Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-466">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="54f5c-467">Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-467">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="54f5c-468">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-468">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="54f5c-469">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-469">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-470">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-470">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-471">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-471">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-472">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-472">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-473">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-473">Errors</span></span></td><td><span data-ttu-id="54f5c-474">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-474">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>
  name: saveAsync(options, callback)
  fullName: saveAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="54f5c-475">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class="sxs-lookup"><span data-stu-id="54f5c-475">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="54f5c-476">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-476">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="54f5c-477">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-477">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.saveAsync_1
  summary: >-
    <span data-ttu-id="54f5c-478">項目を非同期的に保存します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-478">Asynchronously saves an item.</span></span>


    <span data-ttu-id="54f5c-p164">呼び出されると、このメソッドは現在のメッセージを下書きとして保存し、コールバック メソッドを使用してアイテム ID を返します。Outlook Web App またはオンライン モードの Outlook では、サーバーにアイテムが保存されます。キャッシュ モードの Outlook では、ローカル キャッシュにアイテムが保存されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-p164">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="54f5c-482">予定には下書きの状態がないので、新規作成モードの予定で saveAsync が呼び出された場合、アイテムはユーザーの予定表に通常の予定として保存されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-482">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="54f5c-483">以前に保存されていない新しい予定の場合、招待状は送信されません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-483">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="54f5c-484">既存の予定を保存すると、追加または削除した出席者に対する更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-484">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="54f5c-485">**注**: EWS または REST API で使用する itemId を取得するために、アドインが新規作成モードのアイテムに対して saveAsync を呼び出す場合、Outlook がキャッシュモードである場合は、アイテムが実際にサーバーと同期されるまでに少し時間がかかることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="54f5c-485">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="54f5c-486">アイテムが同期されるまで、itemId を使用するとエラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-486">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="54f5c-487">**注**: 次のクライアントは、新規作成モードで予定を saveAsync する際に異なる動作をします。</span><span class="sxs-lookup"><span data-stu-id="54f5c-487">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="54f5c-488">Mac Outlook は、新規作成モードの会議で saveAsync をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-488">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="54f5c-489">Mac Outlook の会議で saveAsync を呼び出すと、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-489">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="54f5c-490">Outlook on the web では、作成モードで予定に対して saveAsync が呼び出されたときに、常に招待状または更新が送信されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-490">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="54f5c-491">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-491">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-492">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-492">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-493">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-493">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-494">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-494">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-495">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-495">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-496">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-496">Errors</span></span></td><td><span data-ttu-id="54f5c-497">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-497">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="54f5c-498">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-498">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.saveAsync(
        function callback(result) {
            // Process the result.
        });

    // The following is an example of the

    // `result` parameter passed to the

    // callback function. The `value`

    // property contains the item ID of

    // the item.

    {
        "value": "AAMkADI5...AAA=",
        "status": "succeeded"
    }

    ```
  name: saveAsync(callback)
  fullName: saveAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="54f5c-499">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-499">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.MessageCompose.setSelectedDataAsync
  summary: >-
    <span data-ttu-id="54f5c-500">メッセージの本文または件名に非同期的にデータを挿入します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-500">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="54f5c-501">setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-501">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="54f5c-502">カーソルが本文または件名フィールドにない場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-502">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="54f5c-503">挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-503">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="54f5c-504">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-504">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-505">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-505">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-506">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-506">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-507">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-507">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-508">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-508">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-509">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-509">Errors</span></span></td><td><span data-ttu-id="54f5c-510">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-510">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="54f5c-511">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-511">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });

    ```
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="54f5c-512">挿入されるデータ。</span><span class="sxs-lookup"><span data-stu-id="54f5c-512">The data to be inserted.</span></span> <span data-ttu-id="54f5c-513">データの最大の長さは 1,000,000 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-513">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id="54f5c-514">100万文字を超える文字が渡されると、ArgumentOutOfRange 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-514">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: options
      description: "<span data-ttu-id=\"54f5c-515\">省略可能。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-515\">Optional.</span></span> <span data-ttu-id=\"54f5c-516\">次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-516\">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id=\"54f5c-517\">asynccontext: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-517\">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id=\"54f5c-518\">coercionType: テキストの場合、現在のスタイルが outlook Web App および outlook で適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-518\">coercionType: If text, the current style is applied in Outlook Web App and Outlook.</span></span> <span data-ttu-id=\"54f5c-519\">フィールドが HTML エディターの場合、データが HTML の場合でも、テキスト データのみが挿入されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-519\">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id=\"54f5c-520\">html とフィールドが html をサポートしている場合 (件名は含まれません)、現在のスタイルが outlook Web App で適用され、既定のスタイルが outlook で適用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-520\">If html and the field supports HTML (the subject doesn't), the current style is applied in Outlook Web App and the default style is applied in Outlook.</span></span> <span data-ttu-id=\"54f5c-521\">フィールドがテキストフィールドの場合は、InvalidDataFormat エラーが返されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-521\">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id=\"54f5c-522\">coercionType が設定されていない場合、結果はフィールドによって異なります。フィールドが html の場合は、html が使用されます。フィールドがテキストの場合は、プレーンテキストが使用されます。</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-522\">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>"
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: <span data-ttu-id="54f5c-523">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-523">Optional.</span></span> <span data-ttu-id="54f5c-524">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-524">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.setSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="54f5c-525">メッセージの本文または件名に非同期的にデータを挿入します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-525">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="54f5c-526">setselecteddataasync メソッドは、指定された文字列を、アイテムの件名または本文にあるカーソル位置に挿入します。または、エディターでテキストが選択されている場合は、選択したテキストを置換します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-526">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="54f5c-527">カーソルが本文または件名フィールドにない場合は、エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-527">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="54f5c-528">挿入後、挿入されたコンテンツの末尾にカーソルが置かれます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-528">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="54f5c-529">\[[API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-529">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-530">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-530">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-531">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-531">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-532">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-532">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-533">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-533">Message Compose</span></span></td></tr> <tr><td><span data-ttu-id="54f5c-534">エラー</span><span class="sxs-lookup"><span data-stu-id="54f5c-534">Errors</span></span></td><td><span data-ttu-id="54f5c-535">InvalidAttachmentId-添付ファイル識別子が存在しません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-535">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="54f5c-536">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-536">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("Hello World!");

    ```
  name: setSelectedDataAsync(data, callback)
  fullName: setSelectedDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="54f5c-537">挿入されるデータ。</span><span class="sxs-lookup"><span data-stu-id="54f5c-537">The data to be inserted.</span></span> <span data-ttu-id="54f5c-538">データの最大の長さは 1,000,000 文字です。</span><span class="sxs-lookup"><span data-stu-id="54f5c-538">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id="54f5c-539">100万文字を超える文字が渡されると、ArgumentOutOfRange 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="54f5c-539">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="54f5c-540">省略可能。</span><span class="sxs-lookup"><span data-stu-id="54f5c-540">Optional.</span></span> <span data-ttu-id="54f5c-541">メソッドが完了すると、callback パラメーターで渡された関数が呼び出され、1つのパラメーターの型が事務であるということになります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-541">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.MessageCompose.bcc
  summary: >-
    <span data-ttu-id="54f5c-542">メッセージの BCC (ブラインド カーボン コピー) 行の受信者を取得または更新するメソッドを提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-542">Gets an object that provides methods to get or update the recipients on the Bcc (blind carbon copy) line of a message.</span></span>


    <span data-ttu-id="54f5c-543">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-543">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-544">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-544">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-545">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-545">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-546">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-546">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-547">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-547">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-548">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-548">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.bcc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfBccRecipients = asyncResult.value;
    }

    ```
  name: bcc
  fullName: bcc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bcc: Recipients;'
    return:
      type:
      - Recipients
- uid: outlook.Office.MessageCompose.body
  summary: >-
    <span data-ttu-id="54f5c-549">アイテムの本文を操作するメソッドを提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-549">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="54f5c-550">\[[API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-550">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-551">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-551">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-552">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-552">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-553">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-553">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-554">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-554">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-555">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-555">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the item as plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: outlook.Office.MessageCompose.cc
  summary: >-
    <span data-ttu-id="54f5c-556">メッセージの CC (カーボン コピー) の受信者へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-556">Provides access to the Cc (carbon copy) recipients of a message.</span></span> <span data-ttu-id="54f5c-557">オブジェクトの種類とアクセスのレベルは、現在のアイテムのモードによって異なります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-557">The type of object and level of access depends on the mode of the current item.</span></span>


    <span data-ttu-id="54f5c-558">cc プロパティは、メッセージの cc 行にある受信者を取得または更新するためのメソッドを提供する、 [Office の recipients](xref:outlook.Office.Recipients)オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-558">The cc property returns an [Office.Recipients](xref:outlook.Office.Recipients) object that provides methods to get or update the recipients on the Cc line of the message.</span></span>


    <span data-ttu-id="54f5c-559">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-559">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-560">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-560">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-561">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-561">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-562">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-562">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-563">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-563">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-564">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-564">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.cc.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfCcRecipients = asyncResult.value;
    }

    ```
  name: cc
  fullName: cc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cc: Recipients;'
    return:
      type:
      - Recipients
- uid: outlook.Office.MessageCompose.conversationId
  summary: >-
    <span data-ttu-id="54f5c-565">特定のメッセージが含まれている電子メールの会話の識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-565">Gets an identifier for the email conversation that contains a particular message.</span></span>


    <span data-ttu-id="54f5c-p176">メール アプリを閲覧フォームでアクティブ化するか、新規作成フォームの返信でアクティブ化すると、このプロパティで整数を取得することができます。その後、ユーザーが返信の件名を変更した場合、その返信の送信時にメッセージの会話 ID が変更され、以前に取得した値は適用されなくなります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-p176">You can get an integer for this property if your mail app is activated in read forms or responses in compose forms. If subsequently the user changes the subject of the reply message, upon sending the reply, the conversation ID for that message will change and that value you obtained earlier will no longer apply.</span></span>


    <span data-ttu-id="54f5c-568">新規作成フォームで新しいアイテムに対してこのプロパティに null を取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-568">You get null for this property for a new item in a compose form.</span></span> <span data-ttu-id="54f5c-569">ユーザーが件名を設定し、アイテムを保存した場合、conversationId プロパティは値を返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-569">If the user sets a subject and saves the item, the conversationId property will return a value.</span></span>


    <span data-ttu-id="54f5c-570">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-570">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-571">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-571">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-572">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-572">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-573">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-573">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-574">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-574">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-575">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-575">

    #### Examples</span></span>


    ```javascript

    var conversationId = Office.context.mailbox.item.conversationId;

    console.log("conversationId: " + conversationId);

    ```
  name: conversationId
  fullName: conversationId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'conversationId: string;'
    return:
      type:
      - string
- uid: outlook.Office.MessageCompose.from
  summary: >-
    <span data-ttu-id="54f5c-576">メッセージの送信者の電子メール アドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-576">Gets the email address of the sender of a message.</span></span>


    <span data-ttu-id="54f5c-577">from プロパティと sender プロパティは、メッセージが代理人によって送信されていない限り、同じユーザーを表します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-577">The from and sender properties represent the same person unless the message is sent by a delegate.</span></span> <span data-ttu-id="54f5c-578">その場合、from プロパティは所有者を表し、sender プロパティは代理人を表します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-578">In that case, the from property represents the owner, and the sender property represents the delegate.</span></span>


    <span data-ttu-id="54f5c-579">from プロパティは、from 値を取得するメソッドを提供する from オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-579">The from property returns a From object that provides a method to get the from value.</span></span>


    <span data-ttu-id="54f5c-580">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-580">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-581">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-581">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-582">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-582">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-583">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-583">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-584">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-584">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-585">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-585">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.from.getAsync(callback);


    function callback(asyncResult) {
        var from = asyncResult.value;
    }

    ```
  name: from
  fullName: from
  langs:
  - typeScript
  type: property
  syntax:
    content: 'from: From;'
    return:
      type:
      - From
- uid: outlook.Office.MessageCompose.internetHeaders
  summary: >-
    <span data-ttu-id="54f5c-586">メッセージのインターネットヘッダーを設定します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-586">Sets the internet headers of a message.</span></span>


    <span data-ttu-id="54f5c-587">internetHeaders プロパティは、メッセージのインターネットヘッダーを管理するメソッドを提供する internetHeaders オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-587">The internetHeaders property returns an InternetHeaders object that provides methods to manage the internet headers on the message.</span></span>


    <span data-ttu-id="54f5c-588">\[[API セット: メールボックスのプレビュー](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-588">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-589">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-589">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-590">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-590">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-591">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-591">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-592">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-592">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-593">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-593">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.internetHeaders.getAsync(["header1", "header2"], callback);


    function callback(asyncResult) {
        var dictionary = asyncResult.value;
        var header1_value = dictionary["header1"];
    }

    ```
  isPreview: true
  name: internetHeaders
  fullName: internetHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'internetHeaders: InternetHeaders;'
    return:
      type:
      - outlook.Office.InternetHeaders
- uid: outlook.Office.MessageCompose.itemType
  summary: >-
    <span data-ttu-id="54f5c-594">インスタンスが表しているアイテムの種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-594">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="54f5c-595">itemtype プロパティは、アイテムのオブジェクトインスタンスがメッセージであるか予定であるかを示す、itemtype 列挙値の1つを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-595">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="54f5c-596">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-596">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-597">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-597">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-598">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-598">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-599">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-599">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-600">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-600">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-601">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-601">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: outlook.Office.MessageCompose.notificationMessages
  summary: >-
    <span data-ttu-id="54f5c-602">アイテムの通知メッセージを取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-602">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="54f5c-603">\[[API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-603">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-604">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-604">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-605">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-605">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-606">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-606">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-607">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-607">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-608">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-608">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: outlook.Office.MessageCompose.seriesId
  summary: >-
    <span data-ttu-id="54f5c-609">インスタンスが属する系列の id を取得します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-609">Gets the id of the series that an instance belongs to.</span></span>


    <span data-ttu-id="54f5c-610">OWA および Outlook では、このアイテムが属している親 (シリーズ) アイテムの Exchange Web サービス (EWS) id を、系列 ID が返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-610">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="54f5c-611">ただし、iOS と Android では、系列 id は親アイテムの REST id を返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-611">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>


    <span data-ttu-id="54f5c-612">**注**: [系列 id] プロパティによって返される識別子は、Exchange Web サービスのアイテム識別子と同じです。</span><span class="sxs-lookup"><span data-stu-id="54f5c-612">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="54f5c-613">"系列 id" プロパティは、outlook REST API で使用される outlook id と同一ではありません。</span><span class="sxs-lookup"><span data-stu-id="54f5c-613">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="54f5c-614">この値を使用して REST API を呼び出す前に、Office.context.mailbox.convertToRestId を使用して変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-614">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="54f5c-615">詳細については、「outlook[アドインからの outlook REST api の使用](https://docs.microsoft.com/outlook/add-ins/use-rest-api)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="54f5c-615">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span></span><!-- --><span data-ttu-id="54f5c-616">.</span><span class="sxs-lookup"><span data-stu-id="54f5c-616"></span></span>


    <span data-ttu-id="54f5c-617">個別の予定、一連のアイテム、会議出席依頼などの親アイテムがないアイテムに対しては、[区分 id] プロパティは null を返し、会議出席依頼以外のアイテムについては未定義を返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-617">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>


    <span data-ttu-id="54f5c-618">\[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-618">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: "<table> <tr><td>[<span data-ttu-id=\"54f5c-619\">最小限のアクセス許可レベル</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-619\">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id=\"54f5c-620\">ReadItem</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-620\">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id=\"54f5c-621\">適用可能な Outlook のモード</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-621\">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id=\"54f5c-622\">メッセージの作成</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-622\">Message Compose</span></span></td></tr> </table><span data-ttu-id=\"54f5c-623\">\n####例えば</span><span class=\"sxs-lookup\"><span data-stu-id=\"54f5c-623\">\n#### Examples</span></span>\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
- uid: outlook.Office.MessageCompose.subject
  summary: >-
    <span data-ttu-id="54f5c-624">アイテムの件名フィールドに示される説明を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-624">Gets or sets the description that appears in the subject field of an item.</span></span>


    <span data-ttu-id="54f5c-625">subject プロパティは、電子メールサーバーによって送信されたアイテムの件名全体を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-625">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>


    <span data-ttu-id="54f5c-626">subject プロパティは、件名を取得および設定するためのメソッドを提供する subject オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-626">The subject property returns a Subject object that provides methods to get and set the subject.</span></span>


    <span data-ttu-id="54f5c-627">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-627">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-628">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-628">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-629">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-629">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-630">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-630">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-631">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-631">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-632">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-632">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
- uid: outlook.Office.MessageCompose.to
  summary: >-
    <span data-ttu-id="54f5c-633">メッセージの To 行にある受信者へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-633">Provides access to the recipients on the To line of a message.</span></span> <span data-ttu-id="54f5c-634">オブジェクトの種類とアクセスのレベルは、現在のアイテムのモードによって異なります。</span><span class="sxs-lookup"><span data-stu-id="54f5c-634">The type of object and level of access depends on the mode of the current item.</span></span>


    <span data-ttu-id="54f5c-635">to プロパティは、メッセージの to 行の受信者を取得または更新するメソッドを提供する recipients オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="54f5c-635">The to property returns a Recipients object that provides methods to get or update the recipients on the To line of the message.</span></span>


    <span data-ttu-id="54f5c-636">\[[API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="54f5c-636">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="54f5c-637">最小限のアクセス許可レベル</span><span class="sxs-lookup"><span data-stu-id="54f5c-637">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="54f5c-638">ReadItem</span><span class="sxs-lookup"><span data-stu-id="54f5c-638">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="54f5c-639">適用可能な Outlook のモード</span><span class="sxs-lookup"><span data-stu-id="54f5c-639">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="54f5c-640">メッセージの作成</span><span class="sxs-lookup"><span data-stu-id="54f5c-640">Message Compose</span></span></td></tr> </table><span data-ttu-id="54f5c-641">

    ####例えば</span><span class="sxs-lookup"><span data-stu-id="54f5c-641">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.to.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfToRecipients = asyncResult.value;
    }

    ```
  name: to
  fullName: to
  langs:
  - typeScript
  type: property
  syntax:
    content: 'to: Recipients;'
    return:
      type:
      - Recipients
