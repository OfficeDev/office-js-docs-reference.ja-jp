### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Recurrence:interface'
    summary: |-
      `Recurrence`オブジェクトには、予定の定期的なパターンを取得および設定するためのメソッドが用意されていますが、会議出席依頼の定期的なパターンのみを取得します。 次のキーを持つ辞書が含まれています。 `seriesTime`<!-- -->, `recurrenceType`<!-- -->, `recurrenceProperties`<!-- -->、 `recurrenceTimeZone` (省略可能)。

      \[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : 新規作成または読み取り

      **示し**

      <table> <tr> <th>State</th> <th>可能?</th> <th>ビュー?</th> </tr> <tr> <td>予定の開催者-シリーズの新規作成</td> <td>はい (setAsync)</td> <td>はい (getAsync)</td> </tr> <tr> <td>予定の開催者-新規インスタンス</td> <td>いいえ (setAsync はエラーを返します)</td> <td>はい (getAsync)</td> </tr> <tr> <td>予定の出席者-定期的なアイテムの読み取り</td> <td>いいえ (setAsync を使用できません)</td> <td>はい (定期的なアイテム)</td> </tr> <tr> <td>予定の出席者-インスタンスの読み取り</td> <td>いいえ (setAsync を使用できません)</td> <td>はい (定期的なアイテム)</td> </tr> <tr> <td>会議出席依頼-定期的なアイテムの読み取り</td> <td>いいえ (setAsync を使用できません)</td> <td>はい (定期的なアイテム)</td> </tr> <tr> <td>会議出席依頼-インスタンスの読み取り</td> <td>いいえ (setAsync を使用できません)</td> <td>はい (定期的なアイテム)</td> </tr> </table>
    name: Office.Recurrence
    fullName: Office.Recurrence
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Recurrence#getAsync:member(1)'
      - 'outlook!Office.Recurrence#recurrenceProperties:member'
      - 'outlook!Office.Recurrence#recurrenceTimeZone:member'
      - 'outlook!Office.Recurrence#recurrenceType:member'
      - 'outlook!Office.Recurrence#seriesTime:member'
      - 'outlook!Office.Recurrence#setAsync:member(1)'
  - uid: 'outlook!Office.Recurrence#getAsync:member(1)'
    summary: |-
      定期的な予定の現在の繰り返しオブジェクトを返します。

      このメソッドは `Recurrence` 、定期的な予定のオブジェクト全体を返します。

      \[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : 新規作成または読み取り

      #### <a name="examples"></a>例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml
      Office.context.mailbox.item.recurrence.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          var recurrence = asyncResult.value;
          if (recurrence === null) {
            console.log("This is a single appointment.");
          } else {
            console.log(`Recurrence pattern: ${JSON.stringify(recurrence)}`);
          }
        } else {
          console.error(asyncResult.error);
        }
      });
      ```
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Recurrence>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 省略可能。 メソッドが完了すると、パラメーターに渡された関数 `callback` が1つのパラメーターで呼び出されます。 `asyncResult`<!-- -->`Office.AsyncResult`。オブジェクトです。 `value`Result のプロパティは `Recurrence` オブジェクトです。
          type:
            - 'outlook!Office.Recurrence#getAsync~0:complex'
  - uid: 'outlook!Office.Recurrence#recurrenceProperties:member'
    summary: |-
      一連の定期的な予定のプロパティを取得または設定します。

      \[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : 新規作成または読み取り
    name: recurrenceProperties
    fullName: recurrenceProperties
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceProperties?: RecurrenceProperties;'
      return:
        type:
          - 'outlook!Office.RecurrenceProperties:interface'
  - uid: 'outlook!Office.Recurrence#recurrenceTimeZone:member'
    summary: |-
      一連の定期的な予定のプロパティを取得または設定します。

      \[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : 新規作成または読み取り
    name: recurrenceTimeZone
    fullName: recurrenceTimeZone
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceTimeZone?: RecurrenceTimeZone;'
      return:
        type:
          - 'outlook!Office.RecurrenceTimeZone:interface'
  - uid: 'outlook!Office.Recurrence#recurrenceType:member'
    summary: |-
      一連の定期的な予定の種類を取得または設定します。

      \[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : 新規作成または読み取り
    name: recurrenceType
    fullName: recurrenceType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrenceType: MailboxEnums.RecurrenceType | string;'
      return:
        type:
          - 'outlook!Office.Recurrence#recurrenceType~0:complex'
  - uid: 'outlook!Office.Recurrence#seriesTime:member'
    summary: |-
      [SeriesTime](xref:outlook!Office.SeriesTime:interface)オブジェクトを使用すると、定期的な予定のシリーズの開始日と終了日と、通常はインスタンスの開始時刻と終了時刻を管理できます。 **このオブジェクトは UTC 時刻ではありません。** 代わりに、値で指定されたタイムゾーン、 `recurrenceTimeZone` またはアイテムのタイムゾーンに既定で設定されます。

      \[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : 新規作成または読み取り
    name: seriesTime
    fullName: seriesTime
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesTime: SeriesTime;'
      return:
        type:
          - 'outlook!Office.SeriesTime:interface'
  - uid: 'outlook!Office.Recurrence#setAsync:member(1)'
    summary: |-
      予定の定期的なパターンを設定します。

      **注** : `setAsync` 系列アイテムに対してのみ使用可能で、インスタンスアイテムは使用できません。

      \[[API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadWriteItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : 新規作成

      **エラー** :

      - `InvalidEndTime`<!-- -->: 予定の終了時刻が開始時刻より前になっています。

      #### <a name="examples"></a>例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml
      // Important: Can only set the recurrence pattern of an appointment series.

      var currentDate = new Date();
      let seriesTimeObject : Office.SeriesTime;
      // Set series start date to tomorrow.
      seriesTimeObject.setStartDate(
        currentDate.getFullYear(),
        currentDate.getMonth(),
        currentDate.getDay() + 1
      );
      // Set series end date to 1 month from now.
      seriesTimeObject.setEndDate(
        currentDate.getFullYear(),
        currentDate.getMonth() + 1,
        currentDate.getDay()
      );
      // Set start time to 1:30 PM.
      seriesTimeObject.setStartTime(13, 30);
      // Set duration to 30 minutes.
      seriesTimeObject.setDuration(30);

      let pattern : Office.Recurrence = {
        seriesTime: seriesTimeObject,
        recurrenceType: "weekly",
        recurrenceProperties: { interval: 1, days: ["tue", "thu"], firstDayOfWeek: "sun" },
        recurrenceTimeZone: { name: "Pacific Standard Time" }
      };

      Office.context.mailbox.item.recurrence.setAsync(pattern, (asyncResult) => {
        if (asyncResult.status !== Office.AsyncResultStatus.Succeeded) {
          console.error(`Failed to set recurrence. Error: ${asyncResult.error.message}`);
          return;
        }
        console.log(`Succeeded in setting recurrence pattern ${JSON.stringify(pattern)}`);
      });
      ```
    name: 'setAsync(recurrencePattern, options, callback)'
    fullName: 'setAsync(recurrencePattern, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recurrencePattern: Recurrence, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recurrencePattern
          description: 定期的なオブジェクト。
          type:
            - 'outlook!Office.Recurrence:interface'
        - id: options
          description: '省略可能。 次のプロパティのうち 1 つ以上を含むオブジェクト リテラル。 `asyncContext`<!-- -->: 開発者は、コールバックメソッドでアクセスする任意のオブジェクトを提供できます。'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 省略可能。 メソッドが完了すると、パラメーターに渡された関数 `callback` が1つのパラメーターで呼び出されます。 `asyncResult`<!-- -->`Office.AsyncResult`。オブジェクトです。
          type:
            - 'outlook!Office.Recurrence#setAsync~0:complex'
references:
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Recurrence#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<Recurrence>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.Recurrence>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.Recurrence:interface'
        name: Recurrence
        fullName: Office.Recurrence
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.RecurrenceProperties:interface'
    name: RecurrenceProperties
  - uid: 'outlook!Office.RecurrenceTimeZone:interface'
    name: RecurrenceTimeZone
  - uid: 'outlook!Office.Recurrence#recurrenceType~0:complex'
    name: MailboxEnums.RecurrenceType | string
    fullName: Office.MailboxEnums.RecurrenceType | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.RecurrenceType:enum'
        name: MailboxEnums.RecurrenceType
        fullName: Office.MailboxEnums.RecurrenceType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.SeriesTime:interface'
    name: SeriesTime
  - uid: 'outlook!Office.Recurrence:interface'
    name: Recurrence
  - uid: 'outlook!Office.Recurrence#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void