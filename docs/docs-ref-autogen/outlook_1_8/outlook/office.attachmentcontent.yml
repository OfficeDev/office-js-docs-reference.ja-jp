### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.AttachmentContent:interface'
    summary: |-
      メッセージアイテムまたは予定アイテムの添付ファイルのコンテンツを表します。

      \[[API set: Mailbox 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低限必要なアクセス許可レベル](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **:`ReadItem`

      **[適用可能な Outlook モード](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **: 新規作成または読み取り
    name: Office.AttachmentContent
    fullName: Office.AttachmentContent
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.AttachmentContent#content:member'
      - 'outlook!Office.AttachmentContent#format:member'
  - uid: 'outlook!Office.AttachmentContent#content:member'
    summary: 文字列としての添付ファイルの内容。
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
  - uid: 'outlook!Office.AttachmentContent#format:member'
    summary: |-
      添付ファイルのコンテンツに使用する文字列形式。

      添付ファイルの場合、書式設定は base64 でエンコードされた文字列です。

      メッセージを表し、ドラッグアンドドロップまたは "アイテムの添付" によって添付されたアイテムの添付ファイルの場合、書式設定は .eml 形式のファイルを表す文字列になります。 **重要**: メッセージアイテムが Outlook on the web のドラッグアンドドロップによって接続された場合、 `getAttachmentContentAsync` エラーがスローされます。

      アイテムの添付ファイルが予定表アイテムを表し、ドラッグアンドドロップまたは "アイテムの添付" によって接続されていた場合、書式設定は icalendar ファイルを表す文字列になります。 **重要**: 予定表アイテムが Outlook on the web のドラッグアンドドロップによって接続されていた場合は、 `getAttachmentContentAsync` エラーがスローされます。

      クラウド添付ファイルの場合、書式設定は URL 文字列です。
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'format: MailboxEnums.AttachmentContentFormat | string;'
      return:
        type:
          - 'outlook!Office.AttachmentContent#format~0:complex'
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          var item = Office.context.mailbox.item;
          var options = {asyncContext: {currentItem: item}};
          item.getAttachmentsAsync(options, callback);

          function callback(result) {
              if (result.value.length > 0) {
                  for (i = 0 ; i < result.value.length ; i++) {
                      result.asyncContext.currentItem.getAttachmentContentAsync(result.value[i].id, handleAttachmentsCallback);
                  }
              }
          }

          function handleAttachmentsCallback(result) {
              // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
              switch (result.value.format) {
                  case Office.MailboxEnums.AttachmentContentFormat.Base64:
                      // Handle file attachment.
                      break;
                  case Office.MailboxEnums.AttachmentContentFormat.Eml:
                      // Handle email item attachment.
                      break;
                  case Office.MailboxEnums.AttachmentContentFormat.ICalendar:
                      // Handle .icalender attachment.
                      break;
                  case Office.MailboxEnums.AttachmentContentFormat.Url:
                      // Handle cloud attachment.
                      break;
                  default:
                      // Handle attachment formats that are not supported.
              }
          }
          ```
references:
  - uid: 'outlook!Office.AttachmentContent#format~0:complex'
    name: MailboxEnums.AttachmentContentFormat | string
    fullName: Office.MailboxEnums.AttachmentContentFormat | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.AttachmentContentFormat:enum'
        name: MailboxEnums.AttachmentContentFormat
        fullName: Office.MailboxEnums.AttachmentContentFormat
      - name: ' | string'
        fullName: ' | string'