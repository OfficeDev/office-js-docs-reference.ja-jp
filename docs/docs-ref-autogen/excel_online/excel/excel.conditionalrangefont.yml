### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeFont:class'
    summary: |-
      このオブジェクトは、オブジェクトのフォントの属性 (フォントスタイル、色など) を表します。

      \[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ConditionalRangeFont
    fullName: Excel.ConditionalRangeFont
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeFont#bold:member'
      - 'excel!Excel.ConditionalRangeFont#clear:member(1)'
      - 'excel!Excel.ConditionalRangeFont#color:member'
      - 'excel!Excel.ConditionalRangeFont#context:member'
      - 'excel!Excel.ConditionalRangeFont#italic:member'
      - 'excel!Excel.ConditionalRangeFont#load:member(1)'
      - 'excel!Excel.ConditionalRangeFont#load:member(2)'
      - 'excel!Excel.ConditionalRangeFont#load:member(3)'
      - 'excel!Excel.ConditionalRangeFont#set:member(1)'
      - 'excel!Excel.ConditionalRangeFont#set:member(2)'
      - 'excel!Excel.ConditionalRangeFont#strikethrough:member'
      - 'excel!Excel.ConditionalRangeFont#toJSON:member(1)'
      - 'excel!Excel.ConditionalRangeFont#underline:member'
  - uid: 'excel!Excel.ConditionalRangeFont#bold:member'
    summary: |-
      フォントを太字にするかどうかを指定します。

      \[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: bold
    fullName: bold
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bold: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#clear:member(1)'
    summary: |-
      フォントの書式設定をリセットします。

      \[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFont#color:member'
    summary: |-
      テキストの色の HTML カラーコード表現 (たとえば、 \# ff0000 はは赤を表します)。

      \[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeFont#context:member'
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeFont#italic:member'
    summary: |-
      フォントを斜体にするかどうかを指定します。

      \[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: italic
    fullName: italic
    langs:
      - typeScript
    type: property
    syntax:
      content: 'italic: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(1)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeFontLoadOptions): Excel.ConditionalRangeFont;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: options
          description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFontLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(2)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFont;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeFont#load:member(3)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeFont;
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeFont#set:member(1)'
    summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
    remarks: |-
      このメソッドには、次の追加のシグネチャがあります。

      `set(properties: Excel.ConditionalRangeFont): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFontUpdateData:interface'
        - id: options
          description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFont#set:member(2)'
    summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFont): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeFont:class'
  - uid: 'excel!Excel.ConditionalRangeFont#strikethrough:member'
    summary: |-
      フォントの取り消し線の状態を指定します。

      \[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: strikethrough
    fullName: strikethrough
    langs:
      - typeScript
    type: property
    syntax:
      content: 'strikethrough: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalRangeFont#toJSON:member(1)'
    summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の Excel の ConditionalRangeFont オブジェクトは API オブジェクトであるのに対し `toJSON` て、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ConditionalRangeFontData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFontData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeFontData:interface'
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFont#underline:member'
    summary: |-
      フォントに適用する下線の種類を設定します。 詳細については、「Excel の Conditionalrangefont過小認識」を参照してください。

      \[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: underline
    fullName: underline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'underline: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFont#underline~0:complex'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFont:class'
    name: Excel.ConditionalRangeFont
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeFontLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontUpdateData:interface'
    name: Interfaces.ConditionalRangeFontUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFontData:interface'
    name: Excel.Interfaces.ConditionalRangeFontData
  - uid: 'excel!Excel.ConditionalRangeFont#underline~0:complex'
    name: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double"
    fullName: Excel.ConditionalRangeFontUnderlineStyle | "None" | "Single" | "Double"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeFontUnderlineStyle:enum'
        name: Excel.ConditionalRangeFontUnderlineStyle
        fullName: Excel.ConditionalRangeFontUnderlineStyle
      - name: ' | "None" | "Single" | "Double"'
        fullName: ' | "None" | "Single" | "Double"'