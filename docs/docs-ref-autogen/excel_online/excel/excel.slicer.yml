### YamlMime:TSType
name: Excel.Slicer
uid: excel!Excel.Slicer:class
package: excel!
fullName: Excel.Slicer
summary: >-
  ブック内のスライサーオブジェクトを表します。


  \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: caption
  uid: excel!Excel.Slicer#caption:member
  package: excel!
  fullName: caption
  summary: >-
    スライサーのキャプションを表します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'caption: string;'
    return:
      type: string
- name: context
  uid: excel!Excel.Slicer#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: height
  uid: excel!Excel.Slicer#height:member
  package: excel!
  fullName: height
  summary: >-
    スライサーの高さ (ポイント数) を表します。 "引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。 負の値で設定した場合、または入力に0の場合は例外。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'height: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Slicer#id:member
  package: excel!
  fullName: id
  summary: >-
    スライサーの一意の ID を表します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: isFilterCleared
  uid: excel!Excel.Slicer#isFilterCleared:member
  package: excel!
  fullName: isFilterCleared
  summary: >-
    スライサーに現在適用されているフィルターがすべて消去されている場合、true となります。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isFilterCleared: boolean;'
    return:
      type: boolean
- name: left
  uid: excel!Excel.Slicer#left:member
  package: excel!
  fullName: left
  summary: >-
    スライサーの左側からワークシートの左までの距離を表します (ポイント数)。 "引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。 負の値を入力として設定した場合の例外。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: name
  uid: excel!Excel.Slicer#name:member
  package: excel!
  fullName: name
  summary: >-
    スライサーの名前を表します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: slicerItems
  uid: excel!Excel.Slicer#slicerItems:member
  package: excel!
  fullName: slicerItems
  summary: >-
    スライサーに含まれる SlicerItems のコレクションを表します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicerItems: Excel.SlicerItemCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerItemCollection:class" />
- name: sortBy
  uid: excel!Excel.Slicer#sortBy:member
  package: excel!
  fullName: sortBy
  summary: >-
    スライサーに含まれるアイテムの並べ替え順序を表します。 可能な値は、"DataSourceOrder"、"昇順"、"降順" です。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
    return:
      type: <xref uid="excel!Excel.SlicerSortType:enum" /> | "DataSourceOrder" | "Ascending" | "Descending"
- name: style
  uid: excel!Excel.Slicer#style:member
  package: excel!
  fullName: style
  summary: >-
    スライサー スタイルを表す定数値。 可能な値は次のとおりです。 "SlicerStyleLight1" は "SlicerStyleLight6"、"TableStyleOther1" ~ "TableStyleOther2"、"SlicerStyleDark1" ~ "SlicerStyleDark6" です。 ブックに存在するカスタムのユーザー定義スタイルも指定できます。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.style = \"SlicerStyleLight6\";\n    await context.sync();\n});\n```"
- name: top
  uid: excel!Excel.Slicer#top:member
  package: excel!
  fullName: top
  summary: >-
    スライサーの上端からワークシートの上端までの距離を表します (ポイント数)。 "引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。 負の値を入力として設定した場合の例外。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: width
  uid: excel!Excel.Slicer#width:member
  package: excel!
  fullName: width
  summary: >-
    スライサーの幅 (ポイント数) を表します。 "引数が無効であるか、存在しないか、または形式が正しくありません。" という例外がスローされます。 負の値で設定した場合、または入力に0の場合は例外。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'width: number;'
    return:
      type: number
- name: worksheet
  uid: excel!Excel.Slicer#worksheet:member
  package: excel!
  fullName: worksheet
  summary: >-
    スライサーを含んでいるワークシートを表します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:class" />
methods:
- name: clearFilters()
  uid: excel!Excel.Slicer#clearFilters:member(1)
  package: excel!
  fullName: clearFilters()
  summary: >-
    現在スライサーに適用されているすべてのフィルターを消去します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearFilters(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.clearFilters();\n    await context.sync();\n});\n```"
- name: delete()
  uid: excel!Excel.Slicer#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    スライサーを削除します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    sheet.slicers.getItemAt(0).delete();\n    await context.sync();\n});\n```"
- name: getSelectedItems()
  uid: excel!Excel.Slicer#getSelectedItems:member(1)
  package: excel!
  fullName: getSelectedItems()
  summary: >-
    選択されたアイテムのキーの配列を返します。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: ''
- name: load(options)
  uid: excel!Excel.Slicer#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.SlicerLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Slicer#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Slicer#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Slicer;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: selectItems(items)
  uid: excel!Excel.Slicer#selectItems:member(1)
  package: excel!
  fullName: selectItems(items)
  summary: >-
    キーに基づいてスライサーアイテムを選択します。 以前の選択はクリアされます。 配列が空の場合、既定ではすべてのアイテムが選択されます。


    \[[API セット: excelapi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'selectItems(items?: string[]): void;'
    parameters:
    - id: items
      description: 省略可能。 選択するスライサーアイテムの名前を指定します。
      type: string[]
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.selectItems([\"Lemon\", \"Lime\", \"Orange\"]);\n    await context.sync();\n});\n```"
- name: set(properties, options)
  uid: excel!Excel.Slicer#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Excel.Slicer): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="excel!Excel.Interfaces.SlicerUpdateData:interface" />
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Slicer#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Slicer): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Slicer:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Slicer#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の Excel のスライサーオブジェクトは API オブジェクトであるのに対し、 `toJSON` メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.SlicerData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.SlicerData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: e221f0f96861c51e9f2782543b3aa61b96999362
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49319198"
