### YamlMime:UniversalReference
items:
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    summary: '\[[API セット: PowerPointApi 1.0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]'
    name: PowerPoint.Presentation
    fullName: PowerPoint.Presentation
    langs:
      - typeScript
    type: class
    extends:
      - 'powerpoint!OfficeExtension.ClientObject:class'
    package: powerpoint!
    children:
      - 'powerpoint!PowerPoint.Presentation#context:member'
      - 'powerpoint!PowerPoint.Presentation#insertSlidesFromBase64:member(1)'
      - 'powerpoint!PowerPoint.Presentation#load:member(1)'
      - 'powerpoint!PowerPoint.Presentation#load:member(2)'
      - 'powerpoint!PowerPoint.Presentation#load:member(3)'
      - 'powerpoint!PowerPoint.Presentation#slides:member'
      - 'powerpoint!PowerPoint.Presentation#title:member'
      - 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
  - uid: 'powerpoint!PowerPoint.Presentation#context:member'
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'powerpoint!PowerPoint.RequestContext:class'
  - uid: 'powerpoint!PowerPoint.Presentation#insertSlidesFromBase64:member(1)'
    summary: |-
      プレゼンテーションの指定したスライドを現在のプレゼンテーションに挿入します。

      \[[API set: POWERPOINTAPI β (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: 'insertSlidesFromBase64(base64File, options)'
    fullName: 'insertSlidesFromBase64(base64File, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertSlidesFromBase64(base64File: string, options?: PowerPoint.InsertSlideOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: base64File
          description: 元のプレゼンテーションファイルを表す base64 でエンコードされた文字列。
          type:
            - string
        - id: options
          description: どのスライドが挿入されるか、新しいスライドが配置される場所、およびどのプレゼンテーションの書式設定が使用されるかを定義するオプション。
          type:
            - 'powerpoint!PowerPoint.InsertSlideOptions:interface'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(1)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: PowerPoint.Interfaces.PresentationLoadOptions): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: options
          description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
          type:
            - 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(2)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.Presentation;'
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'powerpoint!PowerPoint.Presentation#load:member(3)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): PowerPoint.Presentation;
      return:
        type:
          - 'powerpoint!PowerPoint.Presentation:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'powerpoint!PowerPoint.Presentation#slides:member'
    summary: |-
      プレゼンテーション内のスライドの順序付けられたコレクションを返します。

      \[[API set: POWERPOINTAPI β (プレビューのみ)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: slides
    fullName: slides
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slides: PowerPoint.SlideCollection;'
      return:
        type:
          - 'powerpoint!PowerPoint.SlideCollection:class'
  - uid: 'powerpoint!PowerPoint.Presentation#title:member'
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: string;'
      return:
        type:
          - string
  - uid: 'powerpoint!PowerPoint.Presentation#toJSON:member(1)'
    summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の PowerPoint プレゼンテーションオブジェクトは API オブジェクトであるのに対し、 `toJSON` メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`PowerPoint.Interfaces.PresentationData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.PresentationData;'
      return:
        type:
          - 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
        description: ''
references:
  - uid: 'powerpoint!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'powerpoint!PowerPoint.RequestContext:class'
    name: RequestContext
  - uid: 'powerpoint!PowerPoint.InsertSlideOptions:interface'
    name: PowerPoint.InsertSlideOptions
  - uid: 'powerpoint!PowerPoint.Presentation:class'
    name: PowerPoint.Presentation
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationLoadOptions:interface'
    name: PowerPoint.Interfaces.PresentationLoadOptions
  - uid: 'powerpoint!PowerPoint.SlideCollection:class'
    name: PowerPoint.SlideCollection
  - uid: 'powerpoint!PowerPoint.Interfaces.PresentationData:interface'
    name: PowerPoint.Interfaces.PresentationData