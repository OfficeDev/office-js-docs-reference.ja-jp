### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Body:class'
    summary: |-
      <span data-ttu-id="3c044-101">文書またはセクションの本文を表します。</span><span class="sxs-lookup"><span data-stu-id="3c044-101">Represents the body of a document or a section.</span></span>

      <span data-ttu-id="3c044-102">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Body
    fullName: Word.Body
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Body#clear:member(1)'
      - 'word!Word.Body#contentControls:member'
      - 'word!Word.Body#context:member'
      - 'word!Word.Body#font:member'
      - 'word!Word.Body#getHtml:member(1)'
      - 'word!Word.Body#getOoxml:member(1)'
      - 'word!Word.Body#getRange:member(1)'
      - 'word!Word.Body#getRange:member(2)'
      - 'word!Word.Body#inlinePictures:member'
      - 'word!Word.Body#insertBreak:member(1)'
      - 'word!Word.Body#insertBreak:member(2)'
      - 'word!Word.Body#insertContentControl:member(1)'
      - 'word!Word.Body#insertFileFromBase64:member(1)'
      - 'word!Word.Body#insertFileFromBase64:member(2)'
      - 'word!Word.Body#insertHtml:member(1)'
      - 'word!Word.Body#insertHtml:member(2)'
      - 'word!Word.Body#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Body#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Body#insertOoxml:member(1)'
      - 'word!Word.Body#insertOoxml:member(2)'
      - 'word!Word.Body#insertParagraph:member(1)'
      - 'word!Word.Body#insertParagraph:member(2)'
      - 'word!Word.Body#insertTable:member(1)'
      - 'word!Word.Body#insertTable:member(2)'
      - 'word!Word.Body#insertText:member(1)'
      - 'word!Word.Body#insertText:member(2)'
      - 'word!Word.Body#lists:member'
      - 'word!Word.Body#load:member(1)'
      - 'word!Word.Body#load:member(2)'
      - 'word!Word.Body#load:member(3)'
      - 'word!Word.Body#paragraphs:member'
      - 'word!Word.Body#parentBody:member'
      - 'word!Word.Body#parentBodyOrNullObject:member'
      - 'word!Word.Body#parentContentControl:member'
      - 'word!Word.Body#parentContentControlOrNullObject:member'
      - 'word!Word.Body#parentSection:member'
      - 'word!Word.Body#parentSectionOrNullObject:member'
      - 'word!Word.Body#search:member(1)'
      - 'word!Word.Body#select:member(1)'
      - 'word!Word.Body#select:member(2)'
      - 'word!Word.Body#set:member(1)'
      - 'word!Word.Body#set:member(2)'
      - 'word!Word.Body#style:member'
      - 'word!Word.Body#styleBuiltIn:member'
      - 'word!Word.Body#tables:member'
      - 'word!Word.Body#text:member'
      - 'word!Word.Body#toJSON:member(1)'
      - 'word!Word.Body#track:member(1)'
      - 'word!Word.Body#type:member'
      - 'word!Word.Body#untrack:member(1)'
  - uid: 'word!Word.Body#clear:member(1)'
    summary: |-
      <span data-ttu-id="3c044-103">本文オブジェクトの内容を消去します。</span><span class="sxs-lookup"><span data-stu-id="3c044-103">Clears the contents of the body object.</span></span> <span data-ttu-id="3c044-104">ユーザーは、消去された内容を元に戻す操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="3c044-105">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-106">例</span><span class="sxs-lookup"><span data-stu-id="3c044-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to clear the contents of the body.
              body.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the body contents.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how the 
          // clear method can be used to clear the contents of a document.
          // https://aka.ms/sillystorywordaddin
          ```
  - uid: 'word!Word.Body#contentControls:member'
    summary: |-
      <span data-ttu-id="3c044-107">本文に含まれるリッチテキストコンテンツコントロールオブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-107">Gets the collection of rich text content control objects in the body.</span></span> <span data-ttu-id="3c044-108">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-108">Read-only.</span></span>

      <span data-ttu-id="3c044-109">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Body#context:member'
    summary: <span data-ttu-id="3c044-110">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="3c044-110">The request context associated with the object.</span></span> <span data-ttu-id="3c044-111">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="3c044-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Body#font:member'
    summary: |-
      <span data-ttu-id="3c044-112">本文のテキスト形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-112">Gets the text format of the body.</span></span> <span data-ttu-id="3c044-113">フォント名、サイズ、色、およびその他のプロパティを取得および設定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="3c044-113">Use this to get and set font name, size, color and other properties.</span></span> <span data-ttu-id="3c044-114">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-114">Read-only.</span></span>

      <span data-ttu-id="3c044-115">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-116">例</span><span class="sxs-lookup"><span data-stu-id="3c044-116">Examples</span></span>

          ```javascript
          // Get the style and the font size, font name, and font color properties on the body object.
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to load font and style information for the document body.
              context.load(body, 'font/size, font/name, font/color, style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  // Show the results of the load method. Here we show the
                  // property values on the body object.
                  var results = 'Font size: ' + body.font.size +
                                '; Font name: ' + body.font.name +
                                '; Font color: ' + body.font.color +
                                '; Body style: ' + body.style;

                  console.log(results);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="3c044-117">Body オブジェクトの HTML 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-117">Gets an HTML representation of the body object.</span></span> <span data-ttu-id="3c044-118">Web ページまたは HTML ビューアーでレンダリングされる場合、書式設定は、ドキュメントの書式設定と完全に一致しますが、完全に一致するとは限りません。</span><span class="sxs-lookup"><span data-stu-id="3c044-118">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="3c044-119">このメソッドは、異なるプラットフォーム (Windows、Mac など) の同じドキュメントに対して、まったく同じ HTML を返しません。</span><span class="sxs-lookup"><span data-stu-id="3c044-119">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="3c044-120">厳密な忠実性、または複数のプラットフォーム間で`Body.getOoxml()`の一貫性が必要な場合は、を使用して、返された XML を HTML に変換します。</span><span class="sxs-lookup"><span data-stu-id="3c044-120">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="3c044-121">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Body#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-122">例</span><span class="sxs-lookup"><span data-stu-id="3c044-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to get the HTML contents of the body.
              var bodyHTML = body.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body HTML contents: " + bodyHTML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="3c044-123">本文オブジェクトの OOXML (Office オープン XML) 表記を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-123">Gets the OOXML (Office Open XML) representation of the body object.</span></span>

      <span data-ttu-id="3c044-124">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Body#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-125">例</span><span class="sxs-lookup"><span data-stu-id="3c044-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to get the OOXML contents of the body.
              var bodyOOXML = body.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body OOXML contents: " + bodyOOXML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#getRange:member(1)'
    summary: |-
      <span data-ttu-id="3c044-126">範囲として、本文全体、あるいは本文の開始点または終了点を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-126">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="3c044-127">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="3c044-128">省略可能。</span><span class="sxs-lookup"><span data-stu-id="3c044-128">Optional.</span></span> <span data-ttu-id="3c044-129">範囲の場所には、'' 全体 ''、'' Start ''、'' End ''、'' After ''、'' Content '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-129">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - 'word!Word.RangeLocation:enum'
  - uid: 'word!Word.Body#getRange:member(2)'
    summary: |-
      <span data-ttu-id="3c044-130">範囲として、本文全体、あるいは本文の開始点または終了点を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-130">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="3c044-131">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="3c044-132">省略可能。</span><span class="sxs-lookup"><span data-stu-id="3c044-132">Optional.</span></span> <span data-ttu-id="3c044-133">範囲の場所には、'' 全体 ''、'' Start ''、'' End ''、'' After ''、'' Content '' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-133">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: 'word!Word.Body#inlinePictures:member'
    summary: |-
      <span data-ttu-id="3c044-134">本文にある InlinePicture オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-134">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="3c044-135">コレクションに浮動イメージは含まれません。</span><span class="sxs-lookup"><span data-stu-id="3c044-135">The collection does not include floating images.</span></span> <span data-ttu-id="3c044-136">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-136">Read-only.</span></span>

      <span data-ttu-id="3c044-137">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Body#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="3c044-138">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-138">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="3c044-139">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-139">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-140">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-141">例</span><span class="sxs-lookup"><span data-stu-id="3c044-141">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (ctx) {

              // Create a proxy object for the document body.
              var body = ctx.document.body;

              // Queue a command to insert a page break at the start of the document body.
              body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  console.log('Added a page break at the start of the document body.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="3c044-142">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-142">Required.</span></span> <span data-ttu-id="3c044-143">本文に追加する区切りの種類。</span><span class="sxs-lookup"><span data-stu-id="3c044-143">The break type to add to the body.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: <span data-ttu-id="3c044-144">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-144">Required.</span></span> <span data-ttu-id="3c044-145">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-145">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="3c044-146">メイン文書の指定した位置に、区切りを挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-146">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="3c044-147">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-147">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-148">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="3c044-149">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-149">Required.</span></span> <span data-ttu-id="3c044-150">本文に追加する区切りの種類。</span><span class="sxs-lookup"><span data-stu-id="3c044-150">The break type to add to the body.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="3c044-151">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-151">Required.</span></span> <span data-ttu-id="3c044-152">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-152">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="3c044-153">リッチ テキスト コンテンツ コントロールで本文オブジェクトをラップします。</span><span class="sxs-lookup"><span data-stu-id="3c044-153">Wraps the body object with a Rich Text content control.</span></span>

      <span data-ttu-id="3c044-154">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-155">例</span><span class="sxs-lookup"><span data-stu-id="3c044-155">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to wrap the body in a content control.
              body.insertContentControl();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped the body in a content control.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="3c044-156">文書を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-156">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="3c044-157">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-157">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-158">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-158">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-159">例</span><span class="sxs-lookup"><span data-stu-id="3c044-159">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert base64 encoded .docx at the beginning of the content body.
              // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.
              body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="3c044-160">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-160">Required.</span></span> <span data-ttu-id="3c044-161">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3c044-161">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="3c044-162">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-162">Required.</span></span> <span data-ttu-id="3c044-163">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-163">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="3c044-164">文書を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-164">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="3c044-165">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-165">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-166">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-166">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="3c044-167">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-167">Required.</span></span> <span data-ttu-id="3c044-168">.Docx ファイルの base64 でエンコードされたコンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3c044-168">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="3c044-169">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-169">Required.</span></span> <span data-ttu-id="3c044-170">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-170">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="3c044-171">指定した位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-171">Inserts HTML at the specified location.</span></span> <span data-ttu-id="3c044-172">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-172">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-173">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-173">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-174">例</span><span class="sxs-lookup"><span data-stu-id="3c044-174">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert HTML in to the beginning of the body.
              body.insertHtml(
                  '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="3c044-175">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-175">Required.</span></span> <span data-ttu-id="3c044-176">文書に挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="3c044-176">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="3c044-177">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-177">Required.</span></span> <span data-ttu-id="3c044-178">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-178">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="3c044-179">指定した位置に HTML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-179">Inserts HTML at the specified location.</span></span> <span data-ttu-id="3c044-180">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-180">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-181">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-181">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="3c044-182">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-182">Required.</span></span> <span data-ttu-id="3c044-183">文書に挿入する HTML。</span><span class="sxs-lookup"><span data-stu-id="3c044-183">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="3c044-184">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-184">Required.</span></span> <span data-ttu-id="3c044-185">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-185">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="3c044-186">画像を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-186">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="3c044-187">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-187">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-188">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-189">例</span><span class="sxs-lookup"><span data-stu-id="3c044-189">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert OOXML in to the beginning of the body.
              body.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml

          // The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="3c044-190">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-190">Required.</span></span> <span data-ttu-id="3c044-191">本文に挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="3c044-191">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="3c044-192">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-192">Required.</span></span> <span data-ttu-id="3c044-193">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-193">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="3c044-194">画像を本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-194">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="3c044-195">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-195">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-196">\[[Api set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-196">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="3c044-197">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-197">Required.</span></span> <span data-ttu-id="3c044-198">本文に挿入される base64 でエンコードされた画像。</span><span class="sxs-lookup"><span data-stu-id="3c044-198">The base64 encoded image to be inserted in the body.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="3c044-199">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-199">Required.</span></span> <span data-ttu-id="3c044-200">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-200">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="3c044-201">指定した位置に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-201">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="3c044-202">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-202">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-203">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="3c044-204">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-204">Required.</span></span> <span data-ttu-id="3c044-205">挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="3c044-205">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="3c044-206">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-206">Required.</span></span> <span data-ttu-id="3c044-207">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-207">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="3c044-208">指定した位置に OOXML を挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-208">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="3c044-209">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-209">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-210">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-210">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="3c044-211">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-211">Required.</span></span> <span data-ttu-id="3c044-212">挿入する OOXML を指定します。</span><span class="sxs-lookup"><span data-stu-id="3c044-212">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="3c044-213">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-213">Required.</span></span> <span data-ttu-id="3c044-214">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-214">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="3c044-215">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-215">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="3c044-216">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-216">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-217">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-217">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-218">例</span><span class="sxs-lookup"><span data-stu-id="3c044-218">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert the paragraph at the end of the document body.
              body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added at the end of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let paragraph = context.document.body.insertParagraph("Timeline", "End");
              paragraph.style = "Heading 2";
              let paragraph2 = context.document.body.insertParagraph("The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.", "End");
              paragraph2.style = "Normal";
              let paragraph3 = context.document.body.insertParagraph("Project Costs by Phase", "End");
              paragraph3.style = "Heading 2";
              // Note a content control with the title of "ProjectCosts" is added. Content will be replaced later.
              let paragraph4 = context.document.body.insertParagraph("<Add Project Costs Here>", "End");
              paragraph4.style = "Normal";
              paragraph4.font.highlightColor = "#FFFF00";
              let contentControl = paragraph4.insertContentControl();
              contentControl.title = "ProjectCosts";
              let paragraph5 = context.document.body.insertParagraph("Project Team", "End");
              paragraph5.style = "Heading 2";
              paragraph5.font.highlightColor = "#FFFFFF";
              let paragraph6 = context.document.body.insertParagraph("Terms of Work", "End");
              paragraph6.style = "Heading 1";
              let paragraph7 = context.document.body.insertParagraph("Contractor shall provide the Services and Deliverable(s) as follows:", "End");
              paragraph7.style = "Normal";
              let paragraph8 = context.document.body.insertParagraph("Out-of-Pocket Expenses / Invoice Procedures", "End");
              paragraph8.style = "Heading 2";
              let paragraph9 = context.document.body.insertParagraph("Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.", "End");
              paragraph9.style = "Normal";
              // Insert a page break at the end of the document.
              context.document.body.insertBreak("Page", "End");

              await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="3c044-219">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-219">Required.</span></span> <span data-ttu-id="3c044-220">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="3c044-220">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="3c044-221">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-221">Required.</span></span> <span data-ttu-id="3c044-222">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-222">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="3c044-223">指定した位置に、段落を挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-223">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="3c044-224">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-224">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-225">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-225">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="3c044-226">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-226">Required.</span></span> <span data-ttu-id="3c044-227">挿入する段落テキスト。</span><span class="sxs-lookup"><span data-stu-id="3c044-227">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="3c044-228">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-228">Required.</span></span> <span data-ttu-id="3c044-229">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-229">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#insertTable:member(1)'
    summary: |-
      <span data-ttu-id="3c044-230">指定した数の行と列を含むテーブルを挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-230">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="3c044-231">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-231">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-232">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-232">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-233">例</span><span class="sxs-lookup"><span data-stu-id="3c044-233">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Use a two-dimensional array to hold the initial table values.
            let data = [
              ["Tokyo", "Beijing", "Seattle"],
              ["Apple", "Orange", "Pineapple"]
            ];
            let table = context.document.body.insertTable(2, 3, "Start", data);
            table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;
            table.styleFirstColumn = false;

            await context.sync();
          });
          ```
      parameters:
        - id: rowCount
          description: <span data-ttu-id="3c044-234">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-234">Required.</span></span> <span data-ttu-id="3c044-235">表の行数。</span><span class="sxs-lookup"><span data-stu-id="3c044-235">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="3c044-236">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-236">Required.</span></span> <span data-ttu-id="3c044-237">表の列数。</span><span class="sxs-lookup"><span data-stu-id="3c044-237">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="3c044-238">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-238">Required.</span></span> <span data-ttu-id="3c044-239">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-239">The value can be 'Start' or 'End'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
        - id: values
          description: <span data-ttu-id="3c044-240">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="3c044-240">Optional 2D array.</span></span> <span data-ttu-id="3c044-241">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="3c044-241">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: 'word!Word.Body#insertTable:member(2)'
    summary: |-
      <span data-ttu-id="3c044-242">指定した数の行と列を含むテーブルを挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-242">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="3c044-243">insertLocation の値には、'Start' または 'End' を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-243">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="3c044-244">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-244">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="3c044-245">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-245">Required.</span></span> <span data-ttu-id="3c044-246">表の行数。</span><span class="sxs-lookup"><span data-stu-id="3c044-246">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="3c044-247">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-247">Required.</span></span> <span data-ttu-id="3c044-248">表の列数。</span><span class="sxs-lookup"><span data-stu-id="3c044-248">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="3c044-249">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-249">Required.</span></span> <span data-ttu-id="3c044-250">有効な値は、'Start' または 'End' です。</span><span class="sxs-lookup"><span data-stu-id="3c044-250">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: <span data-ttu-id="3c044-251">省略可能な 2 次元配列。</span><span class="sxs-lookup"><span data-stu-id="3c044-251">Optional 2D array.</span></span> <span data-ttu-id="3c044-252">対応する文字列が配列で指定されている場合、セルに設定されます。</span><span class="sxs-lookup"><span data-stu-id="3c044-252">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: 'word!Word.Body#insertText:member(1)'
    summary: |-
      <span data-ttu-id="3c044-253">テキストを本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-253">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="3c044-254">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-254">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-255">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-256">例</span><span class="sxs-lookup"><span data-stu-id="3c044-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to insert text in to the beginning of the body.
              body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="3c044-257">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-257">Required.</span></span> <span data-ttu-id="3c044-258">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="3c044-258">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="3c044-259">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-259">Required.</span></span> <span data-ttu-id="3c044-260">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-260">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Body#insertText:member(2)'
    summary: |-
      <span data-ttu-id="3c044-261">テキストを本文の指定された位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-261">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="3c044-262">insertLocation 値には、'Replace'、'Start'、'End' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-262">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="3c044-263">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="3c044-264">必須です。</span><span class="sxs-lookup"><span data-stu-id="3c044-264">Required.</span></span> <span data-ttu-id="3c044-265">挿入するテキスト。</span><span class="sxs-lookup"><span data-stu-id="3c044-265">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="3c044-266">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-266">Required.</span></span> <span data-ttu-id="3c044-267">値には、''Replace''、''Start''、''End'' のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-267">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Body#lists:member'
    summary: |-
      <span data-ttu-id="3c044-268">本文に含まれるリスト オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-268">Gets the collection of list objects in the body.</span></span> <span data-ttu-id="3c044-269">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="3c044-269">Read-only.</span></span>

      <span data-ttu-id="3c044-270">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - 'word!Word.ListCollection:class'
  - uid: 'word!Word.Body#load:member(1)'
    summary: <span data-ttu-id="3c044-271">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3c044-271">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3c044-272">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c044-272">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="3c044-273">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3c044-273">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3c044-274">`load(option?: string | string[]): Word.Body`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="3c044-274">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3c044-275">`load(option?: { select?: string; expand?: string; }): Word.Body`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3c044-275">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3c044-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="3c044-277">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="3c044-277">It is similar to the preceding signature.</span></span> <span data-ttu-id="3c044-278">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3c044-278">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3c044-279">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3c044-279">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3c044-280">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="3c044-280">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.BodyLoadOptions:interface'
  - uid: 'word!Word.Body#load:member(2)'
    summary: <span data-ttu-id="3c044-281">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3c044-281">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3c044-282">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c044-282">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3c044-283">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="3c044-283">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Body#load:member(3)'
    summary: <span data-ttu-id="3c044-284">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3c044-284">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3c044-285">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c044-285">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="3c044-286">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3c044-286">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Body#paragraphs:member'
    summary: |-
      <span data-ttu-id="3c044-287">本文に含まれる paragraph オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-287">Gets the collection of paragraph objects in the body.</span></span> <span data-ttu-id="3c044-288">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-288">Read-only.</span></span>

      <span data-ttu-id="3c044-289">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - 'word!Word.ParagraphCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-290">例</span><span class="sxs-lookup"><span data-stu-id="3c044-290">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
  - uid: 'word!Word.Body#parentBody:member'
    summary: |-
      <span data-ttu-id="3c044-p167">本文の親の本文を取得します。たとえば、テーブル セル本文の親本文にはヘッダーを指定できます。親本文がない場合は、スローします。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="3c044-p167">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="3c044-295">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-295">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Body#parentBodyOrNullObject:member'
    summary: |-
      <span data-ttu-id="3c044-p168">本文の親の本文を取得します。たとえば、テーブル セル本文の親本文にはヘッダーを指定できます。親本文がない場合は、null オブジェクトを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="3c044-p168">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="3c044-300">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-300">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBodyOrNullObject
    fullName: parentBodyOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBodyOrNullObject: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Body#parentContentControl:member'
    summary: |-
      <span data-ttu-id="3c044-301">本文を含むコンテンツ コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-301">Gets the content control that contains the body.</span></span> <span data-ttu-id="3c044-302">親コンテンツコントロールがない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="3c044-302">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="3c044-303">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-303">Read-only.</span></span>

      <span data-ttu-id="3c044-304">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-304">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Body#parentContentControlOrNullObject:member'
    summary: |-
      <span data-ttu-id="3c044-305">本文を含むコンテンツ コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-305">Gets the content control that contains the body.</span></span> <span data-ttu-id="3c044-306">親コンテンツコントロールがない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3c044-306">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="3c044-307">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-307">Read-only.</span></span>

      <span data-ttu-id="3c044-308">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-308">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Body#parentSection:member'
    summary: |-
      <span data-ttu-id="3c044-309">本文の親セクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-309">Gets the parent section of the body.</span></span> <span data-ttu-id="3c044-310">親セクションが存在しない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="3c044-310">Throws if there isn't a parent section.</span></span> <span data-ttu-id="3c044-311">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-311">Read-only.</span></span>

      <span data-ttu-id="3c044-312">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-312">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSection
    fullName: parentSection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSection: Word.Section;'
      return:
        type:
          - 'word!Word.Section:class'
  - uid: 'word!Word.Body#parentSectionOrNullObject:member'
    summary: |-
      <span data-ttu-id="3c044-313">本文の親セクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-313">Gets the parent section of the body.</span></span> <span data-ttu-id="3c044-314">親セクションが存在しない場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3c044-314">Returns a null object if there isn't a parent section.</span></span> <span data-ttu-id="3c044-315">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-315">Read-only.</span></span>

      <span data-ttu-id="3c044-316">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-316">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSectionOrNullObject
    fullName: parentSectionOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionOrNullObject: Word.Section;'
      return:
        type:
          - 'word!Word.Section:class'
  - uid: 'word!Word.Body#search:member(1)'
    summary: |-
      <span data-ttu-id="3c044-317">Body オブジェクトのスコープで、指定された SearchOptions を使用して検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="3c044-317">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="3c044-318">検索結果は、範囲オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="3c044-318">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="3c044-319">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-320">例</span><span class="sxs-lookup"><span data-stu-id="3c044-320">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to search the document.
              var searchResults = context.document.body.search('video', {matchCase: false});

              // Queue a command to load the results.
              context.load(searchResults, 'text, font');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  var results = 'Found count: ' + searchResults.items.length +
                                '; we highlighted the results.';

                  // Queue a command to change the font for each found item.
                  for (var i = 0; i < searchResults.items.length; i++) {
                    searchResults.items[i].font.color = '#FF0000'    // Change color to Red
                    searchResults.items[i].font.highlightColor = '#FFFF00';
                    searchResults.items[i].font.bold = true;
                  }

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log(results);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
            let results = context.document.body.search("Online");
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "yellow";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes
            // (i.e. use wildcards).
            let results = context.document.body.search("$*.[0-9][0-9]", { matchWildcards: true });
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "red";
              results.items[i].font.color = "white";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="3c044-321">必須。</span><span class="sxs-lookup"><span data-stu-id="3c044-321">Required.</span></span> <span data-ttu-id="3c044-322">検索テキスト。</span><span class="sxs-lookup"><span data-stu-id="3c044-322">The search text.</span></span> <span data-ttu-id="3c044-323">最大255文字を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3c044-323">Can be a maximum of 255 characters.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="3c044-324">省略可能。</span><span class="sxs-lookup"><span data-stu-id="3c044-324">Optional.</span></span> <span data-ttu-id="3c044-325">検索のオプション。</span><span class="sxs-lookup"><span data-stu-id="3c044-325">Options for the search.</span></span>
          type:
            - 'word!Word.Body#search~0:complex'
  - uid: 'word!Word.Body#select:member(1)'
    summary: |-
      <span data-ttu-id="3c044-326">本文を選択し、その本文に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="3c044-326">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="3c044-327">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-327">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-328">例</span><span class="sxs-lookup"><span data-stu-id="3c044-328">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to select the document body. The Word UI will
              // move to the selected document body.
              body.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="3c044-329">省略可能。</span><span class="sxs-lookup"><span data-stu-id="3c044-329">Optional.</span></span> <span data-ttu-id="3c044-330">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="3c044-330">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="3c044-331">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="3c044-331">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Body#select:member(2)'
    summary: |-
      <span data-ttu-id="3c044-332">本文を選択し、その本文に Word の UI を移動します。</span><span class="sxs-lookup"><span data-stu-id="3c044-332">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="3c044-333">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-333">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="3c044-334">省略可能。</span><span class="sxs-lookup"><span data-stu-id="3c044-334">Optional.</span></span> <span data-ttu-id="3c044-335">選択モードは、''Select''、''Start''、''End'' のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="3c044-335">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="3c044-336">''Select'' が既定値です。</span><span class="sxs-lookup"><span data-stu-id="3c044-336">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Body#set:member(1)'
    summary: '<span data-ttu-id="3c044-337">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3c044-337">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="3c044-338">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="3c044-338">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="3c044-339">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="3c044-339">This method has the following additional signature:</span></span>

      `set(properties: Word.Body): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="3c044-340">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3c044-340">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.BodyUpdateData:interface'
        - id: options
          description: <span data-ttu-id="3c044-341">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="3c044-341">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Body#set:member(2)'
    summary: '<span data-ttu-id="3c044-342">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3c044-342">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Body): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Body:class'
  - uid: 'word!Word.Body#style:member'
    summary: |-
      <span data-ttu-id="3c044-p179">本文のスタイル名を取得または設定します。カスタム スタイルとローカライズされたスタイルの名前には、このプロパティを使用します。ロケール間で移植可能な組み込みスタイルを使用するには、"styleBuiltIn" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3c044-p179">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="3c044-346">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-346">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Body#styleBuiltIn:member'
    summary: |-
      <span data-ttu-id="3c044-p180">本文の組み込みスタイル名を取得または設定します。ロケール間で移植可能な組み込みスタイルの場合は、このプロパティを使用します。カスタム スタイルまたはローカライズされたスタイルの名前を使用するには、"style" プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3c044-p180">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="3c044-350">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - 'word!Word.Body#styleBuiltIn~0:complex'
  - uid: 'word!Word.Body#tables:member'
    summary: |-
      <span data-ttu-id="3c044-351">本文に含まれるテーブル オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-351">Gets the collection of table objects in the body.</span></span> <span data-ttu-id="3c044-352">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-352">Read-only.</span></span>

      <span data-ttu-id="3c044-353">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-353">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - 'word!Word.TableCollection:class'
  - uid: 'word!Word.Body#text:member'
    summary: |-
      <span data-ttu-id="3c044-354">本文のテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-354">Gets the text of the body.</span></span> <span data-ttu-id="3c044-355">insertText メソッドを使用して、テキストを挿入します。</span><span class="sxs-lookup"><span data-stu-id="3c044-355">Use the insertText method to insert text.</span></span> <span data-ttu-id="3c044-356">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3c044-356">Read-only.</span></span>

      <span data-ttu-id="3c044-357">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-357">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3c044-358">例</span><span class="sxs-lookup"><span data-stu-id="3c044-358">Examples</span></span>

          ```javascript
          // Get the text property on the body object
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a command to load the text in document body.
              context.load(body, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body contents: " + body.text);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Body#toJSON:member(1)'
    summary: '<span data-ttu-id="3c044-359">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3c044-359">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3c044-360">.</span><span class="sxs-lookup"><span data-stu-id="3c044-360"></span></span> <span data-ttu-id="3c044-361">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3c044-361"></span></span><!-- --><span data-ttu-id="3c044-362">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Word のオブジェクトは API オブジェクトであるのに対し`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Word.Interfaces.BodyData`</span><span class="sxs-lookup"><span data-stu-id="3c044-362">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Body object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BodyData`</span></span><!-- --><span data-ttu-id="3c044-363">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="3c044-363">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.BodyData;'
      return:
        type:
          - 'word!Word.Interfaces.BodyData:interface'
        description: ''
  - uid: 'word!Word.Body#track:member(1)'
    summary: '<span data-ttu-id="3c044-364">ドキュメントの環境変更に基づいて自動的に調整する目的でオブジェクトを追跡します。</span><span class="sxs-lookup"><span data-stu-id="3c044-364">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="3c044-365">これは context.trackedObjects.add(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="3c044-365">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="3c044-366">".sync" 呼び出し間で、かつ ".run" バッチの連続実行の外でこのオブジェクトを使用しているとき、オブジェクトであるプロパティを設定したか、あるメソッドを呼び出したときに "InvalidObjectPath" エラーが表示される場合、オブジェクトを最初に作成したときに、追跡対象オブジェクトの集まりにそのオブジェクトを追加しておく必要がありました。</span><span class="sxs-lookup"><span data-stu-id="3c044-366">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
  - uid: 'word!Word.Body#type:member'
    summary: |-
      <span data-ttu-id="3c044-367">本文の種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c044-367">Gets the type of the body.</span></span> <span data-ttu-id="3c044-368">種類は、'MainDoc'、'Section'、'Header'、'Footer'、または 'TableCell' にできます。</span><span class="sxs-lookup"><span data-stu-id="3c044-368">The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'.</span></span> <span data-ttu-id="3c044-369">読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="3c044-369">Read-only.</span></span>

      <span data-ttu-id="3c044-370">\[[Api set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3c044-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
      return:
        type:
          - 'word!Word.Body#type~0:complex'
  - uid: 'word!Word.Body#untrack:member(1)'
    summary: '<span data-ttu-id="3c044-371">前に追跡されていた場合、このオブジェクトに関連付けられているメモリを解放します。</span><span class="sxs-lookup"><span data-stu-id="3c044-371">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="3c044-372">これは context.trackedObjects.remove(thisObject) 呼び出しの省略形です。</span><span class="sxs-lookup"><span data-stu-id="3c044-372">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="3c044-373">追跡対象オブジェクトが多いとホスト アプリケーションの動作が遅くなります。追加したオブジェクトが不要になったら、必ずそれを解放してください。</span><span class="sxs-lookup"><span data-stu-id="3c044-373">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="3c044-374">メモリ リリースを有効にするには、"context.sync()" を先に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c044-374">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Body#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Body#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.RangeLocation:enum'
    name: Word.RangeLocation
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Table:class'
    name: Word.Table
  - uid: 'word!Word.ListCollection:class'
    name: Word.ListCollection
  - uid: 'word!Word.Body:class'
    name: Word.Body
  - uid: 'word!Word.Interfaces.BodyLoadOptions:interface'
    name: Word.Interfaces.BodyLoadOptions
  - uid: 'word!Word.ParagraphCollection:class'
    name: Word.ParagraphCollection
  - uid: 'word!Word.Section:class'
    name: Word.Section
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.Body#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.BodyUpdateData:interface'
    name: Interfaces.BodyUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Body#styleBuiltIn~0:complex'
    name: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    fullName: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    spec.typeScript:
      - uid: 'word!Word.Style:enum'
        name: Word.Style
        fullName: Word.Style
      - name: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
        fullName: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
  - uid: 'word!Word.TableCollection:class'
    name: Word.TableCollection
  - uid: 'word!Word.Interfaces.BodyData:interface'
    name: Word.Interfaces.BodyData
  - uid: 'word!Word.Body#type~0:complex'
    name: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
    fullName: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
    spec.typeScript:
      - uid: 'word!Word.BodyType:enum'
        name: Word.BodyType
        fullName: Word.BodyType
      - name: ' | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"'
        fullName: ' | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"'