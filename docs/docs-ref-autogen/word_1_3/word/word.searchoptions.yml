### YamlMime:UniversalReference
items:
  - uid: word.Word.SearchOptions
    summary: |-
      <span data-ttu-id="f2473-101">検索操作に含めるオプションを指定します。</span><span class="sxs-lookup"><span data-stu-id="f2473-101">Specifies the options to be included in a search operation.</span></span>

      <span data-ttu-id="f2473-102">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.SearchOptions
    fullName: Word.SearchOptions
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.SearchOptions.context
      - word.Word.SearchOptions.ignorePunct
      - word.Word.SearchOptions.ignoreSpace
      - word.Word.SearchOptions.load
      - word.Word.SearchOptions.load_1
      - word.Word.SearchOptions.load_2
      - word.Word.SearchOptions.matchCase
      - word.Word.SearchOptions.matchPrefix
      - word.Word.SearchOptions.matchSuffix
      - word.Word.SearchOptions.matchWholeWord
      - word.Word.SearchOptions.matchWildcards
      - word.Word.SearchOptions.matchWildCards
      - word.Word.SearchOptions.newObject
      - word.Word.SearchOptions.set
      - word.Word.SearchOptions.set_1
      - word.Word.SearchOptions.toJSON
  - uid: word.Word.SearchOptions.context
    summary: <span data-ttu-id="f2473-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f2473-103">The request context associated with the object.</span></span> <span data-ttu-id="f2473-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="f2473-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.SearchOptions.ignorePunct
    summary: |-
      <span data-ttu-id="f2473-p102">単語間のすべての区切り記号を無視するかどうかを示す値を取得または設定します。[検索と置換] ダイアログ ボックスの [句読点を無視する] チェック ボックスに相当します。</span><span class="sxs-lookup"><span data-stu-id="f2473-p102">Gets or sets a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="f2473-107">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-107">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: ignorePunct
    fullName: ignorePunct
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ignorePunct: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.ignoreSpace
    summary: |-
      <span data-ttu-id="f2473-108">単語間のすべての空白文字を無視するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2473-108">Gets or sets a value that indicates whether to ignore all whitespace between words.</span></span> <span data-ttu-id="f2473-109">[検索と置換] ダイアログボックスの [空白文字を無視する] チェックボックスに対応します。</span><span class="sxs-lookup"><span data-stu-id="f2473-109">Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="f2473-110">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: ignoreSpace
    fullName: ignoreSpace
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ignoreSpace: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.load
    summary: <span data-ttu-id="f2473-111">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f2473-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f2473-112">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2473-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="f2473-113">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f2473-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="f2473-114">`load(option?: string | string[]): Word.SearchOptions`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="f2473-114">`load(option?: string | string[]): Word.SearchOptions` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="f2473-115">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="f2473-115">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="f2473-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="f2473-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions` - Only available on collection types.</span></span> <span data-ttu-id="f2473-117">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="f2473-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="f2473-118">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="f2473-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f2473-119">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="f2473-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f2473-120">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="f2473-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="f2473-121">例</span><span class="sxs-lookup"><span data-stu-id="f2473-121">Examples</span></span>

      ```javascript
      // Ignore punctuation search
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document and ignore punctuation.
          var searchResults = context.document.body.search('video you', {ignorePunct: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search based on a prefix
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document based on a prefix.
          var searchResults = context.document.body.search('vid', {matchPrefix: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search based on a suffix
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Queue a command to search the document for any string of characters after 'ly'.
          var searchResults = context.document.body.search('ly', {matchSuffix: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'orange';
                  searchResults.items[i].font.highlightColor = 'black';
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
      ```javascript
      // Search using a wildcard
      // Run a batch operation against the Word object model.
      Word.run(function (context) {
          
          // Queue a command to search the document with a wildcard
          // for any string of characters that starts with 'to' and ends with 'n'.
          var searchResults = context.document.body.search('to*n', {matchWildCards: true});

          // Queue a command to load the search results and get the font property values.
          context.load(searchResults, 'font');
          
          // Synchronize the document state by executing the queued commands, 
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              console.log('Found count: ' + searchResults.items.length);

              // Queue a set of commands to change the font for each found item.
              for (var i = 0; i < searchResults.items.length; i++) {
                  searchResults.items[i].font.color = 'purple';
                  searchResults.items[i].font.highlightColor = 'pink';
                  searchResults.items[i].font.bold = true;
              }
              
              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync();
          });  
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SearchOptionsLoadOptions): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.SearchOptionsLoadOptions
  - uid: word.Word.SearchOptions.load_1
    summary: <span data-ttu-id="f2473-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f2473-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f2473-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2473-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f2473-124">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="f2473-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: word.Word.SearchOptions.load_2
    summary: <span data-ttu-id="f2473-125">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f2473-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f2473-126">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2473-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="f2473-127">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="f2473-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.SearchOptions.matchCase
    summary: |-
      <span data-ttu-id="f2473-128">大文字と小文字を区別する検索を実行するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2473-128">Gets or sets a value that indicates whether to perform a case sensitive search.</span></span> <span data-ttu-id="f2473-129">[検索と置換] ダイアログボックスの [大文字と小文字を区別する] チェックボックスに対応します。</span><span class="sxs-lookup"><span data-stu-id="f2473-129">Corresponds to the Match case check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="f2473-130">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchPrefix
    summary: |-
      <span data-ttu-id="f2473-p109">検索文字列で始まる単語と一致するかどうかを示す値を取得または設定します。[検索と置換] ダイアログ ボックスの [接頭辞に一致する] チェック ボックスに相当します。</span><span class="sxs-lookup"><span data-stu-id="f2473-p109">Gets or sets a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="f2473-133">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchPrefix
    fullName: matchPrefix
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchPrefix: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchSuffix
    summary: |-
      <span data-ttu-id="f2473-p110">検索文字列で終わる語句と一致するかどうかを示す値を取得または設定します。[検索と置換] ダイアログ ボックスの [接尾辞に一致する] に相当します。</span><span class="sxs-lookup"><span data-stu-id="f2473-p110">Gets or sets a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="f2473-136">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchSuffix
    fullName: matchSuffix
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchSuffix: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWholeWord
    summary: |-
      <span data-ttu-id="f2473-p111">長い単語の一部ではなく、単語全体のみを検索操作の対象にするかどうかを示す値を取得または設定します。[検索と置換] ダイアログ ボックスの [完全に一致する単語だけを検索する] チェック ボックスに相当します。</span><span class="sxs-lookup"><span data-stu-id="f2473-p111">Gets or sets a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="f2473-139">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchWholeWord
    fullName: matchWholeWord
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWholeWord: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWildcards
    summary: |-
      <span data-ttu-id="f2473-p112">特殊な検索演算子を使用して検索を実行するかどうかを示す値を取得または設定します。[検索と置換] ダイアログ ボックスの [ワイルドカードを使用する] チェック ボックスに相当します。</span><span class="sxs-lookup"><span data-stu-id="f2473-p112">Gets or sets a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.</span></span>

      <span data-ttu-id="f2473-142">\[[Api set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2473-142">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: matchWildcards
    fullName: matchWildcards
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWildcards: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.matchWildCards
    name: matchWildCards
    fullName: matchWildCards
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchWildCards: boolean;'
      return:
        type:
          - boolean
  - uid: word.Word.SearchOptions.newObject
    summary: <span data-ttu-id="f2473-143">Word SearchOptions オブジェクトの新しいインスタンスを作成する</span><span class="sxs-lookup"><span data-stu-id="f2473-143">Create a new instance of Word.SearchOptions object</span></span>
    name: newObject(context)
    fullName: newObject(context)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static newObject(context: OfficeExtension.ClientRequestContext): Word.SearchOptions;'
      return:
        type:
          - word.Word.SearchOptions
        description: ''
      parameters:
        - id: context
          description: ''
          type:
            - OfficeExtension.ClientRequestContext
  - uid: word.Word.SearchOptions.set
    summary: '<span data-ttu-id="f2473-144">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2473-144">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="f2473-145">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="f2473-145">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="f2473-146">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="f2473-146">This method has the following additional signature:</span></span>

      `set(properties: Word.SearchOptions): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SearchOptionsUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="f2473-147">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2473-147">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.SearchOptionsUpdateData
        - id: options
          description: <span data-ttu-id="f2473-148">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="f2473-148">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: word.Word.SearchOptions.set_1
    summary: '<span data-ttu-id="f2473-149">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2473-149">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.SearchOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.SearchOptions
  - uid: word.Word.SearchOptions.toJSON
    summary: '<span data-ttu-id="f2473-150">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f2473-150">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f2473-151">.</span><span class="sxs-lookup"><span data-stu-id="f2473-151"></span></span> <span data-ttu-id="f2473-152">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f2473-152"></span></span><!-- --><span data-ttu-id="f2473-153">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の単語の SearchOptions オブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Word.Interfaces.SearchOptionsData`</span><span class="sxs-lookup"><span data-stu-id="f2473-153">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.SearchOptions object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SearchOptionsData`</span></span><!-- --><span data-ttu-id="f2473-154">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="f2473-154">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SearchOptionsData;'
      return:
        type:
          - word.Word.Interfaces.SearchOptionsData
        description: ''