### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartAxis
    summary: |-
      グラフの 1 つの軸を表します。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartAxis
    fullName: Excel.ChartAxis
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartAxis.alignment
      - excel.Excel.ChartAxis.axisGroup
      - excel.Excel.ChartAxis.baseTimeUnit
      - excel.Excel.ChartAxis.categoryType
      - excel.Excel.ChartAxis.context
      - excel.Excel.ChartAxis.customDisplayUnit
      - excel.Excel.ChartAxis.displayUnit
      - excel.Excel.ChartAxis.format
      - excel.Excel.ChartAxis.height
      - excel.Excel.ChartAxis.isBetweenCategories
      - excel.Excel.ChartAxis.left
      - excel.Excel.ChartAxis.load
      - excel.Excel.ChartAxis.load_1
      - excel.Excel.ChartAxis.load_2
      - excel.Excel.ChartAxis.logBase
      - excel.Excel.ChartAxis.majorGridlines
      - excel.Excel.ChartAxis.majorTickMark
      - excel.Excel.ChartAxis.majorTimeUnitScale
      - excel.Excel.ChartAxis.majorUnit
      - excel.Excel.ChartAxis.maximum
      - excel.Excel.ChartAxis.minimum
      - excel.Excel.ChartAxis.minorGridlines
      - excel.Excel.ChartAxis.minorTickMark
      - excel.Excel.ChartAxis.minorTimeUnitScale
      - excel.Excel.ChartAxis.minorUnit
      - excel.Excel.ChartAxis.multiLevel
      - excel.Excel.ChartAxis.numberFormat
      - excel.Excel.ChartAxis.offset
      - excel.Excel.ChartAxis.position
      - excel.Excel.ChartAxis.positionAt
      - excel.Excel.ChartAxis.reversePlotOrder
      - excel.Excel.ChartAxis.scaleType
      - excel.Excel.ChartAxis.set
      - excel.Excel.ChartAxis.set_1
      - excel.Excel.ChartAxis.setCategoryNames
      - excel.Excel.ChartAxis.setCustomDisplayUnit
      - excel.Excel.ChartAxis.setPositionAt
      - excel.Excel.ChartAxis.showDisplayUnitLabel
      - excel.Excel.ChartAxis.textOrientation
      - excel.Excel.ChartAxis.tickLabelPosition
      - excel.Excel.ChartAxis.tickLabelSpacing
      - excel.Excel.ChartAxis.tickMarkSpacing
      - excel.Excel.ChartAxis.title
      - excel.Excel.ChartAxis.toJSON
      - excel.Excel.ChartAxis.top
      - excel.Excel.ChartAxis.type
      - excel.Excel.ChartAxis.visible
      - excel.Excel.ChartAxis.width
  - uid: excel.Excel.ChartAxis.alignment
    summary: |-
      指定した軸の目盛ラベルの配置を表します。 詳細については、「ChartTextHorizontalAlignment」を参照してください。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Excel.ChartTickLabelAlignment | "Center" | "Left" | "Right";'
      return:
        type:
          - Excel.ChartTickLabelAlignment | "Center" | "Left" | "Right"
  - uid: excel.Excel.ChartAxis.axisGroup
    summary: |-
      指定した軸に対応するグループを表します。 詳細については、「ChartAxisGroup」を参照してください。 読み取り専用です。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: axisGroup
    fullName: axisGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
      return:
        type:
          - Excel.ChartAxisGroup | "Primary" | "Secondary"
  - uid: excel.Excel.ChartAxis.baseTimeUnit
    summary: |-
      指定された項目軸の基本単位を返すか設定します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: baseTimeUnit
    fullName: baseTimeUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'baseTimeUnit: Excel.ChartAxisTimeUnit | "Days" | "Months" | "Years";'
      return:
        type:
          - Excel.ChartAxisTimeUnit | "Days" | "Months" | "Years"
  - uid: excel.Excel.ChartAxis.categoryType
    summary: |-
      項目軸の種類を返すか設定します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: categoryType
    fullName: categoryType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'categoryType: Excel.ChartAxisCategoryType | "Automatic" | "TextAxis" | "DateAxis";'
      return:
        type:
          - Excel.ChartAxisCategoryType | "Automatic" | "TextAxis" | "DateAxis"
  - uid: excel.Excel.ChartAxis.context
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartAxis.customDisplayUnit
    summary: |-
      カスタム軸の表示単位の値を表します。 読み取り専用です。 このプロパティを設定するには、SetCustomDisplayUnit(double) メソッドを使用してください。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: customDisplayUnit
    fullName: customDisplayUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly customDisplayUnit: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.displayUnit
    summary: |-
      軸の表示単位を表します。 詳細については、「ChartAxisDisplayUnit」を参照してください。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: displayUnit
    fullName: displayUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'displayUnit: Excel.ChartAxisDisplayUnit | "None" | "Hundreds" | "Thousands" | "TenThousands" | "HundredThousands" | "Millions" | "TenMillions" | "HundredMillions" | "Billions" | "Trillions" | "Custom";'
      return:
        type:
          - Excel.ChartAxisDisplayUnit | "None" | "Hundreds" | "Thousands" | "TenThousands" | "HundredThousands" | "Millions" | "TenMillions" | "HundredMillions" | "Billions" | "Trillions" | "Custom"
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              let chart = sheet.charts.getItemAt(0);
              let categoryAxis = chart.axes.categoryAxis;
              let valueAxis = chart.axes.valueAxis;

              // Load to get display unit.
              valueAxis.load("displayUnit");

              await context.sync();

              console.log("The vertical axis display unit is: " + valueAxis.displayUnit);
          });
          ```
  - uid: excel.Excel.ChartAxis.format
    summary: |-
      グラフオブジェクトの書式を表します。これには、行とフォントの書式設定が含まれます。 読み取り専用です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAxisFormat;'
      return:
        type:
          - excel.Excel.ChartAxisFormat
  - uid: excel.Excel.ChartAxis.height
    summary: |-
      グラフ軸の高さ (ポイント数) を表します。 軸が非表示の場合は Null。 読み取り専用です。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.isBetweenCategories
    summary: |-
      項目の境界で数値軸が項目軸と交差するかどうかを表します。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isBetweenCategories
    fullName: isBetweenCategories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isBetweenCategories: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartAxis.left
    summary: |-
      軸の左端からグラフ エリアの左端までの距離 (ポイント数) を表します。 軸が非表示の場合は Null。 読み取り専用です。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.load
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。
    remarks: |-
      このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。

      `load(option?: string | string[]): Excel.ChartAxis`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。

      `load(option?: { select?: string; expand?: string; }): Excel.ChartAxis`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartAxis`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 Top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartAxisLoadOptions): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartAxisLoadOptions
  - uid: excel.Excel.ChartAxis.load_1
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: |-


          #### <a name="examples"></a>例

          ```javascript
          // Get the maximum of Chart Axis from Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var axis = chart.axes.valueAxis;
              axis.load('maximum');
              return ctx.sync().then(function() {
                      console.log(axis.maximum);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set the maximum, minimum, majorunit, minorunit of valueaxis. 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.axes.valueAxis.maximum = 5;
              chart.axes.valueAxis.minimum = 0;
              chart.axes.valueAxis.majorUnit = 1;
              chart.axes.valueAxis.minorUnit = 0.2;
              return ctx.sync().then(function() {
                      console.log("Axis Settings Changed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartAxis.load_2
    summary: オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartAxis;'
      return:
        type:
          - excel.Excel.ChartAxis
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartAxis.logBase
    summary: |-
      対数目盛りを使用する場合の対数の底を表します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: logBase
    fullName: logBase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'logBase: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.majorGridlines
    summary: |-
      指定された軸の大きい目盛線を表す Gridlines オブジェクトを返します。 値の取得のみ可能です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorGridlines
    fullName: majorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly majorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.majorTickMark
    summary: |-
      指定した軸の目盛の種類を表します。 詳細については、「ChartAxisTickMark」を参照してください。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorTickMark
    fullName: majorTickMark
    langs:
      - typeScript
    type: property
    syntax:
      content: 'majorTickMark: Excel.ChartAxisTickMark | "None" | "Cross" | "Inside" | "Outside";'
      return:
        type:
          - Excel.ChartAxisTickMark | "None" | "Cross" | "Inside" | "Outside"
  - uid: excel.Excel.ChartAxis.majorTimeUnitScale
    summary: |-
      CategoryType プロパティが lTimeScale に設定されている場合、項目軸の目盛のスケール値を返すか設定します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorTimeUnitScale
    fullName: majorTimeUnitScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'majorTimeUnitScale: Excel.ChartAxisTimeUnit | "Days" | "Months" | "Years";'
      return:
        type:
          - Excel.ChartAxisTimeUnit | "Days" | "Months" | "Years"
  - uid: excel.Excel.ChartAxis.majorUnit
    summary: |-
      2 つの大きい目盛の間隔を表します。 数値の値または空の文字列を設定できます。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: majorUnit
    fullName: majorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'majorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.maximum
    summary: |-
      数値軸の最大値を表します。 数値の値または空の文字列を設定できます (軸の値が自動の場合)。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: maximum
    fullName: maximum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maximum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minimum
    summary: |-
      数値軸の最小値を表します。 数値の値または空の文字列を設定できます (軸の値が自動の場合)。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minimum
    fullName: minimum
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minimum: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.minorGridlines
    summary: |-
      指定された軸の小さい目盛線を表す gridlines オブジェクトを返します。 読み取り専用です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorGridlines
    fullName: minorGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly minorGridlines: Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartAxis.minorTickMark
    summary: |-
      指定した軸の補助目盛の種類を表します。 詳細については、「ChartAxisTickMark」を参照してください。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorTickMark
    fullName: minorTickMark
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minorTickMark: Excel.ChartAxisTickMark | "None" | "Cross" | "Inside" | "Outside";'
      return:
        type:
          - Excel.ChartAxisTickMark | "None" | "Cross" | "Inside" | "Outside"
  - uid: excel.Excel.ChartAxis.minorTimeUnitScale
    summary: |-
      CategoryType プロパティが lTimeScale に設定されている場合、項目軸の補助目盛のスケール値を返すか設定します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorTimeUnitScale
    fullName: minorTimeUnitScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minorTimeUnitScale: Excel.ChartAxisTimeUnit | "Days" | "Months" | "Years";'
      return:
        type:
          - Excel.ChartAxisTimeUnit | "Days" | "Months" | "Years"
  - uid: excel.Excel.ChartAxis.minorUnit
    summary: |-
      2 つの小さい目盛の間隔を表します。 数値の値または空の文字列を設定できます (軸の値が自動の場合)。 戻り値は常に数値です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: minorUnit
    fullName: minorUnit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'minorUnit: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.multiLevel
    summary: |-
      軸がマルチレベルかどうかを表します。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: multiLevel
    fullName: multiLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'multiLevel: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartAxis.numberFormat
    summary: |-
      軸の目盛ラベルの書式コードを表します。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ChartAxis.offset
    summary: |-
      ラベルのレベル間の距離、および先頭レベルと軸線との距離を表します。 値は 0 から 1000 の範囲内でなければなりません。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: offset
    fullName: offset
    langs:
      - typeScript
    type: property
    syntax:
      content: 'offset: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.position
    summary: |-
      指定した軸と他の軸との交差位置を表します。 詳細については、「ChartAxisPosition」を参照してください。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: Excel.ChartAxisPosition | "Automatic" | "Maximum" | "Minimum" | "Custom";'
      return:
        type:
          - Excel.ChartAxisPosition | "Automatic" | "Maximum" | "Minimum" | "Custom"
  - uid: excel.Excel.ChartAxis.positionAt
    summary: |-
      指定した軸と他の軸との交差位置を表します。 このプロパティを設定するには、SetPositionAt(double) メソッドを使用する必要があります。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: positionAt
    fullName: positionAt
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly positionAt: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.reversePlotOrder
    summary: |-
      Microsoft Excel でデータ ポイントを最後から最初への順でプロットするかどうかを表します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: reversePlotOrder
    fullName: reversePlotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'reversePlotOrder: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartAxis.scaleType
    summary: |-
      数値軸のスケールの種類を表します。 詳細については、「ChartAxisScaleType」を参照してください。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: scaleType
    fullName: scaleType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'scaleType: Excel.ChartAxisScaleType | "Linear" | "Logarithmic";'
      return:
        type:
          - Excel.ChartAxisScaleType | "Linear" | "Logarithmic"
  - uid: excel.Excel.ChartAxis.set
    summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
    remarks: |-
      このメソッドには、次の追加のシグネチャがあります。

      `set(properties: Excel.ChartAxis): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
          type:
            - Interfaces.ChartAxisUpdateData
        - id: options
          description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartAxis.set_1
    summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxis): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartAxis
  - uid: excel.Excel.ChartAxis.setCategoryNames
    summary: |-
      指定した軸のすべてのカテゴリ名を設定します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setCategoryNames(sourceData)
    fullName: setCategoryNames(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setCategoryNames(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: データ ソースに対応する Range オブジェクトです。
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartAxis.setCustomDisplayUnit
    summary: |-
      軸の表示単位をカスタム値に設定します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setCustomDisplayUnit(value)
    fullName: setCustomDisplayUnit(value)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setCustomDisplayUnit(value: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: 表示単位のカスタム値。
          type:
            - number
  - uid: excel.Excel.ChartAxis.setPositionAt
    summary: |-
      指定した軸と他の軸との交差位置を設定します。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setPositionAt(value)
    fullName: setPositionAt(value)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPositionAt(value: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: の交差のカスタム値
          type:
            - number
  - uid: excel.Excel.ChartAxis.showDisplayUnitLabel
    summary: |-
      軸の表示単位のラベルを表示するかどうかを表します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showDisplayUnitLabel
    fullName: showDisplayUnitLabel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showDisplayUnitLabel: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              let chart = sheet.charts.getItemAt(0);
              let axis = chart.axes.valueAxis;

              // Remove display unit.
              axis.showDisplayUnitLabel = false;

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartAxis.textOrientation
    summary: |-
      軸の目盛ラベルのテキストの向きを表します。 値は -90 から 90 の範囲内の整数か、縦書きテキストの場合は 180 でなければなりません。

      \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: textOrientation
    fullName: textOrientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOrientation: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.tickLabelPosition
    summary: |-
      指定した軸での目盛ラベルの位置を示します。 詳細については、「ChartAxisTickLabelPosition」を参照してください。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: tickLabelPosition
    fullName: tickLabelPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tickLabelPosition: Excel.ChartAxisTickLabelPosition | "NextToAxis" | "High" | "Low" | "None";'
      return:
        type:
          - Excel.ChartAxisTickLabelPosition | "NextToAxis" | "High" | "Low" | "None"
  - uid: excel.Excel.ChartAxis.tickLabelSpacing
    summary: |-
      目盛ラベル間の項目または系列の数を表します。 1 から 31999 の範囲内で値を設定できます。自動的に設定する場合は、空の文字列にします。 戻り値は常に数値です。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: tickLabelSpacing
    fullName: tickLabelSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tickLabelSpacing: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ChartAxis.tickMarkSpacing
    summary: |-
      目盛間の項目または系列の数を表します。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: tickMarkSpacing
    fullName: tickMarkSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tickMarkSpacing: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.title
    summary: |-
      軸タイトルを表します。 値の取得のみ可能です。

      \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: title
    fullName: title
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly title: Excel.ChartAxisTitle;'
      return:
        type:
          - excel.Excel.ChartAxisTitle
  - uid: excel.Excel.ChartAxis.toJSON
    summary: API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の ChartAxis オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.ChartAxisData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartAxisData
        description: ''
  - uid: excel.Excel.ChartAxis.top
    summary: |-
      軸の上端からグラフ エリアの上端までの距離 (ポイント数) を表します。 軸が非表示の場合は Null。 読み取り専用です。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartAxis.type
    summary: |-
      軸の種類を表します。 詳細については、「ChartAxisType」を参照してください。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.ChartAxisType | "Invalid" | "Category" | "Value" | "Series";'
      return:
        type:
          - Excel.ChartAxisType | "Invalid" | "Category" | "Value" | "Series"
  - uid: excel.Excel.ChartAxis.visible
    summary: |-
      軸を表示するかどうかを表すブール値。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartAxis.width
    summary: |-
      グラフ軸の幅 (ポイント数) を表します。 軸が非表示の場合は Null。 読み取り専用です。

      \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly width: number;'
      return:
        type:
          - number