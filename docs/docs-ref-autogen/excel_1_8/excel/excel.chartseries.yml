### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartSeries
    summary: |-
      <span data-ttu-id="c9511-101">グラフのデータ系列を表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-101">Represents a series in a chart.</span></span>

      <span data-ttu-id="c9511-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartSeries.axisGroup
      - excel.Excel.ChartSeries.chartType
      - excel.Excel.ChartSeries.context
      - excel.Excel.ChartSeries.dataLabels
      - excel.Excel.ChartSeries.delete
      - excel.Excel.ChartSeries.doughnutHoleSize
      - excel.Excel.ChartSeries.explosion
      - excel.Excel.ChartSeries.filtered
      - excel.Excel.ChartSeries.firstSliceAngle
      - excel.Excel.ChartSeries.format
      - excel.Excel.ChartSeries.gapWidth
      - excel.Excel.ChartSeries.hasDataLabels
      - excel.Excel.ChartSeries.invertIfNegative
      - excel.Excel.ChartSeries.load
      - excel.Excel.ChartSeries.load_1
      - excel.Excel.ChartSeries.load_2
      - excel.Excel.ChartSeries.markerBackgroundColor
      - excel.Excel.ChartSeries.markerForegroundColor
      - excel.Excel.ChartSeries.markerSize
      - excel.Excel.ChartSeries.markerStyle
      - excel.Excel.ChartSeries.name
      - excel.Excel.ChartSeries.overlap
      - excel.Excel.ChartSeries.plotOrder
      - excel.Excel.ChartSeries.points
      - excel.Excel.ChartSeries.secondPlotSize
      - excel.Excel.ChartSeries.set
      - excel.Excel.ChartSeries.set_1
      - excel.Excel.ChartSeries.setBubbleSizes
      - excel.Excel.ChartSeries.setValues
      - excel.Excel.ChartSeries.setXAxisValues
      - excel.Excel.ChartSeries.showShadow
      - excel.Excel.ChartSeries.smooth
      - excel.Excel.ChartSeries.splitType
      - excel.Excel.ChartSeries.toJSON
      - excel.Excel.ChartSeries.trendlines
      - excel.Excel.ChartSeries.varyByCategories
  - uid: excel.Excel.ChartSeries.axisGroup
    summary: |-
      <span data-ttu-id="c9511-103">指定した系列のグループを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-103">Returns or sets the group for the specified series.</span></span> <span data-ttu-id="c9511-104">読み取り/書き込み</span><span class="sxs-lookup"><span data-stu-id="c9511-104">Read/Write</span></span>

      <span data-ttu-id="c9511-105">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: axisGroup
    fullName: axisGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
      return:
        type:
          - Excel.ChartAxisGroup | "Primary" | "Secondary"
  - uid: excel.Excel.ChartSeries.chartType
    summary: |-
      <span data-ttu-id="c9511-106">グラフ系列の種類を表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-106">Represents the chart type of a series.</span></span> <span data-ttu-id="c9511-107">詳細については、「ChartType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9511-107">See Excel.ChartType for details.</span></span>

      <span data-ttu-id="c9511-108">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-108">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
  - uid: excel.Excel.ChartSeries.context
    summary: <span data-ttu-id="c9511-109">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="c9511-109">The request context associated with the object.</span></span> <span data-ttu-id="c9511-110">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartSeries.dataLabels
    summary: |-
      <span data-ttu-id="c9511-111">系列に含まれるすべてのデータ ラベルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-111">Represents a collection of all dataLabels in the series.</span></span>

      <span data-ttu-id="c9511-112">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
  - uid: excel.Excel.ChartSeries.delete
    summary: |-
      <span data-ttu-id="c9511-113">グラフ系列を削除します。</span><span class="sxs-lookup"><span data-stu-id="c9511-113">Deletes the chart series.</span></span>

      <span data-ttu-id="c9511-114">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9511-115">例</span><span class="sxs-lookup"><span data-stu-id="c9511-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.doughnutHoleSize
    summary: |-
      <span data-ttu-id="c9511-116">グラフ系列のドーナツの穴の大きさを表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-116">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="c9511-117">ドーナツ グラフと doughnutExploded グラフでのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="c9511-117">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="c9511-118">無効なグラフで無効な引数の例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="c9511-118">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="c9511-119">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.explosion
    summary: |-
      <span data-ttu-id="c9511-120">円グラフまたはドーナツ グラフのスライス切り出し表示の値を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-120">Returns or sets the explosion value for a pie-chart or doughnut-chart slice.</span></span> <span data-ttu-id="c9511-121">切り出し表示は行われず、スライスの先端が円の中心と一致する場合、0 を返します。</span><span class="sxs-lookup"><span data-stu-id="c9511-121">Returns 0 (zero) if there's no explosion (the tip of the slice is in the center of the pie).</span></span> <span data-ttu-id="c9511-122">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="c9511-122">Read/Write.</span></span>

      <span data-ttu-id="c9511-123">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: explosion
    fullName: explosion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'explosion: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.filtered
    summary: |-
      <span data-ttu-id="c9511-124">データ系列がフィルター処理されるかどうかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="c9511-124">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="c9511-125">等高線グラフには適用されません。</span><span class="sxs-lookup"><span data-stu-id="c9511-125">Not applicable for surface charts.</span></span>

      <span data-ttu-id="c9511-126">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-126">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.firstSliceAngle
    summary: |-
      <span data-ttu-id="c9511-127">円グラフまたはドーナツ グラフの最初のスライスの角度 (縦の中心から時計回りでの度数) を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-127">Returns or sets the angle of the first pie-chart or doughnut-chart slice, in degrees (clockwise from vertical).</span></span> <span data-ttu-id="c9511-128">円グラフ、3-D 円グラフ、およびドーナツ グラフにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-128">Applies only to pie, 3-D pie, and doughnut charts.</span></span> <span data-ttu-id="c9511-129">0 から 360 の範囲内で値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9511-129">Can be a value from 0 through 360.</span></span> <span data-ttu-id="c9511-130">読み取り/書き込み</span><span class="sxs-lookup"><span data-stu-id="c9511-130">Read/Write</span></span>

      <span data-ttu-id="c9511-131">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: firstSliceAngle
    fullName: firstSliceAngle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstSliceAngle: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.format
    summary: |-
      <span data-ttu-id="c9511-132">グラフの系列の書式設定を表します。これには、塗りつぶしと線の書式設定が含まれます。</span><span class="sxs-lookup"><span data-stu-id="c9511-132">Represents the formatting of a chart series, which includes fill and line formatting.</span></span> <span data-ttu-id="c9511-133">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c9511-133">Read-only.</span></span>

      <span data-ttu-id="c9511-134">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-134">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - excel.Excel.ChartSeriesFormat
  - uid: excel.Excel.ChartSeries.gapWidth
    summary: |-
      <span data-ttu-id="c9511-135">グラフ系列間に設けられる間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-135">Represents the gap width of a chart series.</span></span> <span data-ttu-id="c9511-136">横棒グラフと縦棒グラフ、および折れ線グラフと円グラフの特定のクラスに対してのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="c9511-136">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="c9511-137">無効なグラフで無効な引数の例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="c9511-137">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="c9511-138">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-138">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.hasDataLabels
    summary: |-
      <span data-ttu-id="c9511-139">系列のデータ ラベルの有無を表すブール値。</span><span class="sxs-lookup"><span data-stu-id="c9511-139">Boolean value representing if the series has data labels or not.</span></span>

      <span data-ttu-id="c9511-140">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-140">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.invertIfNegative
    summary: |-
      <span data-ttu-id="c9511-141">true の場合、Microsoft Excel により、負の数値に対応する項目でパターンが反転されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-141">True if Microsoft Excel inverts the pattern in the item when it corresponds to a negative number.</span></span> <span data-ttu-id="c9511-142">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="c9511-142">Read/Write.</span></span>

      <span data-ttu-id="c9511-143">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: invertIfNegative
    fullName: invertIfNegative
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertIfNegative: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.load
    summary: <span data-ttu-id="c9511-144">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c9511-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c9511-145">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9511-145">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c9511-146">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="c9511-146">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c9511-147">`load(option?: string | string[]): Excel.ChartSeries`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="c9511-147">`load(option?: string | string[]): Excel.ChartSeries` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c9511-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c9511-148">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c9511-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="c9511-149">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id="c9511-150">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="c9511-150">It is similar to the preceding signature.</span></span> <span data-ttu-id="c9511-151">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-151">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c9511-152">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-152">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c9511-153">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-153">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartSeriesLoadOptions
  - uid: excel.Excel.ChartSeries.load_1
    summary: <span data-ttu-id="c9511-154">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c9511-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c9511-155">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9511-155">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9511-156">例</span><span class="sxs-lookup"><span data-stu-id="c9511-156">Examples</span></span>

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c9511-157">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="c9511-157">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartSeries.load_2
    summary: <span data-ttu-id="c9511-158">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="c9511-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c9511-159">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c9511-159">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c9511-160">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="c9511-160">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartSeries.markerBackgroundColor
    summary: |-
      <span data-ttu-id="c9511-161">グラフ系列のマーカー背景色を表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-161">Represents markers background color of a chart series.</span></span>

      <span data-ttu-id="c9511-162">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-162">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9511-163">例</span><span class="sxs-lookup"><span data-stu-id="c9511-163">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerForegroundColor
    summary: |-
      <span data-ttu-id="c9511-164">グラフ系列のマーカー前景色を表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-164">Represents markers foreground color of a chart series.</span></span>

      <span data-ttu-id="c9511-165">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-165">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9511-166">例</span><span class="sxs-lookup"><span data-stu-id="c9511-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerSize
    summary: |-
      <span data-ttu-id="c9511-167">グラフ系列のマーカー サイズを表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-167">Represents marker size of a chart series.</span></span>

      <span data-ttu-id="c9511-168">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-168">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9511-169">例</span><span class="sxs-lookup"><span data-stu-id="c9511-169">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerStyle
    summary: |-
      <span data-ttu-id="c9511-170">グラフ系列のマーカー スタイルを表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-170">Represents marker style of a chart series.</span></span> <span data-ttu-id="c9511-171">詳細については、「ChartMarkerStyle」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c9511-171">See Excel.ChartMarkerStyle for details.</span></span>

      <span data-ttu-id="c9511-172">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-172">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9511-173">例</span><span class="sxs-lookup"><span data-stu-id="c9511-173">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.name
    summary: |-
      <span data-ttu-id="c9511-174">グラフのデータ系列の名前を表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-174">Represents the name of a series in a chart.</span></span>

      <span data-ttu-id="c9511-175">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-175">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ChartSeries.overlap
    summary: |-
      <span data-ttu-id="c9511-176">横棒と縦棒の配置方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-176">Specifies how bars and columns are positioned.</span></span> <span data-ttu-id="c9511-177">-100 から100までの値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9511-177">Can be a value between –100 and 100.</span></span> <span data-ttu-id="c9511-178">2-D 横棒グラフと 2-D 縦棒グラフにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-178">Applies only to 2-D bar and 2-D column charts.</span></span> <span data-ttu-id="c9511-179">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="c9511-179">Read/Write.</span></span>

      <span data-ttu-id="c9511-180">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-180">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: overlap
    fullName: overlap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlap: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.plotOrder
    summary: |-
      <span data-ttu-id="c9511-181">グラフ グループ内でのグラフ系列のプロット順序を表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-181">Represents the plot order of a chart series within the chart group.</span></span>

      <span data-ttu-id="c9511-182">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-182">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.points
    summary: |-
      <span data-ttu-id="c9511-183">データ系列にあるすべてのポイントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="c9511-183">Represents a collection of all points in the series.</span></span> <span data-ttu-id="c9511-184">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="c9511-184">Read-only.</span></span>

      <span data-ttu-id="c9511-185">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-185">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
  - uid: excel.Excel.ChartSeries.secondPlotSize
    summary: |-
      <span data-ttu-id="c9511-186">補助円グラフ付き円グラフまたは補助縦棒グラフ付き円グラフのセカンダリ セクションのサイズを、プライマリ セクションのサイズのパーセンテージとして返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-186">Returns or sets the size of the secondary section of either a pie of pie chart or a bar of pie chart, as a percentage of the size of the primary pie.</span></span> <span data-ttu-id="c9511-187">5 から 200 の範囲内で値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="c9511-187">Can be a value from 5 to 200.</span></span> <span data-ttu-id="c9511-188">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="c9511-188">Read/Write.</span></span>

      <span data-ttu-id="c9511-189">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-189">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: secondPlotSize
    fullName: secondPlotSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'secondPlotSize: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.set
    summary: '<span data-ttu-id="c9511-190">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-190">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c9511-191">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="c9511-191">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c9511-192">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="c9511-192">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="c9511-193">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c9511-193">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ChartSeriesUpdateData
        - id: options
          description: <span data-ttu-id="c9511-194">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="c9511-194">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartSeries.set_1
    summary: '<span data-ttu-id="c9511-195">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-195">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartSeries
  - uid: excel.Excel.ChartSeries.setBubbleSizes
    summary: |-
      <span data-ttu-id="c9511-196">グラフ系列のバブル サイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-196">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="c9511-197">バブル チャートにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-197">Only works for bubble charts.</span></span>

      <span data-ttu-id="c9511-198">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-198">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="c9511-199">データ ソースに対応する Range オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c9511-199">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.setValues
    summary: |-
      <span data-ttu-id="c9511-200">グラフ系列の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-200">Set values for a chart series.</span></span> <span data-ttu-id="c9511-201">散布図の場合、Y 軸の値を意味します。</span><span class="sxs-lookup"><span data-stu-id="c9511-201">For scatter chart, it means Y axis values.</span></span>

      <span data-ttu-id="c9511-202">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-202">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c9511-203">例</span><span class="sxs-lookup"><span data-stu-id="c9511-203">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: <span data-ttu-id="c9511-204">データ ソースに対応する Range オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c9511-204">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.setXAxisValues
    summary: |-
      <span data-ttu-id="c9511-205">グラフ系列の X 軸の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-205">Set values of X axis for a chart series.</span></span> <span data-ttu-id="c9511-206">散布図にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-206">Only works for scatter charts.</span></span>

      <span data-ttu-id="c9511-207">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-207">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="c9511-208">データ ソースに対応する Range オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c9511-208">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.showShadow
    summary: |-
      <span data-ttu-id="c9511-209">系列に影があるかどうかを表すブール型 (Boolean) の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-209">Boolean value representing if the series has a shadow or not.</span></span>

      <span data-ttu-id="c9511-210">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-210">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.smooth
    summary: |-
      <span data-ttu-id="c9511-211">系列が平滑化されるかどうかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="c9511-211">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="c9511-212">折れ線グラフおよび散布図にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="c9511-212">Only applicable to line and scatter charts.</span></span>

      <span data-ttu-id="c9511-213">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-213">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.splitType
    summary: |-
      <span data-ttu-id="c9511-214">補助円グラフ付き円グラフまたは補助縦棒グラフ付き円グラフを 2 つの部分に分割する方法を返すか設定します。</span><span class="sxs-lookup"><span data-stu-id="c9511-214">Returns or sets the way the two sections of either a pie of pie chart or a bar of pie chart are split.</span></span> <span data-ttu-id="c9511-215">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="c9511-215">Read/Write.</span></span>

      <span data-ttu-id="c9511-216">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-216">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: splitType
    fullName: splitType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
      return:
        type:
          - Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
  - uid: excel.Excel.ChartSeries.toJSON
    summary: '<span data-ttu-id="c9511-217">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c9511-217">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c9511-218">.</span><span class="sxs-lookup"><span data-stu-id="c9511-218"></span></span> <span data-ttu-id="c9511-219">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c9511-219"></span></span><!-- --><span data-ttu-id="c9511-220">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel ChartSeries オブジェクトは API オブジェクトであるのに対し`toJSON`て、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ChartSeriesData`</span><span class="sxs-lookup"><span data-stu-id="c9511-220">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartSeries object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesData`</span></span><!-- --><span data-ttu-id="c9511-221">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="c9511-221">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesData
        description: ''
  - uid: excel.Excel.ChartSeries.trendlines
    summary: |-
      <span data-ttu-id="c9511-222">データ系列に含まれる近似曲線のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="c9511-222">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="c9511-223">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c9511-223">Read-only.</span></span>

      <span data-ttu-id="c9511-224">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-224">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection
  - uid: excel.Excel.ChartSeries.varyByCategories
    summary: |-
      <span data-ttu-id="c9511-225">true の場合、Microsoft Excel により、データ マーカーごとに異なる色またはパターンが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="c9511-225">True if Microsoft Excel assigns a different color or pattern to each data marker.</span></span> <span data-ttu-id="c9511-226">グラフに含まれるデータ系列は 1 つだけでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="c9511-226">The chart must contain only one series.</span></span> <span data-ttu-id="c9511-227">読み取り/書き込み可能。</span><span class="sxs-lookup"><span data-stu-id="c9511-227">Read/Write.</span></span>

      <span data-ttu-id="c9511-228">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c9511-228">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: varyByCategories
    fullName: varyByCategories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'varyByCategories: boolean;'
      return:
        type:
          - boolean