### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalRangeFormat
    summary: |-
      <span data-ttu-id="aca40-101">条件付き書式の範囲のフォント、塗りつぶし、罫線、およびその他のプロパティをカプセル化する format オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="aca40-101">A format object encapsulating the conditional formats range's font, fill, borders, and other properties.</span></span>

      <span data-ttu-id="aca40-102">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aca40-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeFormat
    fullName: Excel.ConditionalRangeFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ConditionalRangeFormat.borders
      - excel.Excel.ConditionalRangeFormat.context
      - excel.Excel.ConditionalRangeFormat.fill
      - excel.Excel.ConditionalRangeFormat.font
      - excel.Excel.ConditionalRangeFormat.load
      - excel.Excel.ConditionalRangeFormat.load_1
      - excel.Excel.ConditionalRangeFormat.load_2
      - excel.Excel.ConditionalRangeFormat.numberFormat
      - excel.Excel.ConditionalRangeFormat.set
      - excel.Excel.ConditionalRangeFormat.set_1
      - excel.Excel.ConditionalRangeFormat.toJSON
  - uid: excel.Excel.ConditionalRangeFormat.borders
    summary: |-
      <span data-ttu-id="aca40-103">条件付き書式の範囲全体に適用される border オブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="aca40-103">Collection of border objects that apply to the overall conditional format range.</span></span> <span data-ttu-id="aca40-104">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="aca40-104">Read-only.</span></span>

      <span data-ttu-id="aca40-105">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aca40-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.ConditionalRangeBorderCollection;'
      return:
        type:
          - excel.Excel.ConditionalRangeBorderCollection
  - uid: excel.Excel.ConditionalRangeFormat.context
    summary: <span data-ttu-id="aca40-106">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="aca40-106">The request context associated with the object.</span></span> <span data-ttu-id="aca40-107">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="aca40-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ConditionalRangeFormat.fill
    summary: |-
      <span data-ttu-id="aca40-108">条件付き書式の範囲全体で定義される fill オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="aca40-108">Returns the fill object defined on the overall conditional format range.</span></span> <span data-ttu-id="aca40-109">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="aca40-109">Read-only.</span></span>

      <span data-ttu-id="aca40-110">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aca40-110">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ConditionalRangeFill;'
      return:
        type:
          - excel.Excel.ConditionalRangeFill
  - uid: excel.Excel.ConditionalRangeFormat.font
    summary: |-
      <span data-ttu-id="aca40-111">条件付き書式の範囲全体で定義される font オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="aca40-111">Returns the font object defined on the overall conditional format range.</span></span> <span data-ttu-id="aca40-112">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="aca40-112">Read-only.</span></span>

      <span data-ttu-id="aca40-113">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aca40-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.ConditionalRangeFont;'
      return:
        type:
          - excel.Excel.ConditionalRangeFont
  - uid: excel.Excel.ConditionalRangeFormat.load
    summary: <span data-ttu-id="aca40-114">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="aca40-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="aca40-115">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca40-115">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="aca40-116">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="aca40-116">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="aca40-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="aca40-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="aca40-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="aca40-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="aca40-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="aca40-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat` - Only available on collection types.</span></span> <span data-ttu-id="aca40-120">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="aca40-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="aca40-121">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="aca40-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="aca40-122">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="aca40-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="aca40-123">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="aca40-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalRangeFormatLoadOptions): Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ConditionalRangeFormatLoadOptions
  - uid: excel.Excel.ConditionalRangeFormat.load_1
    summary: <span data-ttu-id="aca40-124">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="aca40-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="aca40-125">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca40-125">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="aca40-126">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="aca40-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ConditionalRangeFormat.load_2
    summary: <span data-ttu-id="aca40-127">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="aca40-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="aca40-128">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="aca40-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="aca40-129">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="aca40-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ConditionalRangeFormat.numberFormat
    summary: |-
      <span data-ttu-id="aca40-130">指定された範囲の Excel の数値書式コードを表します。</span><span class="sxs-lookup"><span data-stu-id="aca40-130">Represents Excel's number format code for the given range.</span></span> <span data-ttu-id="aca40-131">Null が渡された場合はクリアされます。</span><span class="sxs-lookup"><span data-stu-id="aca40-131">Cleared if null is passed in.</span></span>

      <span data-ttu-id="aca40-132">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="aca40-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ConditionalRangeFormat.set
    summary: '<span data-ttu-id="aca40-133">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="aca40-133">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="aca40-134">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="aca40-134">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="aca40-135">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="aca40-135">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="aca40-136">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="aca40-136">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ConditionalRangeFormatUpdateData
        - id: options
          description: <span data-ttu-id="aca40-137">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="aca40-137">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ConditionalRangeFormat.set_1
    summary: '<span data-ttu-id="aca40-138">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="aca40-138">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ConditionalRangeFormat
  - uid: excel.Excel.ConditionalRangeFormat.toJSON
    summary: '<span data-ttu-id="aca40-139">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="aca40-139">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="aca40-140">.</span><span class="sxs-lookup"><span data-stu-id="aca40-140"></span></span> <span data-ttu-id="aca40-141">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="aca40-141"></span></span><!-- --><span data-ttu-id="aca40-142">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel の ConditionalRangeFormat オブジェクトは API オブジェクトであるのに`toJSON`対して、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ConditionalRangeFormatData`</span><span class="sxs-lookup"><span data-stu-id="aca40-142">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFormatData`</span></span><!-- --><span data-ttu-id="aca40-143">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="aca40-143">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalRangeFormatData
        description: ''