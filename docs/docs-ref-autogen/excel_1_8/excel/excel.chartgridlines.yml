### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartGridlines
    summary: |-
      <span data-ttu-id="bd459-101">グラフの軸の目盛線または補助目盛線を表します。</span><span class="sxs-lookup"><span data-stu-id="bd459-101">Represents major or minor gridlines on a chart axis.</span></span>

      <span data-ttu-id="bd459-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd459-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartGridlines
    fullName: Excel.ChartGridlines
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartGridlines.context
      - excel.Excel.ChartGridlines.format
      - excel.Excel.ChartGridlines.load
      - excel.Excel.ChartGridlines.load_1
      - excel.Excel.ChartGridlines.load_2
      - excel.Excel.ChartGridlines.set
      - excel.Excel.ChartGridlines.set_1
      - excel.Excel.ChartGridlines.toJSON
      - excel.Excel.ChartGridlines.visible
  - uid: excel.Excel.ChartGridlines.context
    summary: <span data-ttu-id="bd459-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="bd459-103">The request context associated with the object.</span></span> <span data-ttu-id="bd459-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="bd459-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartGridlines.format
    summary: |-
      <span data-ttu-id="bd459-105">グラフの目盛線の書式設定を表します。</span><span class="sxs-lookup"><span data-stu-id="bd459-105">Represents the formatting of chart gridlines.</span></span> <span data-ttu-id="bd459-106">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="bd459-106">Read-only.</span></span>

      <span data-ttu-id="bd459-107">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd459-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartGridlinesFormat;'
      return:
        type:
          - excel.Excel.ChartGridlinesFormat
  - uid: excel.Excel.ChartGridlines.load
    summary: <span data-ttu-id="bd459-108">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bd459-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd459-109">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bd459-109">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="bd459-110">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="bd459-110">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="bd459-111">`load(option?: string | string[]): Excel.ChartGridlines`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="bd459-111">`load(option?: string | string[]): Excel.ChartGridlines` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="bd459-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="bd459-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartGridlines` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="bd459-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="bd459-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartGridlines` - Only available on collection types.</span></span> <span data-ttu-id="bd459-114">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="bd459-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="bd459-115">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="bd459-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bd459-116">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="bd459-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bd459-117">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="bd459-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartGridlinesLoadOptions): Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartGridlinesLoadOptions
  - uid: excel.Excel.ChartGridlines.load_1
    summary: <span data-ttu-id="bd459-118">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bd459-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd459-119">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bd459-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bd459-120">例</span><span class="sxs-lookup"><span data-stu-id="bd459-120">Examples</span></span>

          ```javascript
          // Get the visible of Major Gridlines on value axis of Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              var majGridlines = chart.axes.valueaxis.majorGridlines;
              majGridlines.load('visible');
              return ctx.sync().then(function() {
                      console.log(majGridlines.visible);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set to show major gridlines on valueAxis of Chart1
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.axes.valueAxis.majorGridlines.visible = true;
              return ctx.sync().then(function() {
                      console.log("Axis Gridlines Added ");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="bd459-121">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="bd459-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartGridlines.load_2
    summary: <span data-ttu-id="bd459-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="bd459-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd459-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="bd459-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartGridlines;'
      return:
        type:
          - excel.Excel.ChartGridlines
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="bd459-124">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="bd459-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartGridlines.set
    summary: '<span data-ttu-id="bd459-125">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="bd459-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="bd459-126">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="bd459-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="bd459-127">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="bd459-127">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartGridlines): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartGridlinesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="bd459-128">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bd459-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ChartGridlinesUpdateData
        - id: options
          description: <span data-ttu-id="bd459-129">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="bd459-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartGridlines.set_1
    summary: '<span data-ttu-id="bd459-130">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="bd459-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartGridlines): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartGridlines
  - uid: excel.Excel.ChartGridlines.toJSON
    summary: '<span data-ttu-id="bd459-131">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="bd459-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="bd459-132">.</span><span class="sxs-lookup"><span data-stu-id="bd459-132"></span></span> <span data-ttu-id="bd459-133">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="bd459-133"></span></span><!-- --><span data-ttu-id="bd459-134">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の ChartGridlines オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ChartGridlinesData`</span><span class="sxs-lookup"><span data-stu-id="bd459-134">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartGridlines object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartGridlinesData`</span></span><!-- --><span data-ttu-id="bd459-135">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="bd459-135">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartGridlinesData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartGridlinesData
        description: ''
  - uid: excel.Excel.ChartGridlines.visible
    summary: |-
      <span data-ttu-id="bd459-136">軸の目盛線を表示するか非表示にするかを表すブール型の値。</span><span class="sxs-lookup"><span data-stu-id="bd459-136">Boolean value representing if the axis gridlines are visible or not.</span></span>

      <span data-ttu-id="bd459-137">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd459-137">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean