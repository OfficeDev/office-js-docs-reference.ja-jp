### YamlMime:TSType
name: Excel.Style
uid: excel!Excel.Style:class
package: excel!
fullName: Excel.Style
summary: >-
  スタイルの形式およびその他のプロパティをカプセル化するオブジェクト。


  \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: autoIndent
  uid: excel!Excel.Style#autoIndent:member
  package: excel!
  fullName: autoIndent
  summary: >-
    セル内の文字列の配置が均等分布に設定されている場合に、文字列を自動的にインデントするかどうかを指定します。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'autoIndent: boolean;'
    return:
      type: boolean
- name: borders
  uid: excel!Excel.Style#borders:member
  package: excel!
  fullName: borders
  summary: >-
    4 つの辺の罫線のスタイルを表す、4 つの Border オブジェクトのコレクション。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly borders: Excel.RangeBorderCollection;'
    return:
      type: <xref uid="excel!Excel.RangeBorderCollection:class" />
- name: builtIn
  uid: excel!Excel.Style#builtIn:member
  package: excel!
  fullName: builtIn
  summary: >-
    スタイルが組み込みのスタイルであるかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly builtIn: boolean;'
    return:
      type: boolean
- name: context
  uid: excel!Excel.Style#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: fill
  uid: excel!Excel.Style#fill:member
  package: excel!
  fullName: fill
  summary: >-
    スタイルの塗りつぶし。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly fill: Excel.RangeFill;'
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
- name: font
  uid: excel!Excel.Style#font:member
  package: excel!
  fullName: font
  summary: >-
    スタイルのフォントを表す Font オブジェクト。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Excel.RangeFont;'
    return:
      type: <xref uid="excel!Excel.RangeFont:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Normal\");\n    style.font.load(\"bold, color, italic, name, size\");\n    style.fill.load(\"color\");\n\n    await context.sync();\n\n    console.log(\"Bold: \" + style.font.bold);\n    console.log(\"Font color: \" + style.font.color);\n    console.log(\"Italic: \" + style.font.italic);\n    console.log(\"Name: \" + style.font.name);\n    console.log(\"Size: \" + style.font.size);\n    console.log(\"Fill color: \" + style.fill.color);\n});\n```"
- name: formulaHidden
  uid: excel!Excel.Style#formulaHidden:member
  package: excel!
  fullName: formulaHidden
  summary: >-
    ワークシートが保護されているときに、数式を非表示にするかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulaHidden: boolean;'
    return:
      type: boolean
- name: horizontalAlignment
  uid: excel!Excel.Style#horizontalAlignment:member
  package: excel!
  fullName: horizontalAlignment
  summary: >-
    スタイルでの水平方向の配置を表します。 詳細については、「Excel の配置」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
    return:
      type: <xref uid="excel!Excel.HorizontalAlignment:enum" /> | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml\nawait Excel.run(async (context) => {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n});\n```"
- name: includeAlignment
  uid: excel!Excel.Style#includeAlignment:member
  package: excel!
  fullName: includeAlignment
  summary: >-
    スタイルに自動インデント、水平方向の配置、垂直方向の配置、WrapText、IndentLevel、および TextOrientation プロパティを含めるかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeAlignment: boolean;'
    return:
      type: boolean
- name: includeBorder
  uid: excel!Excel.Style#includeBorder:member
  package: excel!
  fullName: includeBorder
  summary: >-
    スタイルに、Color、ColorIndex、LineStyle、および Weight の各境界線のプロパティが含まれるかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeBorder: boolean;'
    return:
      type: boolean
- name: includeFont
  uid: excel!Excel.Style#includeFont:member
  package: excel!
  fullName: includeFont
  summary: >-
    スタイルに、Background、Bold、Color、ColorIndex、FontStyle、Italic、Name、Size、打ち消し線、下付き、上付き、および下線のフォントプロパティを含めるかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeFont: boolean;'
    return:
      type: boolean
- name: includeNumber
  uid: excel!Excel.Style#includeNumber:member
  package: excel!
  fullName: includeNumber
  summary: >-
    スタイルに NumberFormat プロパティが含まれているかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeNumber: boolean;'
    return:
      type: boolean
- name: includePatterns
  uid: excel!Excel.Style#includePatterns:member
  package: excel!
  fullName: includePatterns
  summary: >-
    スタイルに、Color、ColorIndex、InvertIfNegative、Pattern、Pattern Color、および PatternColorIndex interior プロパティが含まれるかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includePatterns: boolean;'
    return:
      type: boolean
- name: includeProtection
  uid: excel!Excel.Style#includeProtection:member
  package: excel!
  fullName: includeProtection
  summary: >-
    スタイルに FormulaHidden および Locked 保護のプロパティが含まれるかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'includeProtection: boolean;'
    return:
      type: boolean
- name: indentLevel
  uid: excel!Excel.Style#indentLevel:member
  package: excel!
  fullName: indentLevel
  summary: >-
    スタイルのインデント レベルを示す 0 から 250 の範囲内の整数。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'indentLevel: number;'
    return:
      type: number
- name: locked
  uid: excel!Excel.Style#locked:member
  package: excel!
  fullName: locked
  summary: >-
    ワークシートが保護されているときに、オブジェクトをロックするかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'locked: boolean;'
    return:
      type: boolean
- name: name
  uid: excel!Excel.Style#name:member
  package: excel!
  fullName: name
  summary: >-
    スタイルの名前。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: numberFormat
  uid: excel!Excel.Style#numberFormat:member
  package: excel!
  fullName: numberFormat
  summary: >-
    スタイルで適用される数値形式の表示形式コード。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormat: string;'
    return:
      type: string
- name: numberFormatLocal
  uid: excel!Excel.Style#numberFormatLocal:member
  package: excel!
  fullName: numberFormatLocal
  summary: >-
    スタイルで適用される数値形式のローカライズされた表示形式コード。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormatLocal: string;'
    return:
      type: string
- name: readingOrder
  uid: excel!Excel.Style#readingOrder:member
  package: excel!
  fullName: readingOrder
  summary: >-
    スタイルで適用される読み上げ順序。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
    return:
      type: <xref uid="excel!Excel.ReadingOrder:enum" /> | "Context" | "LeftToRight" | "RightToLeft"
- name: shrinkToFit
  uid: excel!Excel.Style#shrinkToFit:member
  package: excel!
  fullName: shrinkToFit
  summary: >-
    使用可能な列幅に合わせて、テキストを自動的に縮小するかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'shrinkToFit: boolean;'
    return:
      type: boolean
- name: textOrientation
  uid: excel!Excel.Style#textOrientation:member
  package: excel!
  fullName: textOrientation
  summary: >-
    スタイルで適用されるテキストの向き。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'textOrientation: number;'
    return:
      type: number
- name: verticalAlignment
  uid: excel!Excel.Style#verticalAlignment:member
  package: excel!
  fullName: verticalAlignment
  summary: >-
    スタイルの垂直方向の配置を指定します。 詳細については、「Excel の配置」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
    return:
      type: <xref uid="excel!Excel.VerticalAlignment:enum" /> | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
- name: wrapText
  uid: excel!Excel.Style#wrapText:member
  package: excel!
  fullName: wrapText
  summary: >-
    Excel でオブジェクトのテキストを折り返すかどうかを指定します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'wrapText: boolean;'
    return:
      type: boolean
methods:
- name: delete()
  uid: excel!Excel.Style#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    このスタイルを削除します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");\n\n    // Delete the diagonal orientation style from the style collection.\n    // Styles are in the Home tab ribbon.\n    style.delete();\n\n    await context.sync();\n\n    console.log(\"Successfully deleted the diagonal orientation style from the Home tab ribbon.\");\n});\n```"
- name: load(options)
  uid: excel!Excel.Style#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.StyleLoadOptions): Excel.Style;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.StyleLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Style:class" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/style.yaml\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");            \n    style.load(\"textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked\");\n\n    await context.sync();\n\n    console.log(\"Orientation: \" + style.textOrientation);\n    console.log(\"Horizontal alignment: \" + style.horizontalAlignment);\n    console.log(\"Add indent: \" + style.autoIndent);\n    console.log(\"Reading order: \" + style.readingOrder);\n    console.log(\"Wrap text: \" + style.wrapText);\n    console.log(\"Include protection: \" + style.includeProtection);\n    console.log(\"Shrink to fit: \" + style.shrinkToFit);\n    console.log(\"Style locked: \" + style.locked);\n});\n```"
- name: load(propertyNames)
  uid: excel!Excel.Style#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Style;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Style:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Style#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Style;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Style:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Style#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Excel.Style): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.StyleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="excel!Excel.Interfaces.StyleUpdateData:interface" />
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Style#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Style): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Style:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Style#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の Excel の Style オブジェクトは API オブジェクトであるのに対し `toJSON` て、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.StyleData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.StyleData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.StyleData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 42450b3ed8a87a24b129032eee1c97945a6c1df6
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49331539"
