### YamlMime:UniversalReference
ms.openlocfilehash: 3c87cdce2c49f5007cb3687e4af5101c53517d27
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30116130"
items:
- uid: excel_release.Excel.Style
  summary: >-
    スタイルの形式およびその他のプロパティをカプセル化するオブジェクト。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Style
  fullName: Excel.Style
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Style.autoIndent
  - excel_release.Excel.Style.borders
  - excel_release.Excel.Style.builtIn
  - excel_release.Excel.Style.context
  - excel_release.Excel.Style.delete
  - excel_release.Excel.Style.fill
  - excel_release.Excel.Style.font
  - excel_release.Excel.Style.formulaHidden
  - excel_release.Excel.Style.horizontalAlignment
  - excel_release.Excel.Style.includeAlignment
  - excel_release.Excel.Style.includeBorder
  - excel_release.Excel.Style.includeFont
  - excel_release.Excel.Style.includeNumber
  - excel_release.Excel.Style.includePatterns
  - excel_release.Excel.Style.includeProtection
  - excel_release.Excel.Style.indentLevel
  - excel_release.Excel.Style.load
  - excel_release.Excel.Style.load_1
  - excel_release.Excel.Style.load_2
  - excel_release.Excel.Style.locked
  - excel_release.Excel.Style.name
  - excel_release.Excel.Style.numberFormat
  - excel_release.Excel.Style.numberFormatLocal
  - excel_release.Excel.Style.readingOrder
  - excel_release.Excel.Style.set
  - excel_release.Excel.Style.set_1
  - excel_release.Excel.Style.shrinkToFit
  - excel_release.Excel.Style.textOrientation
  - excel_release.Excel.Style.toJSON
  - excel_release.Excel.Style.verticalAlignment
  - excel_release.Excel.Style.wrapText
- uid: excel_release.Excel.Style.autoIndent
  summary: >-
    セル内のテキスト配置が均等割り付けに設定されている場合、テキストを自動的にインデントするかどうかを指定します。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: autoIndent
  fullName: autoIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'autoIndent: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.borders
  summary: >-
    4 つの辺の罫線のスタイルを表す、4 つの Border オブジェクトのコレクション。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: borders
  fullName: borders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly borders: Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
- uid: excel_release.Excel.Style.builtIn
  summary: >-
    スタイルが組み込みのスタイルであるかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: builtIn
  fullName: builtIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly builtIn: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Style.delete
  summary: >-
    このスタイルを削除します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");\n\n    // Delete the diagonal orientation style from the style collection.\n    // Styles are in the Home tab ribbon.\n    style.delete();\n\n    await context.sync();\n\n    console.log(\"Successfully deleted the diagonal orientation style from the Home tab ribbon.\");\n});\n```"
- uid: excel_release.Excel.Style.fill
  summary: >-
    スタイルの塗りつぶし。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: fill
  fullName: fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
- uid: excel_release.Excel.Style.font
  summary: >-
    スタイルのフォントを表す Font オブジェクト。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Normal\");\n    style.font.load(\"bold, color, italic, name, size\");\n    style.fill.load(\"color\");\n\n    await context.sync();\n\n    console.log(\"Bold: \" + style.font.bold);\n    console.log(\"Font color: \" + style.font.color);\n    console.log(\"Italic: \" + style.font.italic);\n    console.log(\"Name: \" + style.font.name);\n    console.log(\"Size: \" + style.font.size);\n    console.log(\"Fill color: \" + style.fill.color);\n});\n```"
- uid: excel_release.Excel.Style.formulaHidden
  summary: >-
    ワークシートが保護されている場合、数式を非表示にするかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: formulaHidden
  fullName: formulaHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaHidden: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.horizontalAlignment
  summary: >-
    スタイルでの水平方向の配置を表します。 詳細については、「Excel の配置」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: horizontalAlignment
  fullName: horizontalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
    return:
      type:
      - Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.Style.includeAlignment
  summary: >-
    スタイルに配置のプロパティ (AddIndent、HorizontalAlignment、VerticalAlignment、WrapText、IndentLevel、および TextOrientation) が含まれるかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: includeAlignment
  fullName: includeAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeAlignment: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.includeBorder
  summary: >-
    スタイルに罫線のプロパティ (Color、ColorIndex、LineStyle、Weight) が含まれているかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: includeBorder
  fullName: includeBorder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeBorder: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.includeFont
  summary: >-
    スタイルにフォントのプロパティ (Background、Bold、Color、ColorIndex、FontStyle、Italic、Name、Size、Strikethrough、Subscript、Superscript、Underline) が含まれているかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: includeFont
  fullName: includeFont
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeFont: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.includeNumber
  summary: >-
    スタイルに NumberFormat プロパティが含まれているかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: includeNumber
  fullName: includeNumber
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeNumber: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.includePatterns
  summary: >-
    スタイルに塗りつぶしのプロパティ (Color、ColorIndex、InvertIfNegative、Pattern、PatternColor、PatternColorIndex) が含まれているかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: includePatterns
  fullName: includePatterns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includePatterns: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.includeProtection
  summary: >-
    スタイルに保護のプロパティ (FormulaHidden および Locked) が含まれているかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: includeProtection
  fullName: includeProtection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeProtection: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.indentLevel
  summary: >-
    スタイルのインデント レベルを示す 0 から 250 の範囲内の整数。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: indentLevel
  fullName: indentLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'indentLevel: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Style.load
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。
  remarks: "このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。\n\n`load(option?: string | string[]): Excel.Style`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。\n\n`load(option?: { select?: string; expand?: string; }): Excel.Style`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Style`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");            \n    style.load(\"textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked\");\n\n    await context.sync();\n\n    console.log(\"Orientation: \" + style.textOrientation);\n    console.log(\"Horizontal alignment: \" + style.horizontalAlignment);\n    console.log(\"Add indent: \" + style.autoIndent);\n    console.log(\"Reading order: \" + style.readingOrder);\n    console.log(\"Wrap text: \" + style.wrapText);\n    console.log(\"Include protection: \" + style.includeProtection);\n    console.log(\"Shrink to fit: \" + style.shrinkToFit);\n    console.log(\"Style locked: \" + style.locked);\n});\n```"
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.StyleLoadOptions): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.StyleLoadOptions
- uid: excel_release.Excel.Style.load_1
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: ''
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type:
      - string | string[]
- uid: excel_release.Excel.Style.load_2
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Style.locked
  summary: >-
    ワークシートが保護されている場合、オブジェクトがロックされるかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: locked
  fullName: locked
  langs:
  - typeScript
  type: property
  syntax:
    content: 'locked: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.name
  summary: >-
    スタイルの名前。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Style.numberFormat
  summary: >-
    スタイルで適用される数値形式の表示形式コード。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: numberFormat
  fullName: numberFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormat: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Style.numberFormatLocal
  summary: >-
    スタイルで適用される数値形式のローカライズされた表示形式コード。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: numberFormatLocal
  fullName: numberFormatLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormatLocal: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Style.readingOrder
  summary: >-
    スタイルで適用される読み上げ順序。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: readingOrder
  fullName: readingOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
    return:
      type:
      - Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
- uid: excel_release.Excel.Style.set
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Excel.Style): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.StyleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type:
      - Interfaces.StyleUpdateData
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.Style.set_1
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Style): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Style
- uid: excel_release.Excel.Style.shrinkToFit
  summary: >-
    使用可能な列幅に収まるように自動的に文字列が縮小されるかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: shrinkToFit
  fullName: shrinkToFit
  langs:
  - typeScript
  type: property
  syntax:
    content: 'shrinkToFit: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Style.textOrientation
  summary: >-
    スタイルで適用されるテキストの向き。


    \[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: textOrientation
  fullName: textOrientation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textOrientation: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.Style.toJSON
  summary: API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。 (`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の Excel の Style オブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、元のオブジェクトから`Excel.Interfaces.StyleData` <!-- -->読み込まれた子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.StyleData;'
    return:
      type:
      - excel.Excel.Interfaces.StyleData
      description: ''
- uid: excel_release.Excel.Style.verticalAlignment
  summary: >-
    スタイルで適用される垂直方向の配置を表します。 詳細については、「Excel の配置」を参照してください。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: verticalAlignment
  fullName: verticalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
    return:
      type:
      - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
- uid: excel_release.Excel.Style.wrapText
  summary: >-
    Microsoft Excel でオブジェクト内のテキストをラップするかどうかを示します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: wrapText
  fullName: wrapText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'wrapText: boolean;'
    return:
      type:
      - boolean
