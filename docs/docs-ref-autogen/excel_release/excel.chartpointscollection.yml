### YamlMime:UniversalReference
ms.openlocfilehash: 96c7a20d063ecf21925b8d6d4973e378c02fcb5c
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114912"
items:
- uid: excel_release.Excel.ChartPointsCollection
  summary: >-
    グラフ内の系列内のすべてのグラフのポイントのコレクションです。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ChartPointsCollection
  fullName: Excel.ChartPointsCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ChartPointsCollection.context
  - excel_release.Excel.ChartPointsCollection.count
  - excel_release.Excel.ChartPointsCollection.getCount
  - excel_release.Excel.ChartPointsCollection.getItemAt
  - excel_release.Excel.ChartPointsCollection.items
  - excel_release.Excel.ChartPointsCollection.load
  - excel_release.Excel.ChartPointsCollection.load_1
  - excel_release.Excel.ChartPointsCollection.load_2
  - excel_release.Excel.ChartPointsCollection.toJSON
- uid: excel_release.Excel.ChartPointsCollection.context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ChartPointsCollection.count
  summary: >-
    系列内にあるグラフのポイントの数を取得します。読み取り専用です。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.ChartPointsCollection.getCount
  summary: >-
    系列に含まれるグラフのポイントの数を返します。


    \[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.ChartPointsCollection.getItemAt
  summary: >-
    データ系列内の位置に基づくポイントを取得します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.ChartPoint;'
    return:
      type:
      - excel.Excel.ChartPoint
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Set the border color for the first points in the points collection\nExcel.run(function (ctx) { \n    var points = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    points.getItemAt(0).format.fill.setSolidColor(\"8FBC8F\");\n    return ctx.sync().then(function() {\n        console.log(\"Point Border Color Changed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: 取得するオブジェクトのインデックス値。0 を起点とする番号になります。
      type:
      - number
- uid: excel_release.Excel.ChartPointsCollection.items
  summary: このコレクション内の読み込まれた子アイテムを取得します。
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.ChartPoint[];'
    return:
      type:
      - Excel.ChartPoint[]
- uid: excel_release.Excel.ChartPointsCollection.load
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。
  remarks: >-
    このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。


    `load(option?: string | string[]): Excel.ChartPointsCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。


    `load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.ChartPointsCollection.load_1
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Get the names of points in the points collection\nExcel.run(function (ctx) { \n    var pointsCollection = \n        ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    pointsCollection.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"Points Collection loaded\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of points\nExcel.run(function (ctx) { \n    var pointsCollection = \n        ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    pointsCollection.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"points: Count= \" + pointsCollection.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type:
      - string | string[]
- uid: excel_release.Excel.ChartPointsCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.ChartPointsCollection.toJSON
  summary: API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。 (`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。`Excel.ChartPointsCollection`元のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、コレクションのアイテムから`Excel.Interfaces.ChartPointsCollectionData` <!-- -->読み込まれたプロパティの浅いコピーを持つ "items" 配列を含む、プレーンな JavaScript オブジェクト (として型指定) を返します。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartPointsCollectionData
      description: ''
