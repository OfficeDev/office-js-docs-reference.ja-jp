### YamlMime:UniversalReference
ms.openlocfilehash: 1563a1cc818bc1c0a64ad08987c2779fa40fc1cf
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30108857"
items:
- uid: excel_release.Excel.WorksheetProtection
  summary: >-
    <span data-ttu-id="48180-101">シート オブジェクトの保護を表します。</span><span class="sxs-lookup"><span data-stu-id="48180-101">Represents the protection of a sheet object.</span></span>


    <span data-ttu-id="48180-102">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48180-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorksheetProtection
  fullName: Excel.WorksheetProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorksheetProtection.context
  - excel_release.Excel.WorksheetProtection.load
  - excel_release.Excel.WorksheetProtection.load_1
  - excel_release.Excel.WorksheetProtection.load_2
  - excel_release.Excel.WorksheetProtection.options
  - excel_release.Excel.WorksheetProtection.protect
  - excel_release.Excel.WorksheetProtection.protected
  - excel_release.Excel.WorksheetProtection.toJSON
  - excel_release.Excel.WorksheetProtection.unprotect
- uid: excel_release.Excel.WorksheetProtection.context
  summary: <span data-ttu-id="48180-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="48180-103">The request context associated with the object.</span></span> <span data-ttu-id="48180-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="48180-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorksheetProtection.load
  summary: <span data-ttu-id="48180-105">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="48180-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48180-106">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="48180-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="48180-107">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="48180-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="48180-108">`load(option?: string | string[]): Excel.WorksheetProtection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="48180-108">`load(option?: string | string[]): Excel.WorksheetProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="48180-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="48180-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="48180-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="48180-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="48180-111">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="48180-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="48180-112">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="48180-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="48180-113">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="48180-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="48180-114">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="48180-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorksheetProtectionLoadOptions
- uid: excel_release.Excel.WorksheetProtection.load_1
  summary: <span data-ttu-id="48180-115">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="48180-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48180-116">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="48180-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="48180-117">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="48180-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorksheetProtection.load_2
  summary: <span data-ttu-id="48180-118">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="48180-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="48180-119">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="48180-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="48180-120">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="48180-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorksheetProtection.options
  summary: >-
    <span data-ttu-id="48180-p106">シートの保護のオプション。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="48180-p106">Sheet protection options. Read-only.</span></span>


    <span data-ttu-id="48180-123">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48180-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: options
  fullName: options
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly options: Excel.WorksheetProtectionOptions;'
    return:
      type:
      - excel.Excel.WorksheetProtectionOptions
- uid: excel_release.Excel.WorksheetProtection.protect
  summary: >-
    <span data-ttu-id="48180-124">ワークシートを保護します。</span><span class="sxs-lookup"><span data-stu-id="48180-124">Protects a worksheet.</span></span> <span data-ttu-id="48180-125">ワークシートが既に保護されている場合は、失敗します。</span><span class="sxs-lookup"><span data-stu-id="48180-125">Fails if the worksheet has already been protected.</span></span>


    <span data-ttu-id="48180-126">\[[API set: excelapi 1.2 for options、password の 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48180-126">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(options, password)
  fullName: protect(options, password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48180-127\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"48180-127\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Protect inserting or deleting rows in Sheet1\n  sheet.protection.protect({\n    allowInsertRows: false,\n    allowDeleteRows: false\n  });\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect(null, password);\n    }\n});\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="48180-128">省略可能。</span><span class="sxs-lookup"><span data-stu-id="48180-128">Optional.</span></span> <span data-ttu-id="48180-129">シート保護オプション。</span><span class="sxs-lookup"><span data-stu-id="48180-129">Sheet protection options.</span></span>
      type:
      - excel.Excel.WorksheetProtectionOptions
    - id: password
      description: <span data-ttu-id="48180-130">省略可能。</span><span class="sxs-lookup"><span data-stu-id="48180-130">Optional.</span></span> <span data-ttu-id="48180-131">シート保護のパスワードを入力します。</span><span class="sxs-lookup"><span data-stu-id="48180-131">Sheet protection password.</span></span>
      type:
      - string
- uid: excel_release.Excel.WorksheetProtection.protected
  summary: >-
    <span data-ttu-id="48180-132">ワークシートが保護されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="48180-132">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="48180-133">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="48180-133">Read-only.</span></span>


    <span data-ttu-id="48180-134">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="48180-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.WorksheetProtection.toJSON
  summary: <span data-ttu-id="48180-135">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="48180-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="48180-136">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元のブック保護オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.WorksheetProtectionData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="48180-136">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorksheetProtectionData
      description: ''
- uid: excel_release.Excel.WorksheetProtection.unprotect
  summary: >-
    <span data-ttu-id="48180-137">ワークシートの保護を解除します。</span><span class="sxs-lookup"><span data-stu-id="48180-137">Unprotects a worksheet.</span></span>


    <span data-ttu-id="48180-138">\[[API set: excelapi 1.7 (パスワード](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets))\]</span><span class="sxs-lookup"><span data-stu-id="48180-138">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"48180-139\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"48180-139\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Remove all protects applied to Sheet1\n  sheet.protection.unprotect();\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Unprotecting a worksheet with unprotect() will remove all \n// WorksheetProtectionOptions options applied to a worksheet.\n// To remove only a subset of WorksheetProtectionOptions use the \n// protect() method and set the options you wish to remove to true.\nExcel.run(function(ctx) {\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n  sheet.protection.protect({\n    allowInsertRows: false, // Protect row insertion\n    allowDeleteRows: true // Unprotect row deletion\n  });\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="48180-140">シート保護のパスワードを入力します。</span><span class="sxs-lookup"><span data-stu-id="48180-140">sheet protection password.</span></span>
      type:
      - string
