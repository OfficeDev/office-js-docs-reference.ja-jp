### YamlMime:UniversalReference
ms.openlocfilehash: 541fcb12e43c834e851af290685be9e015cb6e23
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30106141"
items:
- uid: excel_release.Excel.WorkbookProtection
  summary: >-
    <span data-ttu-id="9c19b-101">ブックオブジェクトの保護を表します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-101">Represents the protection of a workbook object.</span></span>


    <span data-ttu-id="9c19b-102">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c19b-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookProtection
  fullName: Excel.WorkbookProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorkbookProtection.context
  - excel_release.Excel.WorkbookProtection.load
  - excel_release.Excel.WorkbookProtection.load_1
  - excel_release.Excel.WorkbookProtection.load_2
  - excel_release.Excel.WorkbookProtection.protect
  - excel_release.Excel.WorkbookProtection.protected
  - excel_release.Excel.WorkbookProtection.toJSON
  - excel_release.Excel.WorkbookProtection.unprotect
- uid: excel_release.Excel.WorkbookProtection.context
  summary: <span data-ttu-id="9c19b-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="9c19b-103">The request context associated with the object.</span></span> <span data-ttu-id="9c19b-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="9c19b-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorkbookProtection.load
  summary: <span data-ttu-id="9c19b-105">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="9c19b-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9c19b-106">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9c19b-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="9c19b-107">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="9c19b-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="9c19b-108">`load(option?: string | string[]): Excel.WorkbookProtection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="9c19b-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="9c19b-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="9c19b-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="9c19b-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="9c19b-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="9c19b-111">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="9c19b-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="9c19b-112">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9c19b-113">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9c19b-114">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="9c19b-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
- uid: excel_release.Excel.WorkbookProtection.load_1
  summary: <span data-ttu-id="9c19b-115">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="9c19b-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9c19b-116">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9c19b-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="9c19b-117">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="9c19b-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorkbookProtection.load_2
  summary: <span data-ttu-id="9c19b-118">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="9c19b-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9c19b-119">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9c19b-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="9c19b-120">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="9c19b-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorkbookProtection.protect
  summary: >-
    <span data-ttu-id="9c19b-121">ブックを保護します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-121">Protects a workbook.</span></span> <span data-ttu-id="9c19b-122">ブックが保護されている場合は失敗します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-122">Fails if the workbook has been protected.</span></span>


    <span data-ttu-id="9c19b-123">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c19b-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(password)
  fullName: protect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9c19b-124\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c19b-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect(password);\n    }\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="9c19b-125">ブックの保護パスワード。</span><span class="sxs-lookup"><span data-stu-id="9c19b-125">workbook protection password.</span></span>
      type:
      - string
- uid: excel_release.Excel.WorkbookProtection.protected
  summary: >-
    <span data-ttu-id="9c19b-126">ブックが保護されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="9c19b-127">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9c19b-127">Read-Only.</span></span>


    <span data-ttu-id="9c19b-128">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c19b-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.WorkbookProtection.toJSON
  summary: <span data-ttu-id="9c19b-129">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="9c19b-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="9c19b-130">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の WorkbookProtection オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.WorkbookProtectionData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookProtectionData
      description: ''
- uid: excel_release.Excel.WorkbookProtection.unprotect
  summary: >-
    <span data-ttu-id="9c19b-131">ブックの保護を解除します。</span><span class="sxs-lookup"><span data-stu-id="9c19b-131">Unprotects a workbook.</span></span>


    <span data-ttu-id="9c19b-132">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c19b-132">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9c19b-133\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c19b-133\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="9c19b-134">ブックの保護パスワード。</span><span class="sxs-lookup"><span data-stu-id="9c19b-134">workbook protection password.</span></span>
      type:
      - string
