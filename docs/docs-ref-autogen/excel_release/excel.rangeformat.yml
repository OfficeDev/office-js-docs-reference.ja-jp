### YamlMime:UniversalReference
ms.openlocfilehash: ccbda04ecbcb57549c8d62fa45dc9557496e0057
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30111244"
items:
- uid: excel_release.Excel.RangeFormat
  summary: >-
    範囲のフォント、塗りつぶし、境界線、配置などのプロパティをカプセル化する、書式設定オブジェクトです。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.RangeFormat
  fullName: Excel.RangeFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.RangeFormat.autofitColumns
  - excel_release.Excel.RangeFormat.autofitRows
  - excel_release.Excel.RangeFormat.borders
  - excel_release.Excel.RangeFormat.columnWidth
  - excel_release.Excel.RangeFormat.context
  - excel_release.Excel.RangeFormat.fill
  - excel_release.Excel.RangeFormat.font
  - excel_release.Excel.RangeFormat.horizontalAlignment
  - excel_release.Excel.RangeFormat.load
  - excel_release.Excel.RangeFormat.load_1
  - excel_release.Excel.RangeFormat.load_2
  - excel_release.Excel.RangeFormat.protection
  - excel_release.Excel.RangeFormat.rowHeight
  - excel_release.Excel.RangeFormat.set
  - excel_release.Excel.RangeFormat.set_1
  - excel_release.Excel.RangeFormat.textOrientation
  - excel_release.Excel.RangeFormat.toJSON
  - excel_release.Excel.RangeFormat.useStandardHeight
  - excel_release.Excel.RangeFormat.useStandardWidth
  - excel_release.Excel.RangeFormat.verticalAlignment
  - excel_release.Excel.RangeFormat.wrapText
- uid: excel_release.Excel.RangeFormat.autofitColumns
  summary: >-
    現在の列のデータに基づいて、現在の範囲の列の幅を最適な幅に変更します。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: autofitColumns()
  fullName: autofitColumns()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'autofitColumns(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.RangeFormat.autofitRows
  summary: >-
    現在の行のデータに基づいて、現在の範囲の行の高さを最適な高さに変更します。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: autofitRows()
  fullName: autofitRows()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'autofitRows(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.RangeFormat.borders
  summary: >-
    選択した範囲全体に適用する境界線オブジェクトのコレクション。読み取り専用です。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: borders
  fullName: borders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly borders: Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
- uid: excel_release.Excel.RangeFormat.columnWidth
  summary: >-
    範囲内のすべての列の幅を取得または設定します。列の幅が均一でない場合は、null が返されます。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: columnWidth
  fullName: columnWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnWidth: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.RangeFormat.context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.RangeFormat.fill
  summary: >-
    範囲全体に定義された塗りつぶしオブジェクトを返します。読み取り専用です。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: fill
  fullName: fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
- uid: excel_release.Excel.RangeFormat.font
  summary: >-
    範囲全体に定義されたフォント オブジェクトを返します。読み取り専用です。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
- uid: excel_release.Excel.RangeFormat.horizontalAlignment
  summary: >-
    指定したオブジェクトの水平方向の配置を表します。 詳細については、「Excel の配置」を参照してください。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: horizontalAlignment
  fullName: horizontalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
    return:
      type:
      - Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
- uid: excel_release.Excel.RangeFormat.load
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。
  remarks: >-
    このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。


    `load(option?: string | string[]): Excel.RangeFormat`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。


    `load(option?: { select?: string; expand?: string; }): Excel.RangeFormat`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFormat`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeFormatLoadOptions): Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeFormatLoadOptions
- uid: excel_release.Excel.RangeFormat.load_1
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
      description: "\n#### <a name=\"examples\"></a>例\n\n```javascript\n// Below example selects all of the Range's format properties. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    range.load([\"format/*\", \"format/fill\", \"format/borders\", \"format/font\"]);\n    return ctx.sync().then(function() {\n        console.log(range.format.wrapText);\n        console.log(range.format.fill.color);\n        console.log(range.format.font.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name, fill color and wraps text. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.wrapText = true;\n    range.format.font.name = 'Times New Roman';\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below adds grid border around the range.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.borders.getItem('InsideHorizontal').style = 'Continuous';\n    range.format.borders.getItem('InsideVertical').style = 'Continuous';\n    range.format.borders.getItem('EdgeBottom').style = 'Continuous';\n    range.format.borders.getItem('EdgeLeft').style = 'Continuous';\n    range.format.borders.getItem('EdgeRight').style = 'Continuous';\n    range.format.borders.getItem('EdgeTop').style = 'Continuous';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
      type:
      - string | string[]
- uid: excel_release.Excel.RangeFormat.load_2
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.RangeFormat.protection
  summary: >-
    範囲に対する書式保護オブジェクトを返します。読み取り専用です。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: protection
  fullName: protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.FormatProtection;'
    return:
      type:
      - excel.Excel.FormatProtection
- uid: excel_release.Excel.RangeFormat.rowHeight
  summary: >-
    範囲内のすべての行の高さを取得または設定します。 行の高さが均一ではない場合は、null が返されます。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: rowHeight
  fullName: rowHeight
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowHeight: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.RangeFormat.set
  summary: 一度に1つのオブジェクトの複数のプロパティを設定します。 適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。
  remarks: >-
    このメソッドには、次の追加のシグネチャがあります。


    `set(properties: Excel.RangeFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。
      type:
      - Interfaces.RangeFormatUpdateData
    - id: options
      description: プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.RangeFormat.set_1
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeFormat
- uid: excel_release.Excel.RangeFormat.textOrientation
  summary: >-
    該当する範囲内のすべてのセルのテキストの向きを設定します。 テキストの向きは、-90 から90、または180の整数である必要があります。垂直方向のテキスト。 範囲内の向きが均一ではない場合は、null が返されます。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: textOrientation
  fullName: textOrientation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textOrientation: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a>例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:E2\");\n\n    // Set textOrientation to either an integer between -90 and 90\n    // or to 180 for vertically-oriented text.\n    range.format.textOrientation = 90;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.RangeFormat.toJSON
  summary: API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。 (`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の Excel の rangeformat オブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、元のオブジェクトから`Excel.Interfaces.RangeFormatData` <!-- -->読み込まれた子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFormatData
      description: ''
- uid: excel_release.Excel.RangeFormat.useStandardHeight
  summary: >-
    Range オブジェクトの行の高さを、シートの標準の高さと等しくするかどうかを指定します。 Range オブジェクトの行の高さがシートの標準の高さと等しい場合は True を返します。 範囲に複数の行が含まれ、行の高さがすべて同じでない場合は、Null を返します。 それ以外の場合は False を返します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: useStandardHeight
  fullName: useStandardHeight
  langs:
  - typeScript
  type: property
  syntax:
    content: 'useStandardHeight: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.RangeFormat.useStandardWidth
  summary: >-
    Range オブジェクトの列の幅が、シートの標準の幅と等しいかどうかを示します。 Range オブジェクトの列の幅がシートの標準の幅と等しい場合は True を返します。 範囲に複数の列が含まれ、列の高さがすべて同じでない場合は、Null を返します。 それ以外の場合は False を返します。


    \[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: useStandardWidth
  fullName: useStandardWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'useStandardWidth: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.RangeFormat.verticalAlignment
  summary: >-
    指定したオブジェクトの垂直方向の配置を表します。 詳細については、「Excel の配置」を参照してください。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: verticalAlignment
  fullName: verticalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
    return:
      type:
      - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
- uid: excel_release.Excel.RangeFormat.wrapText
  summary: >-
    オブジェクト内のテキストを Excel でラップするかどうかを表します。null 値は、範囲全体に一様なラップ設定がないことを表します。


    \[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: wrapText
  fullName: wrapText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'wrapText: boolean;'
    return:
      type:
      - boolean
