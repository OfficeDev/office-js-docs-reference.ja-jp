### YamlMime:UniversalReference
ms.openlocfilehash: 444b0ae7e43f55652f5557bd47e42b8567545dd7
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110299"
items:
- uid: excel_release.Excel.DataValidation
  summary: >-
    <span data-ttu-id="0fbfa-101">現在の範囲に適用されるデータの入力規則を表します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-101">Represents the data validation applied to the current range.</span></span>


    <span data-ttu-id="0fbfa-102">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidation
  fullName: Excel.DataValidation
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.DataValidation.clear
  - excel_release.Excel.DataValidation.context
  - excel_release.Excel.DataValidation.errorAlert
  - excel_release.Excel.DataValidation.ignoreBlanks
  - excel_release.Excel.DataValidation.load
  - excel_release.Excel.DataValidation.load_1
  - excel_release.Excel.DataValidation.load_2
  - excel_release.Excel.DataValidation.prompt
  - excel_release.Excel.DataValidation.rule
  - excel_release.Excel.DataValidation.set
  - excel_release.Excel.DataValidation.set_1
  - excel_release.Excel.DataValidation.toJSON
  - excel_release.Excel.DataValidation.type
  - excel_release.Excel.DataValidation.valid
- uid: excel_release.Excel.DataValidation.clear
  summary: >-
    <span data-ttu-id="0fbfa-103">現在の範囲からデータの入力規則をクリアします。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-103">Clears the data validation from the current range.</span></span>


    <span data-ttu-id="0fbfa-104">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.DataValidation.context
  summary: <span data-ttu-id="0fbfa-105">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-105">The request context associated with the object.</span></span> <span data-ttu-id="0fbfa-106">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.DataValidation.errorAlert
  summary: >-
    <span data-ttu-id="0fbfa-107">無効なデータが入力された場合のエラー警告。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-107">Error alert when user enters invalid data.</span></span>


    <span data-ttu-id="0fbfa-108">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: errorAlert
  fullName: errorAlert
  langs:
  - typeScript
  type: property
  syntax:
    content: 'errorAlert: Excel.DataValidationErrorAlert;'
    return:
      type:
      - excel.Excel.DataValidationErrorAlert
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0fbfa-109\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"0fbfa-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const commentsRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Comments\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    commentsRange.dataValidation.clear();   \n\n    // If the value of A2 is contained in the value of C2, then \n    // SEARCH(A2,C2) returns the number where it begins. Otherwise,\n    // it does not return a number.\n    let redundantStringRule = {\n        custom: {\n            formula: \"=NOT(ISNUMBER(SEARCH(A2,C2)))\"\n        }\n    };\n    commentsRange.dataValidation.rule = redundantStringRule;\n    commentsRange.dataValidation.errorAlert = {\n        message: \"It is redundant to include the baby name in the comment.\",\n        showAlert: true,\n        style: \"Information\",\n        title: \"Baby Name in Comment\"\n    };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.DataValidation.ignoreBlanks
  summary: >-
    <span data-ttu-id="0fbfa-110">空白を無視します。つまり、空白のセルではデータの入力規則が検証されません。既定では true に設定されます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-110">Ignore blanks: no data validation will be performed on blank cells, it defaults to true.</span></span>


    <span data-ttu-id="0fbfa-111">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: ignoreBlanks
  fullName: ignoreBlanks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreBlanks: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.DataValidation.load
  summary: <span data-ttu-id="0fbfa-112">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0fbfa-113">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="0fbfa-114">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="0fbfa-115">`load(option?: string | string[]): Excel.DataValidation`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-115">`load(option?: string | string[]): Excel.DataValidation` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="0fbfa-116">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-116">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="0fbfa-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation` - Only available on collection types.</span></span> <span data-ttu-id="0fbfa-118">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="0fbfa-119">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0fbfa-120">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0fbfa-121">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.DataValidationLoadOptions): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.DataValidationLoadOptions
- uid: excel_release.Excel.DataValidation.load_1
  summary: <span data-ttu-id="0fbfa-122">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0fbfa-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="0fbfa-124">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.DataValidation.load_2
  summary: <span data-ttu-id="0fbfa-125">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0fbfa-126">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="0fbfa-127">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.DataValidation.prompt
  summary: >-
    <span data-ttu-id="0fbfa-128">ユーザーがセルを選択したときにメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-128">Prompt when users select a cell.</span></span>


    <span data-ttu-id="0fbfa-129">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-129">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: prompt
  fullName: prompt
  langs:
  - typeScript
  type: property
  syntax:
    content: 'prompt: Excel.DataValidationPrompt;'
    return:
      type:
      - excel.Excel.DataValidationPrompt
- uid: excel_release.Excel.DataValidation.rule
  summary: >-
    <span data-ttu-id="0fbfa-130">さまざまな種類のデータ検証条件を含むデータ入力規則。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-130">Data validation rule that contains different type of data validation criteria.</span></span>


    <span data-ttu-id="0fbfa-131">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.DataValidationRule;'
    return:
      type:
      - excel.Excel.DataValidationRule
- uid: excel_release.Excel.DataValidation.set
  summary: <span data-ttu-id="0fbfa-132">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0fbfa-133">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="0fbfa-134">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-134">This method has the following additional signature:</span></span>


    `set(properties: Excel.DataValidation): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DataValidationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="0fbfa-135">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.DataValidationUpdateData
    - id: options
      description: <span data-ttu-id="0fbfa-136">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.DataValidation.set_1
  summary: <span data-ttu-id="0fbfa-137">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.DataValidation): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.DataValidation
- uid: excel_release.Excel.DataValidation.toJSON
  summary: <span data-ttu-id="0fbfa-138">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="0fbfa-139">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の DataValidation オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.DataValidationData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataValidation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataValidationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataValidationData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationData
      description: ''
- uid: excel_release.Excel.DataValidation.type
  summary: >-
    <span data-ttu-id="0fbfa-140">データの入力規則の種類。詳細については、Excel.DataValidationType を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-140">Type of the data validation, see Excel.DataValidationType for details.</span></span>


    <span data-ttu-id="0fbfa-141">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
    return:
      type:
      - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
- uid: excel_release.Excel.DataValidation.valid
  summary: >-
    <span data-ttu-id="0fbfa-142">すべてのセルの値がデータの入力規則に従っているかどうかを表します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-142">Represents if all cell values are valid according to the data validation rules.</span></span> <span data-ttu-id="0fbfa-143">すべてのセルの値が有効な場合は true、すべてのセルの値が無効な場合は false を返します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-143">Returns true if all cell values are valid, or false if all cell values are invalid.</span></span> <span data-ttu-id="0fbfa-144">範囲内に有効で無効なセル値がある場合は、null を返します。</span><span class="sxs-lookup"><span data-stu-id="0fbfa-144">Returns null if there are both valid and invalid cell values within the range.</span></span>


    <span data-ttu-id="0fbfa-145">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0fbfa-145">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valid
  fullName: valid
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valid: boolean;'
    return:
      type:
      - boolean
