### YamlMime:UniversalReference
ms.openlocfilehash: 2b8430fe5999a52ef42600ade810bb497ddd1401
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30109494"
items:
- uid: excel_release.Excel.PivotLayout
  summary: >-
    <span data-ttu-id="d67c6-101">ピボットテーブルの視覚的なレイアウトを表します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-101">Represents the visual layout of the PivotTable.</span></span>


    <span data-ttu-id="d67c6-102">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotLayout
  fullName: Excel.PivotLayout
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.PivotLayout.context
  - excel_release.Excel.PivotLayout.getColumnLabelRange
  - excel_release.Excel.PivotLayout.getDataBodyRange
  - excel_release.Excel.PivotLayout.getFilterAxisRange
  - excel_release.Excel.PivotLayout.getRange
  - excel_release.Excel.PivotLayout.getRowLabelRange
  - excel_release.Excel.PivotLayout.layoutType
  - excel_release.Excel.PivotLayout.load
  - excel_release.Excel.PivotLayout.load_1
  - excel_release.Excel.PivotLayout.load_2
  - excel_release.Excel.PivotLayout.set
  - excel_release.Excel.PivotLayout.set_1
  - excel_release.Excel.PivotLayout.showColumnGrandTotals
  - excel_release.Excel.PivotLayout.showRowGrandTotals
  - excel_release.Excel.PivotLayout.subtotalLocation
  - excel_release.Excel.PivotLayout.toJSON
- uid: excel_release.Excel.PivotLayout.context
  summary: <span data-ttu-id="d67c6-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d67c6-103">The request context associated with the object.</span></span> <span data-ttu-id="d67c6-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.PivotLayout.getColumnLabelRange
  summary: >-
    <span data-ttu-id="d67c6-105">ピボットテーブルの列ラベルが存在する範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-105">Returns the range where the PivotTable's column labels reside.</span></span>


    <span data-ttu-id="d67c6-106">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumnLabelRange()
  fullName: getColumnLabelRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.PivotLayout.getDataBodyRange
  summary: >-
    <span data-ttu-id="d67c6-107">ピボットテーブルのデータ値が存在する範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-107">Returns the range where the PivotTable's data values reside.</span></span>


    <span data-ttu-id="d67c6-108">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d67c6-109\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d67c6-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // the layout controls the ranges used by the PivotTable\n    const range = pivotTable.layout.getDataBodyRange();\n\n    // get all the data hierarchy totals\n    const grandTotalRange = range.getLastRow();\n    grandTotalRange.load(\"address\");\n    await context.sync();\n    \n    // use the wholesale and farm sale totals to make a final sum\n    const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange(\"B27:C27\");\n    masterTotalRange.formulas = [[\"All Crates\", \"=SUM(\" + grandTotalRange.address + \")\"]];\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.PivotLayout.getFilterAxisRange
  summary: >-
    <span data-ttu-id="d67c6-110">ピボットテーブルのフィルター エリアの範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-110">Returns the range of the PivotTable's filter area.</span></span>


    <span data-ttu-id="d67c6-111">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getFilterAxisRange()
  fullName: getFilterAxisRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilterAxisRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.PivotLayout.getRange
  summary: >-
    <span data-ttu-id="d67c6-112">フィルター エリアを除く、ピボットテーブルが存在する範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-112">Returns the range the PivotTable exists on, excluding the filter area.</span></span>


    <span data-ttu-id="d67c6-113">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-113">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.PivotLayout.getRowLabelRange
  summary: >-
    <span data-ttu-id="d67c6-114">ピボットテーブルの行ラベルが存在する範囲を返します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-114">Returns the range where the PivotTable's row labels reside.</span></span>


    <span data-ttu-id="d67c6-115">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-115">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRowLabelRange()
  fullName: getRowLabelRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.PivotLayout.layoutType
  summary: >-
    <span data-ttu-id="d67c6-116">このプロパティは、ピボットテーブルのすべてのフィールドの PivotLayoutType を示します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-116">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="d67c6-117">フィールドによって状態が異なる場合は null 値になります。</span><span class="sxs-lookup"><span data-stu-id="d67c6-117">If fields have different states, this will be null.</span></span>


    <span data-ttu-id="d67c6-118">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layoutType
  fullName: layoutType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
    return:
      type:
      - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
- uid: excel_release.Excel.PivotLayout.load
  summary: <span data-ttu-id="d67c6-119">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d67c6-120">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d67c6-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d67c6-121">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d67c6-121">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d67c6-122">`load(option?: string | string[]): Excel.PivotLayout`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="d67c6-122">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d67c6-123">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d67c6-123">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d67c6-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="d67c6-125">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="d67c6-125">It is similar to the preceding signature.</span></span> <span data-ttu-id="d67c6-126">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-126">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d67c6-127">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-127">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d67c6-128">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-128">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PivotLayoutLoadOptions
- uid: excel_release.Excel.PivotLayout.load_1
  summary: <span data-ttu-id="d67c6-129">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d67c6-130">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d67c6-130">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d67c6-131">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d67c6-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.PivotLayout.load_2
  summary: <span data-ttu-id="d67c6-132">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d67c6-133">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d67c6-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="d67c6-134">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d67c6-134">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.PivotLayout.set
  summary: <span data-ttu-id="d67c6-135">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-135">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d67c6-136">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-136">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="d67c6-137">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="d67c6-137">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotLayout): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="d67c6-138">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d67c6-138">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotLayoutUpdateData
    - id: options
      description: <span data-ttu-id="d67c6-139">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-139">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.PivotLayout.set_1
  summary: <span data-ttu-id="d67c6-140">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-140">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PivotLayout): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PivotLayout
- uid: excel_release.Excel.PivotLayout.showColumnGrandTotals
  summary: >-
    <span data-ttu-id="d67c6-141">true の場合、ピボットテーブル レポートに列の総計が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-141">True if the PivotTable report shows grand totals for columns.</span></span>


    <span data-ttu-id="d67c6-142">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-142">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showColumnGrandTotals
  fullName: showColumnGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showColumnGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.PivotLayout.showRowGrandTotals
  summary: >-
    <span data-ttu-id="d67c6-143">true の場合、ピボットテーブル レポートに行の総計が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d67c6-143">True if the PivotTable report shows grand totals for rows.</span></span>


    <span data-ttu-id="d67c6-144">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-144">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showRowGrandTotals
  fullName: showRowGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showRowGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.PivotLayout.subtotalLocation
  summary: >-
    <span data-ttu-id="d67c6-145">このプロパティは、ピボットテーブルのすべてのフィールドの SubtotalLocationType を示します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-145">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="d67c6-146">フィールドによって状態が異なる場合は null 値になります。</span><span class="sxs-lookup"><span data-stu-id="d67c6-146">If fields have different states, this will be null.</span></span>


    <span data-ttu-id="d67c6-147">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d67c6-147">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: subtotalLocation
  fullName: subtotalLocation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
    return:
      type:
      - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
- uid: excel_release.Excel.PivotLayout.toJSON
  summary: <span data-ttu-id="d67c6-148">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d67c6-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d67c6-149">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の PivotLayout オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.PivotLayoutData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="d67c6-149">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotLayoutData
      description: ''
