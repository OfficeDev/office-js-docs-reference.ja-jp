### YamlMime:UniversalReference
ms.openlocfilehash: 49b5b136463b4b8790dac6784f133005d0a73fea
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105427"
items:
- uid: excel_release.Excel.ConditionalFormat
  summary: >-
    <span data-ttu-id="1e459-101">条件付き書式の範囲、形式、ルール、その他のプロパティをカプセル化するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="1e459-101">An object encapsulating a conditional format's range, format, rule, and other properties.</span></span>


    <span data-ttu-id="1e459-102">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalFormat
  fullName: Excel.ConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ConditionalFormat.cellValue
  - excel_release.Excel.ConditionalFormat.cellValueOrNullObject
  - excel_release.Excel.ConditionalFormat.colorScale
  - excel_release.Excel.ConditionalFormat.colorScaleOrNullObject
  - excel_release.Excel.ConditionalFormat.context
  - excel_release.Excel.ConditionalFormat.custom
  - excel_release.Excel.ConditionalFormat.customOrNullObject
  - excel_release.Excel.ConditionalFormat.dataBar
  - excel_release.Excel.ConditionalFormat.dataBarOrNullObject
  - excel_release.Excel.ConditionalFormat.delete
  - excel_release.Excel.ConditionalFormat.getRange
  - excel_release.Excel.ConditionalFormat.getRangeOrNullObject
  - excel_release.Excel.ConditionalFormat.iconSet
  - excel_release.Excel.ConditionalFormat.iconSetOrNullObject
  - excel_release.Excel.ConditionalFormat.id
  - excel_release.Excel.ConditionalFormat.load
  - excel_release.Excel.ConditionalFormat.load_1
  - excel_release.Excel.ConditionalFormat.load_2
  - excel_release.Excel.ConditionalFormat.preset
  - excel_release.Excel.ConditionalFormat.presetOrNullObject
  - excel_release.Excel.ConditionalFormat.priority
  - excel_release.Excel.ConditionalFormat.set
  - excel_release.Excel.ConditionalFormat.set_1
  - excel_release.Excel.ConditionalFormat.stopIfTrue
  - excel_release.Excel.ConditionalFormat.textComparison
  - excel_release.Excel.ConditionalFormat.textComparisonOrNullObject
  - excel_release.Excel.ConditionalFormat.toJSON
  - excel_release.Excel.ConditionalFormat.topBottom
  - excel_release.Excel.ConditionalFormat.topBottomOrNullObject
  - excel_release.Excel.ConditionalFormat.type
- uid: excel_release.Excel.ConditionalFormat.cellValue
  summary: >-
    <span data-ttu-id="1e459-103">現在の条件付き書式が cellvalue 型の場合は、セル値の条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-103">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="1e459-104">たとえば、5 ~ 10 の範囲のすべてのセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-104">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="1e459-105">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-105">Read-only.</span></span>


    <span data-ttu-id="1e459-106">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValue
  fullName: cellValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-107\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.cellValueOrNullObject
  summary: >-
    <span data-ttu-id="1e459-108">現在の条件付き書式が cellvalue 型の場合は、セル値の条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-108">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="1e459-109">たとえば、5 ~ 10 の範囲のすべてのセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-109">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="1e459-110">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-110">Read-only.</span></span>


    <span data-ttu-id="1e459-111">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValueOrNullObject
  fullName: cellValueOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.colorScale
  summary: >-
    <span data-ttu-id="1e459-p103">現在の条件付き書式が ColorScale 型の場合、ColorScale の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p103">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="1e459-114">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-114">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScale
  fullName: colorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-115\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.colorScaleOrNullObject
  summary: >-
    <span data-ttu-id="1e459-p104">現在の条件付き書式が ColorScale 型の場合、ColorScale の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p104">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="1e459-118">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-118">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScaleOrNullObject
  fullName: colorScaleOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.context
  summary: <span data-ttu-id="1e459-119">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="1e459-119">The request context associated with the object.</span></span> <span data-ttu-id="1e459-120">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="1e459-120">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ConditionalFormat.custom
  summary: >-
    <span data-ttu-id="1e459-p106">現在の条件付き書式がカスタム型の場合、カスタムの条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p106">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="1e459-123">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-123">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: custom
  fullName: custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly custom: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-124\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.customOrNullObject
  summary: >-
    <span data-ttu-id="1e459-p107">現在の条件付き書式がカスタム型の場合、カスタムの条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p107">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="1e459-127">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: customOrNullObject
  fullName: customOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.dataBar
  summary: >-
    <span data-ttu-id="1e459-p108">現在の条件付き書式がデータ バーの場合、データ バーのプロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p108">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="1e459-130">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-130">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBar
  fullName: dataBar
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-131\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-131\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.dataBarOrNullObject
  summary: >-
    <span data-ttu-id="1e459-p109">現在の条件付き書式がデータ バーの場合、データ バーのプロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p109">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="1e459-134">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-134">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBarOrNullObject
  fullName: dataBarOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.delete
  summary: >-
    <span data-ttu-id="1e459-135">この条件付き書式を削除します。</span><span class="sxs-lookup"><span data-stu-id="1e459-135">Deletes this conditional format.</span></span>


    <span data-ttu-id="1e459-136">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-136">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.ConditionalFormat.getRange
  summary: >-
    <span data-ttu-id="1e459-137">条件付き書式が適用された範囲を返す。</span><span class="sxs-lookup"><span data-stu-id="1e459-137">Returns the range the conditonal format is applied to.</span></span> <span data-ttu-id="1e459-138">複数の範囲に条件付き書式を適用すると、エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="1e459-138">Throws an error if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="1e459-139">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-139">Read-only.</span></span>


    <span data-ttu-id="1e459-140">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-140">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-141\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="1e459-142">conditonal 書式が適用される範囲を返します。または、複数の範囲に条件付き書式が適用されている場合は、null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-142">Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="1e459-143">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-143">Read-only.</span></span>


    <span data-ttu-id="1e459-144">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-144">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.ConditionalFormat.iconSet
  summary: >-
    <span data-ttu-id="1e459-p112">現在の条件付き書式が IconSet 型の場合、IconSet の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p112">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="1e459-147">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-147">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSet
  fullName: iconSet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-148\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-148\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.iconSetOrNullObject
  summary: >-
    <span data-ttu-id="1e459-p113">現在の条件付き書式が IconSet 型の場合、IconSet の条件付き書式プロパティを返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="1e459-p113">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="1e459-151">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-151">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSetOrNullObject
  fullName: iconSetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.id
  summary: >-
    <span data-ttu-id="1e459-152">現在の ConditionalFormatCollection 内での条件付き書式の優先順位。</span><span class="sxs-lookup"><span data-stu-id="1e459-152">The Priority of the Conditional Format within the current ConditionalFormatCollection.</span></span> <span data-ttu-id="1e459-153">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-153">Read-only.</span></span>


    <span data-ttu-id="1e459-154">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-154">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.ConditionalFormat.load
  summary: <span data-ttu-id="1e459-155">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="1e459-155">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1e459-156">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e459-156">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1e459-157">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="1e459-157">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1e459-158">`load(option?: string | string[]): Excel.ConditionalFormat`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="1e459-158">`load(option?: string | string[]): Excel.ConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1e459-159">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="1e459-159">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1e459-160">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="1e459-160">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="1e459-161">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="1e459-161">It is similar to the preceding signature.</span></span> <span data-ttu-id="1e459-162">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-162">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1e459-163">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-163">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1e459-164">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="1e459-164">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalFormatLoadOptions): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalFormatLoadOptions
- uid: excel_release.Excel.ConditionalFormat.load_1
  summary: <span data-ttu-id="1e459-165">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="1e459-165">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1e459-166">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e459-166">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1e459-167">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="1e459-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.ConditionalFormat.load_2
  summary: <span data-ttu-id="1e459-168">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="1e459-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1e459-169">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1e459-169">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="1e459-170">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="1e459-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.ConditionalFormat.preset
  summary: >-
    <span data-ttu-id="1e459-171">事前設定の条件の条件付き書式を返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-171">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="1e459-172">詳細については、「PresetCriteriaConditionalFormat」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e459-172">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="1e459-173">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-173">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: preset
  fullName: preset
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-174\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-174\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.presetCriteria);\n    conditionalFormat.preset.format.font.color = \"white\";\n    conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.presetOrNullObject
  summary: >-
    <span data-ttu-id="1e459-175">事前設定の条件の条件付き書式を返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-175">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="1e459-176">詳細については、「PresetCriteriaConditionalFormat」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1e459-176">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="1e459-177">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-177">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: presetOrNullObject
  fullName: presetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.priority
  summary: >-
    <span data-ttu-id="1e459-178">この条件付き書式が現在存在している条件付き書式コレクション内の優先度 (またはインデックス)。</span><span class="sxs-lookup"><span data-stu-id="1e459-178">The priority (or index) within the conditional format collection that this conditional format currently exists in.</span></span> <span data-ttu-id="1e459-179">これを変更すると、他の条件付き書式の優先度も変更され、連続した優先順位を使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="1e459-179">Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order.</span></span> <span data-ttu-id="1e459-180">最背面から開始するには、負の優先順位を使用します。</span><span class="sxs-lookup"><span data-stu-id="1e459-180">Use a negative priority to begin from the back.</span></span> <span data-ttu-id="1e459-181">範囲よりも大きい優先度が取得され、最大値 (負の場合は負の値) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1e459-181">Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority.</span></span> <span data-ttu-id="1e459-182">また、優先度を変更する場合は、変更を加える必要がある場合は、新しい優先度の場所でオブジェクトの新しいコピーを取得し直す必要があることにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="1e459-182">Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.</span></span> <span data-ttu-id="1e459-183">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-183">Read-only.</span></span>


    <span data-ttu-id="1e459-184">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-184">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: priority
  fullName: priority
  langs:
  - typeScript
  type: property
  syntax:
    content: 'priority: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.ConditionalFormat.set
  summary: <span data-ttu-id="1e459-185">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-185">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1e459-186">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="1e459-186">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="1e459-187">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="1e459-187">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="1e459-188">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1e459-188">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="1e459-189">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="1e459-189">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.ConditionalFormat.set_1
  summary: <span data-ttu-id="1e459-190">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-190">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.stopIfTrue
  summary: >-
    <span data-ttu-id="1e459-191">この条件付き書式の条件が満たされた場合、優先順位の低い書式はそのセルに影響を及ぼしません。</span><span class="sxs-lookup"><span data-stu-id="1e459-191">If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.</span></span> <span data-ttu-id="1e459-192">このような stop iftrue の概念が存在しないため、(a) を使用する場合は、(a)</span><span class="sxs-lookup"><span data-stu-id="1e459-192">Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these</span></span>


    <span data-ttu-id="1e459-193">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-193">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: stopIfTrue
  fullName: stopIfTrue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'stopIfTrue: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.ConditionalFormat.textComparison
  summary: >-
    <span data-ttu-id="1e459-194">現在の条件付き書式がテキスト型の場合、特定のテキスト条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-194">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="1e459-195">たとえば、"Text" という単語に一致するセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-195">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="1e459-196">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-196">Read-only.</span></span>


    <span data-ttu-id="1e459-197">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-197">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparison
  fullName: textComparison
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparison: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-198\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-198\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormat.textComparisonOrNullObject
  summary: >-
    <span data-ttu-id="1e459-199">現在の条件付き書式がテキスト型の場合、特定のテキスト条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-199">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="1e459-200">たとえば、"Text" という単語に一致するセルの書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-200">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="1e459-201">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-201">Read-only.</span></span>


    <span data-ttu-id="1e459-202">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-202">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparisonOrNullObject
  fullName: textComparisonOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.toJSON
  summary: <span data-ttu-id="1e459-203">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="1e459-203">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="1e459-204">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の conditionalformat オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドは、元のオブジェクトから読み込まれ`Excel.Interfaces.ConditionalFormatData` <!-- -->た子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-204">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatData
      description: ''
- uid: excel_release.Excel.ConditionalFormat.topBottom
  summary: >-
    <span data-ttu-id="1e459-205">現在の条件付き書式が topbottom 型の場合、上位/下位条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-205">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="1e459-206">たとえば、上位 10% または下位10個のアイテムを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-206">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="1e459-207">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-207">Read-only.</span></span>


    <span data-ttu-id="1e459-208">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-208">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottom
  fullName: topBottom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.topBottomOrNullObject
  summary: >-
    <span data-ttu-id="1e459-209">現在の条件付き書式が topbottom 型の場合、上位/下位条件付き書式プロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="1e459-209">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="1e459-210">たとえば、上位 10% または下位10個のアイテムを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-210">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="1e459-211">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-211">Read-only.</span></span>


    <span data-ttu-id="1e459-212">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-212">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottomOrNullObject
  fullName: topBottomOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel_release.Excel.ConditionalFormat.type
  summary: >-
    <span data-ttu-id="1e459-213">条件付き書式の種類を指定します。</span><span class="sxs-lookup"><span data-stu-id="1e459-213">A type of conditional format.</span></span> <span data-ttu-id="1e459-214">一度に設定できるのは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="1e459-214">Only one can be set at a time.</span></span> <span data-ttu-id="1e459-215">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="1e459-215">Read-only.</span></span>


    <span data-ttu-id="1e459-216">\[[API セット: excelapi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e459-216">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
    return:
      type:
      - Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1e459-217\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1e459-217\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            console.log(item.cf.type);\n        });\n    } else {\n        console.log(\"No conditional formats applied.\");\n    }\n});\n```"
