### YamlMime:UniversalReference
ms.openlocfilehash: af4d7c9cafc81b9dfeca66f8db0417011a9a9bec
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30108283"
items:
- uid: excel_release.Excel.FunctionResult
  summary: >-
    関数評価操作の結果を含むオブジェクト


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.FunctionResult
  fullName: Excel.FunctionResult
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.FunctionResult.context
  - excel_release.Excel.FunctionResult.error
  - excel_release.Excel.FunctionResult.load
  - excel_release.Excel.FunctionResult.load_1
  - excel_release.Excel.FunctionResult.load_2
  - excel_release.Excel.FunctionResult.toJSON
  - excel_release.Excel.FunctionResult.value
- uid: excel_release.Excel.FunctionResult.context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.FunctionResult.error
  summary: >-
    エラー値 ("\#DIV/0" など) を表すエラー値。 エラー文字列が設定されていない場合は、関数が正常に終了し、その結果が Value フィールドに書き込まれます。 エラーは常に英語のロケールです。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: error
  fullName: error
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly error: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.FunctionResult.load
  summary: オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。 プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。
  remarks: >-
    このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。


    `load(option?: string | string[]): FunctionResult<T>`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。


    `load(option?: { select?: string; expand?: string; }): FunctionResult<T>`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): FunctionResult<T>`-コレクション型でのみ使用できます。 これは、前述の署名に似ています。 top は、結果に含めることができるコレクション項目の最大数を指定します。 省略すると、スキップされ、結果に含まれないアイテムの数を指定します。 option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.FunctionResultLoadOptions): FunctionResult<T>;'
    return:
      type:
      - FunctionResult<T>
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.FunctionResultLoadOptions
- uid: excel_release.Excel.FunctionResult.load_1
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): FunctionResult<T>;'
    return:
      type:
      - FunctionResult<T>
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - string | string[]
- uid: excel_release.Excel.FunctionResult.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      load(option?: {

                  select?: string;

                  expand?: string;

              }): FunctionResult<T>;
    return:
      type:
      - FunctionResult<T>
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - >-
        {

                    select?: string;

                    expand?: string;

                }
- uid: excel_release.Excel.FunctionResult.toJSON
  summary: API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。 (`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の<T> functionresult オブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、元のオブジェクトから`Interfaces.FunctionResultData<T>` <!-- -->読み込まれた子プロパティの浅いコピーを含む、プレーンな JavaScript オブジェクト (として型指定) を返します。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Interfaces.FunctionResultData<T>;'
    return:
      type:
      - Interfaces.FunctionResultData<T>
      description: ''
- uid: excel_release.Excel.FunctionResult.value
  summary: >-
    関数評価の値。 エラーが発生していない場合にのみ、value フィールドに値が設定されます (つまり、error プロパティが設定されていない場合)。


    \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: T;'
    return:
      type:
      - T
