### YamlMime:UniversalReference
ms.openlocfilehash: f8da0aa8f211304f6d54fd119af4a484795c66ae
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105357"
items:
- uid: excel_release.Excel.Binding
  summary: >-
    <span data-ttu-id="dd56e-101">ブックで定義されている Office.js のバインディングを表します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-101">Represents an Office.js binding that is defined in the workbook.</span></span>


    <span data-ttu-id="dd56e-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Binding
  fullName: Excel.Binding
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Binding.context
  - excel_release.Excel.Binding.delete
  - excel_release.Excel.Binding.getRange
  - excel_release.Excel.Binding.getTable
  - excel_release.Excel.Binding.getText
  - excel_release.Excel.Binding.id
  - excel_release.Excel.Binding.load
  - excel_release.Excel.Binding.load_1
  - excel_release.Excel.Binding.load_2
  - excel_release.Excel.Binding.onDataChanged
  - excel_release.Excel.Binding.onSelectionChanged
  - excel_release.Excel.Binding.toJSON
  - excel_release.Excel.Binding.type
- uid: excel_release.Excel.Binding.context
  summary: <span data-ttu-id="dd56e-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="dd56e-103">The request context associated with the object.</span></span> <span data-ttu-id="dd56e-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Binding.delete
  summary: >-
    <span data-ttu-id="dd56e-105">バインドを削除します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-105">Deletes the binding.</span></span>


    <span data-ttu-id="dd56e-106">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-106">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.Binding.getRange
  summary: >-
    <span data-ttu-id="dd56e-p102">バインディングによって表される範囲を返します。バインドが正しい型ではない場合、エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-p102">Returns the range represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="dd56e-109">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"dd56e-110\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"dd56e-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var range = binding.getRange();\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.getTable
  summary: >-
    <span data-ttu-id="dd56e-p103">バインドによって表されるテーブルを返します。バインドが正しい型ではない場合、エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-p103">Returns the table represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="dd56e-113">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTable()
  fullName: getTable()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTable(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"dd56e-114\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"dd56e-114\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var table = binding.getTable();\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.getText
  summary: >-
    <span data-ttu-id="dd56e-p104">バインドによって表されるテキストを返します。バインドが正しい型ではない場合、エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-p104">Returns the text represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="dd56e-117">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getText()
  fullName: getText()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getText(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"dd56e-118\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"dd56e-118\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var text = binding.getText();\n    binding.load('text');\n    return ctx.sync().then(function() {\n        console.log(text);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.id
  summary: >-
    <span data-ttu-id="dd56e-p105">バインド識別子を表します。読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="dd56e-p105">Represents binding identifier. Read-only.</span></span>


    <span data-ttu-id="dd56e-121">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Binding.load
  summary: <span data-ttu-id="dd56e-122">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dd56e-123">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd56e-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="dd56e-124">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="dd56e-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="dd56e-125">`load(option?: string | string[]): Excel.Binding`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="dd56e-125">`load(option?: string | string[]): Excel.Binding` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="dd56e-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="dd56e-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="dd56e-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding` - Only available on collection types.</span></span> <span data-ttu-id="dd56e-128">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="dd56e-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="dd56e-129">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="dd56e-130">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="dd56e-131">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.BindingLoadOptions
- uid: excel_release.Excel.Binding.load_1
  summary: <span data-ttu-id="dd56e-132">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dd56e-133">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd56e-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"dd56e-134\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"dd56e-134\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    binding.load('type');\n    return ctx.sync().then(function() {\n        console.log(binding.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="dd56e-135">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="dd56e-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.Binding.load_2
  summary: <span data-ttu-id="dd56e-136">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="dd56e-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="dd56e-137">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="dd56e-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="dd56e-138">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="dd56e-138">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Binding.onDataChanged
  summary: >-
    <span data-ttu-id="dd56e-139">バインド内でデータまたは書式設定が変更されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-139">Occurs when data or formatting within the binding is changed.</span></span>


    <span data-ttu-id="dd56e-140">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-140">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDataChanged
  fullName: onDataChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"dd56e-141\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"dd56e-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");    \n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), \"Table\", \"SalesByQuarter\");\n    salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);\n\n    console.log(\"The data changed handler is registered.\");\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.Binding.onSelectionChanged
  summary: >-
    <span data-ttu-id="dd56e-142">バインドで選択されているコンテンツが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-142">Occurs when the selected content in the binding is changed.</span></span>


    <span data-ttu-id="dd56e-143">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-143">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
- uid: excel_release.Excel.Binding.toJSON
  summary: <span data-ttu-id="dd56e-144">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="dd56e-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="dd56e-145">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。元の Excel バインディングオブジェクトは API オブジェクトですが、メソッドは`toJSON` 、元のオブジェクトから読み込まれた子`Excel.Interfaces.BindingData` <!-- -->プロパティの浅いコピーを含む (として型指定された) プレーンな JavaScript オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-145">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingData
      description: ''
- uid: excel_release.Excel.Binding.type
  summary: >-
    <span data-ttu-id="dd56e-146">バインドの種類を返します。</span><span class="sxs-lookup"><span data-stu-id="dd56e-146">Returns the type of the binding.</span></span> <span data-ttu-id="dd56e-147">詳細については、「Excel. bindingtype」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="dd56e-147">See Excel.BindingType for details.</span></span> <span data-ttu-id="dd56e-148">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="dd56e-148">Read-only.</span></span>


    <span data-ttu-id="dd56e-149">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="dd56e-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
    return:
      type:
      - Excel.BindingType | "Range" | "Table" | "Text"
