### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotTableCollection
    summary: |-
      <span data-ttu-id="60bbc-101">ブックまたはワークシートの一部として含まれている、すべてのピボットテーブルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>

      <span data-ttu-id="60bbc-102">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60bbc-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotTableCollection.add
      - excel_release.Excel.PivotTableCollection.context
      - excel_release.Excel.PivotTableCollection.getCount
      - excel_release.Excel.PivotTableCollection.getItem
      - excel_release.Excel.PivotTableCollection.getItemOrNullObject
      - excel_release.Excel.PivotTableCollection.items
      - excel_release.Excel.PivotTableCollection.load
      - excel_release.Excel.PivotTableCollection.load_1
      - excel_release.Excel.PivotTableCollection.load_2
      - excel_release.Excel.PivotTableCollection.refreshAll
      - excel_release.Excel.PivotTableCollection.toJSON
  - uid: excel_release.Excel.PivotTableCollection.add
    summary: |-
      <span data-ttu-id="60bbc-103">指定したソース データに基づくピボットテーブルを追加し、コピー先範囲の左上のセルに挿入します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>

      <span data-ttu-id="60bbc-104">\[[API セット: excelapi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60bbc-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: |-
          <span data-ttu-id="60bbc-105">新しく挿入されたピボットテーブルを返します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-105">Returns the newly inserted PivotTable.</span></span>

          #### <a name="examples"></a><span data-ttu-id="60bbc-106">例</span><span class="sxs-lookup"><span data-stu-id="60bbc-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="60bbc-107">新しいピボットテーブルの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-107">The name of the new PivotTable.</span></span>
          type:
            - string
        - id: source
          description: '<span data-ttu-id="60bbc-108">新しいピボットテーブルのソースデータは、範囲 (またはワークシート名を含む文字列のアドレス) またはテーブルのいずれかです。</span><span class="sxs-lookup"><span data-stu-id="60bbc-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>'
          type:
            - Range | string | Table
        - id: destination
          description: <span data-ttu-id="60bbc-109">ピボットテーブル レポートの配置先範囲 (結果のレポートを配置するワークシートの範囲) の左上端のセルを指定します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
          type:
            - Range | string
  - uid: excel_release.Excel.PivotTableCollection.context
    summary: <span data-ttu-id="60bbc-110">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="60bbc-110">The request context associated with the object.</span></span> <span data-ttu-id="60bbc-111">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="60bbc-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotTableCollection.getCount
    summary: |-
      <span data-ttu-id="60bbc-112">コレクションに含まれるピボット テーブルの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-112">Gets the number of pivot tables in the collection.</span></span>

      <span data-ttu-id="60bbc-113">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60bbc-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.getItem
    summary: |-
      <span data-ttu-id="60bbc-114">名前に基づいてピボットテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-114">Gets a PivotTable by name.</span></span>

      <span data-ttu-id="60bbc-115">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60bbc-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="60bbc-116">取得するピボットテーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="60bbc-116">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="60bbc-117">名前を使用してピボットテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-117">Gets a PivotTable by name.</span></span> <span data-ttu-id="60bbc-118">PivotTable が存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-118">If the PivotTable does not exist, will return a null object.</span></span>

      <span data-ttu-id="60bbc-119">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60bbc-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="60bbc-120">取得するピボットテーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="60bbc-120">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.items
    summary: <span data-ttu-id="60bbc-121">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'Excel.PivotTable[]'
  - uid: excel_release.Excel.PivotTableCollection.load
    summary: <span data-ttu-id="60bbc-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="60bbc-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60bbc-123">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="60bbc-123">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="60bbc-124">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="60bbc-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="60bbc-125">`load(option?: string | string[]): Excel.PivotTableCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="60bbc-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="60bbc-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="60bbc-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="60bbc-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="60bbc-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="60bbc-128">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="60bbc-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="60bbc-129">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="60bbc-130">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="60bbc-131">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="60bbc-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.PivotTableCollection.load_1
    summary: <span data-ttu-id="60bbc-132">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="60bbc-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="60bbc-133">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="60bbc-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="60bbc-134">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="60bbc-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotTableCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.PivotTableCollection.refreshAll
    summary: |-
      <span data-ttu-id="60bbc-135">コレクション内のすべてのピボットテーブルを更新します。</span><span class="sxs-lookup"><span data-stu-id="60bbc-135">Refreshes all the pivot tables in the collection.</span></span>

      <span data-ttu-id="60bbc-136">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="60bbc-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.toJSON
    summary: '<span data-ttu-id="60bbc-137">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="60bbc-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="60bbc-138">.</span><span class="sxs-lookup"><span data-stu-id="60bbc-138"></span></span> <span data-ttu-id="60bbc-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="60bbc-139"></span></span><!-- --><span data-ttu-id="60bbc-140">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.PivotTableCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.PivotTableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="60bbc-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`</span></span><!-- --><span data-ttu-id="60bbc-141">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="60bbc-141">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableCollectionData
        description: ''