### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.TableCollection
    summary: |-
      <span data-ttu-id="9952e-101">ブックまたはワークシートの一部として含まれる、すべてのテーブルのコレクションを、到達方法に応じて表します。</span><span class="sxs-lookup"><span data-stu-id="9952e-101">Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.</span></span>

      <span data-ttu-id="9952e-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableCollection
    fullName: Excel.TableCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.TableCollection.add
      - excel_release.Excel.TableCollection.context
      - excel_release.Excel.TableCollection.count
      - excel_release.Excel.TableCollection.getCount
      - excel_release.Excel.TableCollection.getItem
      - excel_release.Excel.TableCollection.getItemAt
      - excel_release.Excel.TableCollection.getItemOrNullObject
      - excel_release.Excel.TableCollection.items
      - excel_release.Excel.TableCollection.load
      - excel_release.Excel.TableCollection.load_1
      - excel_release.Excel.TableCollection.load_2
      - excel_release.Excel.TableCollection.onAdded
      - excel_release.Excel.TableCollection.onChanged
      - excel_release.Excel.TableCollection.onDeleted
      - excel_release.Excel.TableCollection.toJSON
  - uid: excel_release.Excel.TableCollection.add
    summary: |-
      <span data-ttu-id="9952e-p101">新しいテーブルを作成します。範囲オブジェクトまたはソース アドレスにより、テーブルが追加されるワークシートが判断されます。テーブルが追加できない場合 (たとえば、アドレスが無効な場合や、テーブルが別のテーブルと重複している場合) は、エラーがスローされます。</span><span class="sxs-lookup"><span data-stu-id="9952e-p101">Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.</span></span>

      <span data-ttu-id="9952e-106">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(address, hasHeaders)'
    fullName: 'add(address, hasHeaders)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(address: Range | string, hasHeaders: boolean): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9952e-107">例</span><span class="sxs-lookup"><span data-stu-id="9952e-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.add('Sheet1!A1:E7', true);
              table.load('name');
              return ctx.sync().then(function() {
                  console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="9952e-108">Range オブジェクト、あるいはデータ ソースを表す範囲の文字列アドレスまたは名前。</span><span class="sxs-lookup"><span data-stu-id="9952e-108">A Range object, or a string address or name of the range representing the data source.</span></span> <span data-ttu-id="9952e-109">アドレスにシート名が含まれていない場合は、現在作業中のシートが使用されます。</span><span class="sxs-lookup"><span data-stu-id="9952e-109">If the address does not contain a sheet name, the currently-active sheet is used.</span></span> <span data-ttu-id="9952e-110">\[Api set: ExcelApi 1.1/1.3。</span><span class="sxs-lookup"><span data-stu-id="9952e-110">\[Api set: ExcelApi 1.1 / 1.3.</span></span> <span data-ttu-id="9952e-111">ExcelApi 1.3 より前の場合、このパラメーターは文字列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="9952e-111">Prior to ExcelApi 1.3, this parameter must be a string.</span></span> <span data-ttu-id="9952e-112">Excel Api 1.3 以降では、このパラメーターは Range オブジェクトまたは文字列の場合があります。\]</span><span class="sxs-lookup"><span data-stu-id="9952e-112">Starting with Excel Api 1.3, this parameter may be a Range object or a string.\]</span></span>'
          type:
            - Range | string
        - id: hasHeaders
          description: '<span data-ttu-id="9952e-p103">インポートされたデータに列ラベルがあるかどうかを示すブール値。ソースにヘッダーが含まれていない場合 (このプロパティが false に設定されている場合)、Excel はデータを下方向に 1 行シフトして、自動的にヘッダーを生成します。</span><span class="sxs-lookup"><span data-stu-id="9952e-p103">Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.TableCollection.context
    summary: <span data-ttu-id="9952e-116">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="9952e-116">The request context associated with the object.</span></span> <span data-ttu-id="9952e-117">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="9952e-117">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.TableCollection.count
    summary: |-
      <span data-ttu-id="9952e-118">ブックに含まれるテーブルの数を返します。</span><span class="sxs-lookup"><span data-stu-id="9952e-118">Returns the number of tables in the workbook.</span></span> <span data-ttu-id="9952e-119">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="9952e-119">Read-only.</span></span>

      <span data-ttu-id="9952e-120">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.TableCollection.getCount
    summary: |-
      <span data-ttu-id="9952e-121">コレクションに含まれるテーブルの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="9952e-121">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="9952e-122">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-122">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.TableCollection.getItem
    summary: |-
      <span data-ttu-id="9952e-123">名前または ID を使用してテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="9952e-123">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="9952e-124">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9952e-125">例</span><span class="sxs-lookup"><span data-stu-id="9952e-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="9952e-126">取得するテーブルの名前または ID。</span><span class="sxs-lookup"><span data-stu-id="9952e-126">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.TableCollection.getItemAt
    summary: |-
      <span data-ttu-id="9952e-127">コレクション内の位置に基づいてテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="9952e-127">Gets a table based on its position in the collection.</span></span>

      <span data-ttu-id="9952e-128">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9952e-129">例</span><span class="sxs-lookup"><span data-stu-id="9952e-129">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="9952e-130">取得するオブジェクトのインデックス値。</span><span class="sxs-lookup"><span data-stu-id="9952e-130">Index value of the object to be retrieved.</span></span> <span data-ttu-id="9952e-131">0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="9952e-131">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.TableCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="9952e-132">名前または ID でテーブルを取得します。</span><span class="sxs-lookup"><span data-stu-id="9952e-132">Gets a table by Name or ID.</span></span> <span data-ttu-id="9952e-133">テーブルが存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9952e-133">If the table does not exist, will return a null object.</span></span>

      <span data-ttu-id="9952e-134">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="9952e-135">取得するテーブルの名前または ID。</span><span class="sxs-lookup"><span data-stu-id="9952e-135">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.TableCollection.items
    summary: <span data-ttu-id="9952e-136">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="9952e-136">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'Excel.Table[]'
  - uid: excel_release.Excel.TableCollection.load
    summary: <span data-ttu-id="9952e-137">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="9952e-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9952e-138">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9952e-138">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="9952e-139">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="9952e-139">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="9952e-140">`load(option?: string | string[]): Excel.TableCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="9952e-140">`load(option?: string | string[]): Excel.TableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="9952e-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="9952e-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="9952e-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="9952e-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection` - Only available on collection types.</span></span> <span data-ttu-id="9952e-143">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="9952e-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="9952e-144">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9952e-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9952e-145">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="9952e-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9952e-146">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="9952e-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.TableCollection.load_1
    summary: <span data-ttu-id="9952e-147">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="9952e-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9952e-148">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9952e-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9952e-149">例</span><span class="sxs-lookup"><span data-stu-id="9952e-149">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              tables.load();
              return ctx.sync().then(function() {
                  console.log("tables Count: " + tables.count);
                  for (var i = 0; i < tables.items.length; i++)
                  {
                      console.log(tables.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of tables
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              tables.load('count');
              return ctx.sync().then(function() {
                  console.log(tables.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="9952e-150">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="9952e-150">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.TableCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.TableCollection.onAdded
    summary: |-
      <span data-ttu-id="9952e-151">新しいテーブルがブックに追加されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="9952e-151">Occurs when new table is added in a workbook.</span></span>

      <span data-ttu-id="9952e-152">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-152">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.TableAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.TableAddedEventArgs>
  - uid: excel_release.Excel.TableCollection.onChanged
    summary: |-
      <span data-ttu-id="9952e-153">ブックまたはワークシート内のテーブルでデータが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="9952e-153">Occurs when data changes on any table in a workbook, or a worksheet.</span></span>

      <span data-ttu-id="9952e-154">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-154">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9952e-155">例</span><span class="sxs-lookup"><span data-stu-id="9952e-155">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let tables = context.workbook.tables;
              tables.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the table collection onChanged event");
          });
          ```
  - uid: excel_release.Excel.TableCollection.onDeleted
    summary: |-
      <span data-ttu-id="9952e-156">指定されたテーブルがブックで削除されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="9952e-156">Occurs when the specified table is deleted in a workbook.</span></span>

      <span data-ttu-id="9952e-157">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9952e-157">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.TableDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.TableDeletedEventArgs>
  - uid: excel_release.Excel.TableCollection.toJSON
    summary: '<span data-ttu-id="9952e-158">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="9952e-158">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="9952e-159">.</span><span class="sxs-lookup"><span data-stu-id="9952e-159"></span></span> <span data-ttu-id="9952e-160">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="9952e-160"></span></span><!-- --><span data-ttu-id="9952e-161">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.TableCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.TableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="9952e-161">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableCollectionData`</span></span><!-- --><span data-ttu-id="9952e-162">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="9952e-162">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.TableCollectionData
        description: ''