### YamlMime:UniversalReference
ms.openlocfilehash: be4f7e37d364ac1f5d502d88dd86bdc4bfdbe9f9
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30115024"
items:
- uid: excel_release.Excel.BindingCollection
  summary: >-
    <span data-ttu-id="3757f-101">ブックの一部であるすべてのバインド オブジェクトのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="3757f-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>


    <span data-ttu-id="3757f-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.BindingCollection
  fullName: Excel.BindingCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.BindingCollection.add
  - excel_release.Excel.BindingCollection.add_1
  - excel_release.Excel.BindingCollection.addFromNamedItem
  - excel_release.Excel.BindingCollection.addFromNamedItem_1
  - excel_release.Excel.BindingCollection.addFromSelection
  - excel_release.Excel.BindingCollection.addFromSelection_1
  - excel_release.Excel.BindingCollection.context
  - excel_release.Excel.BindingCollection.count
  - excel_release.Excel.BindingCollection.getCount
  - excel_release.Excel.BindingCollection.getItem
  - excel_release.Excel.BindingCollection.getItemAt
  - excel_release.Excel.BindingCollection.getItemOrNullObject
  - excel_release.Excel.BindingCollection.items
  - excel_release.Excel.BindingCollection.load
  - excel_release.Excel.BindingCollection.load_1
  - excel_release.Excel.BindingCollection.load_2
  - excel_release.Excel.BindingCollection.toJSON
- uid: excel_release.Excel.BindingCollection.add
  summary: >-
    <span data-ttu-id="3757f-103">特定の範囲に新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="3757f-103">Add a new binding to a particular Range.</span></span>


    <span data-ttu-id="3757f-104">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(range, bindingType, id)
  fullName: add(range, bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: <span data-ttu-id="3757f-p101">バインドをバインドする範囲です。Excel Range オブジェクト、または文字列である場合があります。文字列の場合は、シート名を含む完全なアドレスが含まれている必要があります</span><span class="sxs-lookup"><span data-stu-id="3757f-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: bindingType
      description: <span data-ttu-id="3757f-108">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="3757f-108">Type of binding.</span></span> <span data-ttu-id="3757f-109">「Excel. bindingtype」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3757f-109">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="3757f-110">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-110">Name of binding.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.add_1
  summary: >-
    <span data-ttu-id="3757f-111">特定の範囲に新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="3757f-111">Add a new binding to a particular Range.</span></span>


    <span data-ttu-id="3757f-112">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(range, bindingTypeString, id)
  fullName: add(range, bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: range
      description: <span data-ttu-id="3757f-p103">バインドをバインドする範囲です。Excel Range オブジェクト、または文字列である場合があります。文字列の場合は、シート名を含む完全なアドレスが含まれている必要があります</span><span class="sxs-lookup"><span data-stu-id="3757f-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: bindingTypeString
      description: <span data-ttu-id="3757f-116">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="3757f-116">Type of binding.</span></span> <span data-ttu-id="3757f-117">「Excel. bindingtype」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3757f-117">See Excel.BindingType.</span></span>
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: <span data-ttu-id="3757f-118">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-118">Name of binding.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromNamedItem
  summary: >-
    <span data-ttu-id="3757f-119">ブック内の名前付きアイテムに基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="3757f-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="3757f-120">名前付きアイテムが複数の領域を参照している場合は、"invalidreference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="3757f-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="3757f-121">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromNamedItem(name, bindingType, id)
  fullName: addFromNamedItem(name, bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="3757f-122">バインドの作成元の名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-122">Name from which to create binding.</span></span>
      type:
      - string
    - id: bindingType
      description: <span data-ttu-id="3757f-123">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="3757f-123">Type of binding.</span></span> <span data-ttu-id="3757f-124">「Excel. bindingtype」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3757f-124">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="3757f-125">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-125">Name of binding.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromNamedItem_1
  summary: >-
    <span data-ttu-id="3757f-126">ブック内の名前付きアイテムに基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="3757f-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="3757f-127">名前付きアイテムが複数の領域を参照している場合は、"invalidreference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="3757f-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="3757f-128">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromNamedItem(name, bindingTypeString, id)
  fullName: addFromNamedItem(name, bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="3757f-129">バインドの作成元の名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-129">Name from which to create binding.</span></span>
      type:
      - string
    - id: bindingTypeString
      description: <span data-ttu-id="3757f-130">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="3757f-130">Type of binding.</span></span> <span data-ttu-id="3757f-131">「Excel. bindingtype」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3757f-131">See Excel.BindingType.</span></span>
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: <span data-ttu-id="3757f-132">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-132">Name of binding.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromSelection
  summary: >-
    <span data-ttu-id="3757f-133">現在の選択範囲に基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="3757f-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="3757f-134">複数の領域が選択されている場合は、"invalidreference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="3757f-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="3757f-135">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromSelection(bindingType, id)
  fullName: addFromSelection(bindingType, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingType
      description: <span data-ttu-id="3757f-136">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="3757f-136">Type of binding.</span></span> <span data-ttu-id="3757f-137">「Excel. bindingtype」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3757f-137">See Excel.BindingType.</span></span>
      type:
      - excel.Excel.BindingType
    - id: id
      description: <span data-ttu-id="3757f-138">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-138">Name of binding.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.addFromSelection_1
  summary: >-
    <span data-ttu-id="3757f-139">現在の選択範囲に基づいて新しいバインドを追加します。</span><span class="sxs-lookup"><span data-stu-id="3757f-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="3757f-140">複数の領域が選択されている場合は、"invalidreference" エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="3757f-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>


    <span data-ttu-id="3757f-141">\[[API セット: excelapi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFromSelection(bindingTypeString, id)
  fullName: addFromSelection(bindingTypeString, id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: bindingTypeString
      description: <span data-ttu-id="3757f-142">バインドの種類。</span><span class="sxs-lookup"><span data-stu-id="3757f-142">Type of binding.</span></span> <span data-ttu-id="3757f-143">「Excel. bindingtype」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3757f-143">See Excel.BindingType.</span></span>
      type:
      - "\"Range\" | \"Table\" | \"Text\""
    - id: id
      description: <span data-ttu-id="3757f-144">バインドの名前です。</span><span class="sxs-lookup"><span data-stu-id="3757f-144">Name of binding.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.context
  summary: <span data-ttu-id="3757f-145">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="3757f-145">The request context associated with the object.</span></span> <span data-ttu-id="3757f-146">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="3757f-146">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.BindingCollection.count
  summary: >-
    <span data-ttu-id="3757f-p114">コレクション内にあるバインドの数を取得します。値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="3757f-p114">Returns the number of bindings in the collection. Read-only.</span></span>


    <span data-ttu-id="3757f-149">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.BindingCollection.getCount
  summary: >-
    <span data-ttu-id="3757f-150">コレクションに含まれるバインドの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="3757f-150">Gets the number of bindings in the collection.</span></span>


    <span data-ttu-id="3757f-151">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-151">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.BindingCollection.getItem
  summary: >-
    <span data-ttu-id="3757f-152">ID によってバインド オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3757f-152">Gets a binding object by ID.</span></span>


    <span data-ttu-id="3757f-153">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(id)
  fullName: getItem(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3757f-154\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"3757f-154\">Examples</span></span>\n\n```javascript\n// Create a table binding to monitor data changes in the table. \n// When data is changed, the background color of the table will be changed to orange.\nfunction addEventHandler() {\n    // Create Table1\n    Excel.run(function (ctx) { \n        ctx.workbook.tables.add(\"Sheet1!A1:C4\", true);\n        return ctx.sync().then(function() {\n                console.log(\"My Diet Data Inserted!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n    //Create a new table binding for Table1\n    Office.context.document.bindings.addFromNamedItemAsync(\n        \"Table1\", Office.CoercionType.Table, { id: \"myBinding\" }, function (asyncResult) {\n        if (asyncResult.status == \"failed\") {\n            console.log(\"Action failed with error: \" + asyncResult.error.message);\n        }\n        else {\n            // If succeeded, then add event handler to the table binding.\n            Office.select(\"bindings#myBinding\").addHandlerAsync(\n                Office.EventType.BindingDataChanged, onBindingDataChanged);\n        }\n    });\n}\n    \n// when data in the table is changed, this event will be triggered.\nfunction onBindingDataChanged(eventArgs) {\n    Excel.run(function (ctx) { \n        // highlight the table in orange to indicate data has been changed.\n        ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = \"Orange\";\n        return ctx.sync().then(function() {\n                console.log(\"The value in this table got changed!\");\n        })\n        .catch(function (error) {\n                console.log(JSON.stringify(error));\n        });\n    });\n}\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="3757f-155">取得するバインド オブジェクトの ID。</span><span class="sxs-lookup"><span data-stu-id="3757f-155">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.getItemAt
  summary: >-
    <span data-ttu-id="3757f-156">項目の配列内の位置に基づいて、バインド オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3757f-156">Gets a binding object based on its position in the items array.</span></span>


    <span data-ttu-id="3757f-157">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3757f-158\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"3757f-158\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.bindings.count - 1;\n    var binding = ctx.workbook.bindings.getItemAt(lastPosition);\n    binding.load('type')\n    return ctx.sync().then(function() {\n            console.log(binding.type); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="3757f-p115">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="3757f-p115">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.BindingCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="3757f-p116">ID に基づいて binding オブジェクトを取得します。binding オブジェクトが存在しない場合は null オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3757f-p116">Gets a binding object by ID. If the binding object does not exist, will return a null object.</span></span>


    <span data-ttu-id="3757f-163">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3757f-163">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(id)
  fullName: getItemOrNullObject(id)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(id: string): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="3757f-164">取得するバインド オブジェクトの ID。</span><span class="sxs-lookup"><span data-stu-id="3757f-164">Id of the binding object to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.BindingCollection.items
  summary: <span data-ttu-id="3757f-165">このコレクション内の読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="3757f-165">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Binding[];'
    return:
      type:
      - Excel.Binding[]
- uid: excel_release.Excel.BindingCollection.load
  summary: <span data-ttu-id="3757f-166">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="3757f-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3757f-167">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3757f-167">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="3757f-168">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3757f-168">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="3757f-169">`load(option?: string | string[]): Excel.BindingCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="3757f-169">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="3757f-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3757f-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="3757f-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3757f-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="3757f-172">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="3757f-172">It is similar to the preceding signature.</span></span> <span data-ttu-id="3757f-173">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3757f-173">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3757f-174">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3757f-174">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3757f-175">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="3757f-175">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.BindingCollection.load_1
  summary: <span data-ttu-id="3757f-176">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="3757f-176">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3757f-177">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3757f-177">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"3757f-178\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"3757f-178\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < bindings.items.length; i++)\n        {\n            console.log(bindings.items[i].id);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of bindings\nExcel.run(function (ctx) { \n    var bindings = ctx.workbook.bindings;\n    bindings.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"Bindings: Count= \" + bindings.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="3757f-179">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="3757f-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.BindingCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.BindingCollection.toJSON
  summary: <span data-ttu-id="3757f-180">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="3757f-180">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="3757f-181">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。`Excel.BindingCollection`元のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、コレクションのアイテムから`Excel.Interfaces.BindingCollectionData` <!-- -->読み込まれたプロパティの浅いコピーを持つ "items" 配列を含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="3757f-181">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingCollectionData
      description: ''
