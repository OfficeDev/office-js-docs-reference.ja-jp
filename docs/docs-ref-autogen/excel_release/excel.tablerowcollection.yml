### YamlMime:UniversalReference
ms.openlocfilehash: 041dc1d0ec672224ed1f69908b0f28083eec0070
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110432"
items:
- uid: excel_release.Excel.TableRowCollection
  summary: >-
    <span data-ttu-id="5f273-101">表の一部であるすべての行のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="5f273-101">Represents a collection of all the rows that are part of the table.</span></span>


    <span data-ttu-id="5f273-102">範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。</span><span class="sxs-lookup"><span data-stu-id="5f273-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="5f273-103">つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。</span><span class="sxs-lookup"><span data-stu-id="5f273-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="5f273-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f273-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRowCollection
  fullName: Excel.TableRowCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableRowCollection.add
  - excel_release.Excel.TableRowCollection.context
  - excel_release.Excel.TableRowCollection.count
  - excel_release.Excel.TableRowCollection.getCount
  - excel_release.Excel.TableRowCollection.getItemAt
  - excel_release.Excel.TableRowCollection.items
  - excel_release.Excel.TableRowCollection.load
  - excel_release.Excel.TableRowCollection.load_1
  - excel_release.Excel.TableRowCollection.load_2
  - excel_release.Excel.TableRowCollection.toJSON
- uid: excel_release.Excel.TableRowCollection.add
  summary: >-
    <span data-ttu-id="5f273-p102">テーブルに 1 つ以上の行を追加します。戻りオブジェクトは新しく追加された行の先頭になります。</span><span class="sxs-lookup"><span data-stu-id="5f273-p102">Adds one or more rows to the table. The return object will be the top of the newly added row(s).</span></span>


    <span data-ttu-id="5f273-107">範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。</span><span class="sxs-lookup"><span data-stu-id="5f273-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="5f273-108">つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。</span><span class="sxs-lookup"><span data-stu-id="5f273-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="5f273-109">\[[API set: 単一の行を追加するための excelapi 1.1。1.4 では、複数の行を追加できます。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="5f273-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="5f273-110">\]</span><span class="sxs-lookup"><span data-stu-id="5f273-110"></span></span>
  name: add(index, values)
  fullName: add(index, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5f273-111\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"5f273-111\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var row = tables.getItem(\"Table1\").rows.add(null, values);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="5f273-p105">省略可能。新しい行の相対位置を指定します。null または -1 の場合、最後に追加が行われます。挿入した行の下のすべての行が下方向にシフトします。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="5f273-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="5f273-p106">省略可能。テーブルの行の書式設定されていない値の 2 次元の配列。</span><span class="sxs-lookup"><span data-stu-id="5f273-p106">Optional. A 2-dimensional array of unformatted values of the table row.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
- uid: excel_release.Excel.TableRowCollection.context
  summary: <span data-ttu-id="5f273-119">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="5f273-119">The request context associated with the object.</span></span> <span data-ttu-id="5f273-120">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="5f273-120">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableRowCollection.count
  summary: >-
    <span data-ttu-id="5f273-p108">テーブルの行数を返します。読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="5f273-p108">Returns the number of rows in the table. Read-only.</span></span>


    <span data-ttu-id="5f273-123">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f273-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableRowCollection.getCount
  summary: >-
    <span data-ttu-id="5f273-124">表の行数を取得します。</span><span class="sxs-lookup"><span data-stu-id="5f273-124">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="5f273-125">\[[API セット: excelapi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f273-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.TableRowCollection.getItemAt
  summary: >-
    <span data-ttu-id="5f273-126">コレクション内の位置を基に行を取得します。</span><span class="sxs-lookup"><span data-stu-id="5f273-126">Gets a row based on its position in the collection.</span></span>


    <span data-ttu-id="5f273-127">範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。</span><span class="sxs-lookup"><span data-stu-id="5f273-127">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="5f273-128">つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。</span><span class="sxs-lookup"><span data-stu-id="5f273-128">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="5f273-129">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f273-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5f273-130\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"5f273-130\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);\n    tablerow.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablerow.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="5f273-p110">取得するオブジェクトのインデックス値。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="5f273-p110">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.TableRowCollection.items
  summary: <span data-ttu-id="5f273-133">このコレクション内の読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="5f273-133">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableRow[];'
    return:
      type:
      - Excel.TableRow[]
- uid: excel_release.Excel.TableRowCollection.load
  summary: <span data-ttu-id="5f273-134">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="5f273-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5f273-135">プロパティを読み取る前に、"context. sync ()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5f273-135">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="5f273-136">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="5f273-136">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="5f273-137">`load(option?: string | string[]): Excel.TableRowCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="5f273-137">`load(option?: string | string[]): Excel.TableRowCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="5f273-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="5f273-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="5f273-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="5f273-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id="5f273-140">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="5f273-140">It is similar to the preceding signature.</span></span> <span data-ttu-id="5f273-141">top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="5f273-141">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5f273-142">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="5f273-142">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5f273-143">option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="5f273-143">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.TableRowCollection.load_1
  summary: <span data-ttu-id="5f273-144">オブジェクトの指定されたプロパティを読み込むためのコマンドをキューに入れます。</span><span class="sxs-lookup"><span data-stu-id="5f273-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5f273-145">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5f273-145">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"5f273-146\">例</span><span class=\"sxs-lookup\"><span data-stu-id=\"5f273-146\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerows = ctx.workbook.tables.getItem('Table1').rows;\n    tablerows.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablerows Count: \" + tablerows.count);\n        for (var i = 0; i < tablerows.items.length; i++)\n        {\n            console.log(tablerows.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// In the example, we'll select the top 100 rows of the table.\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItem(\"Table1\");\n    var tableRows = table.rows.load({\"select\" : \"index, values\",\"top\": 100, \"skip\": 0 })\n    return ctx.sync().then(function() {\n        for (var i = 0; i < tableRows.items.length; i++)\n        {\n            console.log(tableRows.items[i].index);\n            console.log(tableRows.items[i].values);\n        }\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="5f273-147">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="5f273-147">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.TableRowCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.TableRowCollection.toJSON
  summary: <span data-ttu-id="5f273-148">API オブジェクトが`toJSON()`渡さ`JSON.stringify()` <!-- -->れるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="5f273-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="5f273-149">(`JSON.stringify`<!-- -->つまり、によって渡さ`toJSON`れたオブジェクトのメソッドが呼び出されます)。`Excel.TableRowCollection`元のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドは、コレクションのアイテムから`Excel.Interfaces.TableRowCollectionData` <!-- -->読み込まれたプロパティの浅いコピーを持つ "items" 配列を含む、プレーンな JavaScript オブジェクト (として型指定) を返します。</span><span class="sxs-lookup"><span data-stu-id="5f273-149">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowCollectionData
      description: ''
