### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Image
    summary: |-
      <span data-ttu-id="8ba26-101">ワークシート内のイメージを表します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-101">Represents an image in the worksheet.</span></span> <span data-ttu-id="8ba26-102">対応する Shape オブジェクトを取得するには、イメージの図形を使用します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-102">To get the corresponding Shape object, use Image.shape.</span></span>

      <span data-ttu-id="8ba26-103">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8ba26-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Image
    fullName: Excel.Image
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Image.context
      - excel_release.Excel.Image.format
      - excel_release.Excel.Image.id
      - excel_release.Excel.Image.load
      - excel_release.Excel.Image.load_1
      - excel_release.Excel.Image.load_2
      - excel_release.Excel.Image.shape
      - excel_release.Excel.Image.toJSON
  - uid: excel_release.Excel.Image.context
    summary: <span data-ttu-id="8ba26-104">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="8ba26-104">The request context associated with the object.</span></span> <span data-ttu-id="8ba26-105">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="8ba26-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Image.format
    summary: |-
      <span data-ttu-id="8ba26-106">画像の形式を返します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-106">Returns the format of the image.</span></span> <span data-ttu-id="8ba26-107">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8ba26-107">Read-only.</span></span>

      <span data-ttu-id="8ba26-108">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8ba26-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
      return:
        type:
          - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8ba26-109">例</span><span class="sxs-lookup"><span data-stu-id="8ba26-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const image = sheet.shapes.getItem("Image").image;
              image.load("format");
              await context.sync();

              console.log("The image's format is: " + image.format);
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Image.id
    summary: |-
      <span data-ttu-id="8ba26-110">画像オブジェクトの図形 ID を表します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-110">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="8ba26-111">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8ba26-111">Read-only.</span></span>

      <span data-ttu-id="8ba26-112">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8ba26-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Image.load
    summary: <span data-ttu-id="8ba26-113">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="8ba26-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8ba26-114">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ba26-114">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8ba26-115">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="8ba26-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8ba26-116">`load(option?: string | string[]): Excel.Image`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="8ba26-116">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8ba26-117">`load(option?: { select?: string; expand?: string; }): Excel.Image`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="8ba26-117">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8ba26-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="8ba26-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="8ba26-119">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="8ba26-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="8ba26-120">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8ba26-121">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8ba26-122">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="8ba26-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ImageLoadOptions
  - uid: excel_release.Excel.Image.load_1
    summary: <span data-ttu-id="8ba26-123">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="8ba26-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8ba26-124">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ba26-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="8ba26-125">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="8ba26-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Image.load_2
    summary: <span data-ttu-id="8ba26-126">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="8ba26-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8ba26-127">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="8ba26-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8ba26-128">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="8ba26-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Image.shape
    summary: |-
      <span data-ttu-id="8ba26-129">画像に関連付けられた Shape オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-129">Returns the Shape object associated with the image.</span></span> <span data-ttu-id="8ba26-130">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8ba26-130">Read-only.</span></span>

      <span data-ttu-id="8ba26-131">\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8ba26-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel_release.Excel.Image.toJSON
    summary: '<span data-ttu-id="8ba26-132">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8ba26-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8ba26-133">.</span><span class="sxs-lookup"><span data-stu-id="8ba26-133"></span></span> <span data-ttu-id="8ba26-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8ba26-134"></span></span><!-- --><span data-ttu-id="8ba26-135">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel オブジェクトは API オブジェクトであるのに対して`toJSON` 、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ImageData`</span><span class="sxs-lookup"><span data-stu-id="8ba26-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`</span></span><!-- --><span data-ttu-id="8ba26-136">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="8ba26-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ImageData;'
      return:
        type:
          - excel.Excel.Interfaces.ImageData
        description: ''