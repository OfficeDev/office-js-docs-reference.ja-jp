### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorkbookProtection
    summary: |-
      <span data-ttu-id="cde7d-101">ブックオブジェクトの保護を表します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-101">Represents the protection of a workbook object.</span></span>

      <span data-ttu-id="cde7d-102">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cde7d-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorkbookProtection
    fullName: Excel.WorkbookProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.WorkbookProtection.context
      - excel.Excel.WorkbookProtection.load
      - excel.Excel.WorkbookProtection.load_1
      - excel.Excel.WorkbookProtection.load_2
      - excel.Excel.WorkbookProtection.protect
      - excel.Excel.WorkbookProtection.protected
      - excel.Excel.WorkbookProtection.toJSON
      - excel.Excel.WorkbookProtection.unprotect
  - uid: excel.Excel.WorkbookProtection.context
    summary: <span data-ttu-id="cde7d-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="cde7d-103">The request context associated with the object.</span></span> <span data-ttu-id="cde7d-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="cde7d-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.WorkbookProtection.load
    summary: <span data-ttu-id="cde7d-105">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="cde7d-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cde7d-106">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="cde7d-106">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="cde7d-107">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="cde7d-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="cde7d-108">`load(option?: string | string[]): Excel.WorkbookProtection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="cde7d-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="cde7d-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="cde7d-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="cde7d-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="cde7d-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="cde7d-111">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="cde7d-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="cde7d-112">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="cde7d-113">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="cde7d-114">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="cde7d-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
  - uid: excel.Excel.WorkbookProtection.load_1
    summary: <span data-ttu-id="cde7d-115">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="cde7d-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cde7d-116">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="cde7d-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="cde7d-117">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="cde7d-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorkbookProtection.load_2
    summary: <span data-ttu-id="cde7d-118">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="cde7d-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cde7d-119">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="cde7d-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
      return:
        type:
          - excel.Excel.WorkbookProtection
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="cde7d-120">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="cde7d-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.WorkbookProtection.protect
    summary: |-
      <span data-ttu-id="cde7d-121">ブックを保護します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-121">Protects a workbook.</span></span> <span data-ttu-id="cde7d-122">ブックが保護されている場合は失敗します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-122">Fails if the workbook has been protected.</span></span>

      <span data-ttu-id="cde7d-123">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cde7d-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protect(password)
    fullName: protect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cde7d-124">例</span><span class="sxs-lookup"><span data-stu-id="cde7d-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.load("protection/protected");

              await context.sync();

              if (!workbook.protection.protected) {
                  workbook.protection.protect(password);
              }
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="cde7d-125">ブックの保護パスワード。</span><span class="sxs-lookup"><span data-stu-id="cde7d-125">workbook protection password.</span></span>
          type:
            - string
  - uid: excel.Excel.WorkbookProtection.protected
    summary: |-
      <span data-ttu-id="cde7d-126">ブックが保護されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="cde7d-127">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="cde7d-127">Read-Only.</span></span>

      <span data-ttu-id="cde7d-128">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cde7d-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.WorkbookProtection.toJSON
    summary: '<span data-ttu-id="cde7d-129">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="cde7d-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="cde7d-130">.</span><span class="sxs-lookup"><span data-stu-id="cde7d-130"></span></span> <span data-ttu-id="cde7d-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="cde7d-131"></span></span><!-- --><span data-ttu-id="cde7d-132">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の WorkbookProtection オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.WorkbookProtectionData`</span><span class="sxs-lookup"><span data-stu-id="cde7d-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`</span></span><!-- --><span data-ttu-id="cde7d-133">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorkbookProtectionData
        description: ''
  - uid: excel.Excel.WorkbookProtection.unprotect
    summary: |-
      <span data-ttu-id="cde7d-134">ブックの保護を解除します。</span><span class="sxs-lookup"><span data-stu-id="cde7d-134">Unprotects a workbook.</span></span>

      <span data-ttu-id="cde7d-135">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cde7d-135">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cde7d-136">例</span><span class="sxs-lookup"><span data-stu-id="cde7d-136">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let workbook = context.workbook;
              workbook.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="cde7d-137">ブックの保護パスワード。</span><span class="sxs-lookup"><span data-stu-id="cde7d-137">workbook protection password.</span></span>
          type:
            - string