### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartDataLabels
    summary: |-
      <span data-ttu-id="f0a56-101">グラフのポイントにあるすべてのデータ ラベルのコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-101">Represents a collection of all the data labels on a chart point.</span></span>

      <span data-ttu-id="f0a56-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartDataLabels
    fullName: Excel.ChartDataLabels
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartDataLabels.context
      - excel.Excel.ChartDataLabels.format
      - excel.Excel.ChartDataLabels.load
      - excel.Excel.ChartDataLabels.load_1
      - excel.Excel.ChartDataLabels.load_2
      - excel.Excel.ChartDataLabels.position
      - excel.Excel.ChartDataLabels.separator
      - excel.Excel.ChartDataLabels.set
      - excel.Excel.ChartDataLabels.set_1
      - excel.Excel.ChartDataLabels.showBubbleSize
      - excel.Excel.ChartDataLabels.showCategoryName
      - excel.Excel.ChartDataLabels.showLegendKey
      - excel.Excel.ChartDataLabels.showPercentage
      - excel.Excel.ChartDataLabels.showSeriesName
      - excel.Excel.ChartDataLabels.showValue
      - excel.Excel.ChartDataLabels.toJSON
  - uid: excel.Excel.ChartDataLabels.context
    summary: <span data-ttu-id="f0a56-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="f0a56-103">The request context associated with the object.</span></span> <span data-ttu-id="f0a56-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="f0a56-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartDataLabels.format
    summary: |-
      <span data-ttu-id="f0a56-105">グラフのデータ ラベルの書式 (塗りつぶしとフォントの書式設定を含む) を表します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-105">Represents the format of chart data labels, which includes fill and font formatting.</span></span> <span data-ttu-id="f0a56-106">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="f0a56-106">Read-only.</span></span>

      <span data-ttu-id="f0a56-107">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartDataLabelFormat;'
      return:
        type:
          - excel.Excel.ChartDataLabelFormat
  - uid: excel.Excel.ChartDataLabels.load
    summary: <span data-ttu-id="f0a56-108">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f0a56-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f0a56-109">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f0a56-109">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="f0a56-110">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="f0a56-110">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="f0a56-111">`load(option?: string | string[]): Excel.ChartDataLabels`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="f0a56-111">`load(option?: string | string[]): Excel.ChartDataLabels` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="f0a56-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartDataLabels`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="f0a56-112">`load(option?: { select?: string; expand?: string; }): Excel.ChartDataLabels` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="f0a56-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartDataLabels`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="f0a56-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartDataLabels` - Only available on collection types.</span></span> <span data-ttu-id="f0a56-114">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="f0a56-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="f0a56-115">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f0a56-116">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f0a56-117">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="f0a56-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartDataLabelsLoadOptions): Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartDataLabelsLoadOptions
  - uid: excel.Excel.ChartDataLabels.load_1
    summary: <span data-ttu-id="f0a56-118">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f0a56-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f0a56-119">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f0a56-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f0a56-120">例</span><span class="sxs-lookup"><span data-stu-id="f0a56-120">Examples</span></span>

          ```javascript
          // Make Series Name shown in Datalabels and set the position of datalabels to be "top";
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.datalabels.showValue = true;
              chart.datalabels.position = "top";
              chart.datalabels.showSeriesName = true;
              return ctx.sync().then(function() {
                      console.log("Datalabels Shown");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f0a56-121">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="f0a56-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartDataLabels.load_2
    summary: <span data-ttu-id="f0a56-122">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="f0a56-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f0a56-123">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="f0a56-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartDataLabels;'
      return:
        type:
          - excel.Excel.ChartDataLabels
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="f0a56-124">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="f0a56-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartDataLabels.position
    summary: |-
      <span data-ttu-id="f0a56-125">データ ラベルの位置を表す DataLabelPosition 値。</span><span class="sxs-lookup"><span data-stu-id="f0a56-125">DataLabelPosition value that represents the position of the data label.</span></span> <span data-ttu-id="f0a56-126">詳細については、「ChartDataLabelPosition」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f0a56-126">See Excel.ChartDataLabelPosition for details.</span></span>

      <span data-ttu-id="f0a56-127">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: Excel.ChartDataLabelPosition | "Invalid" | "None" | "Center" | "InsideEnd" | "InsideBase" | "OutsideEnd" | "Left" | "Right" | "Top" | "Bottom" | "BestFit" | "Callout";'
      return:
        type:
          - Excel.ChartDataLabelPosition | "Invalid" | "None" | "Center" | "InsideEnd" | "InsideBase" | "OutsideEnd" | "Left" | "Right" | "Top" | "Bottom" | "BestFit" | "Callout"
  - uid: excel.Excel.ChartDataLabels.separator
    summary: |-
      <span data-ttu-id="f0a56-128">グラフのデータ ラベルに使用される区切り文字を表す文字列を設定します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-128">String representing the separator used for the data labels on a chart.</span></span>

      <span data-ttu-id="f0a56-129">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: separator
    fullName: separator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'separator: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ChartDataLabels.set
    summary: '<span data-ttu-id="f0a56-130">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-130">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="f0a56-131">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="f0a56-131">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="f0a56-132">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="f0a56-132">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartDataLabels): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartDataLabelsUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="f0a56-133">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f0a56-133">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ChartDataLabelsUpdateData
        - id: options
          description: <span data-ttu-id="f0a56-134">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-134">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartDataLabels.set_1
    summary: '<span data-ttu-id="f0a56-135">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-135">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartDataLabels): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartDataLabels
  - uid: excel.Excel.ChartDataLabels.showBubbleSize
    summary: |-
      <span data-ttu-id="f0a56-136">データ ラベルのバブルのサイズを表示または非表示にするかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="f0a56-136">Boolean value representing if the data label bubble size is visible or not.</span></span>

      <span data-ttu-id="f0a56-137">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-137">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showBubbleSize
    fullName: showBubbleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBubbleSize: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartDataLabels.showCategoryName
    summary: |-
      <span data-ttu-id="f0a56-138">データ ラベルのカテゴリ名を表示するか非表示にするかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="f0a56-138">Boolean value representing if the data label category name is visible or not.</span></span>

      <span data-ttu-id="f0a56-139">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showCategoryName
    fullName: showCategoryName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showCategoryName: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartDataLabels.showLegendKey
    summary: |-
      <span data-ttu-id="f0a56-140">データ ラベルの凡例マーカーを表示するか非表示にするかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="f0a56-140">Boolean value representing if the data label legend key is visible or not.</span></span>

      <span data-ttu-id="f0a56-141">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-141">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showLegendKey
    fullName: showLegendKey
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showLegendKey: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartDataLabels.showPercentage
    summary: |-
      <span data-ttu-id="f0a56-142">データ ラベルのパーセンテージを表示するか非表示にするかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="f0a56-142">Boolean value representing if the data label percentage is visible or not.</span></span>

      <span data-ttu-id="f0a56-143">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-143">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showPercentage
    fullName: showPercentage
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showPercentage: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartDataLabels.showSeriesName
    summary: |-
      <span data-ttu-id="f0a56-144">データ ラベルの系列名を表示するか非表示にするかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="f0a56-144">Boolean value representing if the data label series name is visible or not.</span></span>

      <span data-ttu-id="f0a56-145">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showSeriesName
    fullName: showSeriesName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showSeriesName: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartDataLabels.showValue
    summary: |-
      <span data-ttu-id="f0a56-146">データ ラベルの値を表示するか非表示にするかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="f0a56-146">Boolean value representing if the data label value is visible or not.</span></span>

      <span data-ttu-id="f0a56-147">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f0a56-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showValue
    fullName: showValue
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showValue: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartDataLabels.toJSON
    summary: '<span data-ttu-id="f0a56-148">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f0a56-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f0a56-149">.</span><span class="sxs-lookup"><span data-stu-id="f0a56-149"></span></span> <span data-ttu-id="f0a56-150">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f0a56-150"></span></span><!-- --><span data-ttu-id="f0a56-151">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の ChartDataLabels オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.ChartDataLabelsData`</span><span class="sxs-lookup"><span data-stu-id="f0a56-151">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartDataLabels object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartDataLabelsData`</span></span><!-- --><span data-ttu-id="f0a56-152">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="f0a56-152">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartDataLabelsData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartDataLabelsData
        description: ''