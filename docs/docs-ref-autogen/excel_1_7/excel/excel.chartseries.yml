### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ChartSeries
    summary: |-
      <span data-ttu-id="ea5eb-101">グラフのデータ系列を表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-101">Represents a series in a chart.</span></span>

      <span data-ttu-id="ea5eb-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ChartSeries.chartType
      - excel.Excel.ChartSeries.context
      - excel.Excel.ChartSeries.delete
      - excel.Excel.ChartSeries.doughnutHoleSize
      - excel.Excel.ChartSeries.filtered
      - excel.Excel.ChartSeries.format
      - excel.Excel.ChartSeries.gapWidth
      - excel.Excel.ChartSeries.hasDataLabels
      - excel.Excel.ChartSeries.load
      - excel.Excel.ChartSeries.load_1
      - excel.Excel.ChartSeries.load_2
      - excel.Excel.ChartSeries.markerBackgroundColor
      - excel.Excel.ChartSeries.markerForegroundColor
      - excel.Excel.ChartSeries.markerSize
      - excel.Excel.ChartSeries.markerStyle
      - excel.Excel.ChartSeries.name
      - excel.Excel.ChartSeries.plotOrder
      - excel.Excel.ChartSeries.points
      - excel.Excel.ChartSeries.set
      - excel.Excel.ChartSeries.set_1
      - excel.Excel.ChartSeries.setBubbleSizes
      - excel.Excel.ChartSeries.setValues
      - excel.Excel.ChartSeries.setXAxisValues
      - excel.Excel.ChartSeries.showShadow
      - excel.Excel.ChartSeries.smooth
      - excel.Excel.ChartSeries.toJSON
      - excel.Excel.ChartSeries.trendlines
  - uid: excel.Excel.ChartSeries.chartType
    summary: |-
      <span data-ttu-id="ea5eb-103">グラフ系列の種類を表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-103">Represents the chart type of a series.</span></span> <span data-ttu-id="ea5eb-104">詳細については、「ChartType」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-104">See Excel.ChartType for details.</span></span>

      <span data-ttu-id="ea5eb-105">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-105">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
  - uid: excel.Excel.ChartSeries.context
    summary: <span data-ttu-id="ea5eb-106">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-106">The request context associated with the object.</span></span> <span data-ttu-id="ea5eb-107">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ChartSeries.delete
    summary: |-
      <span data-ttu-id="ea5eb-108">グラフ系列を削除します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-108">Deletes the chart series.</span></span>

      <span data-ttu-id="ea5eb-109">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-109">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ea5eb-110">例</span><span class="sxs-lookup"><span data-stu-id="ea5eb-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.doughnutHoleSize
    summary: |-
      <span data-ttu-id="ea5eb-111">グラフ系列のドーナツの穴の大きさを表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-111">Represents the doughnut hole size of a chart series.</span></span> <span data-ttu-id="ea5eb-112">ドーナツ グラフと doughnutExploded グラフでのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-112">Only valid on doughnut and doughnutExploded charts.</span></span> <span data-ttu-id="ea5eb-113">無効なグラフで無効な引数の例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-113">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="ea5eb-114">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.filtered
    summary: |-
      <span data-ttu-id="ea5eb-115">データ系列がフィルター処理されるかどうかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-115">Boolean value representing if the series is filtered or not.</span></span> <span data-ttu-id="ea5eb-116">等高線グラフには適用されません。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-116">Not applicable for surface charts.</span></span>

      <span data-ttu-id="ea5eb-117">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.format
    summary: |-
      <span data-ttu-id="ea5eb-118">グラフの系列の書式設定を表します。これには、塗りつぶしと線の書式設定が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-118">Represents the formatting of a chart series, which includes fill and line formatting.</span></span> <span data-ttu-id="ea5eb-119">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-119">Read-only.</span></span>

      <span data-ttu-id="ea5eb-120">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - excel.Excel.ChartSeriesFormat
  - uid: excel.Excel.ChartSeries.gapWidth
    summary: |-
      <span data-ttu-id="ea5eb-121">グラフ系列間に設けられる間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-121">Represents the gap width of a chart series.</span></span> <span data-ttu-id="ea5eb-122">横棒グラフと縦棒グラフ、および折れ線グラフと円グラフの特定のクラスに対してのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-122">Only valid on bar and column charts, as well as specific classes of line and pie charts.</span></span> <span data-ttu-id="ea5eb-123">無効なグラフで無効な引数の例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-123">Throws an invalid argument exception on invalid charts.</span></span>

      <span data-ttu-id="ea5eb-124">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-124">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.hasDataLabels
    summary: |-
      <span data-ttu-id="ea5eb-125">系列のデータ ラベルの有無を表すブール値。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-125">Boolean value representing if the series has data labels or not.</span></span>

      <span data-ttu-id="ea5eb-126">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-126">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.load
    summary: <span data-ttu-id="ea5eb-127">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ea5eb-128">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="ea5eb-129">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="ea5eb-130">`load(option?: string | string[]): Excel.ChartSeries`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-130">`load(option?: string | string[]): Excel.ChartSeries` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="ea5eb-131">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-131">`load(option?: { select?: string; expand?: string; }): Excel.ChartSeries` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="ea5eb-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartSeries` - Only available on collection types.</span></span> <span data-ttu-id="ea5eb-133">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="ea5eb-134">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ea5eb-135">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ea5eb-136">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ChartSeriesLoadOptions
  - uid: excel.Excel.ChartSeries.load_1
    summary: <span data-ttu-id="ea5eb-137">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ea5eb-138">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ea5eb-139">例</span><span class="sxs-lookup"><span data-stu-id="ea5eb-139">Examples</span></span>

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="ea5eb-140">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.ChartSeries.load_2
    summary: <span data-ttu-id="ea5eb-141">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ea5eb-142">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-142">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ChartSeries;'
      return:
        type:
          - excel.Excel.ChartSeries
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="ea5eb-143">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-143">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ChartSeries.markerBackgroundColor
    summary: |-
      <span data-ttu-id="ea5eb-144">グラフ系列のマーカー背景色を表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-144">Represents markers background color of a chart series.</span></span>

      <span data-ttu-id="ea5eb-145">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-145">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ea5eb-146">例</span><span class="sxs-lookup"><span data-stu-id="ea5eb-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerForegroundColor
    summary: |-
      <span data-ttu-id="ea5eb-147">グラフ系列のマーカー前景色を表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-147">Represents markers foreground color of a chart series.</span></span>

      <span data-ttu-id="ea5eb-148">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-148">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ea5eb-149">例</span><span class="sxs-lookup"><span data-stu-id="ea5eb-149">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerSize
    summary: |-
      <span data-ttu-id="ea5eb-150">グラフ系列のマーカー サイズを表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-150">Represents marker size of a chart series.</span></span>

      <span data-ttu-id="ea5eb-151">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-151">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ea5eb-152">例</span><span class="sxs-lookup"><span data-stu-id="ea5eb-152">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.markerStyle
    summary: |-
      <span data-ttu-id="ea5eb-153">グラフ系列のマーカー スタイルを表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-153">Represents marker style of a chart series.</span></span> <span data-ttu-id="ea5eb-154">詳細については、「ChartMarkerStyle」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-154">See Excel.ChartMarkerStyle for details.</span></span>

      <span data-ttu-id="ea5eb-155">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-155">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ea5eb-156">例</span><span class="sxs-lookup"><span data-stu-id="ea5eb-156">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: excel.Excel.ChartSeries.name
    summary: |-
      <span data-ttu-id="ea5eb-157">グラフのデータ系列の名前を表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-157">Represents the name of a series in a chart.</span></span>

      <span data-ttu-id="ea5eb-158">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ChartSeries.plotOrder
    summary: |-
      <span data-ttu-id="ea5eb-159">グラフ グループ内でのグラフ系列のプロット順序を表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-159">Represents the plot order of a chart series within the chart group.</span></span>

      <span data-ttu-id="ea5eb-160">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-160">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: excel.Excel.ChartSeries.points
    summary: |-
      <span data-ttu-id="ea5eb-161">データ系列にあるすべてのポイントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-161">Represents a collection of all points in the series.</span></span> <span data-ttu-id="ea5eb-162">値の取得のみ可能です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-162">Read-only.</span></span>

      <span data-ttu-id="ea5eb-163">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - excel.Excel.ChartPointsCollection
  - uid: excel.Excel.ChartSeries.set
    summary: '<span data-ttu-id="ea5eb-164">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-164">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ea5eb-165">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-165">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="ea5eb-166">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-166">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="ea5eb-167">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-167">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.ChartSeriesUpdateData
        - id: options
          description: <span data-ttu-id="ea5eb-168">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-168">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ChartSeries.set_1
    summary: '<span data-ttu-id="ea5eb-169">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-169">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ChartSeries
  - uid: excel.Excel.ChartSeries.setBubbleSizes
    summary: |-
      <span data-ttu-id="ea5eb-170">グラフ系列のバブル サイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-170">Set bubble sizes for a chart series.</span></span> <span data-ttu-id="ea5eb-171">バブル チャートにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-171">Only works for bubble charts.</span></span>

      <span data-ttu-id="ea5eb-172">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-172">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="ea5eb-173">データ ソースに対応する Range オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-173">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.setValues
    summary: |-
      <span data-ttu-id="ea5eb-174">グラフ系列の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-174">Set values for a chart series.</span></span> <span data-ttu-id="ea5eb-175">散布図の場合、Y 軸の値を意味します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-175">For scatter chart, it means Y axis values.</span></span>

      <span data-ttu-id="ea5eb-176">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-176">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ea5eb-177">例</span><span class="sxs-lookup"><span data-stu-id="ea5eb-177">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: <span data-ttu-id="ea5eb-178">データ ソースに対応する Range オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-178">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.setXAxisValues
    summary: |-
      <span data-ttu-id="ea5eb-179">グラフ系列の X 軸の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-179">Set values of X axis for a chart series.</span></span> <span data-ttu-id="ea5eb-180">散布図にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-180">Only works for scatter charts.</span></span>

      <span data-ttu-id="ea5eb-181">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-181">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: <span data-ttu-id="ea5eb-182">データ ソースに対応する Range オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-182">The Range object corresponding to the source data.</span></span>
          type:
            - excel.Excel.Range
  - uid: excel.Excel.ChartSeries.showShadow
    summary: |-
      <span data-ttu-id="ea5eb-183">系列に影があるかどうかを表すブール型 (Boolean) の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-183">Boolean value representing if the series has a shadow or not.</span></span>

      <span data-ttu-id="ea5eb-184">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-184">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.smooth
    summary: |-
      <span data-ttu-id="ea5eb-185">系列が平滑化されるかどうかを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-185">Boolean value representing if the series is smooth or not.</span></span> <span data-ttu-id="ea5eb-186">折れ線グラフおよび散布図にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-186">Only applicable to line and scatter charts.</span></span>

      <span data-ttu-id="ea5eb-187">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-187">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ChartSeries.toJSON
    summary: '<span data-ttu-id="ea5eb-188">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="ea5eb-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="ea5eb-189">.</span><span class="sxs-lookup"><span data-stu-id="ea5eb-189"></span></span> <span data-ttu-id="ea5eb-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="ea5eb-190"></span></span><!-- --><span data-ttu-id="ea5eb-191">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の Excel ChartSeries オブジェクトは API オブジェクトであるのに対し`toJSON`て、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.ChartSeriesData`</span><span class="sxs-lookup"><span data-stu-id="ea5eb-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartSeries object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesData`</span></span><!-- --><span data-ttu-id="ea5eb-192">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - excel.Excel.Interfaces.ChartSeriesData
        description: ''
  - uid: excel.Excel.ChartSeries.trendlines
    summary: |-
      <span data-ttu-id="ea5eb-193">データ系列に含まれる近似曲線のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-193">Represents a collection of trendlines in the series.</span></span> <span data-ttu-id="ea5eb-194">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ea5eb-194">Read-only.</span></span>

      <span data-ttu-id="ea5eb-195">\[[API セット: excelapi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ea5eb-195">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - excel.Excel.ChartTrendlineCollection