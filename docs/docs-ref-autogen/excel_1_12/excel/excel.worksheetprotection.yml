### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetProtection:class'
    summary: |-
      シート オブジェクトの保護を表します。

      \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.WorksheetProtection
    fullName: Excel.WorksheetProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorksheetProtection#context:member'
      - 'excel!Excel.WorksheetProtection#load:member(1)'
      - 'excel!Excel.WorksheetProtection#load:member(2)'
      - 'excel!Excel.WorksheetProtection#load:member(3)'
      - 'excel!Excel.WorksheetProtection#options:member'
      - 'excel!Excel.WorksheetProtection#protect:member(1)'
      - 'excel!Excel.WorksheetProtection#protected:member'
      - 'excel!Excel.WorksheetProtection#toJSON:member(1)'
      - 'excel!Excel.WorksheetProtection#unprotect:member(1)'
  - uid: 'excel!Excel.WorksheetProtection#context:member'
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetProtection#load:member(1)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: options
          description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
          type:
            - 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#load:member(2)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetProtection#load:member(3)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.WorksheetProtection;
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.WorksheetProtection#options:member'
    summary: |-
      ワークシートの保護オプションを指定します。

      \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type:
          - 'excel!Excel.WorksheetProtectionOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#protect:member(1)'
    summary: |-
      ワークシートを保護します。 ワークシートが既に保護されている場合は、失敗します。

      \[[API set: excelapi 1.2 for options、password の 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'protect(options, password)'
    fullName: 'protect(options, password)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect();
              }
          });
          ```
          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect(null, password);
              }
          });
          ```
      parameters:
        - id: options
          description: 省略可能。 シートの保護のオプション。
          type:
            - 'excel!Excel.WorksheetProtectionOptions:interface'
        - id: password
          description: 省略可能。 シート保護のパスワードを入力します。
          type:
            - string
  - uid: 'excel!Excel.WorksheetProtection#protected:member'
    summary: |-
      ワークシートが保護されているかどうかを指定します。

      \[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.WorksheetProtection#toJSON:member(1)'
    summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元のブック保護オブジェクトは API オブジェクトであるのに対し `toJSON` て、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.WorksheetProtectionData`<!-- -->) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
        description: ''
  - uid: 'excel!Excel.WorksheetProtection#unprotect:member(1)'
    summary: |-
      ワークシートの保護を解除します。

      \[[API set: ExcelApi 1.7 (パスワード](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets))\]
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect();
          });
          ```
          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/50-workbook/data-protection.yaml
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: シートの保護パスワード。
          type:
            - string
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorksheetProtection:class'
    name: Excel.WorksheetProtection
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
    name: Excel.Interfaces.WorksheetProtectionLoadOptions
  - uid: 'excel!Excel.WorksheetProtectionOptions:interface'
    name: Excel.WorksheetProtectionOptions
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
    name: Excel.Interfaces.WorksheetProtectionData