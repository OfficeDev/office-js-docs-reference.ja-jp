### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeCollection:class'
    summary: '\[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]'
    name: Excel.RangeCollection
    fullName: Excel.RangeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeCollection#context:member'
      - 'excel!Excel.RangeCollection#getCount:member(1)'
      - 'excel!Excel.RangeCollection#getItemAt:member(1)'
      - 'excel!Excel.RangeCollection#items:member'
      - 'excel!Excel.RangeCollection#load:member(1)'
      - 'excel!Excel.RangeCollection#load:member(2)'
      - 'excel!Excel.RangeCollection#load:member(3)'
      - 'excel!Excel.RangeCollection#toJSON:member(1)'
  - uid: 'excel!Excel.RangeCollection#context:member'
    summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeCollection#getCount:member(1)'
    summary: |-
      RangeCollection 内の範囲数を返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.RangeCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.RangeCollection#getItemAt:member(1)'
    summary: |-
      RangeCollection 内のその位置に基づいて範囲オブジェクトを返します。

      \[[API セット: excelapi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
      parameters:
        - id: index
          description: 取得する range オブジェクトのインデックス値を指定します。 0 を起点とする番号になります。
          type:
            - number
  - uid: 'excel!Excel.RangeCollection#items:member'
    summary: このコレクション内に読み込まれた子アイテムを取得します。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Range[];'
      return:
        type:
          - 'excel!Excel.RangeCollection#items~0:complex'
  - uid: 'excel!Excel.RangeCollection#load:member(1)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:class'
        description: ''
      parameters:
        - id: options
          description: 読み込むオブジェクトのプロパティを指定するオプションを提供します。
          type:
            - 'excel!Excel.RangeCollection#load~0:complex'
  - uid: 'excel!Excel.RangeCollection#load:member(2)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeCollection#load:member(3)'
    summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.RangeCollection;'
      return:
        type:
          - 'excel!Excel.RangeCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` は、読み込むプロパティを指定するコンマで区切られた文字列で、 `propertyNamesAndPaths.expand` 読み込むナビゲーションプロパティを指定するコンマで区切られた文字列です。'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.RangeCollection#toJSON:member(1)'
    summary: '`toJSON()`API オブジェクトが渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->`toJSON`その後、渡されたオブジェクトのメソッドを呼び出します。元の `Excel.RangeCollection` オブジェクトは API オブジェクトであるのに対し、 `toJSON` メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.RangeCollectionData`<!-- -->) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.RangeCollection#items~0:complex'
    name: 'Excel.Range[]'
    fullName: 'Excel.Range[]'
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Excel.Range
        fullName: Excel.Range
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RangeCollection:class'
    name: Excel.RangeCollection
  - uid: 'excel!Excel.RangeCollection#load~0:complex'
    name: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.RangeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.RangeCollectionLoadOptions:interface'
        name: Excel.Interfaces.RangeCollectionLoadOptions
        fullName: Excel.Interfaces.RangeCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.RangeCollectionData:interface'
    name: Excel.Interfaces.RangeCollectionData