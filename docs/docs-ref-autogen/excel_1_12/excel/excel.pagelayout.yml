### YamlMime:TSType
name: Excel.PageLayout
uid: excel!Excel.PageLayout:class
package: excel!
fullName: Excel.PageLayout
summary: >-
  プリンター固有の実装に依存しないレイアウトと印刷の設定を表します。 これらの設定には、余白、印刷の向き、ページ番号、タイトル行、および印刷範囲が含まれます。


  \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: blackAndWhite
  uid: excel!Excel.PageLayout#blackAndWhite:member
  package: excel!
  fullName: blackAndWhite
  summary: >-
    ワークシートの白黒印刷オプション。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'blackAndWhite: boolean;'
    return:
      type: boolean
- name: bottomMargin
  uid: excel!Excel.PageLayout#bottomMargin:member
  package: excel!
  fullName: bottomMargin
  summary: >-
    印刷に使用するワークシートの下ページ余白をポイント数で指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'bottomMargin: number;'
    return:
      type: number
- name: centerHorizontally
  uid: excel!Excel.PageLayout#centerHorizontally:member
  package: excel!
  fullName: centerHorizontally
  summary: >-
    ワークシートの中央に水平フラグを設定します。 このフラグによって、印刷時、ワークシートのページ中央を水平に設定するかどうかが決定されます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'centerHorizontally: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.centerHorizontally = true;\n    farmSheet.pageLayout.centerVertically = true;\n    await context.sync();\n});\n```"
- name: centerVertically
  uid: excel!Excel.PageLayout#centerVertically:member
  package: excel!
  fullName: centerVertically
  summary: >-
    ワークシートの中央の垂直方向のフラグ。 このフラグによって、印刷時、ワークシートのページ中央を垂直に設定するかどうかが決定されます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'centerVertically: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.centerHorizontally = true;\n    farmSheet.pageLayout.centerVertically = true;\n    await context.sync();\n});\n```"
- name: context
  uid: excel!Excel.PageLayout#context:member
  package: excel!
  fullName: context
  summary: オブジェクトに関連付けられている要求コンテキスト。 これにより、アドインのプロセスがホスト アプリケーションのプロセスOfficeに接続されます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: draftMode
  uid: excel!Excel.PageLayout#draftMode:member
  package: excel!
  fullName: draftMode
  summary: >-
    ワークシートの下書きモード オプション。 true の場合、グラフィックスなしでシートが印刷されます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'draftMode: boolean;'
    return:
      type: boolean
- name: firstPageNumber
  uid: excel!Excel.PageLayout#firstPageNumber:member
  package: excel!
  fullName: firstPageNumber
  summary: >-
    印刷するワークシートの最初のページ番号を指定します。 null 値は "自動" ページ番号を表します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'firstPageNumber: number | "";'
    return:
      type: number | ""
- name: footerMargin
  uid: excel!Excel.PageLayout#footerMargin:member
  package: excel!
  fullName: footerMargin
  summary: >-
    印刷時に使用するワークシートのフッター余白をポイント数で指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'footerMargin: number;'
    return:
      type: number
- name: headerMargin
  uid: excel!Excel.PageLayout#headerMargin:member
  package: excel!
  fullName: headerMargin
  summary: >-
    印刷時に使用するワークシートのヘッダー余白をポイント数で指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'headerMargin: number;'
    return:
      type: number
- name: headersFooters
  uid: excel!Excel.PageLayout#headersFooters:member
  package: excel!
  fullName: headersFooters
  summary: >-
    ワークシートのヘッダーとフッターの構成。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly headersFooters: Excel.HeaderFooterGroup;'
    return:
      type: <xref uid="excel!Excel.HeaderFooterGroup:class" />
- name: leftMargin
  uid: excel!Excel.PageLayout#leftMargin:member
  package: excel!
  fullName: leftMargin
  summary: >-
    印刷時に使用するワークシートの左余白をポイント数で指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'leftMargin: number;'
    return:
      type: number
- name: orientation
  uid: excel!Excel.PageLayout#orientation:member
  package: excel!
  fullName: orientation
  summary: >-
    ワークシートのページの向き。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'orientation: Excel.PageOrientation | "Portrait" | "Landscape";'
    return:
      type: <xref uid="excel!Excel.PageOrientation:enum" /> | "Portrait" | "Landscape"
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.orientation = Excel.PageOrientation.landscape;\n    await context.sync();\n});\n```"
- name: paperSize
  uid: excel!Excel.PageLayout#paperSize:member
  package: excel!
  fullName: paperSize
  summary: >-
    ワークシートのページの用紙サイズ。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'paperSize: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman";'
    return:
      type: <xref uid="excel!Excel.PaperType:enum" /> | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
- name: printComments
  uid: excel!Excel.PageLayout#printComments:member
  package: excel!
  fullName: printComments
  summary: >-
    印刷時にワークシートのコメントを表示する必要がある場合に指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'printComments: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace";'
    return:
      type: <xref uid="excel!Excel.PrintComments:enum" /> | "NoComments" | "EndSheet" | "InPlace"
- name: printErrors
  uid: excel!Excel.PageLayout#printErrors:member
  package: excel!
  fullName: printErrors
  summary: >-
    ワークシートの印刷エラー オプション。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'printErrors: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable";'
    return:
      type: <xref uid="excel!Excel.PrintErrorType:enum" /> | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"
- name: printGridlines
  uid: excel!Excel.PageLayout#printGridlines:member
  package: excel!
  fullName: printGridlines
  summary: >-
    ワークシートの枠線を印刷する場合に指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'printGridlines: boolean;'
    return:
      type: boolean
- name: printHeadings
  uid: excel!Excel.PageLayout#printHeadings:member
  package: excel!
  fullName: printHeadings
  summary: >-
    ワークシートの見出しを印刷する場合に指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'printHeadings: boolean;'
    return:
      type: boolean
- name: printOrder
  uid: excel!Excel.PageLayout#printOrder:member
  package: excel!
  fullName: printOrder
  summary: >-
    ワークシートのページ印刷順序オプション。 これによって、印刷されるページ番号の処理に使用する順序が指定されます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'printOrder: Excel.PrintOrder | "DownThenOver" | "OverThenDown";'
    return:
      type: <xref uid="excel!Excel.PrintOrder:enum" /> | "DownThenOver" | "OverThenDown"
- name: rightMargin
  uid: excel!Excel.PageLayout#rightMargin:member
  package: excel!
  fullName: rightMargin
  summary: >-
    印刷時に使用するワークシートの右余白をポイント数で指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rightMargin: number;'
    return:
      type: number
- name: topMargin
  uid: excel!Excel.PageLayout#topMargin:member
  package: excel!
  fullName: topMargin
  summary: >-
    印刷時に使用するワークシートの上余白をポイント数で指定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'topMargin: number;'
    return:
      type: number
- name: zoom
  uid: excel!Excel.PageLayout#zoom:member
  package: excel!
  fullName: zoom
  summary: >-
    ワークシートの印刷ズーム オプション。 オブジェクト `PageLayoutZoomOptions` は JSON オブジェクトとして設定する必要があります (次の代 `x.zoom = {...}` わりに使用します) `x.zoom.scale = ...`<!-- -->).


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'zoom: Excel.PageLayoutZoomOptions;'
    return:
      type: <xref uid="excel!Excel.PageLayoutZoomOptions:interface" />
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.zoom = { scale: 200 };\n    await context.sync();\n});\n```"
methods:
- name: getPrintArea()
  uid: excel!Excel.PageLayout#getPrintArea:member(1)
  package: excel!
  fullName: getPrintArea()
  summary: >-
    ワークシートの印刷範囲を表し、1 つまたは複数の長方形範囲で構成される RangeAreas オブジェクトを取得します。 印刷範囲がない場合、ItemNotFound エラーがスローされます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrintArea(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getPrintAreaOrNullObject()
  uid: excel!Excel.PageLayout#getPrintAreaOrNullObject:member(1)
  package: excel!
  fullName: getPrintAreaOrNullObject()
  summary: >-
    ワークシートの印刷範囲を表し、1 つまたは複数の長方形範囲で構成される RangeAreas オブジェクトを取得します。 印刷範囲がない場合、null オブジェクトが返されます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrintAreaOrNullObject(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getPrintTitleColumns()
  uid: excel!Excel.PageLayout#getPrintTitleColumns:member(1)
  package: excel!
  fullName: getPrintTitleColumns()
  summary: >-
    タイトル列を表す範囲オブジェクトを取得します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrintTitleColumns(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: ''
- name: getPrintTitleColumnsOrNullObject()
  uid: excel!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)
  package: excel!
  fullName: getPrintTitleColumnsOrNullObject()
  summary: >-
    タイトル列を表す範囲オブジェクトを取得します。 設定されていない場合、null オブジェクトが返されます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrintTitleColumnsOrNullObject(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: ''
- name: getPrintTitleRows()
  uid: excel!Excel.PageLayout#getPrintTitleRows:member(1)
  package: excel!
  fullName: getPrintTitleRows()
  summary: >-
    タイトル行を表す範囲オブジェクトを取得します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrintTitleRows(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: ''
- name: getPrintTitleRowsOrNullObject()
  uid: excel!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)
  package: excel!
  fullName: getPrintTitleRowsOrNullObject()
  summary: >-
    タイトル行を表す範囲オブジェクトを取得します。 設定されていない場合、null オブジェクトが返されます。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrintTitleRowsOrNullObject(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.PageLayout#load:member(1)
  package: excel!
  fullName: load(options)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.PageLayoutLoadOptions): Excel.PageLayout;'
    parameters:
    - id: options
      description: 読み込むオブジェクトのプロパティのオプションを提供します。
      type: <xref uid="excel!Excel.Interfaces.PageLayoutLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.PageLayout:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.PageLayout#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PageLayout;'
    parameters:
    - id: propertyNames
      description: 読み込むプロパティを指定する、コンマ区切りの文字列または文字列の配列。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.PageLayout:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.PageLayout#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: オブジェクトの指定されたプロパティを読み込むコマンドを待ち行列に入れます。 プロパティを読み取る前に、`context.sync()` を呼び出す必要があります。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.PageLayout;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` は読み込むプロパティを指定するコンマ区切りの文字列で、読み込むナビゲーション プロパティを指定するコンマ区切 `propertyNamesAndPaths.expand` りの文字列です。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.PageLayout:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.PageLayout#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: オブジェクトの複数のプロパティを同時に設定します。 適切なプロパティを持つプレーン オブジェクト、または同じ型の別の API オブジェクトを渡す方法があります。
  remarks: >-
    このメソッドには、次の追加署名があります。


    `set(properties: Excel.PageLayout): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.PageLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: メソッドが呼び出されるオブジェクトのプロパティと同型に構造化されたプロパティを持つ JavaScript オブジェクト。
      type: <xref uid="excel!Excel.Interfaces.PageLayoutUpdateData:interface" />
    - id: options
      description: プロパティ オブジェクトが読み取り専用プロパティを設定しようとすると、エラーを抑制するオプションを提供します。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.PageLayout#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 既存の読み込まれたオブジェクトに基づいて、オブジェクトの複数のプロパティを同時に設定します。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.PageLayout): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.PageLayout:class" />
    return:
      type: void
      description: ''
- name: setPrintArea(printArea)
  uid: excel!Excel.PageLayout#setPrintArea:member(1)
  package: excel!
  fullName: setPrintArea(printArea)
  summary: >-
    ワークシートの印刷範囲を設定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPrintArea(printArea: Range | RangeAreas | string): void;'
    parameters:
    - id: printArea
      description: 印刷するコンテンツの範囲または RangeAreas です。
      type: <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeAreas:class" /> | string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.setPrintArea(\"A1:D41\");\n    await context.sync();\n});\n```"
- name: setPrintMargins(unit, marginOptions)
  uid: excel!Excel.PageLayout#setPrintMargins:member(1)
  package: excel!
  fullName: setPrintMargins(unit, marginOptions)
  summary: >-
    ワークシートのページ余白を単位で設定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPrintMargins(unit: Excel.PrintMarginUnit, marginOptions: Excel.PageLayoutMarginOptions): void;'
    parameters:
    - id: unit
      description: 指定された余白の測定単位です。
      type: <xref uid="excel!Excel.PrintMarginUnit:enum" />
    - id: marginOptions
      description: 設定する余白の値、指定されていない余白は変更されません。
      type: <xref uid="excel!Excel.PageLayoutMarginOptions:interface" />
    return:
      type: void
      description: ''
- name: setPrintMargins(unitString, marginOptions)
  uid: excel!Excel.PageLayout#setPrintMargins:member(2)
  package: excel!
  fullName: setPrintMargins(unitString, marginOptions)
  summary: >-
    ワークシートのページ余白を単位で設定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPrintMargins(unitString: "Points" | "Inches" | "Centimeters", marginOptions: Excel.PageLayoutMarginOptions): void;'
    parameters:
    - id: unitString
      description: 指定された余白の測定単位です。
      type: "\"Points\" | \"Inches\" | \"Centimeters\""
    - id: marginOptions
      description: 設定する余白の値、指定されていない余白は変更されません。
      type: <xref uid="excel!Excel.PageLayoutMarginOptions:interface" />
    return:
      type: void
      description: ''
- name: setPrintTitleColumns(printTitleColumns)
  uid: excel!Excel.PageLayout#setPrintTitleColumns:member(1)
  package: excel!
  fullName: setPrintTitleColumns(printTitleColumns)
  summary: >-
    セルを含む列を、印刷時、ワークシートの各ページの左で繰り返すように設定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPrintTitleColumns(printTitleColumns: Range | string): void;'
    parameters:
    - id: printTitleColumns
      description: 各ページの左側に繰り返す列は、有効な列全体にわたる必要があります。
      type: <xref uid="excel!Excel.Range:class" /> | string
    return:
      type: void
      description: ''
- name: setPrintTitleRows(printTitleRows)
  uid: excel!Excel.PageLayout#setPrintTitleRows:member(1)
  package: excel!
  fullName: setPrintTitleRows(printTitleRows)
  summary: >-
    セルを含む行を、印刷時、ワークシートの各ページの上で繰り返すように設定します。


    \[[API セット: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPrintTitleRows(printTitleRows: Range | string): void;'
    parameters:
    - id: printTitleRows
      description: 各ページの上部で繰り返される行は、有効な行全体にわたる必要があります。
      type: <xref uid="excel!Excel.Range:class" /> | string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/54-worksheet/worksheet-page-layout.yaml\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.pageLayout.setPrintTitleRows(\"$1:$1\");\n    await context.sync();\n});\n```"
- name: toJSON()
  uid: excel!Excel.PageLayout#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: API オブジェクトが渡された場合に、より有用な出力を提供するために JavaScript `toJSON()` メソッドをオーバーライドします。 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->に渡されるオブジェクトのメソッドを呼び `toJSON` 出します)。元の Excel.PageLayout オブジェクトが API オブジェクトであるのに対し、このメソッドはプレーンな `toJSON` JavaScript オブジェクト (次のように入力) を返します。 `Excel.Interfaces.PageLayoutData`<!-- -->) を返します。このコピーには、元のオブジェクトから読み込まれた子プロパティの浅いコピーが含まれます。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.PageLayoutData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.PageLayoutData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 2b9fb061dd8cae194e910a4d1f86651cf930c0c9
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49859272"
