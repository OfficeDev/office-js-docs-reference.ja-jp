### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableRowCollection:class'
    summary: |-
      <span data-ttu-id="d316e-101">表の一部であるすべての行のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="d316e-101">Represents a collection of all the rows that are part of the table.</span></span>

      <span data-ttu-id="d316e-102">範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。</span><span class="sxs-lookup"><span data-stu-id="d316e-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="d316e-103">つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。</span><span class="sxs-lookup"><span data-stu-id="d316e-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="d316e-104">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d316e-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRowCollection
    fullName: Excel.TableRowCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableRowCollection#add:member(1)'
      - 'excel!Excel.TableRowCollection#context:member'
      - 'excel!Excel.TableRowCollection#count:member'
      - 'excel!Excel.TableRowCollection#getItemAt:member(1)'
      - 'excel!Excel.TableRowCollection#items:member'
      - 'excel!Excel.TableRowCollection#load:member(1)'
      - 'excel!Excel.TableRowCollection#load:member(2)'
      - 'excel!Excel.TableRowCollection#load:member(3)'
      - 'excel!Excel.TableRowCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableRowCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="d316e-105">テーブルに 1 つ以上の行を追加します。</span><span class="sxs-lookup"><span data-stu-id="d316e-105">Adds one or more rows to the table.</span></span> <span data-ttu-id="d316e-106">戻りオブジェクトは新しく追加された行の先頭になります。</span><span class="sxs-lookup"><span data-stu-id="d316e-106">The return object will be the top of the newly added row(s).</span></span>

      <span data-ttu-id="d316e-107">範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。</span><span class="sxs-lookup"><span data-stu-id="d316e-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="d316e-108">つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。</span><span class="sxs-lookup"><span data-stu-id="d316e-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="d316e-109">\[[API set: 単一の行を追加するための ExcelApi 1.1。1.4 では、複数の行を追加できます。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="d316e-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="d316e-110">\]</span><span class="sxs-lookup"><span data-stu-id="d316e-110"></span></span>
    name: 'add(index, values)'
    fullName: 'add(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d316e-111">例</span><span class="sxs-lookup"><span data-stu-id="d316e-111">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var values = [["Sample", "Values", "For", "New", "Row"]];
              var row = tables.getItem("Table1").rows.add(null, values);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="d316e-p105">省略可能。新しい行の相対位置を指定します。null または -1 の場合、最後に追加が行われます。挿入した行の下のすべての行が下方向にシフトします。0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="d316e-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>'
          type:
            - number
        - id: values
          description: <span data-ttu-id="d316e-117">省略可能。</span><span class="sxs-lookup"><span data-stu-id="d316e-117">Optional.</span></span> <span data-ttu-id="d316e-118">テーブルの行の書式設定されていない値の 2 次元の配列。</span><span class="sxs-lookup"><span data-stu-id="d316e-118">A 2-dimensional array of unformatted values of the table row.</span></span>
          type:
            - 'excel!Excel.TableRowCollection#add~0:complex'
  - uid: 'excel!Excel.TableRowCollection#context:member'
    summary: <span data-ttu-id="d316e-119">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="d316e-119">The request context associated with the object.</span></span> <span data-ttu-id="d316e-120">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="d316e-120">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableRowCollection#count:member'
    summary: |-
      <span data-ttu-id="d316e-121">テーブルの行数を返します。</span><span class="sxs-lookup"><span data-stu-id="d316e-121">Returns the number of rows in the table.</span></span> <span data-ttu-id="d316e-122">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="d316e-122">Read-only.</span></span>

      <span data-ttu-id="d316e-123">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d316e-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableRowCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="d316e-124">コレクション内の位置を基に行を取得します。</span><span class="sxs-lookup"><span data-stu-id="d316e-124">Gets a row based on its position in the collection.</span></span>

      <span data-ttu-id="d316e-125">範囲または列の違いで、新しい行/列が追加されている場合は調整されますが、TableRow オブジェクトは、テーブルの行の物理的な位置を表しますが、データは表示しません。</span><span class="sxs-lookup"><span data-stu-id="d316e-125">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="d316e-126">つまり、データが並べ替えられている場合、または新しい行が追加された場合、テーブル行は、作成されたインデックスを引き続きポイントします。</span><span class="sxs-lookup"><span data-stu-id="d316e-126">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="d316e-127">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d316e-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d316e-128">例</span><span class="sxs-lookup"><span data-stu-id="d316e-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);
              tablerow.load('name');
              return ctx.sync().then(function() {
                      console.log(tablerow.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="d316e-129">取得するオブジェクトのインデックス値。</span><span class="sxs-lookup"><span data-stu-id="d316e-129">Index value of the object to be retrieved.</span></span> <span data-ttu-id="d316e-130">0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="d316e-130">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.TableRowCollection#items:member'
    summary: <span data-ttu-id="d316e-131">このコレクション内に読み込まれた子アイテムを取得します。</span><span class="sxs-lookup"><span data-stu-id="d316e-131">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableRow[];'
      return:
        type:
          - 'excel!Excel.TableRowCollection#items~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(1)'
    summary: <span data-ttu-id="d316e-132">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d316e-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d316e-133">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d316e-133">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="d316e-134">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d316e-134">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="d316e-135">`load(option?: string | string[]): Excel.TableRowCollection`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="d316e-135">`load(option?: string | string[]): Excel.TableRowCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="d316e-136">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="d316e-136">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="d316e-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="d316e-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id="d316e-138">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="d316e-138">It is similar to the preceding signature.</span></span> <span data-ttu-id="d316e-139">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d316e-139">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d316e-140">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="d316e-140">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d316e-141">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="d316e-141">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.TableRowCollection#load~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(2)'
    summary: <span data-ttu-id="d316e-142">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="d316e-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d316e-143">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="d316e-143">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d316e-144">例</span><span class="sxs-lookup"><span data-stu-id="d316e-144">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerows = ctx.workbook.tables.getItem('Table1').rows;
              tablerows.load('items');
              return ctx.sync().then(function() {
                  console.log("tablerows Count: " + tablerows.count);
                  for (var i = 0; i < tablerows.items.length; i++)
                  {
                      console.log(tablerows.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // In the example, we'll select the top 100 rows of the table.
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItem("Table1");
              var tableRows = table.rows.load({"select" : "index, values","top": 100, "skip": 0 })
              return ctx.sync().then(function() {
                  for (var i = 0; i < tableRows.items.length; i++)
                  {
                      console.log(tableRows.items[i].index);
                      console.log(tableRows.items[i].values);
                  }
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="d316e-145">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="d316e-145">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableRowCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableRowCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="d316e-146">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d316e-146">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d316e-147">.</span><span class="sxs-lookup"><span data-stu-id="d316e-147"></span></span> <span data-ttu-id="d316e-148">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d316e-148"></span></span><!-- --><span data-ttu-id="d316e-149">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元`Excel.TableRowCollection`のオブジェクトは API オブジェクトであるのに`toJSON`対し、メソッドはプレーンな JavaScript オブジェクト (として入力されます) を返します。`Excel.Interfaces.TableRowCollectionData`</span><span class="sxs-lookup"><span data-stu-id="d316e-149">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`</span></span><!-- --><span data-ttu-id="d316e-150">) を使用して、コレクションのアイテムから読み込まれたプロパティの浅いコピーを持つ "items" 配列を含みます。</span><span class="sxs-lookup"><span data-stu-id="d316e-150">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableRowCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableRow:class'
    name: Excel.TableRow
  - uid: 'excel!Excel.TableRowCollection#add~0:complex'
    name: Array<Array<boolean | string | number>> | boolean | string | number
    fullName: Array<Array<boolean | string | number>> | boolean | string | number
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <boolean | string | number>> | boolean | string | number
        fullName: <boolean | string | number>> | boolean | string | number
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableRowCollection#items~0:complex'
    name: 'Excel.TableRow[]'
    fullName: 'Excel.TableRow[]'
    spec.typeScript:
      - uid: 'excel!Excel.TableRow:class'
        name: Excel.TableRow
        fullName: Excel.TableRow
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.TableRowCollection#load~0:complex'
    name: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableRowCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableRowCollectionLoadOptions
        fullName: Excel.Interfaces.TableRowCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableRowCollectionData:interface'
    name: Excel.Interfaces.TableRowCollectionData