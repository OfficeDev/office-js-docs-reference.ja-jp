### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableColumn
    summary: |-
      <span data-ttu-id="3a9af-101">テーブル内にある 1 つの列を表します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-101">Represents a column in a table.</span></span>

      <span data-ttu-id="3a9af-102">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableColumn.context
      - excel.Excel.TableColumn.delete
      - excel.Excel.TableColumn.filter
      - excel.Excel.TableColumn.getDataBodyRange
      - excel.Excel.TableColumn.getHeaderRowRange
      - excel.Excel.TableColumn.getRange
      - excel.Excel.TableColumn.getTotalRowRange
      - excel.Excel.TableColumn.id
      - excel.Excel.TableColumn.index
      - excel.Excel.TableColumn.load
      - excel.Excel.TableColumn.load_1
      - excel.Excel.TableColumn.load_2
      - excel.Excel.TableColumn.name
      - excel.Excel.TableColumn.set
      - excel.Excel.TableColumn.set_1
      - excel.Excel.TableColumn.toJSON
      - excel.Excel.TableColumn.values
  - uid: excel.Excel.TableColumn.context
    summary: <span data-ttu-id="3a9af-103">オブジェクトに関連付けられている要求コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="3a9af-103">The request context associated with the object.</span></span> <span data-ttu-id="3a9af-104">これにより、アドインのプロセスが Office ホストアプリケーションのプロセスに接続されます。</span><span class="sxs-lookup"><span data-stu-id="3a9af-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableColumn.delete
    summary: |-
      <span data-ttu-id="3a9af-105">テーブルから列を削除します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-105">Deletes the column from the table.</span></span>

      <span data-ttu-id="3a9af-106">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3a9af-107">例</span><span class="sxs-lookup"><span data-stu-id="3a9af-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.filter
    summary: |-
      <span data-ttu-id="3a9af-108">列に適用されるフィルターを取得します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-108">Retrieve the filter applied to the column.</span></span> <span data-ttu-id="3a9af-109">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3a9af-109">Read-only.</span></span>

      <span data-ttu-id="3a9af-110">\[[API セット: excelapi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
  - uid: excel.Excel.TableColumn.getDataBodyRange
    summary: |-
      <span data-ttu-id="3a9af-111">列のデータ本体に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-111">Gets the range object associated with the data body of the column.</span></span>

      <span data-ttu-id="3a9af-112">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3a9af-113">例</span><span class="sxs-lookup"><span data-stu-id="3a9af-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var dataBodyRange = column.getDataBodyRange();
              dataBodyRange.load('address');
              return ctx.sync().then(function() {
                  console.log(dataBodyRange.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getHeaderRowRange
    summary: |-
      <span data-ttu-id="3a9af-114">列のヘッダー行に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-114">Gets the range object associated with the header row of the column.</span></span>

      <span data-ttu-id="3a9af-115">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3a9af-116">例</span><span class="sxs-lookup"><span data-stu-id="3a9af-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var headerRowRange = columns.getHeaderRowRange();
              headerRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(headerRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getRange
    summary: |-
      <span data-ttu-id="3a9af-117">列全体に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-117">Gets the range object associated with the entire column.</span></span>

      <span data-ttu-id="3a9af-118">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3a9af-119">例</span><span class="sxs-lookup"><span data-stu-id="3a9af-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var columnRange = columns.getRange();
              columnRange.load('address');
              return ctx.sync().then(function() {
                  console.log(columnRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.getTotalRowRange
    summary: |-
      <span data-ttu-id="3a9af-120">列の集計行に関連付けられた範囲オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-120">Gets the range object associated with the totals row of the column.</span></span>

      <span data-ttu-id="3a9af-121">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3a9af-122">例</span><span class="sxs-lookup"><span data-stu-id="3a9af-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var totalRowRange = columns.getTotalRowRange();
              totalRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(totalRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.TableColumn.id
    summary: |-
      <span data-ttu-id="3a9af-123">テーブル内の列を識別する一意のキーを返します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-123">Returns a unique key that identifies the column within the table.</span></span> <span data-ttu-id="3a9af-124">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3a9af-124">Read-only.</span></span>

      <span data-ttu-id="3a9af-125">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumn.index
    summary: |-
      <span data-ttu-id="3a9af-126">テーブルの列コレクション内の列のインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-126">Returns the index number of the column within the columns collection of the table.</span></span> <span data-ttu-id="3a9af-127">0 を起点とする番号になります。</span><span class="sxs-lookup"><span data-stu-id="3a9af-127">Zero-indexed.</span></span> <span data-ttu-id="3a9af-128">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="3a9af-128">Read-only.</span></span>

      <span data-ttu-id="3a9af-129">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumn.load
    summary: <span data-ttu-id="3a9af-130">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3a9af-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3a9af-131">プロパティを読み取るには先に "context.sync()" を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a9af-131">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="3a9af-132">このシグネチャに加えて、このメソッドのシグネチャは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="3a9af-132">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3a9af-133">`load(option?: string | string[]): Excel.TableColumn`-Where オプションは、読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列です。</span><span class="sxs-lookup"><span data-stu-id="3a9af-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3a9af-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Where オプションを指定します。 select は、読み込むプロパティを指定するコンマで区切られた文字列で、オプション expand は読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3a9af-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3a9af-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-コレクション型でのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3a9af-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="3a9af-136">これは、前述の署名に似ています。</span><span class="sxs-lookup"><span data-stu-id="3a9af-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="3a9af-137">Top は、結果に含めることができるコレクション項目の最大数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3a9af-138">省略すると、スキップされ、結果に含まれないアイテムの数を指定します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3a9af-139">Option を指定すると、指定した数のアイテムをスキップした後に結果セットが開始されます。</span><span class="sxs-lookup"><span data-stu-id="3a9af-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableColumnLoadOptions
  - uid: excel.Excel.TableColumn.load_1
    summary: <span data-ttu-id="3a9af-140">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3a9af-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3a9af-141">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a9af-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3a9af-142">例</span><span class="sxs-lookup"><span data-stu-id="3a9af-142">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);
              column.load('index');
              return ctx.sync().then(function() {
                  console.log(column.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var tables = ctx.workbook.tables;
              var newValues = [["New"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.values = newValues;
              column.load('values');
              return ctx.sync().then(function() {
                  console.log(column.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3a9af-143">読み込むプロパティを指定する、コンマで区切られた文字列または文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="3a9af-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableColumn.load_2
    summary: <span data-ttu-id="3a9af-144">オブジェクトの指定のプロパティを読み込むコマンドを待ち行列に入れます。</span><span class="sxs-lookup"><span data-stu-id="3a9af-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3a9af-145">プロパティを読み取る`context.sync()`前に、を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3a9af-145">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="3a9af-146">ここで、は、読み込むプロパティを指定するコンマで区切られた文字列を指定します。 expand は、読み込むナビゲーションプロパティを指定するコンマ区切りの文字列です。</span><span class="sxs-lookup"><span data-stu-id="3a9af-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TableColumn.name
    summary: |-
      <span data-ttu-id="3a9af-147">テーブル列の名前を表します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-147">Represents the name of the table column.</span></span>

      <span data-ttu-id="3a9af-148">\[[API set: ExcelApi 1.1 を名前を取得するために使用します。設定には1.4。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="3a9af-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="3a9af-149">\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-149"></span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.TableColumn.set
    summary: '<span data-ttu-id="3a9af-150">一度に1つのオブジェクトの複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="3a9af-151">適切なプロパティを持つプレーンオブジェクト、または同じ種類の別の API オブジェクトのいずれかを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="3a9af-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="3a9af-152">このメソッドには、次の追加のシグネチャがあります。</span><span class="sxs-lookup"><span data-stu-id="3a9af-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableColumn): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="3a9af-153">メソッドが呼び出されるオブジェクトのプロパティに構造化 isomorphically されているプロパティを持つ JavaScript オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3a9af-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - Interfaces.TableColumnUpdateData
        - id: options
          description: <span data-ttu-id="3a9af-154">プロパティオブジェクトが読み取り専用プロパティを設定しようとした場合にエラーを抑制するオプションを提供します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TableColumn.set_1
    summary: '<span data-ttu-id="3a9af-155">既存の読み込まれたオブジェクトに基づいて、オブジェクトに複数のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableColumn): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableColumn
  - uid: excel.Excel.TableColumn.toJSON
    summary: '<span data-ttu-id="3a9af-156">API オブジェクトが`toJSON()`渡されるときに、より有用な出力を提供するために、JavaScript メソッドをオーバーライドします。`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3a9af-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3a9af-157">.</span><span class="sxs-lookup"><span data-stu-id="3a9af-157"></span></span> <span data-ttu-id="3a9af-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3a9af-158"></span></span><!-- --><span data-ttu-id="3a9af-159">その後、渡された`toJSON`オブジェクトのメソッドを呼び出します。元の TableColumn オブジェクトは API オブジェクトであるのに対し、 `toJSON`メソッドはプレーンな JavaScript オブジェクトを返します (型は`Excel.Interfaces.TableColumnData`</span><span class="sxs-lookup"><span data-stu-id="3a9af-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`</span></span><!-- --><span data-ttu-id="3a9af-160">) は、元のオブジェクトから読み込まれた子プロパティの浅いコピーを格納します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnData;'
      return:
        type:
          - excel.Excel.Interfaces.TableColumnData
        description: ''
  - uid: excel.Excel.TableColumn.values
    summary: |-
      <span data-ttu-id="3a9af-161">指定した範囲の Raw 値を表します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-161">Represents the raw values of the specified range.</span></span> <span data-ttu-id="3a9af-162">返されるデータの型は、文字列、数値、ブール値のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="3a9af-162">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="3a9af-163">エラーが含まれているセルは、エラー文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="3a9af-163">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="3a9af-164">\[[API セット: excelapi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3a9af-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'